<Type Name="SortedList" FullName="System.Collections.SortedList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23e5d8d5e03c1249285d4642fc657c83c0e4e4ab" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69333536" /></Metadata><TypeSignature Language="C#" Value="public class SortedList : ICloneable, System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SortedList extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.SortedList" />
  <TypeSignature Language="VB.NET" Value="Public Class SortedList&#xA;Implements ICloneable, IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class SortedList : ICloneable, System::Collections::IDictionary" />
  <TypeSignature Language="F#" Value="type SortedList = class&#xA;    interface IDictionary&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.SortedList/SortedListDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cf466-101">Reprezentuje kolekcję par klucz/wartość, które są posortowane według kluczy i są dostępne dla klucza i według indeksu.</span><span class="sxs-lookup"><span data-stu-id="cf466-101">Represents a collection of key/value pairs that are sorted by the keys and are accessible by key and by index.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="cf466-102">Do elementu można uzyskać dostęp za pomocą jego klucza, takiego jak element w <xref:System.Collections.IDictionary> dowolnej implementacji lub jego indeks, taki jak element w dowolnej <xref:System.Collections.IList> implementacji. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="cf466-102">A <xref:System.Collections.SortedList> element can be accessed by its key, like an element in any <xref:System.Collections.IDictionary> implementation, or by its index, like an element in any <xref:System.Collections.IList> implementation.</span></span>  

> [!IMPORTANT]
> <span data-ttu-id="cf466-103">Nie zalecamy używania `SortedList` klasy do nowych celów programistycznych.</span><span class="sxs-lookup"><span data-stu-id="cf466-103">We don't recommend that you use the `SortedList` class for new development.</span></span> <span data-ttu-id="cf466-104">Zamiast tego zaleca się użycie klasy generycznej <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="cf466-104">Instead, we recommend that you use the generic <xref:System.Collections.Generic.SortedList%602?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="cf466-105">Aby uzyskać więcej informacji, zobacz [kolekcje nieogólne nie mogą być używane](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) w serwisie GitHub.</span><span class="sxs-lookup"><span data-stu-id="cf466-105">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>

 <span data-ttu-id="cf466-106"><xref:System.Collections.SortedList> Obiekt wewnętrznie utrzymuje dwie tablice do przechowywania elementów listy, czyli jedną tablicę dla kluczy i inną tablicę dla skojarzonych wartości.</span><span class="sxs-lookup"><span data-stu-id="cf466-106">A <xref:System.Collections.SortedList> object internally maintains two arrays to store the elements of the list; that is, one array for the keys and another array for the associated values.</span></span> <span data-ttu-id="cf466-107">Każdy element jest parą klucz/wartość, do której można uzyskać dostęp jako <xref:System.Collections.DictionaryEntry> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-107">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="cf466-108">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="cf466-108">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="cf466-109">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów, które <xref:System.Collections.SortedList> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-109">The capacity of a <xref:System.Collections.SortedList> object is the number of elements the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-110">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami ponownej alokacji.</span><span class="sxs-lookup"><span data-stu-id="cf466-110">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="cf466-111">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.SortedList.TrimToSize%2A> lub przez <xref:System.Collections.SortedList.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="cf466-111">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="cf466-112">**Tylko .NET Framework:** W przypadku bardzo <xref:System.Collections.SortedList> dużych obiektów można zwiększyć maksymalną pojemność do 2 000 000 000 elementów w systemie 64-bitowym, `enabled` ustawiając atrybut [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elementu konfiguracji na `true` w środowisku wykonawczym.</span><span class="sxs-lookup"><span data-stu-id="cf466-112">**.NET Framework only:** For very large <xref:System.Collections.SortedList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="cf466-113">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-113">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span> <span data-ttu-id="cf466-114">W obu przypadkach wartość <xref:System.Collections.SortedList> nie zezwala na duplikowanie kluczy.</span><span class="sxs-lookup"><span data-stu-id="cf466-114">In either case, a <xref:System.Collections.SortedList> does not allow duplicate keys.</span></span>  
  
 <span data-ttu-id="cf466-115">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-115">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-116">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-116">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-117">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-117">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-118">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-118">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-119">Operacje na <xref:System.Collections.SortedList> obiekcie mogą być wolniejsze niż operacje <xref:System.Collections.Hashtable> na obiekcie ze względu na sortowanie.</span><span class="sxs-lookup"><span data-stu-id="cf466-119">Operations on a <xref:System.Collections.SortedList> object tend to be slower than operations on a <xref:System.Collections.Hashtable> object because of the sorting.</span></span> <span data-ttu-id="cf466-120"><xref:System.Collections.SortedList> Oferuje jednak większą elastyczność dzięki umożliwieniu dostępu do wartości za pomocą skojarzonych kluczy lub indeksów.</span><span class="sxs-lookup"><span data-stu-id="cf466-120">However, the <xref:System.Collections.SortedList> offers more flexibility by allowing access to the values either through the associated keys or through the indexes.</span></span>  
  
 <span data-ttu-id="cf466-121">Dostęp do elementów w tej kolekcji można uzyskać przy użyciu indeksu liczb całkowitych.</span><span class="sxs-lookup"><span data-stu-id="cf466-121">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="cf466-122">Indeksy w tej kolekcji są oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="cf466-122">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="cf466-123">Instrukcja języka(`for each` w Visual Basic) zwraca obiekt typu elementów w kolekcji. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="cf466-123">The `foreach` statement of the C# language (`for each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="cf466-124">Ponieważ każdy element <xref:System.Collections.SortedList> obiektu jest parą klucz/wartość, typ elementu nie jest typem klucza lub typem wartości.</span><span class="sxs-lookup"><span data-stu-id="cf466-124">Since each element of the <xref:System.Collections.SortedList> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="cf466-125">Zamiast tego typ elementu to <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="cf466-125">Rather, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="cf466-126">Na przykład:</span><span class="sxs-lookup"><span data-stu-id="cf466-126">For example:</span></span>  
  
 [!code-cpp[Classic SortedList Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic SortedList Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/remarks.cs#2)]
 [!code-vb[Classic SortedList Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="cf466-127">`foreach` Instrukcja to otoka wokół modułu wyliczającego, który umożliwia odczytywanie tylko z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-127">The `foreach` statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-128">Poniższy przykład kodu pokazuje, jak utworzyć i zainicjować <xref:System.Collections.SortedList> obiekt oraz jak drukować jego klucze i wartości.</span><span class="sxs-lookup"><span data-stu-id="cf466-128">The following code example shows how to create and initialize a <xref:System.Collections.SortedList> object and how to print out its keys and values.</span></span>  
  
 [!code-cpp[Classic SortedList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cf466-129">Publiczne statyczne (<see langword="Shared" /> w Visual Basic) członkowie tego typu są bezpieczne wątkowo.</span><span class="sxs-lookup"><span data-stu-id="cf466-129">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="cf466-130">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-130">Any instance members are not guaranteed to be thread safe.</span></span>  
  
<span data-ttu-id="cf466-131"><see cref="T:System.Collections.SortedList" /> Obiekt może obsługiwać wielu czytników współbieżnie, o ile kolekcja nie jest modyfikowana.</span><span class="sxs-lookup"><span data-stu-id="cf466-131">A <see cref="T:System.Collections.SortedList" /> object can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="cf466-132">Aby zagwarantować bezpieczeństwo <see cref="T:System.Collections.SortedList" />wątku, wszystkie operacje muszą być wykonywane przez otokę zwracaną <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="cf466-132">To guarantee the thread safety of the <see cref="T:System.Collections.SortedList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" /> method.</span></span>  
  
<span data-ttu-id="cf466-133">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-133">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf466-134">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="cf466-134">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf466-135">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-135">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IComparer" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.Generic.SortedList`2" />
    <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-136">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-136">Performing Culture-Insensitive String Operations in Collections</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cf466-137">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.SortedList" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="cf466-137">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-138">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma domyślną pojemność początkową i jest sortowane według <see cref="T:System.IComparable" /> interfejsu zaimplementowanego przez <see cref="T:System.Collections.SortedList" /> każdy klucz dodany do obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-138">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-139">Każdy klucz musi implementować <xref:System.IComparable> interfejs, aby można było porównań z każdym innym kluczem <xref:System.Collections.SortedList> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-139">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-140">Elementy są sortowane według <xref:System.IComparable> implementacji każdego klucza dodanego <xref:System.Collections.SortedList>do.</span><span class="sxs-lookup"><span data-stu-id="cf466-140">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-141">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-141">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-142">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-142">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-143">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-143">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-144">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="cf466-144">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-145">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-145">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-146">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-146">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList comparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="cf466-147"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="cf466-147">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="cf466-148">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-148">-or-</span></span> 
 <span data-ttu-id="cf466-149"><see langword="null" />Aby użyć <see cref="T:System.IComparable" /> implementacji każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="cf466-149"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="cf466-150">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma domyślną pojemność początkową i jest sortowane zgodnie z określonym <see cref="T:System.Collections.IComparer" /> interfejsem.</span><span class="sxs-lookup"><span data-stu-id="cf466-150">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the default initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-151">Elementy są sortowane zgodnie z określoną <xref:System.Collections.IComparer> implementacją.</span><span class="sxs-lookup"><span data-stu-id="cf466-151">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="cf466-152">`null` <xref:System.IComparable> <xref:System.IComparable> Jeśli parametr ma wartość, jest używana implementacja każdego klucza; w związku z tym każdy klucz musi implementować interfejs, <xref:System.Collections.SortedList> aby można było porównywać z każdym innym kluczem w obiekcie. `comparer`</span><span class="sxs-lookup"><span data-stu-id="cf466-152">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-153">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-153">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-154">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-154">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-155">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-155">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-156">Ten konstruktor jest operacją O (1).</span><span class="sxs-lookup"><span data-stu-id="cf466-156">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-157">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-157">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CPP/sortedlist_ctor.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/CS/sortedlist_ctor.cs#1)]
 [!code-vb[System.Collections.SortedList_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctor/VB/sortedlist_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-158">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-158">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf466-159">Implementacja do kopiowania do nowego <see cref="T:System.Collections.SortedList" /> obiektu. <see cref="T:System.Collections.IDictionary" /></span><span class="sxs-lookup"><span data-stu-id="cf466-159">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="cf466-160">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która zawiera elementy skopiowane z określonego słownika, ma taką samą początkową pojemność jak liczba skopiowanych elementów i jest sortowana zgodnie <see cref="T:System.IComparable" /> z interfejsem zaimplementowanym przez każdy klucz.</span><span class="sxs-lookup"><span data-stu-id="cf466-160">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-161">Każdy klucz musi implementować <xref:System.IComparable> interfejs, aby można było porównań z każdym innym kluczem <xref:System.Collections.SortedList> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-161">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-162">Elementy są sortowane według <xref:System.IComparable> implementacji każdego klucza dodanego <xref:System.Collections.SortedList>do.</span><span class="sxs-lookup"><span data-stu-id="cf466-162">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-163">Obiekt jest przykładem <xref:System.Collections.IDictionary> implementacji, którą można przesłać do tego konstruktora. <xref:System.Collections.Hashtable></span><span class="sxs-lookup"><span data-stu-id="cf466-163">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="cf466-164">Nowy <xref:System.Collections.SortedList> obiekt zawiera kopię kluczy i wartości przechowywanych <xref:System.Collections.Hashtable>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-164">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="cf466-165">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-165">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-166">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-166">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-167">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-167">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-168">Ten konstruktor jest operacją o`n`(), gdzie `n` jest liczbą elementów w `d`.</span><span class="sxs-lookup"><span data-stu-id="cf466-168">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-169">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-169">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-170"><paramref name="d" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-170"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf466-171">Co najmniej jeden element w <paramref name="d" /> nie <see cref="T:System.IComparable" /> implementuje interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cf466-171">One or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-172">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-172">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="cf466-173">Początkowa liczba elementów, które <see cref="T:System.Collections.SortedList" /> może zawierać obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-173">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="cf466-174">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma określoną pojemność początkową i jest sortowane według <see cref="T:System.IComparable" /> interfejsu zaimplementowanego przez <see cref="T:System.Collections.SortedList" /> każdy klucz dodany do obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-174">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the <see cref="T:System.IComparable" /> interface implemented by each key added to the <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-175">Każdy klucz musi implementować <xref:System.IComparable> interfejs, aby można było porównań z każdym innym kluczem <xref:System.Collections.SortedList> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-175">Each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-176">Elementy są sortowane według <xref:System.IComparable> implementacji każdego klucza dodanego <xref:System.Collections.SortedList>do.</span><span class="sxs-lookup"><span data-stu-id="cf466-176">The elements are sorted according to the <xref:System.IComparable> implementation of each key added to the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-177">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-177">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-178">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-178">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-179">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-179">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-180">Ten konstruktor jest operacją o`n`(), gdzie `n` is `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="cf466-180">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-181">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-181">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-182"><paramref name="initialCapacity" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="cf466-182"><paramref name="initialCapacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="cf466-183">Za mało dostępnej pamięci, aby utworzyć <see cref="T:System.Collections.SortedList" /> obiekt o określonym. <paramref name="initialCapacity" /></span><span class="sxs-lookup"><span data-stu-id="cf466-183">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="initialCapacity" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-184">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-184">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IComparer comparer, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IComparer comparer, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IComparer,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (comparer As IComparer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IComparer ^ comparer, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IComparer * int -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (comparer, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="cf466-185"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="cf466-185">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="cf466-186">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-186">-or-</span></span> 
 <span data-ttu-id="cf466-187"><see langword="null" />Aby użyć <see cref="T:System.IComparable" /> implementacji każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="cf466-187"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <param name="capacity"><span data-ttu-id="cf466-188">Początkowa liczba elementów, które <see cref="T:System.Collections.SortedList" /> może zawierać obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-188">The initial number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></param>
        <summary><span data-ttu-id="cf466-189">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która jest pusta, ma określoną pojemność początkową i jest sortowane zgodnie z określonym <see cref="T:System.Collections.IComparer" /> interfejsem.</span><span class="sxs-lookup"><span data-stu-id="cf466-189">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that is empty, has the specified initial capacity, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-190">Elementy są sortowane zgodnie z określoną <xref:System.Collections.IComparer> implementacją.</span><span class="sxs-lookup"><span data-stu-id="cf466-190">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="cf466-191">`null` <xref:System.IComparable> <xref:System.IComparable> Jeśli parametr ma wartość, jest używana implementacja każdego klucza; w związku z tym każdy klucz musi implementować interfejs, <xref:System.Collections.SortedList> aby można było porównywać z każdym innym kluczem w obiekcie. `comparer`</span><span class="sxs-lookup"><span data-stu-id="cf466-191">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-192">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-192">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-193">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-193">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-194">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-194">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-195">Ten konstruktor jest operacją o`n`(), gdzie `n` is `capacity`.</span><span class="sxs-lookup"><span data-stu-id="cf466-195">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-196">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-196">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CPP/sortedlist_ctorint.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/CS/sortedlist_ctorint.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorInt/VB/sortedlist_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-197"><paramref name="capacity" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="cf466-197"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="cf466-198">Za mało dostępnej pamięci, aby utworzyć <see cref="T:System.Collections.SortedList" /> obiekt o określonym. <paramref name="capacity" /></span><span class="sxs-lookup"><span data-stu-id="cf466-198">There is not enough available memory to create a <see cref="T:System.Collections.SortedList" /> object with the specified <paramref name="capacity" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-199">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-199">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SortedList (System.Collections.IDictionary d, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.#ctor(System.Collections.IDictionary,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SortedList(System::Collections::IDictionary ^ d, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.SortedList : System.Collections.IDictionary * System.Collections.IComparer -&gt; System.Collections.SortedList" Usage="new System.Collections.SortedList (d, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="cf466-200">Implementacja do kopiowania do nowego <see cref="T:System.Collections.SortedList" /> obiektu. <see cref="T:System.Collections.IDictionary" /></span><span class="sxs-lookup"><span data-stu-id="cf466-200">The <see cref="T:System.Collections.IDictionary" /> implementation to copy to a new <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <param name="comparer"><span data-ttu-id="cf466-201"><see cref="T:System.Collections.IComparer" /> Implementacja do użycia podczas porównywania kluczy.</span><span class="sxs-lookup"><span data-stu-id="cf466-201">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing keys.</span></span>  
  
<span data-ttu-id="cf466-202">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-202">-or-</span></span> 
 <span data-ttu-id="cf466-203"><see langword="null" />Aby użyć <see cref="T:System.IComparable" /> implementacji każdego klucza.</span><span class="sxs-lookup"><span data-stu-id="cf466-203"><see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each key.</span></span></param>
        <summary><span data-ttu-id="cf466-204">Inicjuje nowe wystąpienie <see cref="T:System.Collections.SortedList" /> klasy, która zawiera elementy skopiowane z określonego słownika, ma taką samą początkową pojemność jak liczba skopiowanych elementów i jest sortowana zgodnie z określonym <see cref="T:System.Collections.IComparer" /> interfejsem.</span><span class="sxs-lookup"><span data-stu-id="cf466-204">Initializes a new instance of the <see cref="T:System.Collections.SortedList" /> class that contains elements copied from the specified dictionary, has the same initial capacity as the number of elements copied, and is sorted according to the specified <see cref="T:System.Collections.IComparer" /> interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-205">Elementy są sortowane zgodnie z określoną <xref:System.Collections.IComparer> implementacją.</span><span class="sxs-lookup"><span data-stu-id="cf466-205">The elements are sorted according to the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="cf466-206">`null` <xref:System.IComparable> <xref:System.IComparable> Jeśli parametr ma wartość, jest używana implementacja każdego klucza; w związku z tym każdy klucz musi implementować interfejs, <xref:System.Collections.SortedList> aby można było porównywać z każdym innym kluczem w obiekcie. `comparer`</span><span class="sxs-lookup"><span data-stu-id="cf466-206">If the `comparer` parameter is `null`, the <xref:System.IComparable> implementation of each key is used; therefore, each key must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key in the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-207">Obiekt jest przykładem <xref:System.Collections.IDictionary> implementacji, którą można przesłać do tego konstruktora. <xref:System.Collections.Hashtable></span><span class="sxs-lookup"><span data-stu-id="cf466-207">A <xref:System.Collections.Hashtable> object is an example of an <xref:System.Collections.IDictionary> implementation that can be passed to this constructor.</span></span> <span data-ttu-id="cf466-208">Nowy <xref:System.Collections.SortedList> obiekt zawiera kopię kluczy i wartości przechowywanych <xref:System.Collections.Hashtable>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-208">The new <xref:System.Collections.SortedList> object contains a copy of the keys and values stored in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="cf466-209">Pojemność <xref:System.Collections.SortedList> obiektu to liczba elementów <xref:System.Collections.SortedList> , które mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="cf466-209">The capacity of a <xref:System.Collections.SortedList> object is the number of elements that the <xref:System.Collections.SortedList> can hold.</span></span> <span data-ttu-id="cf466-210">Gdy elementy są dodawane do <xref:System.Collections.SortedList>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami przez ponowną alokację tablicy wewnętrznej.</span><span class="sxs-lookup"><span data-stu-id="cf466-210">As elements are added to a <xref:System.Collections.SortedList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="cf466-211">Jeśli rozmiar kolekcji można oszacować, określenie początkowej pojemności eliminuje konieczność wykonywania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-211">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-212">Ten konstruktor jest operacją o`n`(), gdzie `n` jest liczbą elementów w `d`.</span><span class="sxs-lookup"><span data-stu-id="cf466-212">This constructor is an O(`n`) operation, where `n` is the number of elements in `d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-213">Poniższy przykład kodu tworzy kolekcje przy użyciu różnych <xref:System.Collections.SortedList> konstruktorów i pokazuje różnice w zachowaniu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-213">The following code example creates collections using different <xref:System.Collections.SortedList> constructors and demonstrates the differences in the behavior of the collections.</span></span>  
  
 [!code-cpp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CPP/sortedlist_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/CS/sortedlist_ctordictionary.cs#1)]
 [!code-vb[System.Collections.SortedList_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.SortedList_ctorDictionary/VB/sortedlist_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-214"><paramref name="d" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-214"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf466-215"><paramref name="comparer" /> to <see langword="null" />, a jeden lub więcej elementów w <paramref name="d" /> nie implementuje <see cref="T:System.IComparable" /> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="cf466-215"><paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="d" /> do not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-216">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-216">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="sortedList.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-217">Klucz elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="cf466-217">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="cf466-218">Wartość elementu do dodania.</span><span class="sxs-lookup"><span data-stu-id="cf466-218">The value of the element to add.</span></span> <span data-ttu-id="cf466-219">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="cf466-219">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cf466-220">Dodaje element z określonym kluczem i wartością do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-220">Adds an element with the specified key and value to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-221">Punkt wstawiania jest określany na podstawie wybranej opcji porównującej, jawnie lub domyślnie, gdy <xref:System.Collections.SortedList> obiekt został utworzony.</span><span class="sxs-lookup"><span data-stu-id="cf466-221">The insertion point is determined based on the comparer selected, either explicitly or by default, when the <xref:System.Collections.SortedList> object was created.</span></span>  
  
 <span data-ttu-id="cf466-222">Jeśli <xref:System.Collections.SortedList.Count%2A> już równa <xref:System.Collections.SortedList.Capacity%2A>się <xref:System.Collections.SortedList> , Pojemność obiektu jest zwiększana przez automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="cf466-222">If <xref:System.Collections.SortedList.Count%2A> already equals <xref:System.Collections.SortedList.Capacity%2A>, the capacity of the <xref:System.Collections.SortedList> object is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="cf466-223">Można również użyć <xref:System.Collections.SortedList.Item%2A> właściwości, aby dodać nowe elementy przez ustawienie wartości klucza, który nie istnieje <xref:System.Collections.SortedList> w `myCollection["myNonexistentKey"] = myValue`obiekcie (na przykład).</span><span class="sxs-lookup"><span data-stu-id="cf466-223">You can also use the <xref:System.Collections.SortedList.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="cf466-224">Jeśli jednak określony klucz już istnieje w <xref:System.Collections.SortedList>, <xref:System.Collections.SortedList.Item%2A> ustawienie właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="cf466-224">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="cf466-225">Z kolei <xref:System.Collections.SortedList.Add%2A> Metoda nie modyfikuje istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-225">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="cf466-226">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-226">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="cf466-227">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="cf466-227">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="cf466-228">Ta metoda jest operacją o`n`() dla niesortowanych danych, gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-228">This method is an O(`n`) operation for unsorted data, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="cf466-229">Jest to operacja o (log `n`), jeśli nowy element zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="cf466-229">It is an O(log `n`) operation if the new element is added at the end of the list.</span></span> <span data-ttu-id="cf466-230">Jeśli Wstaw powoduje zmianę rozmiaru, operacja ma wartość O (`n`).</span><span class="sxs-lookup"><span data-stu-id="cf466-230">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-231">Poniższy przykład kodu pokazuje, jak dodać elementy do <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-231">The following code example shows how to add elements to a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-232"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-232"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf466-233">Element z określonym <paramref name="key" /> już istnieje <see cref="T:System.Collections.SortedList" /> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-233">An element with the specified <paramref name="key" /> already exists in the <see cref="T:System.Collections.SortedList" /> object.</span></span>  
  
<span data-ttu-id="cf466-234">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-234">-or-</span></span> 
<span data-ttu-id="cf466-235">Jest ustawiony do <see cref="T:System.IComparable" /> korzystania z <paramref name="key" /> interfejsu<see cref="T:System.IComparable" /> i nie implementuje interfejsu. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-235">The <see cref="T:System.Collections.SortedList" /> is set to use the <see cref="T:System.IComparable" /> interface, and <paramref name="key" /> does not implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-236">Jest <see cref="T:System.Collections.SortedList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-236">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="cf466-237">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-237">-or-</span></span> 
<span data-ttu-id="cf466-238"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-238">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="cf466-239">Za mało dostępnej pamięci, aby dodać element do <see cref="T:System.Collections.SortedList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="cf466-239">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf466-240">Funkcja porównująca zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-240">The comparer throws an exception.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.Item(System.Object)" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Collections.SortedList.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-241">Pobiera lub ustawia pojemność <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-241">Gets or sets the capacity of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-242">Liczba elementów, które <see cref="T:System.Collections.SortedList" /> może zawierać obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-242">The number of elements that the <see cref="T:System.Collections.SortedList" /> object can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-243"><xref:System.Collections.SortedList.Capacity%2A>to liczba elementów, które <xref:System.Collections.SortedList> obiekt może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="cf466-243"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="cf466-244"><xref:System.Collections.SortedList.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-244"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-245"><xref:System.Collections.SortedList.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-245"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="cf466-246">Jeśli <xref:System.Collections.SortedList.Count%2A> przekracza<xref:System.Collections.SortedList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne alokowanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-246">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="cf466-247">Wydajność można zmniejszyć przez wywołanie <xref:System.Collections.SortedList.TrimToSize%2A> lub przez <xref:System.Collections.SortedList.Capacity%2A> ustawienie właściwości jawnie.</span><span class="sxs-lookup"><span data-stu-id="cf466-247">The capacity can be decreased by calling <xref:System.Collections.SortedList.TrimToSize%2A> or by setting the <xref:System.Collections.SortedList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="cf466-248">Gdy wartość <xref:System.Collections.SortedList.Capacity%2A> jest ustawiona jawnie, tablica wewnętrzna również jest przyalokowana ponownie w celu uwzględnienia określonej pojemności.</span><span class="sxs-lookup"><span data-stu-id="cf466-248">When the value of <xref:System.Collections.SortedList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="cf466-249">Pobieranie wartości tej właściwości jest operacją O (1); ustawienie właściwości jest operacją o (`n`), gdzie `n` jest nowa pojemność.</span><span class="sxs-lookup"><span data-stu-id="cf466-249">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-250">Przypisana wartość jest mniejsza niż bieżąca liczba elementów w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-250">The value assigned is less than the current number of elements in the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="cf466-251">Za mało dostępnej pamięci w systemie.</span><span class="sxs-lookup"><span data-stu-id="cf466-251">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="sortedList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-252">Usuwa wszystkie elementy z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-252">Removes all elements from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-253"><xref:System.Collections.SortedList.Count%2A>jest ustawiona na zero, a odwołania do innych obiektów z elementów kolekcji również są wydane.</span><span class="sxs-lookup"><span data-stu-id="cf466-253"><xref:System.Collections.SortedList.Count%2A> is set to zero and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="cf466-254"><xref:System.Collections.SortedList.Capacity%2A>pozostaje niezmieniony.</span><span class="sxs-lookup"><span data-stu-id="cf466-254"><xref:System.Collections.SortedList.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="cf466-255">Aby zresetować pojemność <xref:System.Collections.SortedList> obiektu, wywołaj <xref:System.Collections.SortedList.TrimToSize%2A> lub ustaw <xref:System.Collections.SortedList.Capacity%2A> właściwość bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="cf466-255">To reset the capacity of the <xref:System.Collections.SortedList> object, call <xref:System.Collections.SortedList.TrimToSize%2A> or set the <xref:System.Collections.SortedList.Capacity%2A> property directly.</span></span> <span data-ttu-id="cf466-256">Przycinanie pustego <xref:System.Collections.SortedList> zestawu ustawia pojemność <xref:System.Collections.SortedList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cf466-256">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="cf466-257">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-257">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-258">Poniższy przykład kodu pokazuje, jak przyciąć nieużywane fragmenty <xref:System.Collections.SortedList> obiektu i jak wyczyścić wartości. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="cf466-258">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-259"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-259">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="cf466-260">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-260">-or-</span></span> 
<span data-ttu-id="cf466-261"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-261">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.TrimToSize" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="sortedList.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-262">Tworzy skróconą kopię <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-262">Creates a shallow copy of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-263">Skrócona kopia <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-263">A shallow copy of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-264">Skrócona kopia kolekcji kopiuje tylko elementy kolekcji, niezależnie od tego, czy są to typy odwołań czy typy wartości, ale nie kopiuje obiektów, do których odwołują się odwołania.</span><span class="sxs-lookup"><span data-stu-id="cf466-264">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but does not copy the objects that the references refer to.</span></span> <span data-ttu-id="cf466-265">Odwołania w nowej kolekcji wskazują te same obiekty, do których odwołują się odwołania w pierwotnym punkcie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-265">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="cf466-266">Z kolei Szczegółowa kopia kolekcji Kopiuje elementy i wszystko bezpośrednio lub pośrednio odwołujące się do elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-266">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="cf466-267">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-267">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="sortedList.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-268">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-268">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="cf466-269">Określa, czy <see cref="T:System.Collections.SortedList" /> obiekt zawiera określony klucz.</span><span class="sxs-lookup"><span data-stu-id="cf466-269">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="cf466-270"><see langword="true" />Jeśli obiekt zawiera element z określonym <paramref name="key" />; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-270"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-271">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-271">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="cf466-272"><xref:System.Collections.SortedList.Contains%2A>implementuje <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cf466-272"><xref:System.Collections.SortedList.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cf466-273">Zachowuje się dokładnie tak, <xref:System.Collections.SortedList.ContainsKey%2A>jak.</span><span class="sxs-lookup"><span data-stu-id="cf466-273">It behaves exactly as <xref:System.Collections.SortedList.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="cf466-274">Ta metoda używa algorytmu wyszukiwania binarnego; w związku z tym ta metoda jest operacją `n`o (log) `n` , <xref:System.Collections.SortedList.Count%2A>gdzie is.</span><span class="sxs-lookup"><span data-stu-id="cf466-274">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="cf466-275">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="cf466-275">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="cf466-276">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-276">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-277">Poniższy przykład kodu pokazuje, jak ustalić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="cf466-277">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-278"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-278"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf466-279">Funkcja porównująca zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-279">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-280">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-280">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="sortedList.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-281">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-281">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="cf466-282">Określa, czy <see cref="T:System.Collections.SortedList" /> obiekt zawiera określony klucz.</span><span class="sxs-lookup"><span data-stu-id="cf466-282">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="cf466-283"><see langword="true" />Jeśli obiekt zawiera element z określonym <paramref name="key" />; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-283"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="key" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-284">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-284">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="cf466-285">Ta metoda zachowuje się <xref:System.Collections.SortedList.Contains%2A> dokładnie jako metodę.</span><span class="sxs-lookup"><span data-stu-id="cf466-285">This method behaves exactly as the <xref:System.Collections.SortedList.Contains%2A> method.</span></span>  
  
 <span data-ttu-id="cf466-286">Ta metoda używa algorytmu wyszukiwania binarnego; w związku z tym ta metoda jest operacją `n`o (log) `n` , <xref:System.Collections.SortedList.Count%2A>gdzie is.</span><span class="sxs-lookup"><span data-stu-id="cf466-286">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="cf466-287">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="cf466-287">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="cf466-288">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-288">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-289">Poniższy przykład kodu pokazuje, jak ustalić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="cf466-289">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-290"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-290"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf466-291">Funkcja porównująca zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-291">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-292">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-292">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="sortedList.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf466-293">Wartość, która ma zostać zlokalizowana w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-293">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="cf466-294">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="cf466-294">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cf466-295">Określa, czy <see cref="T:System.Collections.SortedList" /> obiekt zawiera konkretną wartość.</span><span class="sxs-lookup"><span data-stu-id="cf466-295">Determines whether a <see cref="T:System.Collections.SortedList" /> object contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="cf466-296"><see langword="true" />Jeśli obiekt zawiera element z określonym <paramref name="value" />; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-296"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-297">Wartości elementów <xref:System.Collections.SortedList> obiektu są porównywane z określoną wartością <xref:System.Object.Equals%2A> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="cf466-297">The values of the elements of the <xref:System.Collections.SortedList> object are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="cf466-298">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym średni czas wykonywania jest proporcjonalny do <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-298">This method performs a linear search; therefore, the average execution time is proportional to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="cf466-299">Oznacza to, że ta metoda jest operacją`n`o (), `n` gdzie <xref:System.Collections.SortedList.Count%2A>is.</span><span class="sxs-lookup"><span data-stu-id="cf466-299">That is, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="cf466-300">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="cf466-300">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="cf466-301">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-301">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-302">Poniższy przykład kodu pokazuje, jak ustalić, czy <xref:System.Collections.SortedList> obiekt zawiera określony element.</span><span class="sxs-lookup"><span data-stu-id="cf466-302">The following code example shows how to determine whether a <xref:System.Collections.SortedList> object contains a specific element.</span></span>  
  
 [!code-cpp[Classic SortedList.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-303">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-303">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="sortedList.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="cf466-304">Obiekt jednowymiarowy <see cref="T:System.Array" /> , który jest miejscem docelowym <see cref="T:System.Collections.DictionaryEntry" /> obiektów kopiowanych z <see cref="T:System.Collections.SortedList" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-304">The one-dimensional <see cref="T:System.Array" /> object that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.SortedList" />.</span></span> <span data-ttu-id="cf466-305"><see cref="T:System.Array" /> Musi mieć indeksowanie oparte na zero.</span><span class="sxs-lookup"><span data-stu-id="cf466-305">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="cf466-306">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="cf466-306">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="cf466-307">Kopiuje <see cref="T:System.Collections.SortedList" /> elementy do jednowymiarowego <see cref="T:System.Array" /> obiektu, rozpoczynając od określonego indeksu w tablicy.</span><span class="sxs-lookup"><span data-stu-id="cf466-307">Copies <see cref="T:System.Collections.SortedList" /> elements to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-308">Pary klucz/wartość są kopiowane do <xref:System.Array> obiektu w tej samej kolejności, w której moduł wyliczający iteruje <xref:System.Collections.SortedList> przez obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-308">The key/value pairs are copied to the <xref:System.Array> object in the same order in which the enumerator iterates through the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-309">Aby skopiować tylko klucze w <xref:System.Collections.SortedList>, użyj. `SortedList.Keys.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="cf466-309">To copy only the keys in the <xref:System.Collections.SortedList>, use `SortedList.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="cf466-310">Aby skopiować tylko wartości z <xref:System.Collections.SortedList>, użyj. `SortedList.Values.CopyTo`</span><span class="sxs-lookup"><span data-stu-id="cf466-310">To copy only the values in the <xref:System.Collections.SortedList>, use `SortedList.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="cf466-311">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-311">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-312">Poniższy przykład kodu pokazuje, jak skopiować wartości w <xref:System.Collections.SortedList> obiekcie do jednowymiarowego <xref:System.Array> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-312">The following code example shows how to copy the values in a <xref:System.Collections.SortedList> object into a one-dimensional <xref:System.Array> object.</span></span>  
  
 [!code-cpp[Classic SortedList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-313"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-313"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-314"><paramref name="arrayIndex" />jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="cf466-314"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cf466-315"><paramref name="array" />jest wielowymiarowych.</span><span class="sxs-lookup"><span data-stu-id="cf466-315"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="cf466-316">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-316">-or-</span></span> 
<span data-ttu-id="cf466-317">Liczba elementów w obiekcie źródłowym <see cref="T:System.Collections.SortedList" /> jest większa niż dostępne miejsce od <paramref name="arrayIndex" /> do końca miejsca docelowego <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-317">The number of elements in the source <see cref="T:System.Collections.SortedList" /> object is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="cf466-318">Nie można automatycznie rzutować <see cref="T:System.Collections.SortedList" /> typu źródła na typ docelowy. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="cf466-318">The type of the source <see cref="T:System.Collections.SortedList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.SortedList.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.SortedList.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-319">Pobiera liczbę elementów zawartych w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-319">Gets the number of elements contained in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-320">Liczba elementów zawartych w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-320">The number of elements contained in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-321">Każdy element jest parą klucz/wartość, do której można uzyskać dostęp jako <xref:System.Collections.DictionaryEntry> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-321">Each element is a key/value pair that can be accessed as a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="cf466-322"><xref:System.Collections.SortedList.Capacity%2A>to liczba elementów, które <xref:System.Collections.SortedList> obiekt może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="cf466-322"><xref:System.Collections.SortedList.Capacity%2A> is the number of elements that the <xref:System.Collections.SortedList> object can store.</span></span> <span data-ttu-id="cf466-323"><xref:System.Collections.SortedList.Count%2A>to liczba elementów, które faktycznie znajdują się w <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-323"><xref:System.Collections.SortedList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-324"><xref:System.Collections.SortedList.Capacity%2A>jest zawsze większa lub równa <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-324"><xref:System.Collections.SortedList.Capacity%2A> is always greater than or equal to <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="cf466-325">Jeśli <xref:System.Collections.SortedList.Count%2A> przekracza<xref:System.Collections.SortedList.Capacity%2A> podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne alokowanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-325">If <xref:System.Collections.SortedList.Count%2A> exceeds <xref:System.Collections.SortedList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="cf466-326">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-326">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="GetByIndex">
      <MemberSignature Language="C#" Value="public virtual object GetByIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetByIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetByIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByIndex (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetByIndex(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetByIndex : int -&gt; obj&#xA;override this.GetByIndex : int -&gt; obj" Usage="sortedList.GetByIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf466-327">Liczony od zera indeks wartości, który ma zostać pobrany.</span><span class="sxs-lookup"><span data-stu-id="cf466-327">The zero-based index of the value to get.</span></span></param>
        <summary><span data-ttu-id="cf466-328">Pobiera wartość przy określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-328">Gets the value at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-329">Wartość w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-329">The value at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-330">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-330">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-331">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-331">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-332">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-332">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-333">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-333">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-334">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-334">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-335">Poniższy przykład kodu pokazuje, jak uzyskać jeden lub wszystkie klucze lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-335">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-336"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-336"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="sortedList.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-337">Zwraca obiekt, który wykonuje iterację <see cref="T:System.Collections.SortedList" /> przez obiekt. <see cref="T:System.Collections.IDictionaryEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="cf466-337">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object that iterates through a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-338"><see cref="T:System.Collections.IDictionaryEnumerator" /> Obiekt<see cref="T:System.Collections.SortedList" /> dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-338">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-339">Instrukcja języka(`for each` w Visual Basic) ukrywa złożoność modułów wyliczających. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="cf466-339">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="cf466-340">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="cf466-340">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="cf466-341">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="cf466-341">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cf466-342">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-342">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cf466-343"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="cf466-343"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="cf466-344">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="cf466-344">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cf466-345">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-345">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="cf466-346"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="cf466-346"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="cf466-347"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="cf466-347"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="cf466-348">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="cf466-348">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cf466-349">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="cf466-349">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="cf466-350">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, <xref:System.Collections.IEnumerator.Current%2A> nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="cf466-350">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="cf466-351">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-351">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="cf466-352">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="cf466-352">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cf466-353">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="cf466-353">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="cf466-354">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-354">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="cf466-355">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="cf466-355">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="cf466-356">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="cf466-356">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="cf466-357">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-357">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual object GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; obj&#xA;override this.GetKey : int -&gt; obj" Usage="sortedList.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf466-358">Liczony od zera indeks klucza do pobrania.</span><span class="sxs-lookup"><span data-stu-id="cf466-358">The zero-based index of the key to get.</span></span></param>
        <summary><span data-ttu-id="cf466-359">Pobiera klucz przy określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-359">Gets the key at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-360">Klucz w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-360">The key at the specified index of the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-361">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-361">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-362">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-362">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-363">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-363">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-364">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-364">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-365">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-365">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-366">Poniższy przykład kodu pokazuje, jak uzyskać jeden lub wszystkie klucze lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-366">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-367"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-367"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKeyList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetKeyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetKeyList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetKeyList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetKeyList();" />
      <MemberSignature Language="F#" Value="abstract member GetKeyList : unit -&gt; System.Collections.IList&#xA;override this.GetKeyList : unit -&gt; System.Collections.IList" Usage="sortedList.GetKeyList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-368">Pobiera klucze w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-368">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-369">Obiekt zawierający klucze <see cref="T:System.Collections.SortedList" /> w obiekcie. <see cref="T:System.Collections.IList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-369">An <see cref="T:System.Collections.IList" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-370">Zwrócony <xref:System.Collections.IList> obiekt jest widokiem tylko do odczytu kluczy <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-370">The returned <xref:System.Collections.IList> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-371">Modyfikacje wprowadzone do bazowego <xref:System.Collections.SortedList> są natychmiast odzwierciedlane <xref:System.Collections.IList>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-371">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="cf466-372">Elementy zwracanych <xref:System.Collections.IList> elementów są sortowane w tej samej kolejności co klucze <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-372">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-373">Ta metoda jest podobna do <xref:System.Collections.SortedList.Keys%2A> właściwości, ale <xref:System.Collections.IList> zwraca obiekt zamiast <xref:System.Collections.ICollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-373">This method is similar to the <xref:System.Collections.SortedList.Keys%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="cf466-374">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-374">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-375">Poniższy przykład kodu pokazuje, jak uzyskać jeden lub wszystkie klucze lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-375">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
      </Docs>
    </Member>
    <Member MemberName="GetValueList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList GetValueList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IList GetValueList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.GetValueList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueList () As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IList ^ GetValueList();" />
      <MemberSignature Language="F#" Value="abstract member GetValueList : unit -&gt; System.Collections.IList&#xA;override this.GetValueList : unit -&gt; System.Collections.IList" Usage="sortedList.GetValueList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-376">Pobiera wartości w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-376">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-377">Obiekt zawierający wartości <see cref="T:System.Collections.SortedList" /> w obiekcie. <see cref="T:System.Collections.IList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-377">An <see cref="T:System.Collections.IList" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-378">Zwrócony <xref:System.Collections.IList> obiekt jest widokiem tylko do odczytu wartości <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-378">The returned <xref:System.Collections.IList> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-379">Modyfikacje wprowadzone do bazowego <xref:System.Collections.SortedList> są natychmiast odzwierciedlane <xref:System.Collections.IList>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-379">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="cf466-380">Elementy zwracanych <xref:System.Collections.IList> elementów są sortowane w tej samej kolejności, co wartości <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-380">The elements of the returned <xref:System.Collections.IList> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-381">Ta metoda jest podobna do <xref:System.Collections.SortedList.Values%2A> właściwości, ale <xref:System.Collections.IList> zwraca obiekt zamiast <xref:System.Collections.ICollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-381">This method is similar to the <xref:System.Collections.SortedList.Values%2A> property, but returns an <xref:System.Collections.IList> object instead of an <xref:System.Collections.ICollection> object.</span></span>  
  
 <span data-ttu-id="cf466-382">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-382">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-383">Poniższy przykład kodu pokazuje, jak uzyskać jeden lub wszystkie klucze lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-383">The following code example shows how to get one or all the keys or values in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.GetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.GetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.GetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <altmember cref="P:System.Collections.SortedList.Values" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfKey : obj -&gt; int&#xA;override this.IndexOfKey : obj -&gt; int" Usage="sortedList.IndexOfKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-384">Klucz, który ma zostać zlokalizowany w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-384">The key to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span></param>
        <summary><span data-ttu-id="cf466-385">Zwraca indeks (liczony od zera) określonego klucza w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-385">Returns the zero-based index of the specified key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-386">Indeks <paramref name="key" /> (liczony od zera) parametru, jeśli <paramref name="key" /> znajduje się w <see cref="T:System.Collections.SortedList" /> obiekcie; w przeciwnym razie,-1.</span><span class="sxs-lookup"><span data-stu-id="cf466-386">The zero-based index of the <paramref name="key" /> parameter, if <paramref name="key" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-387">Elementy <xref:System.Collections.SortedList> obiektu są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-387">The elements of a <xref:System.Collections.SortedList> object are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created, or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="cf466-388">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-388">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-389">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-389">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-390">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-390">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-391">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-391">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-392">Ta metoda używa algorytmu wyszukiwania binarnego; w związku z tym ta metoda jest operacją `n`o (log) `n` , <xref:System.Collections.SortedList.Count%2A>gdzie is.</span><span class="sxs-lookup"><span data-stu-id="cf466-392">This method uses a binary search algorithm; therefore, this method is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="cf466-393">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="cf466-393">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="cf466-394">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-394">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-395">Poniższy przykład kodu pokazuje, jak określić indeks klucza lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-395">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-396"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-396"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf466-397">Funkcja porównująca zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-397">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-398">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-398">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IndexOfValue">
      <MemberSignature Language="C#" Value="public virtual int IndexOfValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfValue (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOfValue : obj -&gt; int&#xA;override this.IndexOfValue : obj -&gt; int" Usage="sortedList.IndexOfValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="cf466-399">Wartość, która ma zostać zlokalizowana w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-399">The value to locate in the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="cf466-400">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="cf466-400">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cf466-401">Zwraca indeks (liczony od zera) pierwszego wystąpienia określonej wartości w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-401">Returns the zero-based index of the first occurrence of the specified value in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-402">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="value" /> parametru, jeśli <paramref name="value" /> znajduje się w <see cref="T:System.Collections.SortedList" /> obiekcie; w przeciwnym razie,-1.</span><span class="sxs-lookup"><span data-stu-id="cf466-402">The zero-based index of the first occurrence of the <paramref name="value" /> parameter, if <paramref name="value" /> is found in the <see cref="T:System.Collections.SortedList" /> object; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-403">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-403">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-404">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-404">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-405">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-405">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-406">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-406">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-407">Wartości elementów <xref:System.Collections.SortedList> są porównywane z określoną wartością <xref:System.Object.Equals%2A> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="cf466-407">The values of the elements of the <xref:System.Collections.SortedList> are compared to the specified value using the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="cf466-408">Ta metoda używa wyszukiwania liniowego; w związku z tym ta metoda jest operacją o (`n`), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-408">This method uses a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
 <span data-ttu-id="cf466-409">Począwszy od .NET Framework 2,0, ta metoda używa obiektów <xref:System.Object.Equals%2A> i <xref:System.IComparable.CompareTo%2A> metod `item` kolekcji, aby określić, czy element istnieje.</span><span class="sxs-lookup"><span data-stu-id="cf466-409">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="cf466-410">We wcześniejszych wersjach .NET Framework to ustalenie zostało wykonane przy użyciu <xref:System.Object.Equals%2A> metod `item` i <xref:System.IComparable.CompareTo%2A> parametru dla obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-410">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-411">Poniższy przykład kodu pokazuje, jak określić indeks klucza lub wartości w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-411">The following code example shows how to determine the index of a key or a value in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IndexOfKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IndexOfKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.SortedList.ContainsValue(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-412">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-412">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.SortedList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-413">Pobiera wartość wskazującą, czy <see cref="T:System.Collections.SortedList" /> obiekt ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-413">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="cf466-414"><see langword="true" />Jeśli obiekt ma stały rozmiar; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-414"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf466-415">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-415">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-416">Kolekcja o stałym rozmiarze nie zezwala na dodawanie lub usuwanie elementów po utworzeniu kolekcji, ale umożliwia modyfikację istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-416">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="cf466-417">Kolekcja o stałym rozmiarze jest po prostu kolekcją z otoką, która zapobiega dodawaniu i usuwaniu elementów; w związku z tym, jeśli wprowadzono zmiany do źródłowej kolekcji, w tym dodawanie lub usuwanie elementów, kolekcja o stałym rozmiarze odzwierciedla te zmiany.</span><span class="sxs-lookup"><span data-stu-id="cf466-417">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="cf466-418">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-418">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.SortedList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-419">Pobiera wartość wskazującą, czy <see cref="T:System.Collections.SortedList" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-419">Gets a value indicating whether a <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="cf466-420"><see langword="true" />Jeśli obiekt jest tylko do odczytu; <see langword="false" />w przeciwnym razie. <see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-420"><see langword="true" /> if the <see cref="T:System.Collections.SortedList" /> object is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf466-421">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-421">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-422">W kolekcji tylko do odczytu po jej utworzeniu nie można dodawać, usuwać ani modyfikować elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-422">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="cf466-423">Kolekcja, która jest tylko do odczytu, jest po prostu zbiorem z otoką uniemożliwiającą zmianę kolekcji; w związku z tym, jeśli zmiany zostaną wprowadzone do podstawowej kolekcji, kolekcja tylko do odczytu uwzględni te zmiany.</span><span class="sxs-lookup"><span data-stu-id="cf466-423">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="cf466-424">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-424">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.SortedList.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-425">Pobiera wartość wskazującą, czy dostęp do <see cref="T:System.Collections.SortedList" /> obiektu jest synchronizowany (bezpieczny wątkowo).</span><span class="sxs-lookup"><span data-stu-id="cf466-425">Gets a value indicating whether access to a <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="cf466-426"><see langword="true" />Jeśli dostęp do <see cref="T:System.Collections.SortedList" /> obiektu jest synchronizowany (bezpieczny wątkowo); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="cf466-426"><see langword="true" /> if access to the <see cref="T:System.Collections.SortedList" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="cf466-427">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-427">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-428">Aby zagwarantować bezpieczeństwo <xref:System.Collections.SortedList> wątku obiektu, wszystkie operacje muszą zostać wykonane przez otokę zwracaną <xref:System.Collections.SortedList.Synchronized%2A> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="cf466-428">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through the wrapper returned by the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="cf466-429">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-429">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf466-430">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="cf466-430">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf466-431">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-431">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-432">Poniższy przykład kodu pokazuje, <xref:System.Collections.SortedList.SyncRoot%2A> jak zablokować kolekcję przy użyciu właściwości podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="cf466-432">The following code example shows how to lock a collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="cf466-433">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-433">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="cf466-434">Poniższy przykład kodu pokazuje, jak zsynchronizować <xref:System.Collections.SortedList> obiekt, ustalić, <xref:System.Collections.SortedList> czy jest synchronizowany, i użyć zsynchronizowane <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-434">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.SortedList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-435">Klucz skojarzony z wartością do pobrania lub ustawienia.</span><span class="sxs-lookup"><span data-stu-id="cf466-435">The key associated with the value to get or set.</span></span></param>
        <summary><span data-ttu-id="cf466-436">Pobiera lub ustawia wartość skojarzoną z określonym kluczem w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-436">Gets or sets the value associated with a specific key in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-437">Wartość skojarzona z <paramref name="key" /> parametrem <see cref="T:System.Collections.SortedList" /> w obiekcie, jeśli <paramref name="key" /> zostanie znaleziona; w przeciwnym <see langword="null" />razie.</span><span class="sxs-lookup"><span data-stu-id="cf466-437">The value associated with the <paramref name="key" /> parameter in the <see cref="T:System.Collections.SortedList" /> object, if <paramref name="key" /> is found; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-438">Możesz użyć <xref:System.Collections.SortedList.Item%2A> właściwości, aby uzyskać dostęp do określonego elementu w kolekcji, określając następującą składnię: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="cf466-438">You can use the <xref:System.Collections.SortedList.Item%2A> property to access a specific element in a collection by specifying the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="cf466-439">Można także użyć tej właściwości do dodawania nowych elementów przez ustawienie wartości klucza, który nie istnieje w <xref:System.Collections.SortedList> obiekcie (na `myCollection["myNonexistentKey"] = myValue)`przykład.</span><span class="sxs-lookup"><span data-stu-id="cf466-439">You can also use this property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.SortedList> object (for example, `myCollection["myNonexistentKey"] = myValue)`.</span></span> <span data-ttu-id="cf466-440">Jeśli jednak określony klucz już istnieje w <xref:System.Collections.SortedList>, <xref:System.Collections.SortedList.Item%2A> ustawienie właściwości zastępuje starą wartość.</span><span class="sxs-lookup"><span data-stu-id="cf466-440">However, if the specified key already exists in the <xref:System.Collections.SortedList>, setting the <xref:System.Collections.SortedList.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="cf466-441">Z kolei <xref:System.Collections.SortedList.Add%2A> Metoda nie modyfikuje istniejących elementów.</span><span class="sxs-lookup"><span data-stu-id="cf466-441">In contrast, the <xref:System.Collections.SortedList.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="cf466-442">Klucz nie może być `null`, ale może być wartością.</span><span class="sxs-lookup"><span data-stu-id="cf466-442">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="cf466-443">Aby rozróżnić `null` wartość zwracaną, ponieważ określony klucz nie został znaleziony i `null` jest zwracany, ponieważ wartością określonego <xref:System.Collections.SortedList.Contains%2A> klucza jest `null`, użyj metody lub <xref:System.Collections.SortedList.ContainsKey%2A> metody, aby określić, czy klucz istnieje na liście.</span><span class="sxs-lookup"><span data-stu-id="cf466-443">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.SortedList.Contains%2A> method or the <xref:System.Collections.SortedList.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="cf466-444">Elementy a <xref:System.Collections.SortedList> są sortowane według kluczy zgodnie z określoną <xref:System.Collections.IComparer> implementacją określoną podczas <xref:System.Collections.SortedList> tworzenia lub zgodnie <xref:System.IComparable> z implementacją podaną przez same klucze.</span><span class="sxs-lookup"><span data-stu-id="cf466-444">The elements of a <xref:System.Collections.SortedList> are sorted by the keys either according to a specific <xref:System.Collections.IComparer> implementation specified when the <xref:System.Collections.SortedList> is created or according to the <xref:System.IComparable> implementation provided by the keys themselves.</span></span>  
  
 <span data-ttu-id="cf466-445">C# Język używa [`this`](~/docs/csharp/language-reference/keywords/this.md) słowa kluczowego do definiowania indeksatorów <xref:System.Collections.SortedList.Keys%2A> zamiast implementowania właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf466-445">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.SortedList.Keys%2A> property.</span></span> <span data-ttu-id="cf466-446">Visual Basic implementuje <xref:System.Collections.SortedList.Item%2A> jako właściwość domyślną, która zapewnia te same funkcje indeksowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-446">Visual Basic implements <xref:System.Collections.SortedList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="cf466-447">Pobieranie wartości tej właściwości jest operacją o (log `n`), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-447">Retrieving the value of this property is an O(log `n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span> <span data-ttu-id="cf466-448">Ustawienie właściwości jest operacją o (log `n`), jeśli klucz już znajduje się <xref:System.Collections.SortedList>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-448">Setting the property is an O(log `n`) operation if the key is already in the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="cf466-449">Jeśli klucz nie znajduje się na liście, ustawienie właściwości jest operacją o (`n`) dla danych niesortowanych lub O (log `n`), jeśli nowy element zostanie dodany na końcu listy.</span><span class="sxs-lookup"><span data-stu-id="cf466-449">If the key is not in the list, setting the property is an O(`n`) operation for unsorted data, or O(log `n`) if the new element is added at the end of the list.</span></span> <span data-ttu-id="cf466-450">Jeśli Wstaw powoduje zmianę rozmiaru, operacja ma wartość O (`n`).</span><span class="sxs-lookup"><span data-stu-id="cf466-450">If insertion causes a resize, the operation is O(`n`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-451"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-451"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-452">Właściwość jest ustawiona, a <see cref="T:System.Collections.SortedList" /> obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-452">The property is set and the <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="cf466-453">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-453">-or-</span></span> 
<span data-ttu-id="cf466-454">Właściwość jest ustawiona, <paramref name="key" /> nie istnieje w kolekcji <see cref="T:System.Collections.SortedList" /> i ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-454">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="cf466-455">Za mało dostępnej pamięci, aby dodać element do <see cref="T:System.Collections.SortedList" />elementu.</span><span class="sxs-lookup"><span data-stu-id="cf466-455">There is not enough available memory to add the element to the <see cref="T:System.Collections.SortedList" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cf466-456">Funkcja porównująca zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-456">The comparer throws an exception.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.SortedList.Contains(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.ContainsKey(System.Object)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-457">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-457">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.SortedList.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-458">Pobiera klucze w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-458">Gets the keys in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-459">Obiekt zawierający klucze <see cref="T:System.Collections.SortedList" /> w obiekcie. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="cf466-459">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-460">Obiekt jest widokiem tylko do odczytu kluczy <xref:System.Collections.SortedList> obiektu. <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="cf466-460">The <xref:System.Collections.ICollection> object is a read-only view of the keys of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-461">Modyfikacje wprowadzone do bazowego <xref:System.Collections.SortedList> są natychmiast odzwierciedlane <xref:System.Collections.ICollection>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-461">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="cf466-462">Elementy <xref:System.Collections.ICollection> są sortowane w tej samej kolejności co klucze <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-462">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the keys of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-463">Ta właściwość jest podobna do <xref:System.Collections.SortedList.GetKeyList%2A> metody, ale <xref:System.Collections.ICollection> zwraca obiekt zamiast <xref:System.Collections.IList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-463">This property is similar to the <xref:System.Collections.SortedList.GetKeyList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="cf466-464">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-464">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Values" />
        <altmember cref="M:System.Collections.SortedList.GetKeyList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-465">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-465">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="sortedList.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="cf466-466">Klucz elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="cf466-466">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="cf466-467">Usuwa element z określonym kluczem z <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-467">Removes the element with the specified key from a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-468">Jeśli obiekt nie zawiera elementu z określonym kluczem <xref:System.Collections.SortedList> , pozostaje niezmieniony. <xref:System.Collections.SortedList></span><span class="sxs-lookup"><span data-stu-id="cf466-468">If the <xref:System.Collections.SortedList> object does not contain an element with the specified key, the <xref:System.Collections.SortedList> remains unchanged.</span></span> <span data-ttu-id="cf466-469">Nie zgłoszono żadnego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="cf466-469">No exception is thrown.</span></span>  
  
 <span data-ttu-id="cf466-470">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="cf466-470">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="cf466-471">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="cf466-471">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="cf466-472">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="cf466-472">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="cf466-473">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-473">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-474">Poniższy przykład kodu pokazuje, jak usunąć elementy z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-474">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-475"><paramref name="key" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-475"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-476"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-476">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="cf466-477">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-477">-or-</span></span> 
<span data-ttu-id="cf466-478"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-478">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-479">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-479">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="sortedList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf466-480">Indeks (liczony od zera) elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="cf466-480">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="cf466-481">Usuwa element w określonym indeksie <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-481">Removes the element at the specified index of a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-482">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-482">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-483">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-483">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-484">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-484">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-485">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-485">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-486">W kolekcjach elementów sąsiadujących, takich jak listy, elementy znajdujące się po usuniętym elemencie są przenoszone do opuszczone.</span><span class="sxs-lookup"><span data-stu-id="cf466-486">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="cf466-487">Jeśli kolekcja jest indeksowana, indeksy przeniesionych elementów również są aktualizowane.</span><span class="sxs-lookup"><span data-stu-id="cf466-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="cf466-488">To zachowanie nie dotyczy kolekcji, w których elementy są pod względem koncepcyjnym pogrupowane w przedziały, np. tablic skrótów.</span><span class="sxs-lookup"><span data-stu-id="cf466-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="cf466-489">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-490">Poniższy przykład kodu pokazuje, jak usunąć elementy z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-490">The following code example shows how to remove elements from a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.RemoveAt Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.RemoveAt Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.RemoveAt Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-491"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-491"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-492">Jest <see cref="T:System.Collections.SortedList" /> tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-492">The <see cref="T:System.Collections.SortedList" /> is read-only.</span></span>  
  
<span data-ttu-id="cf466-493">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-493">-or-</span></span> 
<span data-ttu-id="cf466-494"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-494">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetByIndex">
      <MemberSignature Language="C#" Value="public virtual void SetByIndex (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetByIndex(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.SetByIndex(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetByIndex (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetByIndex(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetByIndex : int * obj -&gt; unit&#xA;override this.SetByIndex : int * obj -&gt; unit" Usage="sortedList.SetByIndex (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="cf466-495">Indeks (liczony od zera), który ma <paramref name="value" />zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="cf466-495">The zero-based index at which to save <paramref name="value" />.</span></span></param>
        <param name="value"><span data-ttu-id="cf466-496"><see cref="T:System.Object" /> Do zapisania<see cref="T:System.Collections.SortedList" /> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-496">The <see cref="T:System.Object" /> to save into the <see cref="T:System.Collections.SortedList" /> object.</span></span> <span data-ttu-id="cf466-497">Wartość może być <see langword="null" />równa.</span><span class="sxs-lookup"><span data-stu-id="cf466-497">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cf466-498">Zamienia wartość w określonym indeksie w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-498">Replaces the value at a specific index in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-499">Sekwencja indeksów jest oparta na sekwencji sortowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-499">The index sequence is based on the sort sequence.</span></span> <span data-ttu-id="cf466-500">Gdy element jest dodawany, jest wstawiany do <xref:System.Collections.SortedList> w poprawnej kolejności sortowania, a indeksowanie odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-500">When an element is added, it is inserted into <xref:System.Collections.SortedList> in the correct sort order, and the indexing adjusts accordingly.</span></span> <span data-ttu-id="cf466-501">Po usunięciu elementu indeksowanie również odpowiednio dostosowuje.</span><span class="sxs-lookup"><span data-stu-id="cf466-501">When an element is removed, the indexing also adjusts accordingly.</span></span> <span data-ttu-id="cf466-502">W związku z tym indeks określonej pary klucz/wartość może ulec zmianie, gdy elementy są dodawane lub usuwane z <xref:System.Collections.SortedList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-502">Therefore, the index of a specific key/value pair might change as elements are added or removed from the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-503">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-503">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-504">Poniższy przykład kodu pokazuje, jak zastąpić wartość istniejącego elementu w <xref:System.Collections.SortedList> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-504">The following code example shows how to replace the value of an existing element in a <xref:System.Collections.SortedList> object.</span></span>  
  
 [!code-cpp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.SetByIndex Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.SetByIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.SetByIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="cf466-505"><paramref name="index" />znajduje się poza zakresem prawidłowych indeksów dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-505"><paramref name="index" /> is outside the range of valid indexes for the <see cref="T:System.Collections.SortedList" /> object.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.IndexOfKey(System.Object)" />
        <altmember cref="M:System.Collections.SortedList.IndexOfValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.SortedList Synchronized (System.Collections.SortedList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.SortedList Synchronized(class System.Collections.SortedList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As SortedList) As SortedList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::SortedList ^ Synchronized(System::Collections::SortedList ^ list);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.SortedList -&gt; System.Collections.SortedList" Usage="System.Collections.SortedList.Synchronized list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.SortedList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.SortedList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="cf466-506"><see cref="T:System.Collections.SortedList" /> Obiekt do zsynchronizowania.</span><span class="sxs-lookup"><span data-stu-id="cf466-506">The <see cref="T:System.Collections.SortedList" /> object to synchronize.</span></span></param>
        <summary><span data-ttu-id="cf466-507">Zwraca zsynchronizowaną (z bezpiecznym wątkem) otokę dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-507">Returns a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <returns><span data-ttu-id="cf466-508">Wysynchronizowana (bezpieczny wątkowo) otoka dla <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-508">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.SortedList" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-509">Aby zagwarantować bezpieczeństwo <xref:System.Collections.SortedList> wątku obiektu, wszystkie operacje muszą odbywać się tylko za pomocą tej otoki.</span><span class="sxs-lookup"><span data-stu-id="cf466-509">To guarantee the thread safety of a <xref:System.Collections.SortedList> object, all operations must be done through this wrapper only.</span></span>  
  
 <span data-ttu-id="cf466-510">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-510">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf466-511">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="cf466-511">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf466-512">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-512">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-513">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.SortedList.SyncRoot%2A> właściwości podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="cf466-513">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="cf466-514">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-514">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="cf466-515">Poniższy przykład kodu pokazuje, jak zsynchronizować <xref:System.Collections.SortedList> obiekt, ustalić, <xref:System.Collections.SortedList> czy jest synchronizowany, i użyć zsynchronizowane <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-515">The following code example shows how to synchronize a <xref:System.Collections.SortedList> object, determine whether a <xref:System.Collections.SortedList> is synchronized, and use a synchronized <xref:System.Collections.SortedList>.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cf466-516"><paramref name="list" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="cf466-516"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="P:System.Collections.SortedList.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.SortedList.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-517">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-517">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-518">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.SortedList" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-518">An object that can be used to synchronize access to the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-519">Aby utworzyć zsynchronizowaną wersję <xref:System.Collections.SortedList> obiektu, <xref:System.Collections.SortedList.Synchronized%2A> Użyj metody.</span><span class="sxs-lookup"><span data-stu-id="cf466-519">To create a synchronized version of the <xref:System.Collections.SortedList> object, use the <xref:System.Collections.SortedList.Synchronized%2A> method.</span></span> <span data-ttu-id="cf466-520">Jednak klasy pochodne mogą zapewnić własną, <xref:System.Collections.SortedList> <xref:System.Collections.SortedList.SyncRoot%2A> zsynchronizowaną wersję właściwości.</span><span class="sxs-lookup"><span data-stu-id="cf466-520">However, derived classes can provide their own synchronized version of the <xref:System.Collections.SortedList> using the <xref:System.Collections.SortedList.SyncRoot%2A> property.</span></span> <span data-ttu-id="cf466-521">Kod synchronizacji musi wykonywać operacje na <xref:System.Collections.SortedList.SyncRoot%2A> <xref:System.Collections.SortedList> <xref:System.Collections.SortedList>, nie bezpośrednio w.</span><span class="sxs-lookup"><span data-stu-id="cf466-521">The synchronizing code must perform operations on the <xref:System.Collections.SortedList.SyncRoot%2A> of the <xref:System.Collections.SortedList>, not directly on the <xref:System.Collections.SortedList>.</span></span> <span data-ttu-id="cf466-522">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="cf466-522">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="cf466-523">W celu zapewnienia odpowiedniej synchronizacji z innymi wątkami, które mogą jednocześnie modyfikować <xref:System.Collections.SortedList> obiekt.</span><span class="sxs-lookup"><span data-stu-id="cf466-523">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.SortedList> object.</span></span>  
  
 <span data-ttu-id="cf466-524">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-524">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf466-525">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="cf466-525">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf466-526">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-526">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-527">Poniższy przykład kodu pokazuje, jak zablokować kolekcję przy użyciu <xref:System.Collections.SortedList.SyncRoot%2A> właściwości podczas całego wyliczania.</span><span class="sxs-lookup"><span data-stu-id="cf466-527">The following code example shows how to lock the collection using the <xref:System.Collections.SortedList.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic SortedList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="cf466-528">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-528">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.SortedList.IsSynchronized" />
        <altmember cref="M:System.Collections.SortedList.Synchronized(System.Collections.SortedList)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-529">Zwraca wartość <see cref="T:System.Collections.SortedList" />, która wykonuje iterację przez. <see cref="T:System.Collections.IEnumerator" /></span><span class="sxs-lookup"><span data-stu-id="cf466-529">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.SortedList" />.</span></span></summary>
        <returns><span data-ttu-id="cf466-530"><see cref="T:System.Collections.IEnumerator" /> Dla .<see cref="T:System.Collections.SortedList" /></span><span class="sxs-lookup"><span data-stu-id="cf466-530">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.SortedList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-531">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="cf466-531">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cf466-532">Instrukcja języka(`for each` w Visual Basic) ukrywa złożoność modułów wyliczających. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="cf466-532">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="cf466-533">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="cf466-533">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="cf466-534">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="cf466-534">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="cf466-535">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-535">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="cf466-536"><xref:System.Collections.IEnumerator.Reset%2A>przywraca również moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="cf466-536"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="cf466-537">W tym miejscu wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-537">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="cf466-538">W związku z tym przed <xref:System.Collections.IEnumerator.MoveNext%2A> przeczytaniem <xref:System.Collections.IEnumerator.Current%2A>wartości parametru należy wywołać metodę wyliczającą do pierwszego elementu kolekcji.</span><span class="sxs-lookup"><span data-stu-id="cf466-538">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="cf466-539"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="cf466-539"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="cf466-540"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="cf466-540"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="cf466-541">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="cf466-541">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="cf466-542">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="cf466-542">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="cf466-543">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócone `false`, wywołanie <xref:System.Collections.IEnumerator.Current%2A> zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="cf466-543">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="cf466-544">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-544">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="cf466-545">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="cf466-545">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="cf466-546">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie lub usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniony i następne wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> wygeneruje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="cf466-546">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="cf466-547">Jeśli kolekcja zostanie zmodyfikowana między <xref:System.Collections.IEnumerator.MoveNext%2A> i <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> zwraca element, który jest ustawiony na, nawet jeśli moduł wyliczający jest już unieważniony.</span><span class="sxs-lookup"><span data-stu-id="cf466-547">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="cf466-548">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="cf466-548">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="cf466-549">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="cf466-549">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="cf466-550">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="cf466-550">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="cf466-551">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-551">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.SortedList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberSignature Language="F#" Value="abstract member TrimToSize : unit -&gt; unit&#xA;override this.TrimToSize : unit -&gt; unit" Usage="sortedList.TrimToSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cf466-552">Ustawia pojemność na rzeczywistą liczbę elementów w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-552">Sets the capacity to the actual number of elements in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-553">Tej metody można użyć do zminimalizowania obciążenia pamięci kolekcji, jeśli do kolekcji nie zostaną dodane żadne nowe elementy.</span><span class="sxs-lookup"><span data-stu-id="cf466-553">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="cf466-554">Aby zresetować <xref:System.Collections.SortedList> obiekt do stanu początkowego, należy <xref:System.Collections.SortedList.Clear%2A> wywołać metodę przed wywołaniem <xref:System.Collections.SortedList.TrimToSize%2A>metody.</span><span class="sxs-lookup"><span data-stu-id="cf466-554">To reset a <xref:System.Collections.SortedList> object to its initial state, call the <xref:System.Collections.SortedList.Clear%2A> method before calling <xref:System.Collections.SortedList.TrimToSize%2A>.</span></span> <span data-ttu-id="cf466-555">Przycinanie pustego <xref:System.Collections.SortedList> zestawu ustawia pojemność <xref:System.Collections.SortedList> do pojemności domyślnej.</span><span class="sxs-lookup"><span data-stu-id="cf466-555">Trimming an empty <xref:System.Collections.SortedList> sets the capacity of the <xref:System.Collections.SortedList> to the default capacity.</span></span>  
  
 <span data-ttu-id="cf466-556">Ta metoda jest operacją o`n`(), gdzie `n` is <xref:System.Collections.SortedList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="cf466-556">This method is an O(`n`) operation, where `n` is <xref:System.Collections.SortedList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cf466-557">Poniższy przykład kodu pokazuje, jak przyciąć nieużywane fragmenty <xref:System.Collections.SortedList> obiektu i jak wyczyścić jego wartości.</span><span class="sxs-lookup"><span data-stu-id="cf466-557">The following code example shows how to trim the unused portions of a <xref:System.Collections.SortedList> object and how to clear its values.</span></span>  
  
 [!code-cpp[Classic SortedList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SortedList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic SortedList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SortedList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cf466-558"><see cref="T:System.Collections.SortedList" /> Obiekt jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="cf466-558">The <see cref="T:System.Collections.SortedList" /> object is read-only.</span></span>  
  
<span data-ttu-id="cf466-559">—lub—</span><span class="sxs-lookup"><span data-stu-id="cf466-559">-or-</span></span> 
<span data-ttu-id="cf466-560"><see cref="T:System.Collections.SortedList" /> Ma stały rozmiar.</span><span class="sxs-lookup"><span data-stu-id="cf466-560">The <see cref="T:System.Collections.SortedList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.SortedList.Clear" />
        <altmember cref="P:System.Collections.SortedList.Capacity" />
        <altmember cref="P:System.Collections.SortedList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.SortedList.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.SortedList.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cf466-561">Pobiera wartości w <see cref="T:System.Collections.SortedList" /> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="cf466-561">Gets the values in a <see cref="T:System.Collections.SortedList" /> object.</span></span></summary>
        <value><span data-ttu-id="cf466-562">Obiekt zawierający wartości <see cref="T:System.Collections.SortedList" /> w obiekcie. <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="cf466-562">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.SortedList" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cf466-563">Obiekt jest widokiem tylko do odczytu wartości <xref:System.Collections.SortedList> obiektu. <xref:System.Collections.ICollection></span><span class="sxs-lookup"><span data-stu-id="cf466-563">The <xref:System.Collections.ICollection> object is a read-only view of the values of the <xref:System.Collections.SortedList> object.</span></span> <span data-ttu-id="cf466-564">Modyfikacje wprowadzone do bazowego <xref:System.Collections.SortedList> są natychmiast odzwierciedlane <xref:System.Collections.ICollection>w.</span><span class="sxs-lookup"><span data-stu-id="cf466-564">Modifications made to the underlying <xref:System.Collections.SortedList> are immediately reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="cf466-565">Elementy elementu <xref:System.Collections.ICollection> są sortowane w tej samej kolejności, co wartości <xref:System.Collections.SortedList>.</span><span class="sxs-lookup"><span data-stu-id="cf466-565">The elements of the <xref:System.Collections.ICollection> are sorted in the same order as the values of the <xref:System.Collections.SortedList>.</span></span>  
  
 <span data-ttu-id="cf466-566">Ta właściwość jest podobna do <xref:System.Collections.SortedList.GetValueList%2A> metody, ale <xref:System.Collections.ICollection> zwraca obiekt zamiast <xref:System.Collections.IList> obiektu.</span><span class="sxs-lookup"><span data-stu-id="cf466-566">This property is similar to the <xref:System.Collections.SortedList.GetValueList%2A> method, but returns an <xref:System.Collections.ICollection> object instead of an <xref:System.Collections.IList> object.</span></span>  
  
 <span data-ttu-id="cf466-567">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="cf466-567">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.SortedList.Keys" />
        <altmember cref="M:System.Collections.SortedList.GetValueList" />
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations-in-collections.md"><span data-ttu-id="cf466-568">Wykonywanie niezależnych od kultury operacji na ciągach w kolekcjach</span><span class="sxs-lookup"><span data-stu-id="cf466-568">Performing Culture-Insensitive String Operations in Collections</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
