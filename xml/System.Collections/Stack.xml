<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Stack.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b364bfdec5920f343b57c572dbfbe97d9389647b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b364bfdec5920f343b57c572dbfbe97d9389647b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Stack">
          <source>Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</source>
          <target state="translated">Reprezentuje proste nierodzajową (LIFO) ostatnich w pierwszym poza kolekcję obiektów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>For the generic version of this collection, see <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Ogólny wersję tej kolekcji, zobacz <ph id="ph1">&lt;xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> jest liczba elementów <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required through reallocation.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, automatycznie zostaje zwiększona wydajność co jest wymagane przez; Ponowna alokacja.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is less than the capacity of the stack, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> jest mniejsza niż pojemność stosu, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>If the capacity needs to be increased to accommodate the new element, <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Jeśli trzeba nowego elementu, można zwiększyć pojemność <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> staje się O (<ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> Operacja O(1) jest.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> akceptuje <ph id="ph2">`null`</ph> jako prawidłowa wartość i umożliwia zduplikowane elementy.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>The following example shows how to create and add values to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> and how to display its values.</source>
          <target state="translated">Poniższy przykład przedstawia sposób tworzenia i Dodaj wartości w <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> i sposób wyświetlania wartości.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Public static (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> in Visual Basic) members of this type are thread safe.</source>
          <target state="translated">Publiczne statyczne (<ph id="ph1">&lt;see langword="Shared" /&gt;</ph> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Stack">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Collections.Stack">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that is empty and has the default initial capacity.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> klasy, która jest pusty i ma początkowej wydajności domyślnej.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor">
          <source>This constructor is an O(1) operation.</source>
          <target state="translated">Ten konstruktor jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to copy elements from.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> Aby skopiować elementy z.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> klasy, która zawiera elementów kopiowanych z określonej kolekcji i ma tego samego początkowej pojemności niż liczba elementów kopiowanych.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>The elements are copied onto the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> in the same order they are read by the <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> of the <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane na <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> w tej samej kolejności odczytywania ich przez <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> z <ph id="ph3">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is the number of elements in <ph id="ph3">`col`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest liczba elementów w <ph id="ph3">`col`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="col" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="col" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>The initial number of elements that the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> can contain.</source>
          <target state="translated">Początkowa liczba elementów który <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> może zawierać.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> klasy, która jest pusty i określonej pojemności początkowej lub początkowa pojemność domyślny, w zależności od jest większa.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>The capacity of a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> can hold.</source>
          <target state="translated">Pojemność <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> jest liczba elementów który <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>As elements are added to a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, the capacity is automatically increased as required by reallocating the internal array.</source>
          <target state="translated">Po dodaniu elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, automatycznie zostaje zwiększona wydajność zgodnie z żądaniem ponowne przydzielanie tablicy wewnętrznej.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Jeśli rozmiar kolekcji można oszacować, określając początkowa pojemność eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source>This constructor is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">`initialCapacity`</ph>.</source>
          <target state="translated">Ten konstruktor jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">`initialCapacity`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.#ctor(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="initialCapacity" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clear">
          <source>Removes all objects from the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Usuwa wszystkie obiekty z <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is set to zero, and references to other objects from elements of the collection are also released.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> jest ustawiany na zero, a ponadto są również zwalniane odwołania do innych obiektów z elementów kolekcji.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clear">
          <source>The following example shows how to clear the values of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład pokazuje, jak można wyczyścić wartości <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clone">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Tworzy kopię pobieżną <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Clone">
          <source>A shallow copy of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Kopia pobieżna <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</source>
          <target state="translated">Kopię pobieżną kolekcji kopiuje elementy kolekcji, czy znajdują się odwołania typy lub wartości, ale nie kopiuje obiektów, które dotyczą odwołania.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>The references in the new collection point to the same objects that the references in the original collection point to.</source>
          <target state="translated">Odwołania do nowej kolekcji wskazują te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</source>
          <target state="translated">Z kolei głęboką kopię kolekcji kopiuje elementy i wszystkich bezpośrednio lub pośrednio odwołuje się elementów.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Clone">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Obiekt do zlokalizowania w <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>Determines whether an element is in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Określa, czy element jest <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is found in the <ph id="ph3">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, jeśli <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> znajduje się w <ph id="ph3">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>This method determines equality by calling the <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Ta metoda określa równości, wywołując <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>This method performs a linear search; therefore, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda wykonuje wyszukiwanie liniowe; w związku z tym ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method tests for equality by passing the <ph id="ph1">`obj`</ph> argument to the <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> method of individual objects in the collection.</source>
          <target state="translated">Począwszy od programu .NET Framework 2.0, ta metoda sprawdza równości przez przekazanie <ph id="ph1">`obj`</ph> argument <ph id="ph2">&lt;xref:System.Object.Equals%2A&gt;</ph> metody pojedyncze obiekty w kolekcji.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method of the <ph id="ph2">`obj`</ph> argument.</source>
          <target state="translated">We wcześniejszych wersjach programu .NET Framework, oznaczanie został utworzony przy użyciu przekazywanie poszczególnych elementów w kolekcji do <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> metody <ph id="ph2">`obj`</ph> argumentu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Jednowymiarowa <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> który jest miejscem docelowym elementów kopiowanych z <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> Musi mieć indeksowania liczony od zera.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Liczony od zera indeks w <bpt id="p1">&lt;c&gt;</bpt>tablicy<ept id="p1">&lt;/c&gt;</ept> od rozpoczyna się kopiowanie które.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to an existing one-dimensional <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at the specified array index.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> do istniejącej jednowymiarowej tablicy <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, rozpoczynając od określonego indeksu tablicy.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane na tablicy w kolejności (LIFO) ostatnich w pierwszym poza, podobne polecenie elementów zwróconych przez kolejne wywołania <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">Poniższy przykład przedstawia sposób kopiowania <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> do tablicą jednowymiarową.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> jest mniejsza od zera.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> jest wielowymiarowy.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów w źródle <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> jest większa niż dostępne miejsce od <ph id="ph2">&lt;paramref name="index" /&gt;</ph> do końca tablicy docelowej <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Typ źródła <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> nie można automatycznie rzutować na typ docelowy <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.Count">
          <source>Gets the number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Pobiera liczbę elementów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The number of elements contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Liczba elementów zawartych w <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The capacity is the number of elements that the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> can store.</source>
          <target state="translated">Liczba elementów jest pojemność który <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> może przechowywać.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> jest to liczba elementów, które są rzeczywiście w <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>The capacity is always greater than or equal to <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Pojemność zawsze jest większa niż lub równa <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> przekracza pojemność podczas dodawania elementów, pojemność jest automatycznie zwiększany o ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starych elementów i dodawanie nowych elementów.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.Count">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> dla <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> Dla <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic, C#]</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Instrukcji języka C# (<ph id="ph2">`for each`</ph> w języku Visual Basic) ukrywa złożoność wyliczenia.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
          <target state="translated">W związku z tym przy użyciu <ph id="ph1">`foreach`</ph> jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> również wprowadzono moduł wyliczający wróć do tej pozycji.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>At this position, <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">W tym miejscu <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">W związku z tym należy wywołać <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> można poprawić modułu wyliczającego pierwszy element do kolekcji przed odczytywania wartości <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> zwraca ten sam obiekt do momentu <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> Ustawia <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> do następnego elementu.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwraca <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwracają również <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">Jeśli przez ostatnie wywołanie <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> jest niezdefiniowana.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Aby ustawić <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> aby pierwszym elementem kolekcji ponownie, należy wywołać <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> następuje <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.GetEnumerator">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Pobiera wartość wskazującą czy uzyskują dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> jest synchronizowane (wielowątkowość).</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph>, if access to the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, jeśli dostęp do <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> jest synchronizowane (wielowątkowość); w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, all operations must be done through the wrapper returned by the <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, wszystkie operacje muszą być wykonywane przez otoki zwrócony przez <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.IsSynchronized">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, ustal, czy <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>Returns the object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> without removing it.</source>
          <target state="translated">Zwraca obiekt, w górnej części <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> bez usuwania go.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> at the top of the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> w górnej części <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Ta metoda jest podobna do <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph> metody, ale <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> nie modyfikuje <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> może zostać umieszczony na <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> jako symbolu zastępczego, jeśli to konieczne.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>To distinguish between a null value and the end of the stack, check the <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> property or catch the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> is empty.</source>
          <target state="translated">Aby odróżnić od wartości null końcu stosu, sprawdź <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> właściwości lub catch <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, który jest zgłaszany, gdy <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> jest pusta.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Peek">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, usuń elementy z <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, lub wyświetlić element na początku <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Peek">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> Jest pusta.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>Removes and returns the object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Usuwa i zwraca obiekt, w górnej części <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> removed from the top of the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Usunięte z góry <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> method, but <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> does not modify the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Ta metoda jest podobna do <ph id="ph1">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> metody, ale <ph id="ph2">&lt;xref:System.Collections.Stack.Peek%2A&gt;</ph> nie modyfikuje <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> może zostać umieszczony na <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> jako symbolu zastępczego, jeśli to konieczne.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>To distinguish between a null value and the end of the stack, check the <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> property or catch the <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, which is thrown when the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> is empty.</source>
          <target state="translated">Aby odróżnić od wartości null końcu stosu, sprawdź <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> właściwości lub catch <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>, który jest zgłaszany, gdy <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph> jest pusta.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Pop">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, usuń elementy z <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, lub wyświetlić element na początku <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Pop">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> Jest pusta.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to push onto the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Do przekazania do <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wartość może być <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>Inserts an object at the top of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Wstawia obiektu w górnej części <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> already equals the capacity, the capacity of the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> jest już równa pojemności pojemność <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> zwiększa się o automatyczne ponowne przydzielanie tablicy wewnętrznej, a istniejące elementy są kopiowane do nowej tablicy przed dodaniem nowego elementu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source><ph id="ph1">`null`</ph> can be pushed onto the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> as a placeholder, if needed.</source>
          <target state="translated"><ph id="ph1">`null`</ph> może zostać umieszczony na <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> jako symbolu zastępczego, jeśli to konieczne.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>It occupies a slot in the stack and is treated like any object.</source>
          <target state="translated">Zajmuje miejsca na stosie, a jest traktowany jak inne obiekty.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> is less than the capacity of the stack, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> is an O(1) operation.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph> jest mniejsza niż pojemność stosu, <ph id="ph2">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>If the capacity needs to be increased to accommodate the new element, <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> becomes an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Jeśli trzeba nowego elementu, można zwiększyć pojemność <ph id="ph1">&lt;xref:System.Collections.Stack.Push%2A&gt;</ph> staje się O (<ph id="ph2">`n`</ph>) operację, której <ph id="ph3">`n`</ph> jest <ph id="ph4">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Push(System.Object)">
          <source>The following example shows how to add elements to the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, remove elements from the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, or view the element at the top of the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób dodawania elementów do <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, usuń elementy z <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, lub wyświetlić element na początku <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to synchronize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> Do synchronizacji.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Returns a synchronized (thread safe) wrapper for the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Zwraca zsynchronizowany otoki (wielowątkowość) dla <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>A synchronized wrapper around the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Zsynchronizowane otokę <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>To guarantee the thread safety of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, all operations must be done through this wrapper.</source>
          <target state="translated">W celu zagwarantowania bezpieczeństwa wątków <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, wszystkie operacje muszą być wykonywane przez tę otokę.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>This method is an O(1) operation.</source>
          <target state="translated">Ta metoda jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source>The following example shows how to synchronize a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, determine if a <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> is synchronized, and use a synchronized <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Poniższy przykład przedstawia sposób synchronizacji <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, ustal, czy <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph> jest synchronizowane i użyj zsynchronizowany <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.Synchronized(System.Collections.Stack)">
          <source><ph id="ph1">&lt;paramref name="stack" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stack" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Collections.Stack.SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Pobiera obiekt, który może służyć do synchronizujący dostęp do <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be used to synchronize access to the <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Można zsynchronizować dostęp do <ph id="ph2">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>To create a synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> method.</source>
          <target state="translated">Aby utworzyć zsynchronizowaną wersję <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph>, użyj <ph id="ph2">&lt;xref:System.Collections.Stack.Synchronized%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> using the <ph id="ph2">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> przy użyciu <ph id="ph2">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, not directly on the <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</source>
          <target state="translated">Synchronizowanie kodu musi wykonywać operacje <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> z <ph id="ph2">&lt;xref:System.Collections.Stack&gt;</ph>, nie są bezpośrednio w <ph id="ph3">&lt;xref:System.Collections.Stack&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> object.</source>
          <target state="translated">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>The following code example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> during the entire enumeration.</source>
          <target state="translated">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <ph id="ph1">&lt;xref:System.Collections.Stack.SyncRoot%2A&gt;</ph> podczas całej wyliczenia.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Stack.SyncRoot">
          <source>Retrieving the value of this property is an O(1) operation.</source>
          <target state="translated">Pobieranie wartości tej właściwości jest operacją O(1).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.ToArray">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> to a new array.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph> do nowej tablicy.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Stack.ToArray">
          <source>A new array containing copies of the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</source>
          <target state="translated">Nowe tablica zawierająca kopie elementów <ph id="ph1">&lt;see cref="T:System.Collections.Stack" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</source>
          <target state="translated">Elementy są kopiowane na tablicy w kolejności (LIFO) ostatnich w pierwszym poza, podobne polecenie elementów zwróconych przez kolejne wywołania <ph id="ph1">&lt;xref:System.Collections.Stack.Pop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</source>
          <target state="translated">Ta metoda jest O (<ph id="ph1">`n`</ph>) operację, której <ph id="ph2">`n`</ph> jest <ph id="ph3">&lt;xref:System.Collections.Stack.Count%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Stack.ToArray">
          <source>The following example shows how to copy a <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> into a one-dimensional array.</source>
          <target state="translated">Poniższy przykład przedstawia sposób kopiowania <ph id="ph1">&lt;xref:System.Collections.Stack&gt;</ph> do tablicą jednowymiarową.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>