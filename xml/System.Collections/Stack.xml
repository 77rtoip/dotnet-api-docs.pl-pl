<Type Name="Stack" FullName="System.Collections.Stack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e52fd777b1e5cc88d2a91ddd6b9534b882b7d478" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48772365" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Stack : ICloneable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Stack extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Stack" />
  <TypeSignature Language="VB.NET" Value="Public Class Stack&#xA;Implements ICloneable, ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stack : ICloneable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type Stack = class&#xA;    interface ICollection&#xA;    interface ICloneable&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Stack/StackDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="fcd2f-101">Reprezentuje proste ostatni wejściu — pierwszy na wyjściu (LIFO) nieogólna kolekcja obiektów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-101">Represents a simple last-in-first-out (LIFO) non-generic collection of objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-102">Ogólny wersję tej kolekcji, zobacz <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-102">For the generic version of this collection, see <xref:System.Collections.Generic.Stack%601?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fcd2f-103">Pojemność <xref:System.Collections.Stack> jest liczba elementów, które <xref:System.Collections.Stack> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-103">The capacity of a <xref:System.Collections.Stack> is the number of elements the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="fcd2f-104">Gdy elementy są dodawane do <xref:System.Collections.Stack>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami za pośrednictwem ponownej alokacji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-104">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="fcd2f-105">Jeśli <xref:System.Collections.Stack.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Stack.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-105">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fcd2f-106">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Stack.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-106">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="fcd2f-107"><xref:System.Collections.Stack.Pop%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-107"><xref:System.Collections.Stack.Pop%2A> is an O(1) operation.</span></span>  
  
 <span data-ttu-id="fcd2f-108"><xref:System.Collections.Stack> akceptuje `null` jako prawidłowa wartość i umożliwia zduplikowane elementy.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-108"><xref:System.Collections.Stack> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-109">Poniższy przykład pokazuje, jak utworzyć i dodać wartości do <xref:System.Collections.Stack> i sposób wyświetlania wartości.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-109">The following example shows how to create and add values to a <xref:System.Collections.Stack> and how to display its values.</span></span>  
  
 [!code-cpp[Classic Stack Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack Example/CS/source.cs#1)]
 [!code-vb[Classic Stack Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="fcd2f-110">Publiczne statyczne (<see langword="Shared" /> w języku Visual Basic) elementy członkowskie tego typu są bezpieczne dla wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-110">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="fcd2f-111">Wystąpienia elementów członkowskich nie dają gwarancji bezpieczeństwa wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-111">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="fcd2f-112">Aby zagwarantować bezpieczeństwo wątków z <see cref="T:System.Collections.Stack" />, wszystkie operacje musi odbywać się przy użyciu otoki zwrócony przez <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> metody.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-112">To guarantee the thread safety of the <see cref="T:System.Collections.Stack" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" /> method.</span>
      </span>
      <span data-ttu-id="fcd2f-113">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-113">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="fcd2f-114">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-114">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="fcd2f-115">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fcd2f-115">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Collections.Generic.Stack`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Stack" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-116">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Stack" /> klasę, która jest pusta i ma pojemność domyślna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-117">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-118">Pojemność <xref:System.Collections.Stack> jest liczba elementów, <xref:System.Collections.Stack> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-118">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="fcd2f-119">Gdy elementy są dodawane do <xref:System.Collections.Stack>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-119">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fcd2f-120">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-120">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-121">Ten konstruktor jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-121">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (System.Collections.ICollection col);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection col) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (col As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(System::Collections::ICollection ^ col);" />
      <MemberSignature Language="F#" Value="new System.Collections.Stack : System.Collections.ICollection -&gt; System.Collections.Stack" Usage="new System.Collections.Stack col" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="col" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="col">
          <span data-ttu-id="fcd2f-122">
            <see cref="T:System.Collections.ICollection" /> Można skopiować elementów z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-122">The <see cref="T:System.Collections.ICollection" /> to copy elements from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Stack" /> klasę, która zawiera elementy kopiowane z określonej kolekcji i ma ten sam pojemność jako liczba elementów kopiowanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-123">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that contains elements copied from the specified collection and has the same initial capacity as the number of elements copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-124">Pojemność <xref:System.Collections.Stack> jest liczba elementów, <xref:System.Collections.Stack> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-124">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="fcd2f-125">Gdy elementy są dodawane do <xref:System.Collections.Stack>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-125">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fcd2f-126">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-126">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-127">Elementy są kopiowane na <xref:System.Collections.Stack> w tej samej kolejności, które są odczytywane przez <xref:System.Collections.IEnumerator> z <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-127">The elements are copied onto the <xref:System.Collections.Stack> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="fcd2f-128">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest liczba elementów w `col`.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-128">This constructor is an O(`n`) operation, where `n` is the number of elements in `col`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fcd2f-129">
            <paramref name="col" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-129">
              <paramref name="col" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Stack (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Stack(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Stack : int -&gt; System.Collections.Stack" Usage="new System.Collections.Stack initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">
          <span data-ttu-id="fcd2f-130">Początkowa liczba elementów, <see cref="T:System.Collections.Stack" /> może zawierać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-130">The initial number of elements that the <see cref="T:System.Collections.Stack" /> can contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Collections.Stack" /> klasę, która jest pusta i ma określony pojemność lub pojemność początkową domyślną, która kwota jest większa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-131">Initializes a new instance of the <see cref="T:System.Collections.Stack" /> class that is empty and has the specified initial capacity or the default initial capacity, whichever is greater.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-132">Pojemność <xref:System.Collections.Stack> jest liczba elementów, <xref:System.Collections.Stack> może przechowywać.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-132">The capacity of a <xref:System.Collections.Stack> is the number of elements that the <xref:System.Collections.Stack> can hold.</span></span> <span data-ttu-id="fcd2f-133">Gdy elementy są dodawane do <xref:System.Collections.Stack>, pojemność jest automatycznie zwiększana zgodnie z wymaganiami relokacja wewnętrznego tablicy.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-133">As elements are added to a <xref:System.Collections.Stack>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="fcd2f-134">Jeśli rozmiar kolekcji można oszacować, określający początkowej pojemności eliminuje konieczność wykonania wielu operacji zmiany rozmiaru podczas dodawania elementów do <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-134">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-135">Ten konstruktor jest O (`n`) operacji, gdzie `n` jest `initialCapacity`.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-135">This constructor is an O(`n`) operation, where `n` is `initialCapacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fcd2f-136">
            <paramref name="initialCapacity" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-136">
              <paramref name="initialCapacity" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="stack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-137">Usuwa wszystkie obiekty z <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-137">Removes all objects from the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-138"><xref:System.Collections.Stack.Count%2A> jest równa zero i odwołania do innych obiektów z elementów kolekcji są również zwalniane.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-138"><xref:System.Collections.Stack.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="fcd2f-139">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-139">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-140">Poniższy przykład pokazuje, jak Wyczyść wartości <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-140">The following example shows how to clear the values of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="stack.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-141">Tworzy kopię pobieżną <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-141">Creates a shallow copy of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-142">Kopia pobieżna <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-142">A shallow copy of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-143">Płytka kopia elementu kolekcji kopiuje elementy kolekcji, czy typy odwołań i typy wartości, ale nie są kopiowane obiektów, które dotyczą odwołania.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-143">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="fcd2f-144">Odwołania do nowej kolekcji wskazują na te same obiekty, które wskazują odwołania w oryginalnej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-144">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="fcd2f-145">Z kolei kopię głęboką kolekcji kopiuje elementy i wszystko bezpośrednio lub pośrednio odwołuje się elementów.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-145">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="fcd2f-146">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-146">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="stack.Contains obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="fcd2f-147">Obiekt do zlokalizowania w <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-147">The object to locate in the <see cref="T:System.Collections.Stack" />.</span>
          </span>
          <span data-ttu-id="fcd2f-148">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-148">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-149">Określa, czy element jest <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-149">Determines whether an element is in the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-150">
            <see langword="true" />, jeśli <paramref name="obj" /> znajduje się w <see cref="T:System.Collections.Stack" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-150">
              <see langword="true" />, if <paramref name="obj" /> is found in the <see cref="T:System.Collections.Stack" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-151">Ta metoda określa równości, wywołując <xref:System.Object.Equals%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-151">This method determines equality by calling the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="fcd2f-152">Ta metoda przeprowadza wyszukiwanie liniowe; w związku z tym, ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-152">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
 <span data-ttu-id="fcd2f-153">Począwszy od programu .NET Framework 2.0, ta metoda sprawdza pod kątem równości, przekazując `obj` argument <xref:System.Object.Equals%2A> metoda poszczególnych obiektów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-153">Starting with the .NET Framework 2.0, this method tests for equality by passing the `obj` argument to the <xref:System.Object.Equals%2A> method of individual objects in the collection.</span></span> <span data-ttu-id="fcd2f-154">We wcześniejszych wersjach programu .NET Framework oznaczanie to było wykonywane przy użyciu przekazywania poszczególnych elementów w kolekcji, <xref:System.Object.Equals%2A> metody `obj` argumentu.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-154">In the earlier versions of the .NET Framework, this determination was made by using passing the individual items in the collection to the <xref:System.Object.Equals%2A> method of the `obj` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/globalization-localization/performing-culture-insensitive-string-operations.md">
          <span data-ttu-id="fcd2f-155">Wykonywanie niezależnych od kultury operacji na ciągach</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-155">Performing Culture-Insensitive String Operations</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="stack.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="fcd2f-156">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-156">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.Stack" />.</span>
          </span>
          <span data-ttu-id="fcd2f-157">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-157">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="fcd2f-158">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-158">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-159">Kopiuje <see cref="T:System.Collections.Stack" /> do istniejącej jednowymiarowej <see cref="T:System.Array" />, rozpoczynając od określonego indeksu tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-159">Copies the <see cref="T:System.Collections.Stack" /> to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-160">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-160">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fcd2f-161">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-161">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-162">Poniższy przykład pokazuje, jak skopiować <xref:System.Collections.Stack> na tablicę jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-162">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fcd2f-163">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-163">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="fcd2f-164">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-164">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fcd2f-165">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-165">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="fcd2f-166">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-166">-or-</span>
          </span>
          <span data-ttu-id="fcd2f-167">Liczba elementów w źródle <see cref="T:System.Collections.Stack" /> jest większa niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-167">The number of elements in the source <see cref="T:System.Collections.Stack" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="fcd2f-168">Typ źródła <see cref="T:System.Collections.Stack" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-168">The type of the source <see cref="T:System.Collections.Stack" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Stack.ToArray" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Stack.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-169">Pobiera liczbę elementów znajdujących się w <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-169">Gets the number of elements contained in the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fcd2f-170">Liczba elementów zawartych w słowniku <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-170">The number of elements contained in the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-171">Pojemność jest liczba elementów, <xref:System.Collections.Stack> mogą być przechowywane.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-171">The capacity is the number of elements that the <xref:System.Collections.Stack> can store.</span></span> <span data-ttu-id="fcd2f-172"><xref:System.Collections.Stack.Count%2A> jest to liczba elementów, które są rzeczywiście w <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-172"><xref:System.Collections.Stack.Count%2A> is the number of elements that are actually in the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-173">Pojemność jest zawsze większa lub równa <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-173">The capacity is always greater than or equal to <xref:System.Collections.Stack.Count%2A>.</span></span> <span data-ttu-id="fcd2f-174">Jeśli <xref:System.Collections.Stack.Count%2A> przekracza pojemność podczas dodawania elementów, pojemność jest automatycznie zwiększana przez ponowne przydzielanie tablicy wewnętrznej przed skopiowaniem starymi elementami i dodawanie nowych elementów.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-174">If <xref:System.Collections.Stack.Count%2A> exceeds the capacity while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="fcd2f-175">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-175">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="stack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-176">Zwraca <see cref="T:System.Collections.IEnumerator" /> dla <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-176">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-177">
            <see cref="T:System.Collections.IEnumerator" /> Dla <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-177">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-178">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="fcd2f-178">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="fcd2f-179">`foreach` Instrukcja języka C# (`for each` w języku Visual Basic) powoduje ukrycie złożoności modułów wyliczających.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-179">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="fcd2f-180">W związku z tym, za pomocą `foreach` jest to zalecane, zamiast bezpośredniego wykonywania operacji modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-180">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="fcd2f-181">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-181">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="fcd2f-182">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-182">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="fcd2f-183"><xref:System.Collections.IEnumerator.Reset%2A> Przełącza moduł wyliczający do tej pozycji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-183"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="fcd2f-184">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-184">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fcd2f-185">W związku z tym, należy wywołać <xref:System.Collections.IEnumerator.MoveNext%2A> do wyprzedzeniem modułu wyliczającego do pierwszego elementu kolekcji przed odczytaniem wartości właściwości <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-185">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="fcd2f-186"><xref:System.Collections.IEnumerator.Current%2A> zwraca ten sam obiekt, do momentu <xref:System.Collections.IEnumerator.MoveNext%2A> lub <xref:System.Collections.IEnumerator.Reset%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-186"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="fcd2f-187"><xref:System.Collections.IEnumerator.MoveNext%2A> Ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-187"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="fcd2f-188">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przebiegów koniec kolekcji, moduł wyliczający jest umieszczany za ostatnim elementem w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-188">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="fcd2f-189">Gdy moduł wyliczający jest w tym miejscu, kolejne wywołania <xref:System.Collections.IEnumerator.MoveNext%2A> również zwracać `false`.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-189">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="fcd2f-190">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> zwrócił `false`, <xref:System.Collections.IEnumerator.Current%2A> jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-190">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="fcd2f-191">Aby ustawić <xref:System.Collections.IEnumerator.Current%2A> do pierwszego elementu w kolekcji ponownie wywołaj <xref:System.Collections.IEnumerator.Reset%2A> następuje <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-191">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="fcd2f-192">Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-192">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="fcd2f-193">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-193">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="fcd2f-194">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-194">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="fcd2f-195">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-195">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="fcd2f-196">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-196">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="fcd2f-197">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-197">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Stack.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-198">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.Stack" /> jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-198">Gets a value indicating whether access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fcd2f-199">
            <see langword="true" />, jeśli dostęp do <see cref="T:System.Collections.Stack" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-199">
              <see langword="true" />, if access to the <see cref="T:System.Collections.Stack" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="fcd2f-200">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-200">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-201">Aby zagwarantować bezpieczeństwo wątków z <xref:System.Collections.Stack>, wszystkie operacje musi odbywać się przy użyciu otoki zwrócony przez <xref:System.Collections.Stack.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-201">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through the wrapper returned by the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="fcd2f-202">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-202">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fcd2f-203">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-203">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fcd2f-204">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-204">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fcd2f-205">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.Stack.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-205">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="fcd2f-206">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-206">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-207">Poniższy przykład pokazuje, jak synchronizować <xref:System.Collections.Stack>, ustal, czy <xref:System.Collections.Stack> jest zsynchronizowana, a następnie użyj zsynchronizowany <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-207">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual object Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; obj&#xA;override this.Peek : unit -&gt; obj" Usage="stack.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-208">Zwraca obiekt, w górnej części <see cref="T:System.Collections.Stack" /> bez usuwania go.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-208">Returns the object at the top of the <see cref="T:System.Collections.Stack" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-209">
            <see cref="T:System.Object" /> w górnej części <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-209">The <see cref="T:System.Object" /> at the top of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-210">Ta metoda jest podobna do <xref:System.Collections.Stack.Pop%2A> metody, ale <xref:System.Collections.Stack.Peek%2A> nie modyfikuje <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-210">This method is similar to the <xref:System.Collections.Stack.Pop%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-211">`null` może zostać wypchnięty na <xref:System.Collections.Stack> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-211">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="fcd2f-212">Aby rozróżnić wartości null i koniec stosu, zapoznaj się z <xref:System.Collections.Stack.Count%2A> właściwości ani catch <xref:System.InvalidOperationException>, który jest generowany, gdy <xref:System.Collections.Stack> jest pusty.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-212">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="fcd2f-213">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-213">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-214">Poniższy przykład pokazuje, jak dodać elementy do <xref:System.Collections.Stack>, usuń elementy z <xref:System.Collections.Stack>, lub wyświetlić element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-214">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fcd2f-215">
            <see cref="T:System.Collections.Stack" /> Jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-215">The <see cref="T:System.Collections.Stack" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Stack.Pop" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public virtual object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Pop();" />
      <MemberSignature Language="F#" Value="abstract member Pop : unit -&gt; obj&#xA;override this.Pop : unit -&gt; obj" Usage="stack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-216">Usuwa i zwraca obiekt, w górnej części <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-216">Removes and returns the object at the top of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-217">
            <see cref="T:System.Object" /> Usunięta z początku <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-217">The <see cref="T:System.Object" /> removed from the top of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-218">Ta metoda jest podobna do <xref:System.Collections.Stack.Peek%2A> metody, ale <xref:System.Collections.Stack.Peek%2A> nie modyfikuje <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-218">This method is similar to the <xref:System.Collections.Stack.Peek%2A> method, but <xref:System.Collections.Stack.Peek%2A> does not modify the <xref:System.Collections.Stack>.</span></span>  
  
 <span data-ttu-id="fcd2f-219">`null` może zostać wypchnięty na <xref:System.Collections.Stack> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-219">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="fcd2f-220">Aby rozróżnić wartości null i koniec stosu, zapoznaj się z <xref:System.Collections.Stack.Count%2A> właściwości ani catch <xref:System.InvalidOperationException>, który jest generowany, gdy <xref:System.Collections.Stack> jest pusty.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-220">To distinguish between a null value and the end of the stack, check the <xref:System.Collections.Stack.Count%2A> property or catch the <xref:System.InvalidOperationException>, which is thrown when the <xref:System.Collections.Stack> is empty.</span></span>  
  
 <span data-ttu-id="fcd2f-221">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-221">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-222">Poniższy przykład pokazuje, jak dodać elementy do <xref:System.Collections.Stack>, usuń elementy z <xref:System.Collections.Stack>, lub wyświetlić element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-222">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fcd2f-223">
            <see cref="T:System.Collections.Stack" /> Jest pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-223">The <see cref="T:System.Collections.Stack" /> is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Push(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public virtual void Push (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Push(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Push (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Push(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Push : obj -&gt; unit&#xA;override this.Push : obj -&gt; unit" Usage="stack.Push obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="fcd2f-224">
            <see cref="T:System.Object" /> Do przekazania <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-224">The <see cref="T:System.Object" /> to push onto the <see cref="T:System.Collections.Stack" />.</span>
          </span>
          <span data-ttu-id="fcd2f-225">Wartość może być <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-225">The value can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-226">Wstawienie obiektu w górnej części <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-226">Inserts an object at the top of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-227">Jeśli <xref:System.Collections.Stack.Count%2A> jest już równa pojemności pojemność <xref:System.Collections.Stack> jest zwiększana o automatyczne ponowne przydzielanie tablicy wewnętrznej i istniejące elementy są kopiowane do nowej tablicy, przed dodaniem nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-227">If <xref:System.Collections.Stack.Count%2A> already equals the capacity, the capacity of the <xref:System.Collections.Stack> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="fcd2f-228">`null` może zostać wypchnięty na <xref:System.Collections.Stack> jako symbol zastępczy, jeśli to konieczne.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-228">`null` can be pushed onto the <xref:System.Collections.Stack> as a placeholder, if needed.</span></span> <span data-ttu-id="fcd2f-229">On zajmuje miejsce w stosie i jest traktowany jak inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-229">It occupies a slot in the stack and is treated like any object.</span></span>  
  
 <span data-ttu-id="fcd2f-230">Jeśli <xref:System.Collections.Stack.Count%2A> jest mniejsza niż pojemność stosu, <xref:System.Collections.Stack.Push%2A> jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-230">If <xref:System.Collections.Stack.Count%2A> is less than the capacity of the stack, <xref:System.Collections.Stack.Push%2A> is an O(1) operation.</span></span> <span data-ttu-id="fcd2f-231">Jeśli pojemność musi zostać zwiększona, aby pomieścić nowy element <xref:System.Collections.Stack.Push%2A> staje się O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-231">If the capacity needs to be increased to accommodate the new element, <xref:System.Collections.Stack.Push%2A> becomes an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-232">Poniższy przykład pokazuje, jak dodać elementy do <xref:System.Collections.Stack>, usuń elementy z <xref:System.Collections.Stack>, lub wyświetlić element w górnej części <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-232">The following example shows how to add elements to the <xref:System.Collections.Stack>, remove elements from the <xref:System.Collections.Stack>, or view the element at the top of the <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.Peek Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.Peek Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.Peek Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.Peek Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.Peek Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.Peek" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Stack Synchronized (System.Collections.Stack stack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Stack Synchronized(class System.Collections.Stack stack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.Synchronized(System.Collections.Stack)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Stack ^ Synchronized(System::Collections::Stack ^ stack);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Stack -&gt; System.Collections.Stack" Usage="System.Collections.Stack.Synchronized stack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stack" Type="System.Collections.Stack" />
      </Parameters>
      <Docs>
        <param name="stack">
          <span data-ttu-id="fcd2f-233">
            <see cref="T:System.Collections.Stack" /> Do synchronizacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-233">The <see cref="T:System.Collections.Stack" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fcd2f-234">Zwraca zsynchronizowany otoki (wątkowo) dla <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-234">Returns a synchronized (thread safe) wrapper for the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-235">Synchronizacja otokę wokół <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-235">A synchronized wrapper around the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-236">Aby zagwarantować bezpieczeństwo wątków z <xref:System.Collections.Stack>, wszystkie operacje muszą być wykonywane przez tę otokę.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-236">To guarantee the thread safety of the <xref:System.Collections.Stack>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="fcd2f-237">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-237">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fcd2f-238">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-238">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fcd2f-239">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-239">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fcd2f-240">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.Stack.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-240">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="fcd2f-241">Ta metoda jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-241">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-242">Poniższy przykład pokazuje, jak synchronizować <xref:System.Collections.Stack>, ustal, czy <xref:System.Collections.Stack> jest zsynchronizowana, a następnie użyj zsynchronizowany <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-242">The following example shows how to synchronize a <xref:System.Collections.Stack>, determine if a <xref:System.Collections.Stack> is synchronized, and use a synchronized <xref:System.Collections.Stack>.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fcd2f-243">
            <paramref name="stack" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-243">
              <paramref name="stack" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Stack.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Stack.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-244">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-244">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fcd2f-245">
            <see cref="T:System.Object" /> Który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-245">An <see cref="T:System.Object" /> that can be used to synchronize access to the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-246">Aby utworzyć zsynchronizowaną wersję <xref:System.Collections.Stack>, użyj <xref:System.Collections.Stack.Synchronized%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-246">To create a synchronized version of the <xref:System.Collections.Stack>, use the <xref:System.Collections.Stack.Synchronized%2A> method.</span></span> <span data-ttu-id="fcd2f-247">Klasy pochodne może jednak zapewniać własne zsynchronizowaną wersję <xref:System.Collections.Stack> przy użyciu <xref:System.Collections.Stack.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-247">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Stack> using the <xref:System.Collections.Stack.SyncRoot%2A> property.</span></span> <span data-ttu-id="fcd2f-248">Synchronizowanie kodu należy wykonywać operacje na <xref:System.Collections.Stack.SyncRoot%2A> z <xref:System.Collections.Stack>, nie są bezpośrednio w <xref:System.Collections.Stack>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-248">The synchronizing code must perform operations on the <xref:System.Collections.Stack.SyncRoot%2A> of the <xref:System.Collections.Stack>, not directly on the <xref:System.Collections.Stack>.</span></span> <span data-ttu-id="fcd2f-249">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-249">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="fcd2f-250">W szczególności utrzymuje właściwe synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie <xref:System.Collections.Stack> obiektu.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-250">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Stack> object.</span></span>  
  
 <span data-ttu-id="fcd2f-251">Wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-251">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="fcd2f-252">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-252">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="fcd2f-253">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-253">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="fcd2f-254">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.Stack.SyncRoot%2A> podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-254">The following code example shows how to lock the collection using the <xref:System.Collections.Stack.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Stack.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic Stack.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="fcd2f-255">Pobieranie wartości tej właściwości jest operacją O(1).</span><span class="sxs-lookup"><span data-stu-id="fcd2f-255">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Stack.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; obj[]&#xA;override this.ToArray : unit -&gt; obj[]" Usage="stack.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fcd2f-256">Kopiuje <see cref="T:System.Collections.Stack" /> do nowej tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-256">Copies the <see cref="T:System.Collections.Stack" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fcd2f-257">Nową tablicę zawierającą kopiuje elementy <see cref="T:System.Collections.Stack" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fcd2f-257">A new array containing copies of the elements of the <see cref="T:System.Collections.Stack" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcd2f-258">Elementy są kopiowane na tablicy ostatni wejściu — pierwszy na wyjściu (LIFO) kolejno zbliżona do kolejności elementów zwróconych przez kolejne wywołania <xref:System.Collections.Stack.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-258">The elements are copied onto the array in last-in-first-out (LIFO) order, similar to the order of the elements returned by a succession of calls to <xref:System.Collections.Stack.Pop%2A>.</span></span>  
  
 <span data-ttu-id="fcd2f-259">Ta metoda jest O (`n`) operacji, gdzie `n` jest <xref:System.Collections.Stack.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-259">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Stack.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcd2f-260">Poniższy przykład pokazuje, jak skopiować <xref:System.Collections.Stack> na tablicę jednowymiarową.</span><span class="sxs-lookup"><span data-stu-id="fcd2f-260">The following example shows how to copy a <xref:System.Collections.Stack> into a one-dimensional array.</span></span>  
  
 [!code-cpp[Classic Stack.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Stack.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Stack.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Stack.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Stack.CopyTo(System.Array,System.Int32)" />
        <altmember cref="M:System.Collections.Stack.Pop" />
      </Docs>
    </Member>
  </Members>
</Type>