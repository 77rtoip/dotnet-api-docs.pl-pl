<Type Name="IEnumerable" FullName="System.Collections.IEnumerable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f319b2dfd452956a57bc8b41c7ee94dc979255b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69351817" /></Metadata><TypeSignature Language="C#" Value="public interface IEnumerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IEnumerable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnumerable" />
  <TypeSignature Language="F#" Value="type IEnumerable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("496B0ABE-CDEE-11d3-88E8-00902754C43A")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23404-101">Udostępnia moduł wyliczający, który obsługuje prostą iterację w kolekcji nieogólnej.</span><span class="sxs-lookup"><span data-stu-id="23404-101">Exposes an enumerator, which supports a simple iteration over a non-generic collection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23404-102"><xref:System.Collections.IEnumerable>jest interfejsem podstawowym dla wszystkich nieogólnych kolekcji, które mogą być wyliczane.</span><span class="sxs-lookup"><span data-stu-id="23404-102"><xref:System.Collections.IEnumerable> is the base interface for all non-generic collections that can be enumerated.</span></span> <span data-ttu-id="23404-103">W przypadku ogólnej wersji tego interfejsu zobacz <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="23404-103">For the generic version of this interface see <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>.</span></span> <span data-ttu-id="23404-104"><xref:System.Collections.IEnumerable>zawiera pojedynczą metodę, <xref:System.Collections.IEnumerable.GetEnumerator%2A>która <xref:System.Collections.IEnumerator>zwraca.</span><span class="sxs-lookup"><span data-stu-id="23404-104"><xref:System.Collections.IEnumerable> contains a single method, <xref:System.Collections.IEnumerable.GetEnumerator%2A>, which returns an <xref:System.Collections.IEnumerator>.</span></span> <span data-ttu-id="23404-105"><xref:System.Collections.IEnumerator>zapewnia możliwość wykonywania iteracji przez kolekcję przez ujawnienie <xref:System.Collections.IEnumerator.Current%2A> właściwości <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A> metod.</span><span class="sxs-lookup"><span data-stu-id="23404-105"><xref:System.Collections.IEnumerator> provides the ability to iterate through the collection by exposing a <xref:System.Collections.IEnumerator.Current%2A> property and <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span>  
  
 <span data-ttu-id="23404-106">Najlepszym rozwiązaniem jest wdrożenie <xref:System.Collections.IEnumerable> i <xref:System.Collections.IEnumerator> włączenie klas `foreach` kolekcji w celu włączenia składni (`For Each` w Visual Basic), jednak implementacja <xref:System.Collections.IEnumerable> nie jest wymagana.</span><span class="sxs-lookup"><span data-stu-id="23404-106">It is a best practice to implement <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> on your collection classes to enable the `foreach` (`For Each` in Visual Basic) syntax, however implementing <xref:System.Collections.IEnumerable> is not required.</span></span> <span data-ttu-id="23404-107">Jeśli kolekcja nie jest zaimplementowana <xref:System.Collections.IEnumerable>, należy nadal postępować zgodnie z wzorcem iteratora, `GetEnumerator` dostarczając metodę, która zwraca interfejs, klasę lub strukturę.</span><span class="sxs-lookup"><span data-stu-id="23404-107">If your collection does not implement <xref:System.Collections.IEnumerable>, you must still follow the iterator pattern to support this syntax by providing a `GetEnumerator` method that returns an interface, class or struct.</span></span> <span data-ttu-id="23404-108">W przypadku korzystania z Visual Basic należy podać <xref:System.Collections.IEnumerator> implementację, która jest zwracana przez. `GetEnumerator`</span><span class="sxs-lookup"><span data-stu-id="23404-108">When using Visual Basic, you must provide an <xref:System.Collections.IEnumerator> implementation, which is returned by `GetEnumerator`.</span></span> <span data-ttu-id="23404-109">Podczas tworzenia przy C# użyciu programu należy dostarczyć klasę, która zawiera `Current` `Reset` właściwość, `MoveNext` i metody zgodnie z opisem przez <xref:System.Collections.IEnumerator>, ale Klasa nie musi implementować <xref:System.Collections.IEnumerator>.</span><span class="sxs-lookup"><span data-stu-id="23404-109">When developing with C# you must provide a class that contains a `Current` property, and `MoveNext` and `Reset` methods as described by <xref:System.Collections.IEnumerator>, but the class does not have to implement <xref:System.Collections.IEnumerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23404-110">Poniższy przykład kodu demonstruje najlepsze rozwiązanie do iterowania kolekcji niestandardowej przez implementację <xref:System.Collections.IEnumerable> interfejsów i. <xref:System.Collections.IEnumerator></span><span class="sxs-lookup"><span data-stu-id="23404-110">The following code example demonstrates the best practice for iterating a custom collection by implementing the <xref:System.Collections.IEnumerable> and <xref:System.Collections.IEnumerator> interfaces.</span></span> <span data-ttu-id="23404-111">W tym przykładzie elementy członkowskie tych interfejsów nie są jawnie wywoływane, ale są zaimplementowane do obsługi użycia `foreach` (`For Each` w Visual Basic) do iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="23404-111">In this example, members of these interfaces are not explicitly called, but they are implemented to support the use of `foreach` (`For Each` in Visual Basic) to iterate through the collection.</span></span> <span data-ttu-id="23404-112">Ten przykład to kompletna Aplikacja konsolowa.</span><span class="sxs-lookup"><span data-stu-id="23404-112">This example is a complete Console app.</span></span> <span data-ttu-id="23404-113">Aby skompilować aplikację Visual Basic, Zmień **obiekt startowy** na **Sub Main** na stronie **Właściwości** projektu.</span><span class="sxs-lookup"><span data-stu-id="23404-113">To compile the Visual Basic app, change the **Startup object** to **Sub Main** in the project's **Properties** page.</span></span>  
  
 <span data-ttu-id="23404-114">Aby uzyskać przykład, który pokazuje, jak zaimplementować <xref:System.Collections.IEnumerable> interfejs, zobacz [implementowanie interfejsu IEnumerable w klasie kolekcji](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</span><span class="sxs-lookup"><span data-stu-id="23404-114">For a sample that shows how to implement the <xref:System.Collections.IEnumerable> interface, see [Implementing the IEnumerable Interface in a Collection Class](https://code.msdn.microsoft.com/Implementing-the-e1708a24)</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
    <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="23404-115">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="23404-115">Iterators (C# and Visual Basic)</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/Implementing-the-e1708a24"><span data-ttu-id="23404-116">Implementowanie interfejsu IEnumerable w klasie kolekcji</span><span class="sxs-lookup"><span data-stu-id="23404-116">Implementing the IEnumerable Interface in a Collection Class</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IEnumerable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="iEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.DispId(-4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23404-117">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="23404-117">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="23404-118"><see cref="T:System.Collections.IEnumerator" /> Obiekt, którego można użyć do iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="23404-118">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23404-119">Instrukcja języka(`For Each` w Visual Basic) ukrywa złożoność modułów wyliczających. C# `foreach`</span><span class="sxs-lookup"><span data-stu-id="23404-119">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="23404-120">W związku z `foreach` tym zaleca się użycie zamiast bezpośredniego manipulowania modułem wyliczającym.</span><span class="sxs-lookup"><span data-stu-id="23404-120">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="23404-121">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="23404-121">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="23404-122">Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="23404-122">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="23404-123"><xref:System.Collections.IEnumerator.Reset%2A> Metoda również przywraca moduł wyliczający z powrotem do tego położenia.</span><span class="sxs-lookup"><span data-stu-id="23404-123">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span>  <span data-ttu-id="23404-124">W tym miejscu <xref:System.Collections.IEnumerator.Current%2A> właściwość jest niezdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="23404-124">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="23404-125">W związku z tym, należy <xref:System.Collections.IEnumerator.MoveNext%2A> wywołać metodę, aby wykonać przechodzenie modułu wyliczającego do pierwszego elementu kolekcji przed odczytem <xref:System.Collections.IEnumerator.Current%2A>wartości.</span><span class="sxs-lookup"><span data-stu-id="23404-125">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="23404-126"><xref:System.Collections.IEnumerator.Current%2A>zwraca ten sam obiekt do <xref:System.Collections.IEnumerator.MoveNext%2A> momentu <xref:System.Collections.IEnumerator.Reset%2A> wywołania metody lub.</span><span class="sxs-lookup"><span data-stu-id="23404-126"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="23404-127"><xref:System.Collections.IEnumerator.MoveNext%2A>ustawia <xref:System.Collections.IEnumerator.Current%2A> do następnego elementu.</span><span class="sxs-lookup"><span data-stu-id="23404-127"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="23404-128">Jeśli <xref:System.Collections.IEnumerator.MoveNext%2A> przekazuje koniec kolekcji, moduł wyliczający jest umieszczony po ostatnim elemencie w kolekcji i <xref:System.Collections.IEnumerator.MoveNext%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="23404-128">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="23404-129">Gdy moduł wyliczający znajduje się w tym miejscu, kolejne <xref:System.Collections.IEnumerator.MoveNext%2A> wywołania również `false`zwracają.</span><span class="sxs-lookup"><span data-stu-id="23404-129">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="23404-130">Jeśli ostatnie wywołanie <xref:System.Collections.IEnumerator.MoveNext%2A> funkcji `false` <xref:System.Collections.IEnumerator.Current%2A> return nie jest zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="23404-130">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="23404-131">Aby ponownie <xref:System.Collections.IEnumerator.Current%2A> ustawić na pierwszy element kolekcji, możesz wywołać metodę <xref:System.Collections.IEnumerator.Reset%2A> i <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="23404-131">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="23404-132">Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodawanie, modyfikowanie lub usuwanie elementów, zachowanie modułu wyliczającego jest niezdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="23404-132">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>  
  
 <span data-ttu-id="23404-133">Moduł wyliczający nie ma wyłącznego dostępu do kolekcji, w związku z tym wyliczanie w kolekcji nie jest wewnętrznie procedurą odporną na wielowątkowość.</span><span class="sxs-lookup"><span data-stu-id="23404-133">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="23404-134">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania.</span><span class="sxs-lookup"><span data-stu-id="23404-134">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="23404-135">Aby zezwolić wielu wątkom na dostęp do kolekcji w celu odczytu i zapisu danych, należy zaimplementować własny mechanizm synchronizacji.</span><span class="sxs-lookup"><span data-stu-id="23404-135">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23404-136">Poniższy przykład kodu demonstruje implementację <xref:System.Collections.IEnumerable> interfejsów dla kolekcji niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="23404-136">The following code example demonstrates the implementation of the <xref:System.Collections.IEnumerable> interfaces for a custom collection.</span></span> <span data-ttu-id="23404-137">W tym przykładzie <xref:System.Collections.IEnumerable.GetEnumerator%2A> nie jest jawnie wywoływana, ale jest zaimplementowany do obsługi `foreach` (`For Each` w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="23404-137">In this example, <xref:System.Collections.IEnumerable.GetEnumerator%2A> is not explicitly called, but it is implemented to support the use of `foreach` (`For Each` in Visual Basic).</span></span> <span data-ttu-id="23404-138">Ten przykład kodu jest częścią większego przykładu dla <xref:System.Collections.IEnumerable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="23404-138">This code example is part of a larger example for the <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 [!code-csharp[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/cs/ienumerator.cs#1)]
 [!code-vb[System.Collections_EnumeratorInterfaces#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections_EnumeratorInterfaces/vb/ienumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <related type="Article" href="https://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7"><span data-ttu-id="23404-139">Iteratory (C# i Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="23404-139">Iterators (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
