<Type Name="IDataServiceMetadataProvider" FullName="System.Data.Services.Providers.IDataServiceMetadataProvider">
  <TypeSignature Language="C#" Value="public interface IDataServiceMetadataProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataServiceMetadataProvider" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Providers.IDataServiceMetadataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataServiceMetadataProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataServiceMetadataProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f8026-101">Obsługuje metadane dotyczące dostawcy usług danych niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="f8026-101">Maintains metadata about a custom data service provider.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ContainerName">
      <MemberSignature Language="C#" Value="public string ContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8026-102">Nazwa kontenera dla źródła danych.</span><span class="sxs-lookup"><span data-stu-id="f8026-102">Container name for the data source.</span></span></summary>
        <value><span data-ttu-id="f8026-103">Ciąg zawierający nazwę kontenera.</span><span class="sxs-lookup"><span data-stu-id="f8026-103">String that contains the name of the container.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerNamespace">
      <MemberSignature Language="C#" Value="public string ContainerNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContainerNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContainerNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8026-104">Namespace nazwa źródła danych.</span><span class="sxs-lookup"><span data-stu-id="f8026-104">Namespace name for the data source.</span></span></summary>
        <value><span data-ttu-id="f8026-105">Ciąg zawierający nazwę przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="f8026-105">String that contains the namespace name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDerivedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt; GetDerivedTypes (System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceType&gt; GetDerivedTypes(class System.Data.Services.Providers.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ GetDerivedTypes(System::Data::Services::Providers::ResourceType ^ resourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
      </Parameters>
      <Docs>
        <param name="resourceType"><span data-ttu-id="f8026-106">Podstawowym <see cref="T:System.Data.Services.Providers.ResourceType" />.</span><span class="sxs-lookup"><span data-stu-id="f8026-106">The base <see cref="T:System.Data.Services.Providers.ResourceType" />.</span></span></param>
        <summary><span data-ttu-id="f8026-107">Próbuje zwrócić wszystkie typy, które pochodzą z określonego typu zasobu.</span><span class="sxs-lookup"><span data-stu-id="f8026-107">Attempts to return all types that derive from the specified resource type.</span></span></summary>
        <returns><span data-ttu-id="f8026-108"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Pochodnych Kolekcja <see cref="T:System.Data.Services.Providers.ResourceType" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="f8026-108">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of derived <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8026-109"><xref:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes%2A> Metoda musi zwracać kolekcję wszystkich jego typów pochodnych `resourceType`.</span><span class="sxs-lookup"><span data-stu-id="f8026-109">The <xref:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes%2A> method must return a collection of all the types derived from `resourceType`.</span></span>  
  
 <span data-ttu-id="f8026-110">Typ przekazany do metody, przy użyciu `resourceType` parametru nie musi zostać zwrócona w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="f8026-110">The type passed to the method by using the `resourceType` parameter must not be returned in the collection.</span></span>  
  
 <span data-ttu-id="f8026-111">Realizator z <xref:System.Data.Services.Providers.IDataServiceMetadataProvider> interfejs musi zwracać wartość null, gdy żaden z typów pochodzą z podanego typu.</span><span class="sxs-lookup"><span data-stu-id="f8026-111">An implementer of the <xref:System.Data.Services.Providers.IDataServiceMetadataProvider> interface must return a null value when no types are derived from the supplied type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceAssociationSet">
      <MemberSignature Language="C#" Value="public System.Data.Services.Providers.ResourceAssociationSet GetResourceAssociationSet (System.Data.Services.Providers.ResourceSet resourceSet, System.Data.Services.Providers.ResourceType resourceType, System.Data.Services.Providers.ResourceProperty resourceProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.Services.Providers.ResourceAssociationSet GetResourceAssociationSet(class System.Data.Services.Providers.ResourceSet resourceSet, class System.Data.Services.Providers.ResourceType resourceType, class System.Data.Services.Providers.ResourceProperty resourceProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Services::Providers::ResourceAssociationSet ^ GetResourceAssociationSet(System::Data::Services::Providers::ResourceSet ^ resourceSet, System::Data::Services::Providers::ResourceType ^ resourceType, System::Data::Services::Providers::ResourceProperty ^ resourceProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Services.Providers.ResourceAssociationSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceSet" Type="System.Data.Services.Providers.ResourceSet" />
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
        <Parameter Name="resourceProperty" Type="System.Data.Services.Providers.ResourceProperty" />
      </Parameters>
      <Docs>
        <param name="resourceSet"><span data-ttu-id="f8026-112">Zestaw zasobów końca źródłowego skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="f8026-112">Resource set of the source association end.</span></span></param>
        <param name="resourceType"><span data-ttu-id="f8026-113">Typ zasobu końca źródłowego skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="f8026-113">Resource type of the source association end.</span></span></param>
        <param name="resourceProperty"><span data-ttu-id="f8026-114">Właściwość zasobów końca źródłowego skojarzenia.</span><span class="sxs-lookup"><span data-stu-id="f8026-114">Resource property of the source association end.</span></span></param>
        <summary><span data-ttu-id="f8026-115">Pobiera <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> wystąpienia, gdy punkt końcowy źródła.</span><span class="sxs-lookup"><span data-stu-id="f8026-115">Gets the <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance when given the source association end.</span></span></summary>
        <returns><span data-ttu-id="f8026-116">A <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="f8026-116">A <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDerivedTypes">
      <MemberSignature Language="C#" Value="public bool HasDerivedTypes (System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasDerivedTypes(class System.Data.Services.Providers.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasDerivedTypes(System::Data::Services::Providers::ResourceType ^ resourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType" />
      </Parameters>
      <Docs>
        <param name="resourceType"><span data-ttu-id="f8026-117">A <see cref="T:System.Data.Services.Providers.ResourceType" /> obiekt do obliczenia.</span><span class="sxs-lookup"><span data-stu-id="f8026-117">A <see cref="T:System.Data.Services.Providers.ResourceType" /> object to evaluate.</span></span></param>
        <summary><span data-ttu-id="f8026-118">Określa, czy typ zasobu ma typów pochodnych.</span><span class="sxs-lookup"><span data-stu-id="f8026-118">Determines whether a resource type has derived types.</span></span></summary>
        <returns>
          <span data-ttu-id="f8026-119"><see langword="true" /> gdy <paramref name="resourceType" /> reprezentuje jednostkę, która ma pochodnych typów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8026-119"><see langword="true" /> when <paramref name="resourceType" /> represents an entity that has derived types; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceSets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceSet&gt; ResourceSets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceSet&gt; ResourceSets" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResourceSets As IEnumerable(Of ResourceSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceSet ^&gt; ^ ResourceSets { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceSet ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceSet&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8026-120">Pobiera wszystkie dostępne kontenery.</span><span class="sxs-lookup"><span data-stu-id="f8026-120">Gets all available containers.</span></span></summary>
        <value><span data-ttu-id="f8026-121"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Kolekcja <see cref="T:System.Data.Services.Providers.ResourceSet" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="f8026-121">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceSet" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ServiceOperation&gt; ServiceOperations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ServiceOperation&gt; ServiceOperations" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceOperations As IEnumerable(Of ServiceOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ServiceOperation ^&gt; ^ ServiceOperations { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ServiceOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ServiceOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8026-122">Zwraca wszystkie operacje usług w tym źródle danych.</span><span class="sxs-lookup"><span data-stu-id="f8026-122">Returns all the service operations in this data source.</span></span></summary>
        <value><span data-ttu-id="f8026-123"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Kolekcja <see cref="T:System.Data.Services.Providers.ServiceOperation" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="f8026-123">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ServiceOperation" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveResourceSet">
      <MemberSignature Language="C#" Value="public bool TryResolveResourceSet (string name, out System.Data.Services.Providers.ResourceSet resourceSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveResourceSet(string name, [out] class System.Data.Services.Providers.ResourceSet&amp; resourceSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveResourceSet (name As String, ByRef resourceSet As ResourceSet) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveResourceSet(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ResourceSet ^ % resourceSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceSet" Type="System.Data.Services.Providers.ResourceSet&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f8026-124">Nazwa <see cref="T:System.Data.Services.Providers.ResourceSet" /> do rozpoznania.</span><span class="sxs-lookup"><span data-stu-id="f8026-124">Name of the <see cref="T:System.Data.Services.Providers.ResourceSet" /> to resolve.</span></span></param>
        <param name="resourceSet"><span data-ttu-id="f8026-125">Zwraca zestaw zasobów lub <see langword="null" /> wartość, jeśli zasób z danym <c>nazwa</c> nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="f8026-125">Returns the resource set or a <see langword="null" /> value if a resource set with the given <c>name</c> is not found.</span></span></param>
        <summary><span data-ttu-id="f8026-126">Próbuje pobrać zestaw zasobów w oparciu o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="f8026-126">Tries to get a resource set based on the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="f8026-127"><see langword="true" /> zasób skonfigurowane przy użyciu danego <paramref name="name" /> zostanie odnaleziony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8026-127"><see langword="true" /> when resource set with the given <paramref name="name" /> is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveResourceType">
      <MemberSignature Language="C#" Value="public bool TryResolveResourceType (string name, out System.Data.Services.Providers.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveResourceType(string name, [out] class System.Data.Services.Providers.ResourceType&amp; resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveResourceType (name As String, ByRef resourceType As ResourceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveResourceType(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ResourceType ^ % resourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="resourceType" Type="System.Data.Services.Providers.ResourceType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f8026-128">Nazwa typu w celu rozwiązania.</span><span class="sxs-lookup"><span data-stu-id="f8026-128">Name of the type to resolve.</span></span></param>
        <param name="resourceType"><span data-ttu-id="f8026-129">Zwraca typ zasobu lub <see langword="null" /> wartość, gdy typ zasobu z danym <c>nazwa</c> nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="f8026-129">Returns the resource type or a <see langword="null" /> value if a resource type with the given <c>name</c> is not found.</span></span></param>
        <summary><span data-ttu-id="f8026-130">Próbuje pobrać typu zasobu na podstawie określonej nazwy.</span><span class="sxs-lookup"><span data-stu-id="f8026-130">Tries to get a resource type based on the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="f8026-131"><see langword="true" /> Jeśli typ zasobu z danym <paramref name="name" /> zostanie odnaleziony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8026-131"><see langword="true" /> when resource type with the given <paramref name="name" /> is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveServiceOperation">
      <MemberSignature Language="C#" Value="public bool TryResolveServiceOperation (string name, out System.Data.Services.Providers.ServiceOperation serviceOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveServiceOperation(string name, [out] class System.Data.Services.Providers.ServiceOperation&amp; serviceOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveServiceOperation (name As String, ByRef serviceOperation As ServiceOperation) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryResolveServiceOperation(System::String ^ name, [Runtime::InteropServices::Out] System::Data::Services::Providers::ServiceOperation ^ % serviceOperation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="serviceOperation" Type="System.Data.Services.Providers.ServiceOperation&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="f8026-132">Nazwa operacji usługi, aby rozwiązać.</span><span class="sxs-lookup"><span data-stu-id="f8026-132">Name of the service operation to resolve.</span></span></param>
        <param name="serviceOperation"><span data-ttu-id="f8026-133">Zwraca operacji usługi lub <see langword="null" /> wartość, gdy operacja usługi z danym <c>nazwa</c> nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="f8026-133">Returns the service operation or a <see langword="null" /> value if a service operation with the given <c>name</c> is not found.</span></span></param>
        <summary><span data-ttu-id="f8026-134">Próbuje pobrać operacji usługi na podstawie określonej nazwy.</span><span class="sxs-lookup"><span data-stu-id="f8026-134">Tries to get a service operation based on the specified name.</span></span></summary>
        <returns>
          <span data-ttu-id="f8026-135"><see langword="true" /> gdy usługa operację z danym <paramref name="name" /> zostanie odnaleziony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8026-135"><see langword="true" /> when service operation with the given <paramref name="name" /> is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt; Types { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Services.Providers.ResourceType&gt; Types" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Providers.IDataServiceMetadataProvider.Types" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Types As IEnumerable(Of ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ Types { System::Collections::Generic::IEnumerable&lt;System::Data::Services::Providers::ResourceType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Services.Providers.ResourceType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8026-136">Zwraca wszystkie typy w tym źródle danych.</span><span class="sxs-lookup"><span data-stu-id="f8026-136">Returns all the types in this data source.</span></span></summary>
        <value><span data-ttu-id="f8026-137"><see cref="T:System.Collections.Generic.IEnumerable`1" /> Kolekcja <see cref="T:System.Data.Services.Providers.ResourceType" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="f8026-137">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>