<Type Name="ManipulationProcessor2D" FullName="System.Windows.Input.Manipulations.ManipulationProcessor2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23325cb1cfed6d36224a559440212534c9ddf78a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69173922" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationProcessor2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationProcessor2D extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationProcessor2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationProcessor2D" />
  <TypeSignature Language="F#" Value="type ManipulationProcessor2D = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bb361-101">Implementuje wielokrotne dane wyjściowe compositor pojedynczej generacji na potrzeby transformacji dwuwymiarowych (2-D) w współdzielonej przestrzeni współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="bb361-101">Implements a multiple-input, single-output compositor for two-dimensional (2-D) transformations in a shared coordinate space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb361-102"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> Obiekt traktuje zbiór obiektów manipulowanych jako obiekt złożony.</span><span class="sxs-lookup"><span data-stu-id="bb361-102">A <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D> object treats a collection of manipulators as a composite object.</span></span> <span data-ttu-id="bb361-103">Aplikacja zostaje następnie zwolniona z konieczności śledzenia i zarządzania indywidualnymi osobami.</span><span class="sxs-lookup"><span data-stu-id="bb361-103">Your application is then freed from the necessity of tracking and managing individual manipulators.</span></span>  
  
 <span data-ttu-id="bb361-104">Procesor manipulowania przez siebie nie powoduje, że element jest przenoszony.</span><span class="sxs-lookup"><span data-stu-id="bb361-104">A manipulation processor by itself does not cause an element to move.</span></span> <span data-ttu-id="bb361-105">Aplikacja rozpoczyna manipulowanie w razie potrzeby, a następnie otrzymuje informacje z procesora manipulowania przez nasłuchiwanie <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> zdarzeń i <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> .</span><span class="sxs-lookup"><span data-stu-id="bb361-105">Your application begins a manipulation as necessary, and then receives information from a manipulation processor by listening to the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started>, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta> and <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> events.</span></span> <span data-ttu-id="bb361-106">Wartości otrzymane za pośrednictwem tych zdarzeń umożliwiają zmianę lokalizacji, rozmiaru lub orientacji elementu w zależności od potrzeb.</span><span class="sxs-lookup"><span data-stu-id="bb361-106">The values received via these events enable you to change the location, size or orientation of an element as needed.</span></span>  
  
 <span data-ttu-id="bb361-107">Użytkownik informuje procesor manipulowania, które typy manipulacji są dozwolone (Przekształć, Skaluj, Obróć) przez ustawienie <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="bb361-107">You inform a manipulation processor which types of manipulations are allowed (translate, scale, rotate) by setting the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations%2A> property.</span></span> <span data-ttu-id="bb361-108">Następnie można zapewnić niewarunkową logikę transformacji elementu, który jest manipulowany.</span><span class="sxs-lookup"><span data-stu-id="bb361-108">You can then provide non-conditional logic to the transformation of the element that is being manipulated.</span></span> <span data-ttu-id="bb361-109">Na przykład zamiast sprawdzenia, czy rotacja jest włączona przed zmianą orientacji elementu, można bezwarunkowo zastosować współczynnik rotacji otrzymany z procesora manipulowania. Jeśli obrót nie jest włączony, procesor manipulowania zgłosi, że nie nastąpiła zmiana rotacyjna.</span><span class="sxs-lookup"><span data-stu-id="bb361-109">For instance, instead of checking if rotation is enabled before changing the orientation of an element, you can unconditionally apply the rotation factor received from the manipulation processor; if rotation is not enabled, the manipulation processor will report that no rotational change has occurred.</span></span>  
  
 <span data-ttu-id="bb361-110">Gdy element, który jest modyfikowany jest zwalniany (wszystkie manipulowania są usuwane), można użyć przetwarzania bezwładnościowego, aby symulować tarcie i spowodować stopniowe spowolnienie ruchów przed przejściem do zatrzymania.</span><span class="sxs-lookup"><span data-stu-id="bb361-110">When an element that is being manipulated is released (all manipulators are removed), you can use inertia processing to simulate friction and cause the element to gradually slow its movements before coming to a stop.</span></span> <span data-ttu-id="bb361-111">Aby uzyskać więcej informacji, <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="bb361-111">For more information see the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb361-112">Tworzy nowy <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="bb361-112">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D supportedManipulations" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="bb361-113">Początkowy zestaw obsługiwanych manipulacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-113">The initial set of supported manipulations.</span></span></param>
        <summary><span data-ttu-id="bb361-114">Tworzy nowy <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="bb361-114">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb361-115">Parametr nie jest prawidłową kombinacją <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> wartości wyliczenia. <paramref name="supportedManipulations" /></span><span class="sxs-lookup"><span data-stu-id="bb361-115">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationProcessor2D (System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, System.Windows.Input.Manipulations.ManipulationPivot2D pivot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Manipulations.Manipulations2D supportedManipulations, class System.Windows.Input.Manipulations.ManipulationPivot2D pivot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.#ctor(System.Windows.Input.Manipulations.Manipulations2D,System.Windows.Input.Manipulations.ManipulationPivot2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportedManipulations As Manipulations2D, pivot As ManipulationPivot2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationProcessor2D(System::Windows::Input::Manipulations::Manipulations2D supportedManipulations, System::Windows::Input::Manipulations::ManipulationPivot2D ^ pivot);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.Manipulations.ManipulationProcessor2D : System.Windows.Input.Manipulations.Manipulations2D * System.Windows.Input.Manipulations.ManipulationPivot2D -&gt; System.Windows.Input.Manipulations.ManipulationProcessor2D" Usage="new System.Windows.Input.Manipulations.ManipulationProcessor2D (supportedManipulations, pivot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportedManipulations" Type="System.Windows.Input.Manipulations.Manipulations2D" />
        <Parameter Name="pivot" Type="System.Windows.Input.Manipulations.ManipulationPivot2D" />
      </Parameters>
      <Docs>
        <param name="supportedManipulations"><span data-ttu-id="bb361-116">Początkowy zestaw obsługiwanych manipulacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-116">The initial set of supported manipulations.</span></span></param>
        <param name="pivot"><span data-ttu-id="bb361-117">Przestawianie informacji dla rotacji z pojedynczą manipulatorą.</span><span class="sxs-lookup"><span data-stu-id="bb361-117">Pivot information for single-manipulator rotations.</span></span></param>
        <summary><span data-ttu-id="bb361-118">Tworzy nowy <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="bb361-118">Creates a new <see cref="T:System.Windows.Input.Manipulations.ManipulationProcessor2D" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb361-119">Parametr nie jest prawidłową kombinacją <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> wartości wyliczenia. <paramref name="supportedManipulations" /></span><span class="sxs-lookup"><span data-stu-id="bb361-119">The <paramref name="supportedManipulations" /> parameter is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Event Completed As EventHandler(Of Manipulation2DCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DCompletedEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-120">Występuje w przypadku konkurowania manipulacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-120">Occurs when a manipulation has competed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteManipulation">
      <MemberSignature Language="C#" Value="public void CompleteManipulation (long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompleteManipulation(int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.CompleteManipulation(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompleteManipulation (timestamp As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompleteManipulation(long timestamp);" />
      <MemberSignature Language="F#" Value="member this.CompleteManipulation : int64 -&gt; unit" Usage="manipulationProcessor2D.CompleteManipulation timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="bb361-121">Sygnatura czasowa do zakończenia manipulowania w taktach 100-nanosekund.</span><span class="sxs-lookup"><span data-stu-id="bb361-121">The timestamp to complete the manipulation, in 100-nanosecond ticks.</span></span></param>
        <summary><span data-ttu-id="bb361-122">Wymusza bieżące manipulowanie i podnosi <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="bb361-122">Forces the current manipulation to complete and raises the <see cref="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb361-123">Sygnatura czasowa jest mniejsza niż poprzednia sygnatura czasowa bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-123">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; Delta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta" />
      <MemberSignature Language="VB.NET" Value="Public Event Delta As EventHandler(Of Manipulation2DDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DDeltaEventArgs ^&gt; ^ Delta;" />
      <MemberSignature Language="F#" Value="member this.Delta : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " Usage="member this.Delta : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-124">Występuje, gdy nastąpi zmiana źródła manipulowania lub gdy wystąpiło tłumaczenie, skalowanie lub obracanie.</span><span class="sxs-lookup"><span data-stu-id="bb361-124">Occurs when the manipulation origin has changed or when translation, scaling, or rotation have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb361-125"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> Zdarzenie<xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> i zdarzenie są tego samego typu.</span><span class="sxs-lookup"><span data-stu-id="bb361-125">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Delta?displayProperty=nameWithType> event and the <xref:System.Windows.Input.Manipulations.InertiaProcessor2D.Delta?displayProperty=nameWithType> event are the same type.</span></span> <span data-ttu-id="bb361-126">Zazwyczaj można użyć tego samego programu obsługi zdarzeń dla obu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="bb361-126">Typically, you can use the same event handler for both events.</span></span>  
  
   
  
## Examples  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationOrInertiaDelta](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationorinertiadelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumScaleRotateRadius">
      <MemberSignature Language="C#" Value="public float MinimumScaleRotateRadius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MinimumScaleRotateRadius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumScaleRotateRadius As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MinimumScaleRotateRadius { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumScaleRotateRadius : single with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-127">Pobiera lub ustawia minimalną promień (w jednostkach współrzędnych), która jest niezbędna do współdzielenia i rotacji Manipulator.</span><span class="sxs-lookup"><span data-stu-id="bb361-127">Gets or sets the minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></summary>
        <value><span data-ttu-id="bb361-128">Minimalny promień w jednostkach współrzędnych, niezbędny dla Manipulator do wzięcia udziału w skalowaniu i rotacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-128">The minimum radius, in coordinate units, necessary for a manipulator to participate in scaling and rotation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb361-129">Jeśli Manipulator jest niezwykle blisko środka masy aktualnie przetwarzanych operacji, bardzo małe ruchy Manipulator mogą stać się bardzo dużą zmianą rotacji lub skalowaniem.</span><span class="sxs-lookup"><span data-stu-id="bb361-129">If a manipulator is extremely close to the center of mass of the manipulators currently being processed, a very small manipulator motion can become a very large change to rotation or scaling.</span></span> <span data-ttu-id="bb361-130">Aby uniknąć tego problemu, ustaw <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> wartość większą od zera.</span><span class="sxs-lookup"><span data-stu-id="bb361-130">To avoid this problem, set <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> to something greater than zero.</span></span> <span data-ttu-id="bb361-131">Każdy manipulator, który jest bliżej środka masy, nie zostanie uwzględniony w operacjach rotacji i skalowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-131">Any manipulator that is closer than that distance to the center of mass will not be included in rotation and scaling operations.</span></span>  
  
 <span data-ttu-id="bb361-132">Typowa wartość, która powinna być używana, powinna być oparta na największej wielkości "przypadkowych" ruchów elementów przenoszących.</span><span class="sxs-lookup"><span data-stu-id="bb361-132">A typical value to use should be based on the likely magnitude of "accidental" motions of the manipulators.</span></span> <span data-ttu-id="bb361-133">Na przykład, jeśli Manipulator to człowiek dotknięcia ekranu, promień odpowiadający centymetrowi lub tak może być odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="bb361-133">For example, if the manipulator is a human finger touching a screen, a radius corresponding to a centimeter or so might be appropriate.</span></span>  
  
 <span data-ttu-id="bb361-134">Wartość parametru <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> musi być wartością skończoną, nieujemną.</span><span class="sxs-lookup"><span data-stu-id="bb361-134">The value for <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.MinimumScaleRotateRadius%2A> must be a finite, non-negative number.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pivot">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.ManipulationPivot2D Pivot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Manipulations.ManipulationPivot2D Pivot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberSignature Language="VB.NET" Value="Public Property Pivot As ManipulationPivot2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::ManipulationPivot2D ^ Pivot { System::Windows::Input::Manipulations::ManipulationPivot2D ^ get(); void set(System::Windows::Input::Manipulations::ManipulationPivot2D ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pivot : System.Windows.Input.Manipulations.ManipulationPivot2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.ManipulationPivot2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-135">Pobiera lub ustawia informacje o przestawce dla procesora manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-135">Gets or sets the pivot information for the manipulation processor.</span></span></summary>
        <value><span data-ttu-id="bb361-136">Informacje dotyczące przestawcy procesora do manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-136">The pivot information for the manipulation processor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb361-137"><xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> Właściwość służy do udostępniania informacji o przestawce dla rotacji Manipulator.</span><span class="sxs-lookup"><span data-stu-id="bb361-137">The <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Pivot%2A> property is used to provide pivot information for single-manipulator rotations.</span></span> <span data-ttu-id="bb361-138">Ustawienie tej właściwości na wartość null powoduje wyłączenie pojedynczej rotacji Manipulator.</span><span class="sxs-lookup"><span data-stu-id="bb361-138">Setting this property to null disables single-manipulator rotations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessManipulators">
      <MemberSignature Language="C#" Value="public void ProcessManipulators (long timestamp, System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProcessManipulators(int64 timestamp, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Input.Manipulations.Manipulator2D&gt; manipulators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators(System.Int64,System.Collections.Generic.IEnumerable{System.Windows.Input.Manipulations.Manipulator2D})" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessManipulators (timestamp As Long, manipulators As IEnumerable(Of Manipulator2D))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessManipulators(long timestamp, System::Collections::Generic::IEnumerable&lt;System::Windows::Input::Manipulations::Manipulator2D&gt; ^ manipulators);" />
      <MemberSignature Language="F#" Value="member this.ProcessManipulators : int64 * seq&lt;System.Windows.Input.Manipulations.Manipulator2D&gt; -&gt; unit" Usage="manipulationProcessor2D.ProcessManipulators (timestamp, manipulators)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="System.Int64" />
        <Parameter Name="manipulators" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Input.Manipulations.Manipulator2D&gt;" />
      </Parameters>
      <Docs>
        <param name="timestamp"><span data-ttu-id="bb361-139">Sygnatura czasowa dla partii w taktach 100-nanosekund.</span><span class="sxs-lookup"><span data-stu-id="bb361-139">The timestamp for the batch, in 100-nanosecond ticks.</span></span></param>
        <param name="manipulators"><span data-ttu-id="bb361-140">Zbiór elementów manipulowania, które znajdują się obecnie w zakresie.</span><span class="sxs-lookup"><span data-stu-id="bb361-140">The set of manipulators that are currently in scope.</span></span></param>
        <summary><span data-ttu-id="bb361-141">Przetwarza określone manipulowanie jako pojedynczą akcję wsadową.</span><span class="sxs-lookup"><span data-stu-id="bb361-141">Processes the specified manipulators as a single batch action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb361-142">Parametr `manipulators` może być pustą listą lub wartością null.</span><span class="sxs-lookup"><span data-stu-id="bb361-142">The parameter `manipulators` may be an empty list or null.</span></span> <span data-ttu-id="bb361-143">Jeśli wynikiem tego będzie liczba operacji docierających do zera, <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="bb361-143">If this results in the number of manipulators reaching zero, the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Completed> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb361-144">W poniższym przykładzie <xref:System.Windows.UIElement.OnLostMouseCapture%2A> Metoda <xref:System.Windows.UIElement> obiektu <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> jest zastępowana, aby wywołać metodę z listą <xref:System.Windows.Input.Manipulations.Manipulator2D> obiektów ustawioną na wartość null.</span><span class="sxs-lookup"><span data-stu-id="bb361-144">In the following example, the <xref:System.Windows.UIElement.OnLostMouseCapture%2A> method of a <xref:System.Windows.UIElement> object is overridden to call the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.ProcessManipulators%2A> method with the list of <xref:System.Windows.Input.Manipulations.Manipulator2D> objects set to null.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnLostMouseCapture](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onlostmousecapture)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb361-145">Sygnatura czasowa jest mniejsza niż poprzednia sygnatura czasowa bieżącego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-145">The timestamp is less than the previous timestamp for the current manipulation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (System.Windows.Input.Manipulations.ManipulationParameters2D parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class System.Windows.Input.Manipulations.ManipulationParameters2D parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.ManipulationProcessor2D.SetParameters(System.Windows.Input.Manipulations.ManipulationParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParameters (parameters As ManipulationParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParameters(System::Windows::Input::Manipulations::ManipulationParameters2D ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SetParameters : System.Windows.Input.Manipulations.ManipulationParameters2D -&gt; unit" Usage="manipulationProcessor2D.SetParameters parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Input.Manipulations.ManipulationParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="bb361-146">Parametry do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="bb361-146">Parameters to set.</span></span></param>
        <summary><span data-ttu-id="bb361-147">Ustawia parametry procesora manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-147">Sets parameters on the manipulation processor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Started">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; Started" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started" />
      <MemberSignature Language="VB.NET" Value="Public Event Started As EventHandler(Of Manipulation2DStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::Manipulations::Manipulation2DStartedEventArgs ^&gt; ^ Started;" />
      <MemberSignature Language="F#" Value="member this.Started : EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " Usage="member this.Started : System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.Manipulations.Manipulation2DStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-148">Występuje po rozpoczęciu nowego manipulowania.</span><span class="sxs-lookup"><span data-stu-id="bb361-148">Occurs when a new manipulation has started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bb361-149">W poniższym przykładzie program obsługi <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> zdarzeń sprawdza, czy jest uruchomione przetwarzanie bezwładnościowe, a jeśli tak, to kończy działanie.</span><span class="sxs-lookup"><span data-stu-id="bb361-149">In the following example, an event handler for the <xref:System.Windows.Input.Manipulations.ManipulationProcessor2D.Started> event checks to see if inertia processing is running and if so, stops it.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_OnManipulationStarted](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_onmanipulationstarted)]  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_Timestamp](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_timestamp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedManipulations">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Manipulations.Manipulations2D SupportedManipulations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportedManipulations As Manipulations2D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Manipulations::Manipulations2D SupportedManipulations { System::Windows::Input::Manipulations::Manipulations2D get(); void set(System::Windows::Input::Manipulations::Manipulations2D value); };" />
      <MemberSignature Language="F#" Value="member this.SupportedManipulations : System.Windows.Input.Manipulations.Manipulations2D with get, set" Usage="System.Windows.Input.Manipulations.ManipulationProcessor2D.SupportedManipulations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Manipulations.Manipulations2D</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb361-150">Pobiera lub ustawia bieżący zestaw obsługiwanych manipulacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-150">Gets or sets the current set of supported manipulations.</span></span></summary>
        <value><span data-ttu-id="bb361-151">Bieżący zestaw obsługiwanych manipulacji.</span><span class="sxs-lookup"><span data-stu-id="bb361-151">The current set of supported manipulations.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bb361-152">Właściwość próbuje ustawić wartość, która nie jest prawidłową kombinacją <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> wartości wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="bb361-152">The property tries to set a value that is not a valid combination of the <see cref="T:System.Windows.Input.Manipulations.Manipulations2D" /> enumeration values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
