<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c20e92c41d23587c8e791d251cf9ba3406bd2c80" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69231690" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Instaluje plik wykonywalny zawierający klasy, <see cref="T:System.ServiceProcess.ServiceBase" />które są rozszerzone. Ta klasa jest wywoływana przez narzędzia instalacyjne, takie jak InstallUtil. exe, podczas instalowania aplikacji usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller> Działa dla wszystkich usług w pliku wykonywalnym. Jest on używany przez narzędzie instalacji do zapisywania wartości rejestru skojarzonych z usługami, które chcesz zainstalować.  
  
 Aby zainstalować usługę, należy utworzyć klasę Instalatora projektu, która dziedziczy po <xref:System.Configuration.Install.Installer>, i <xref:System.ComponentModel.RunInstallerAttribute> ustawić klasy `true`na. W projekcie Utwórz wystąpienie jednego <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia na aplikację usługi i jedno <xref:System.ServiceProcess.ServiceInstaller> wystąpienie dla każdej usługi w aplikacji. Na koniec Dodaj <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienie <xref:System.ServiceProcess.ServiceInstaller> i wystąpienia do klasy Instalatora projektu.  
  
 Po uruchomieniu programu Installutil. exe narzędzie szuka klas w zestawie usług z <xref:System.ComponentModel.RunInstallerAttribute> ustawionym na. `true` Dodaj klasy do zestawu usług, dodając je do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji skojarzonej z instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest`false`, narzędzie instalacji ignoruje Instalatora projektu.  
  
 W przypadku wystąpienia elementu <xref:System.ServiceProcess.ServiceProcessInstaller>właściwości można modyfikować obejmują określenie, że aplikacja usługi jest uruchamiana w ramach konta innego niż zalogowany użytkownik. Możesz określić konkretną <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> parę, w której ma zostać uruchomiona usługa, lub użyć <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> , aby określić, że usługa jest uruchamiana na koncie systemowym komputera, na koncie usługi lokalnej lub w sieci lub na koncie użytkownika.  
  
> [!NOTE]
>  Konto systemowe komputera nie jest takie samo jak konto administratora.  
  
 Zwykle nie są wywoływane metody w <xref:System.ServiceProcess.ServiceInstaller> kodzie; są one zwykle wywoływane tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metody i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> w trakcie procesu instalacji. W razie potrzeby wykonuje kopię zapasową błędów, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) na wszystkich wcześniej zainstalowanych składnikach.  
  
 Procedura instalacji aplikacji zachowuje automatycznie informacje o składnikach, które są już zainstalowane, przy użyciu Instalatora <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>projektu. Informacje o stanie są stale aktualizowane jako <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienie i każde <xref:System.ServiceProcess.ServiceInstaller> wystąpienie jest instalowane przez narzędzie. Zwykle nie jest konieczne, aby kod mógł jawnie modyfikować te informacje o stanie.  
  
 Utworzenie wystąpienia <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>powoduje, że Konstruktor klasy bazowej,,, ma zostać wywołany. <xref:System.ServiceProcess.ServiceProcessInstaller>  
  
   
  
## Examples  
 Poniższy przykład tworzy Instalatora projektu o nazwie MyProjectInstaller, który dziedziczy z <xref:System.Configuration.Install.Installer>. Przyjęto założenie, że jest to plik wykonywalny usługi, który zawiera dwie usługi "Hello-World Service 1" i "Hello-World Service 2". W konstruktorze dla MyProjectInstaller (który zostałby wywołany przez narzędzie instalacji), <xref:System.ServiceProcess.ServiceInstaller> obiekty są tworzone dla każdej usługi <xref:System.ServiceProcess.ServiceProcessInstaller> i zostanie utworzony dla pliku wykonywalnego. Aby narzędzie instalacji rozpoznawał MyProjectInstaller jako prawidłowy Instalator, <xref:System.ComponentModel.RunInstallerAttribute> atrybut jest ustawiany na. `true`  
  
 Przed dodaniem Instalatora do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji są ustawiane właściwości opcjonalne w instalatorze procesu i na instalacjach usługi. Gdy narzędzie instalacji uzyskuje dostęp do MyProjectInstaller, obiekty dodawane do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji za pomocą wywołania do <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> zostaną zainstalowane z kolei. W trakcie tego procesu Instalator przechowuje informacje o stanie wskazujące, które obiekty zostały zainstalowane, więc można utworzyć kopię zapasową każdego obiektu z kolei w przypadku niepowodzenia instalacji.  
  
 Zwykle nie można jawnie utworzyć wystąpienia klasy Instalatora projektu. Należy go utworzyć i dodać <xref:System.ComponentModel.RunInstallerAttribute>, ale narzędzie instalacji rzeczywiście wywołuje i w związku z tym tworzy wystąpienie klasy.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ konta, pod którym zostanie uruchomiona ta aplikacja usługi.</summary>
        <value>A <see cref="T:System.ServiceProcess.ServiceAccount" /> , który definiuje typ konta, w ramach którego system uruchamia tę usługę. Wartość domyślna to <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy właściwość ma `User`wartość, właściwości <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> są używane do definiowania konta, w ramach którego jest uruchamiana aplikacja usługi. <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A>  
  
 Para <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> umożliwia uruchamianie usługi przy użyciu konta innego niż konto systemowe. Może to na przykład umożliwić automatyczne uruchomienie usługi przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany. Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pustą i <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> ustawisz jako `User`, podczas instalacji zostanie wyświetlony monit o podanie prawidłowej nazwy użytkownika i hasła.  
  
 Można również określić, że usługa jest uruchamiana w ramach lokalnego konta systemowego lub lokalnego lub usługi sieciowej. Aby uzyskać <xref:System.ServiceProcess.ServiceAccount> szczegółowe informacje na temat typów kont, zobacz Wyliczenie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp"><see cref="T:System.ComponentModel.IComponent" /> Reprezentuje proces usługi.</param>
        <summary>Implementuje metodę klasy <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> bazowej bez <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> zachowania związanego z klasą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie powinna być wywoływana w kodzie. Metoda klasy bazowej w <xref:System.Configuration.Install.ComponentInstaller> to `abstract`, więc jest zaimplementowana w tym miejscu w klasie pochodnej. Jednak w implementacji metody nie <xref:System.ServiceProcess.ServiceProcessInstaller> ma żadnego przetwarzania specyficznego dla klasy.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst pomocy dla opcji instalacji usługi.</summary>
        <value>Tekst pomocy, który zawiera opis czynności służących do ustawiania nazwy użytkownika i hasła w celu uruchomienia usługi w ramach określonego konta.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten tekst pomocy może być używany, gdy usługa jest uruchamiana ręcznie. Wskazuje użytkownikowi, jak wprowadzać informacje o nazwie użytkownika i haśle.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><see cref="T:System.Collections.IDictionary" /> Zawierający informacje kontekstowe skojarzone z instalacją.</param>
        <summary>Zapisuje informacje o aplikacji usługi w rejestrze. Ta metoda jest przeznaczona do użycia przez narzędzia instalacyjne, które automatycznie wywołują odpowiednie metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie są wywoływane metody w <xref:System.ServiceProcess.ServiceProcessInstaller> kodzie; są one zwykle wywoływane tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metodę podczas procesu instalacji. W razie potrzeby wykonuje kopię zapasową błędów, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> wszystkie wcześniej zainstalowane składniki. Ta metoda przekazuje instalację do metody klasy <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> bazowej.  
  
 Zwykle nie wywołamy metod w <xref:System.ServiceProcess.ServiceInstaller> kodzie. są one zwykle wywoływane tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metody i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> w trakcie procesu instalacji. W razie potrzeby wykonuje kopię zapasową błędów, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) wszystkie wcześniej zainstalowane składniki  
  
 Procedura instalacji aplikacji zachowuje automatycznie informacje o składnikach, które są już zainstalowane, przy użyciu Instalatora <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>projektu. Informacje o stanie <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> , które <xref:System.ServiceProcess.ServiceProcessInstaller> są przesyłane do `stateSaver` programu jako parametr, są stale aktualizowane jako wystąpienie i <xref:System.ServiceProcess.ServiceInstaller> każde wystąpienie jest instalowane przez narzędzie. Zwykle nie jest konieczne, aby kod mógł jawnie modyfikować te informacje o stanie.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A>przekazuje do metody wywołującej wszelkie wyjątki zgłoszone przez metody klasy bazowej <xref:System.Configuration.Install.Installer.BeforeInstall> lub  /  <xref:System.Configuration.Install.Installer.AfterInstall> procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stateSaver" /> Ma<see langword="null" />wartość.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia hasło skojarzone z kontem użytkownika, w którym jest uruchomiona aplikacja usługi.</summary>
        <value>Hasło skojarzone z kontem, na którym ma zostać uruchomiona usługa. Wartością domyślną jest ciąg pusty (""). Właściwość nie jest publiczna i nigdy nie jest serializowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i<xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> umożliwia uruchamianie usługi przy użyciu konta innego niż konto systemowe. Może to na przykład umożliwić automatyczne uruchomienie usługi przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> są obsługiwane w bezpieczny sposób, ponieważ nigdy nie są serializowane lub zapisywane w stanie instalacji ( <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>Instalator projektu) lub w innej lokalizacji z dostępem publicznym.  
  
 Ustawienie opcji <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i umożliwia automatyczne skojarzenie konta z usługą w czasie instalacji. <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pustą i <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> ustawisz jako `User`, podczas instalacji zostanie wyświetlony monit o podanie prawidłowej nazwy użytkownika i hasła.  
  
 Kolejną opcją uruchomienia usługi na osobnym koncie jest użycie konta systemowego komputera. To konto, które różni się od konta administratora, nie wymaga hasła. Uprawnienia konta systemowego mogą przekroczyć osoby aktualnie zalogowanego użytkownika. Uruchamianie na koncie systemowym, a nie na koncie użytkownika, pozwala uniknąć problemów wynikających z braku uprawnień wymaganych przez usługę  
  
 Jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> jest dowolną wartość inną niż `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> używane jest określone konto (lokalne lub sieciowe lub system lokalny), nawet jeśli są wypełnione właściwości i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawierający informacje kontekstowe skojarzone z instalacją.</param>
        <summary>Wycofuje informacje o aplikacji usługi zapisywane w rejestrze przez procedurę instalacji. Ta metoda jest przeznaczona do użycia przez narzędzia instalacyjne, które automatycznie przetwarzają odpowiednie metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie są wywoływane metody w <xref:System.ServiceProcess.ServiceProcessInstaller> kodzie; są one zwykle wywoływane tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metodę podczas procesu instalacji. W razie potrzeby wykonuje kopię zapasową błędów, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> na obiekt, który wygenerował wyjątek.  
  
 Procedura instalacji aplikacji zachowuje automatycznie informacje o składnikach, które są już zainstalowane, przy użyciu Instalatora <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>projektu. Informacje o stanie <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> , które <xref:System.ServiceProcess.ServiceProcessInstaller> są przesyłane do `savedState` programu jako parametr, są stale aktualizowane jako wystąpienie i <xref:System.ServiceProcess.ServiceInstaller> każde wystąpienie jest instalowane przez narzędzie. Zwykle nie jest konieczne, aby kod mógł jawnie modyfikować te informacje o stanie.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A>przekazuje do metody wywołującej wszelkie wyjątki zgłoszone przez metody klasy bazowej <xref:System.Configuration.Install.Installer.BeforeInstall> lub  /  <xref:System.Configuration.Install.Installer.AfterInstall> procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> Ma<see langword="null" />wartość.  
  
—lub— 
<paramref name="savedState" /> Jest uszkodzona lub nieistniejąca.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia konto użytkownika, pod którym zostanie uruchomiona aplikacja usługi.</summary>
        <value>Konto, na którym ma zostać uruchomiona usługa. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i<xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> umożliwia uruchamianie usługi przy użyciu konta innego niż konto systemowe. Może to na przykład umożliwić automatyczne uruchomienie usługi przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A>i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> są obsługiwane w bezpieczny sposób, ponieważ nigdy nie są serializowane lub zapisywane w stanie instalacji ( <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>Instalator projektu) lub w innej lokalizacji z dostępem publicznym.  
  
 Ustawienie opcji <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i umożliwia automatyczne skojarzenie konta z usługą w czasie instalacji. <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pustą i <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> ustawisz jako `User`, podczas instalacji zostanie wyświetlony monit o podanie prawidłowej nazwy użytkownika i hasła.  
  
 Kolejną opcją uruchomienia usługi na osobnym koncie jest użycie konta systemowego komputera. To konto, które różni się od konta administratora, nie wymaga hasła. Uprawnienia konta systemowego mogą przekroczyć osoby aktualnie zalogowanego użytkownika. Uruchamianie na koncie systemowym, a nie na koncie użytkownika, pozwala uniknąć problemów wynikających z braku uprawnień wymaganych przez usługę  
  
 Jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> jest dowolną wartość inną niż `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> używane jest określone konto (lokalne lub sieciowe lub system lokalny), nawet jeśli są wypełnione właściwości i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> .  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>
