<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65aa4409d6c7e76442c09281bf79b66d17d4342f" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48741295" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProcessInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProcessInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type ServiceProcessInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Instaluje plik wykonywalny zawierający klasy, które rozszerzają <see cref="T:System.ServiceProcess.ServiceBase" />. Klasa ta zostanie wywołana przez instalację narzędzia, takie jak InstallUtil.exe, podczas instalowania aplikacji usługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller> Działa wspólne dla wszystkich usług w pliku wykonywalnym. Używane przez narzędzie instalacji można zapisać wartości rejestru, skojarzone z usługami, które chcesz zainstalować.  
  
 Aby zainstalować usługę, należy utworzyć klasę Instalatora projektu, który dziedziczy z <xref:System.Configuration.Install.Installer>i ustaw <xref:System.ComponentModel.RunInstallerAttribute> klasy do `true`. W projekcie, Utwórz wystąpienie jednego <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia dla aplikacji usługi i jeden <xref:System.ServiceProcess.ServiceInstaller> wystąpienia dla każdej usługi w aplikacji. Na koniec należy dodać <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia i <xref:System.ServiceProcess.ServiceInstaller> wystąpień klasy projektu Instalatora.  
  
 Po uruchomieniu InstallUtil.exe szuka klasy w zestawie usługi za pomocą narzędzia <xref:System.ComponentModel.RunInstallerAttribute> równa `true`. Dodawanie klas do zestawu usługi przez dodanie ich do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcję skojarzoną z Instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest `false`, zainstaluj narzędzie ignoruje Instalatora projektu.  
  
 Dla wystąpienia <xref:System.ServiceProcess.ServiceProcessInstaller>, można zmodyfikować właściwości obejmują, określając, że aplikacja usługi uruchamiania przy użyciu konta innego niż zalogowany użytkownik. Określi się konkretny <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pary, pod którym należy uruchomić usługę, lub skorzystać z <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> do określenia, czy usługa jest uruchomiona w ramach konta System na komputerze, lokalnie lub konto usługi sieciowej lub konto użytkownika.  
  
> [!NOTE]
>  Konto systemowe tego komputera nie jest taka sama jak konto administratora.  
  
 Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceInstaller> w kodzie; ogólnie nazywane są tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> metody podczas procesu instalacji. Tworzy kopię się błędy, jeśli to konieczne, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) do wszystkich uprzednio zainstalowanych składników.  
  
 Procedury instalacji aplikacji utrzymuje automatycznie o składnikach, w przypadku już zainstalowane, aby za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Informacje o stanie jest stale aktualizowany jako <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia, a każdy <xref:System.ServiceProcess.ServiceInstaller> przez narzędzie jest zainstalowane wystąpienie. Nie jest konieczne w kodzie zmodyfikować informacje o stanie jawnie.  
  
 Utworzenie wystąpienia <xref:System.ServiceProcess.ServiceProcessInstaller> powoduje, że Konstruktor klasy bazowej <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, ma zostać wywołana.  
  
   
  
## Examples  
 Poniższy przykład tworzy Instalatora projektu o nazwie MyProjectInstaller, która dziedziczy z <xref:System.Configuration.Install.Installer>. Zakłada się, jest plik wykonywalny usługi, która zawiera dwie usługi, "1. Usługa Hello World" i "Witaj, świecie usługi 2". W Konstruktorze MyProjectInstaller (która może być wywoływany przez narzędzie instalacji) <xref:System.ServiceProcess.ServiceInstaller> obiekty są tworzone dla każdej usługi, a <xref:System.ServiceProcess.ServiceProcessInstaller> jest tworzona dla pliku wykonywalnego. Narzędzie instalacji mogła rozpoznać MyProjectInstaller jako prawidłowy Instalatora <xref:System.ComponentModel.RunInstallerAttribute> ma ustawioną wartość atrybutu `true`.  
  
 Opcjonalne właściwości są ustawione na Instalator procesu i pliki instalacyjne usługi, zanim pliki instalacyjne są dodawane do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji. Po instalacji narzędzie uzyskuje dostęp do MyProjectInstaller, obiekty dodawane do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji za pomocą wywołania <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=nameWithType> zostanie zainstalowany z osobna. W trakcie Instalator przechowuje informacje o stanie wskazujący obiekty, które zostały zainstalowane, dzięki czemu każdy obiekt można utworzyć kopię z kolei w przypadku niepowodzenia instalacji.  
  
 Zwykle nie jakbyś tworzył wystąpienie klasy Instalatora projektu jawne. Czy ją utworzyć i dodać <xref:System.ComponentModel.RunInstallerAttribute>, ale narzędzie instalacji wywołuje i w związku z tym tworzy jego wystąpienie, klasa.  
  
 [!code-cpp[Classic ServiceInstaller Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProcessInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberSignature Language="VB.NET" Value="Public Property Account As ServiceAccount" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceProcess::ServiceAccount Account { System::ServiceProcess::ServiceAccount get(); void set(System::ServiceProcess::ServiceAccount value); };" />
      <MemberSignature Language="F#" Value="member this.Account : System.ServiceProcess.ServiceAccount with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ konta, pod którym chcesz uruchomić tę aplikację usługi.</summary>
        <value>A <see cref="T:System.ServiceProcess.ServiceAccount" /> definiujący typ konta, w którym ta usługa działa system. Wartość domyślna to <see langword="User" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> właściwość `User`, <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> właściwości są używane do definiowania konto, na którym działa aplikacja usługi.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pary umożliwia usługa do uruchamiania przy użyciu konta innego niż konto system. Można na przykład dzięki temu usługa uruchamiana automatycznie przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany. Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pusty i ustaw <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> do `User`, zostanie wyświetlony monit podanie prawidłowej nazwy użytkownika i hasła podczas instalacji.  
  
 Można również określić, że usługi uruchamiane na koncie systemu lokalnego lub jako lokalną lub Usługa sieciowa. Zobacz <xref:System.ServiceProcess.ServiceAccount> wyliczenie, aby uzyskać szczegółowe informacje na temat typów kont.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (comp As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ comp);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="serviceProcessInstaller.CopyFromComponent comp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp"><see cref="T:System.ComponentModel.IComponent" /> Reprezentujący procesu usługi.</param>
        <summary>Implementuje klasę bazową <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> metody bez <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> zachowania specyficzne dla klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie powinna być wywoływana w kodzie. Metody klasy bazowej dla <xref:System.Configuration.Install.ComponentInstaller> jest `abstract`, więc jest zaimplementowana w tym miejscu w klasie pochodnej. Ma jednak nie <xref:System.ServiceProcess.ServiceProcessInstaller> klasy specyficzne dla przetwarzania w implementacji metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst pomocy wyświetlany dla opcji instalacji usługi.</summary>
        <value>Tekst, który zawiera opis kroków do ustawiania nazwy użytkownika i hasła, aby można było uruchomić usługę, w ramach określonego konta pomocy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten tekst pomocy może służyć w sytuacji, gdy usługa jest uruchamiana ręcznie. Wskazuje użytkownikowi wprowadzanie informacji o nazwę i hasło użytkownika.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><see cref="T:System.Collections.IDictionary" /> Zawierający informacje o kontekście związane z instalacją.</param>
        <summary>Zapisuje informacje o aplikacji usługi w rejestrze. Ta metoda jest przeznaczona do użycia przez instalacji narzędzi, które automatycznie wywoływać właściwe metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceProcessInstaller> w kodzie; ogólnie nazywane są tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metody podczas procesu instalacji. Tworzy kopię się błędy, jeśli to konieczne, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> na wszystkie wcześniej zainstalowanych składników. Ta metoda przekazuje instalacji do klasy bazowej <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=nameWithType> metody.  
  
 Zazwyczaj nie będzie wywoływać metody na <xref:System.ServiceProcess.ServiceInstaller> w kodzie; ogólnie nazywane są tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> i <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=nameWithType> metody podczas procesu instalacji. Tworzy kopię się błędy, jeśli to konieczne, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> (lub <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=nameWithType>) do wszystkich uprzednio zainstalowanych składników  
  
 Procedury instalacji aplikacji utrzymuje automatycznie o składnikach, w przypadku już zainstalowane, aby za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Informacje o stanie, są przekazywane do <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> jako `stateSaver` parametru jest stale aktualizowany jako <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia, a każdy <xref:System.ServiceProcess.ServiceInstaller> przez narzędzie jest zainstalowane wystąpienie. Nie jest konieczne w kodzie zmodyfikować informacje o stanie jawnie.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> przekazuje do metody wywołującej wszelkie wyjątki zgłaszane przez metody klasy bazowej lub <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stateSaver" /> Jest <see langword="null" />.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Password { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia hasło skojarzone z kontem użytkownika, w którym działa aplikacja usługi.</summary>
        <value>Hasło skojarzone z kontem, na którym jest uruchamiany usługi. Wartością domyślną jest ciąg pusty (""). Właściwość nie jest publiczna i nigdy nie jest serializowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> pary umożliwia usługa do uruchamiania przy użyciu konta innego niż konto system. Można na przykład dzięki temu usługa uruchamiana automatycznie przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> są obsługiwane w bezpieczny sposób, że nigdy nie są serializowane lub zapisany stan instalacji (Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) lub w innej lokalizacji za pomocą publicznego dostępu.  
  
 Ustawienie <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> umożliwia konto ma zostać skojarzony automatycznie z usługą w czasie instalacji. Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pusty i ustaw <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> do `User`, zostanie wyświetlony monit podanie prawidłowej nazwy użytkownika i hasła podczas instalacji.  
  
 Inną opcją do uruchamiania usług w ramach oddzielnego konta jest Użyj konta System na komputerze. Tego konta, które różni się od konta administratora, wymaga bez hasła. Uprawnień konta systemu mogą wykraczać poza obecnie zalogowanego użytkownika. Uruchamianie przy użyciu konta systemowego, zamiast konta użytkownika pozwala uniknąć problemów wynikających z użytkowników, których nie ma uprawnień wymaga usługi  
  
 Jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> oznacza dowolną wartość w innych niż `User`, używane jest konto określona (lokalnego lub Usługa sieciowa lub konta system lokalny), nawet wtedy, gdy <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> właściwości są wypełnione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="serviceProcessInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawierający informacje o kontekście związane z instalacją.</param>
        <summary>Wycofanie zapisywane przez procedurę instalacji w rejestrze informacji o aplikacji usługi. Ta metoda jest przeznaczona do użycia przez narzędzia instalacji, które automatycznie przetwarzać właściwe metody.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy wywoływać metody na <xref:System.ServiceProcess.ServiceProcessInstaller> w kodzie; ogólnie nazywane są tylko przez narzędzie instalacji. Narzędzie instalacji automatycznie wywołuje <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=nameWithType> metody podczas procesu instalacji. Tworzy kopię się błędy, jeśli to konieczne, wywołując <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> w obiekcie, który wygenerował wyjątek.  
  
 Procedury instalacji aplikacji utrzymuje automatycznie o składnikach, w przypadku już zainstalowane, aby za pomocą Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>. Informacje o stanie, są przekazywane do <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> jako `savedState` parametru jest stale aktualizowany jako <xref:System.ServiceProcess.ServiceProcessInstaller> wystąpienia, a każdy <xref:System.ServiceProcess.ServiceInstaller> przez narzędzie jest zainstalowane wystąpienie. Nie jest konieczne w kodzie zmodyfikować informacje o stanie jawnie.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> przekazuje do metody wywołującej wszelkie wyjątki zgłaszane przez metody klasy bazowej lub <xref:System.Configuration.Install.Installer.BeforeInstall>  /  <xref:System.Configuration.Install.Installer.AfterInstall> procedury obsługi zdarzeń.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> Jest <see langword="null" />.  
  
—lub— 
<paramref name="savedState" /> Jest uszkodzony lub nie istnieje.</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberSignature Language="VB.NET" Value="Public Property Username As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Username { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Username : string with get, set" Usage="System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia konta użytkownika, na którym będzie uruchamiana aplikacja usługi.</summary>
        <value>Konto, na którym jest uruchamiany usługi. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pary umożliwia usługa do uruchamiania przy użyciu konta innego niż konto system. Można na przykład dzięki temu usługa uruchamiana automatycznie przy ponownym uruchomieniu, gdy żaden użytkownik nie jest zalogowany.  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> są obsługiwane w bezpieczny sposób, że nigdy nie są serializowane lub zapisany stan instalacji (Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType>) lub w innej lokalizacji za pomocą publicznego dostępu.  
  
 Ustawienie <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> umożliwia konto ma zostać skojarzony automatycznie z usługą w czasie instalacji. Jeśli pozostawisz opcję <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> lub <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> pusty i ustaw <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> do `User`, zostanie wyświetlony monit podanie prawidłowej nazwy użytkownika i hasła podczas instalacji.  
  
 Inną opcją do uruchamiania usług w ramach oddzielnego konta jest Użyj konta System na komputerze. Tego konta, które różni się od konta administratora, wymaga bez hasła. Uprawnień konta systemu mogą wykraczać poza obecnie zalogowanego użytkownika. Uruchamianie przy użyciu konta systemowego, zamiast konta użytkownika pozwala uniknąć problemów wynikających z użytkowników, których nie ma uprawnień wymaga usługi  
  
 Jeśli <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> oznacza dowolną wartość w innych niż `User`, określone konto (lokalnego lub Usługa sieciowa lub konta system lokalny) jest używany, nawet wtedy, gdy <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> i <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> właściwości są wypełnione.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>