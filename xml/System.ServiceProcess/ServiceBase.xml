<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServiceBase.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d659a5675f8e308404ab56d663607e4230bf1530.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d659a5675f8e308404ab56d663607e4230bf1530</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source>Provides a base class for a service that will exist as part of a service application.</source>
          <target state="translated">Udostępnia klasę podstawową dla usługi, która będzie istnieć w ramach aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source><ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> must be derived from when creating a new service class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> musi być pochodną podczas tworzenia nowej klasy usługi.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Derive from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> when defining your service class in a service application.</source>
          <target state="translated">Pochodzić od <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> podczas definiowania klasy usługi w aplikacji usługi.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Any useful service overrides the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> methods.</source>
          <target state="translated">Wszystkie zastąpienia przydatne usługi <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>For additional functionality, you can override <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> with specific behavior in response to changes in the service state.</source>
          <target state="translated">Aby włączyć dodatkowe funkcje, można zastąpić <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> z określone zachowanie w odpowiedzi na zmiany w stan usługi.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</source>
          <target state="translated">Usługa jest długotrwałe plik wykonywalny, który nie obsługuje interfejs użytkownika i które mogą nie działać w ramach konta zalogowanego użytkownika.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The service can run without any user being logged on to the computer.</source>
          <target state="translated">Usługa może działać bez każdemu użytkownikowi zalogowanie się do komputera.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>By default, services run under the System account, which is not the same as the Administrator account.</source>
          <target state="translated">Domyślnie usługi uruchamiane na koncie systemu, który nie jest taka sama jak konto administratora.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You cannot change the rights of the System account.</source>
          <target state="translated">Nie można zmienić uprawnień konta System.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Alternatively, you can use a <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> to specify a user account under which the service will run.</source>
          <target state="translated">Alternatywnie można użyć <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceProcessInstaller&gt;</ph> Aby określić konto użytkownika, na którym będzie uruchamiana usługa.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>An executable can contain more than one service but must contain a separate <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> for each service.</source>
          <target state="translated">Plik wykonywalny może zawierać więcej niż jedna usługa, ale musi zawierać oddzielne <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> dla każdej usługi.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> instance registers the service with the system.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> Wystąpienia rejestruje usługę w systemie.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The installer also associates each service with an event log that you can use to record service commands.</source>
          <target state="translated">Instalator powoduje również skojarzenie poszczególnych usług z dziennika zdarzeń, który służy do rejestrowania poleceń usługi.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">`main()`</ph> function in the executable defines which services should run.</source>
          <target state="translated"><ph id="ph1">`main()`</ph> Funkcji w pliku wykonywalnego, który definiuje usług, które powinno być ono uruchomione.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The current working directory of the service is the system directory, not the directory in which the executable is located.</source>
          <target state="translated">Bieżący katalog roboczy usługi jest katalogiem systemu, a nie katalog, w którym znajduje się plik wykonywalny.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>When you start a service, the system locates the executable and runs the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method for that service, contained within the executable.</source>
          <target state="translated">Po uruchomieniu usługi systemu lokalizuje plik wykonywalny i uruchamia <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> metody dla tej usługi, zawarty w pliku wykonywalnego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>However, running the service is not the same as running the executable.</source>
          <target state="translated">Jednak uruchomienie usługi nie jest taki sam jak uruchamianie pliku wykonywalnego.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The executable only loads the service.</source>
          <target state="translated">Plik wykonywalny ładuje tylko usługi.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The service is accessed (for example, started and stopped) through the Service Control Manager.</source>
          <target state="translated">Usługa jest dostępna (na przykład, uruchamiania i zatrzymywania) za pośrednictwem Menedżera sterowania usługami.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The executable calls the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> derived class's constructor the first time you call Start on the service.</source>
          <target state="translated">Wykonywalny wywołania <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> pochodzi z klasy konstruktora pierwszy czasu wywołania rozpoczęcia w usłudze.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> command-handling method is called immediately after the constructor executes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Obsługi polecenia metoda jest wywoływana natychmiast po wykonuje konstruktora.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Konstruktor nie jest wykonywany ponownie po pierwszej usługi został załadowany, więc oddzielne przetwarzanie wykonywane przez konstruktora z wykonywane przez <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Any resources that can be released by <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should be created in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Wszystkie zasoby, które może być zwolnione przez <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> powinny zostać utworzone w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Creating resources in the constructor prevents them from being created properly if the service is started again after <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> has released the resources.</source>
          <target state="translated">Tworzenie zasobów w Konstruktorze zapobiega ich są poprawnie utworzony, jeśli usługa jest uruchomiona ponownie po <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> wydała zasobów.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The Service Control Manager (SCM) provides a way to interact with the service.</source>
          <target state="translated">Menedżer sterowania usługami (SCM) zapewnia sposób interakcji z usługą.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</source>
          <target state="translated">Menedżer sterowania usługami służy do przekazywania Uruchom, Zatrzymaj, Wstrzymaj, Kontynuuj lub polecenia niestandardowych w usłudze.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The SCM uses the values of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> to determine whether the service accepts Stop, Pause, or Continue commands.</source>
          <target state="translated">Menedżer sterowania usługami używa wartości <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> Aby ustalić, czy usługa akceptuje zatrzymanie, wstrzymanie lub kontynuować poleceń.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph3">`true`</ph> in the service class.</source>
          <target state="translated">Zatrzymaj, Wstrzymaj i Kontynuuj są włączone w SCM kontekstu menu tylko w przypadku odpowiadających im właściwości <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph3">`true`</ph> w klasie usługi.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If enabled, the command is passed to the service, and <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> is called.</source>
          <target state="translated">U możliwia polecenia są przekazywane do usługi, i <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, lub <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>, the corresponding command-handling method (such as <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) will not be processed, even if you have implemented the method.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, lub <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph4">`false`</ph>, odpowiedniej metody obsługi polecenia (takich jak <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) nie będą przetwarzane, nawet jeśli zaimplementowano metody.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to do programmatically what the SCM does using a user interface.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> klasę, aby wykonać programowo jakie SCM jest przy użyciu interfejsu użytkownika.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can automate the tasks available in the console.</source>
          <target state="translated">Można automatyzować zadania dostępne w konsoli.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`true`</ph> but you have not implemented a corresponding command-handling method (such as <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) the system throws an exception and ignores the command.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph>, lub <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph4">`true`</ph> , ale nie zostały zaimplementowane odpowiedniej metody obsługi polecenia (takich jak <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>) system zgłasza wyjątek i ignoruje polecenia.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You do not have to implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, or any other method in <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">Nie masz do zaimplementowania <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph>, lub innej metody w <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>However, the service's behavior is described in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, so at minimum, this member should be overridden.</source>
          <target state="translated">Jednak zachowanie usługi jest opisane w <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, więc co najmniej powinna zostać zastąpiona tego elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">`main()`</ph> function of the executable registers the service in the executable with the Service Control Manager by calling the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">`main()`</ph> Funkcja pliku wykonywalnego, który rejestruje usługę w pliku wykonywalnego z Menedżerem sterowania usługami przez wywołanie metody <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> object passed to the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> method must match the <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property of the service installer for that service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> Właściwość <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> obiekt przekazywany do <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A&gt;</ph> musi być zgodna metoda <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> właściwości Instalatora usługi dla tej usługi.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can use <ph id="ph1">`InstallUtil.exe`</ph> to install services on your system.</source>
          <target state="translated">Można użyć <ph id="ph1">`InstallUtil.exe`</ph> do instalowania usług w systemie.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>You can specify a log other than the Application event log to receive notification of service calls, but neither the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> nor the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property can write to a custom log.</source>
          <target state="translated">Dziennik niż dziennik zdarzeń aplikacji, aby otrzymać powiadomienie o wywołaniach usług, ale nie można określić <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> ani <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> właściwości może zapisywać do dziennika niestandardowego.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceProcess.ServiceBase">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> if you do not want to use automatic logging.</source>
          <target state="translated">Ustaw <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph2">`false`</ph> , jeśli nie chcesz używać automatycznego rejestrowania.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> class.</source>
          <target state="translated">Tworzy nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Do not create an instance of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> class.</source>
          <target state="translated">Nie twórz wystąpienia <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Instead, derive from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> and instantiate your derived class.</source>
          <target state="translated">Zamiast tego pochodzi od <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> i utworzenia wystąpienia klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>The minimum you need to implement in the constructor for a class inherited from <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> is to set the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> on your component.</source>
          <target state="translated">Minimalna należy wdrożyć w Konstruktorze dla odziedziczone po klasie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> jest skonfigurowanie <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> na składnika.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>No other processing is specifically required in the constructor.</source>
          <target state="translated">Nie inne przetwarzania jest wymagany w szczególności w konstruktorze.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>You should handle most initialization in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> rather than in the constructor.</source>
          <target state="translated">Powinna obsługiwać większość inicjowania w <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> , a nie w konstruktorze.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</source>
          <target state="translated">W przeciwnym razie nie ma żadnej gwarancji, które obiekty zostanie zainicjowana ponownie po ponownym uruchomieniu usługi po została zatrzymana.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you override the constructor in your derived class, call the base class constructor in your code.</source>
          <target state="translated">Jeśli w Konstruktorze przesłonięcia w klasie pochodnej, wywołanie konstruktora klasy podstawowej w kodzie.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> constructor sets <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> Ustawia konstruktora <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Jeśli nie chcesz automatycznie logować wywołań do usługi z Menedżera sterowania usługami (SCM), należy ustawić <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</source>
          <target state="translated">Jeśli pliku wykonywalnego zawiera pojedynczą usługę, system wywołuje konstruktor usługi podczas uruchamiania wybrano SCM i uruchamia destruktor, gdy Stop została wywołana.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</source>
          <target state="translated">Jeśli pliku wykonywalnego zawiera wiele usług, wywoływania rozpoczęcia w jednej usługi powoduje, że konstruktorów ma być wywoływana dla wszystkich usług w pliku wykonywalnego, ale tylko określona usługa jest uruchomiona.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</source>
          <target state="translated">Destruktory dla usług są uruchamiane razem gdy wszystkie usługi została zatrzymana, nie pojedynczo po zatrzymaniu każdej usługi.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.#ctor">
          <source>If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</source>
          <target state="translated">Jeśli zastąpienie konstruktora klasy podstawowej, użytkownik powinien jawnie wywołać w konstruktorze klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</source>
          <target state="translated">Wskazuje, czy zgłaszać polecenia Start, Zatrzymaj, Wstrzymaj i Kontynuuj w dzienniku zdarzeń.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to report information in the event log; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> do informacji w raporcie w dzienniku zdarzeń; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`true`</ph> instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</source>
          <target state="translated">Ustawienie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph2">`true`</ph> powoduje, że usługa Dziennik zdarzeń aplikacji, aby niepowodzenia polecenia raportu, a także informacje o zmianie stanu na użytek Uruchom, Zatrzymaj, Wstrzymaj i Kontynuuj zdarzeń w usłudze.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>The name of the service is used as the log's <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Nazwa usługi jest używana do logowania <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>To report information to a custom event log rather than the Application log, set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> and write instructions within the command-handling methods <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to post to the appropriate log.</source>
          <target state="translated">Aby przekazać informacje niestandardowe dziennika zdarzeń, a nie w dzienniku aplikacji, ustaw <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph2">`false`</ph> i pisanie instrukcji w obrębie metody obsługi polecenia <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, lub <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> do wysłania do odpowiedniego dziennika.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, Który dostarcza ciąg źródłowy dla dziennika zdarzeń, należy ustawić przed usługa próbuje dokonać zapisu w dzienniku zdarzeń.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.AutoLog">
          <source>Trying to access the event log before the source name is set throws an exception.</source>
          <target state="translated">Próby dostępu do dziennika zdarzeń, przed skonfigurowaniem nazwę źródła zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy usługa może obsłużyć powiadomienia o zmianie stanu zasilania komputera.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service handles the computer power status changes indicated in the <ph id="ph2">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> class, otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli usługa obsługuje stan zasilania komputera zmiany w oznaczone <ph id="ph2">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> klasy, w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph>.</source>
          <target state="translated">Podczas zmiany stanu zasilania komputera, Menedżer sterowania usługami (SCM) sprawdza, czy usługa akceptuje zasilania poleceń zdarzeń przy użyciu wartości <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the command is passed to the service and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> method is called if defined.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, polecenie jest przekazywany do usługi i <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> metoda jest wywoływana, jeśli została zdefiniowana.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> is not implemented in the derived class, the SCM handles the power event through the empty base class <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> nie jest zaimplementowana w klasie pochodnej SCM obsługuje zdarzenie zasilania za pośrednictwem pustą klasę podstawową <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent">
          <source>This property is modified after the service was started.</source>
          <target state="translated">Ta właściwość jest modyfikowana po usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source>Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy usługa może obsłużyć zdarzenia zmiany sesji odebrane w sesji serwera terminali.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can handle Terminal Server session change events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli usługa może obsłużyć zdarzenia zmiany sesji serwera terminali; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent">
          <source>This property is modified after the service was started.</source>
          <target state="translated">Ta właściwość jest modyfikowana po usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Gets or sets a value indicating whether the service can be paused and resumed.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy usługa może wstrzymany i ponownie uruchomiony.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be paused; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli usługa może zostać wstrzymana; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Set the value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property in the constructor for the service.</source>
          <target state="translated">Ustaw wartość <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> właściwości w Konstruktorze dla usługi.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When a service is paused, it halts what it is doing.</source>
          <target state="translated">Gdy usługa jest wstrzymana, zatrzymuje wykonywania.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When you continue the service (either through the Service Control Manager or programmatically), <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> runs.</source>
          <target state="translated">Jeśli nadal (lub za pośrednictwem Menedżera sterowania usługami programowo), usługa <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> uruchamia.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Sending a Pause request to the service can conserve system resources.</source>
          <target state="translated">Wysyła żądanie wstrzymania do usługi, można zaoszczędzić zasoby systemowe.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>Pause may not release all system resources, but Stop does.</source>
          <target state="translated">Wstrzymaj może nie zwalnia wszystkie zasoby systemowe, ale nie Stop.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> are often implemented to perform less processing than <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> są często stosowane do przetwarzania mniej niż <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>When <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`true`</ph>, override <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, Zastąp <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> do określenia przetwarzania, który powinien wystąpić, gdy Menedżer sterowania usługami (SCM) przekazuje żądanie wstrzymania lub kontynuować z usługą.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> should be implemented to undo the processing in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> powinny zostać wdrożone cofnąć przetwarzania w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if they are implemented.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph2">`false`</ph>SCM nie przejdą Wstrzymaj i Kontynuuj żądania do usługi, więc <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> metody nie zostanie wywołany, nawet jeśli są one wykonywane.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">W SCM <ph id="ph1">`Pause`</ph> i <ph id="ph2">`Continue`</ph> formanty są wyłączone, gdy <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>The service has already been started.</source>
          <target state="translated">Usługa została już uruchomiona.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /&gt;</ph> Nie można zmienić właściwości, gdy usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>Gets or sets a value indicating whether the service should be notified when the system is shutting down.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy Usługa powiadamiania, gdy system jest zamykany.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service should be notified when the system is shutting down; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli usługa powiadamiania, gdy system jest zamykany; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the service is notified when the system is shutting down.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, usługa jest powiadomienie, gdy system jest zamykany.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>At shutdown, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> method is called if it has been implemented in your derived class.</source>
          <target state="translated">Podczas zamykania systemu <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> metoda jest wywoływana, gdy została ona zaimplementowana w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>Only the system should cause the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> method to execute; the service can call it, but this is not recommended.</source>
          <target state="translated">Tylko system powinno powodować <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> metodę można wykonać; usługi można wywołać ją, ale nie jest to zalecane.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The service has already been started.</source>
          <target state="translated">Usługa została już uruchomiona.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanShutdown">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /&gt;</ph> Nie można zmienić właściwości, gdy usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>Gets or sets a value indicating whether the service can be stopped once it has started.</source>
          <target state="translated">Pobiera lub ustawia wartość wskazującą, czy usługa może zostać zatrzymana, gdy została ona uruchomiona.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the service can be stopped and the <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph> method called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli usługa może zostać zatrzymana i <ph id="ph2">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnStop" /&gt;</ph> metody o nazwie; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>.</source>
          <target state="translated">Zatrzymaj wywołanego w usłudze Menedżer sterowania usługami (SCM) sprawdza, czy usługa akceptuje polecenia Stop przy użyciu wartości <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>For most services, the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, but some operating system services, for example, do not allow the user to stop them.</source>
          <target state="translated">W przypadku większości usług wartość <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, ale niektóre usługi systemu operacyjnego, na przykład nie Zezwalaj użytkownikowi na ich zatrzymania.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the Stop command is passed to the service and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method is called if it is defined.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, polecenia zatrzymania jest przekazywany do usługi i <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> metoda jest wywoływana, gdy jest zdefiniowana.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> nie jest zaimplementowana w klasie pochodnej uchwytów SCM polecenie zatrzymania za pośrednictwem pustą klasę podstawową <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>The service has already been started.</source>
          <target state="translated">Usługa została już uruchomiona.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.CanStop">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanStop" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.CanStop" /&gt;</ph> Nie można zmienić właściwości, gdy usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Disposes of the resources (other than memory) used by the <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</source>
          <target state="translated">Usuwa zasoby (inne niż pamięć) używany przez <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> in your derived class (and through it, in the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> class) when you are finished using the derived class.</source>
          <target state="translated">Wywołanie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> w klasie pochodnej (oraz za jego pośrednictwem w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> klasy) po zakończeniu korzystania z klasy pochodnej.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> method leaves the derived class in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> — Metoda pozostawia klasy pochodnej w stanie uniemożliwiającym jego używanie.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>After calling <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>, you must release all references to the derived class and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> so the memory they were occupying can be reclaimed by garbage collection.</source>
          <target state="translated">Po wywołaniu <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>, konieczne jest zwolnienie wszystkich odwołań do klasy pochodnej i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> , można odzyskać pamięci, zostały one zajmujące przez wyrzucanie elementów bezużytecznych.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Always call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> before you release your last reference to the class derived from <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</source>
          <target state="translated">Wywoływanie zawsze <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> przed zwolnieniem ostatniego odwołania do klasy pochodnej z <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>Otherwise, the resources <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</source>
          <target state="translated">W przeciwnym razie zasoby <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase&gt;</ph> i korzystają z klasy pochodnej zostanie nie zwolniona dopóki wyrzucanie elementów bezużytecznych wywołuj destruktory obiektów.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is often implemented to process the code in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, combined with a call to <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> często jest stosowane do przetwarzania kodu w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, połączony z wywołaniem do <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)">
          <source>If you choose to do this in your derived class, it is customary to implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to allocate whatever <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> released.</source>
          <target state="translated">Jeśli chcesz to zrobić w klasie pochodnej jest zwyczajowe do zaimplementowania <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> przydzielić niezależnie od <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.Dispose%2A&gt;</ph> wydane.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</source>
          <target state="translated">Pobiera dziennika zdarzeń, który służy do zapisania powiadomień wywołania polecenia usługi, takie jak uruchamianie i zatrzymywanie, w dzienniku zdarzeń aplikacji.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>An <ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph> instance whose source is registered to the Application log.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Diagnostics.EventLog" /&gt;</ph> Wystąpienie, którego źródłem jest zarejestrowany w dzienniku aplikacji.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The constructor initializes the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property to an instance with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType&gt;</ph> properties set.</source>
          <target state="translated">Konstruktor inicjuje <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> dla właściwości wystąpienia o <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType&gt;</ph> zestawu właściwości.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The source is the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> of the service, and the log is the computer's Application log.</source>
          <target state="translated">Źródło jest <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> usługi, i dziennik jest dziennika aplikacji z komputera.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>These values are set automatically and cannot be changed for automatic logging of service commands.</source>
          <target state="translated">Te wartości są ustawiane automatycznie i nie można zmienić dla automatycznego rejestrowania poleceń usługi.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>When <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</source>
          <target state="translated">Gdy <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, Start, Zatrzymaj, Wstrzymaj, Kontynuuj i polecenia niestandardowych są automatycznie rejestrowane w dzienniku zdarzeń aplikacji.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property to write additional messages to that log as well.</source>
          <target state="translated">Można użyć <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> właściwość do zapisania w tym dzienniku również przejrzeć dodatkowe komunikaty.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>The component calls <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType&gt;</ph> using this <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> member.</source>
          <target state="translated">Wywołania składnika <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType&gt;</ph> za pomocą tej <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> elementu członkowskiego.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.EventLog">
          <source>To report information to a custom event log rather than the Application log, set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> to <ph id="ph2">`false`</ph> and write instructions within the command-handling methods <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to post to the appropriate log.</source>
          <target state="translated">Aby przekazać informacje niestandardowe dziennika zdarzeń, a nie w dzienniku aplikacji, ustaw <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> do <ph id="ph2">`false`</ph> i pisanie instrukcji w obrębie metody obsługi polecenia <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, lub <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> do wysłania do odpowiedniego dziennika.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>Gets or sets the exit code for the service.</source>
          <target state="translated">Pobiera lub ustawia kod zakończenia usługi.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>The exit code for the service.</source>
          <target state="translated">Kod zakończenia usługi.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ExitCode">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ExitCode%2A&gt;</ph> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</source>
          <target state="translated">Ustaw <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ExitCode%2A&gt;</ph> właściwości na wartość inną niż zero, przed zatrzymaniem usługi wystąpił błąd menedżera kontroli usług.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="F:System.ServiceProcess.ServiceBase.MaxNameLength">
          <source>Indicates the maximum size for a service name.</source>
          <target state="translated">Określa maksymalny rozmiar nazwy usługi.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.ServiceProcess.ServiceBase.MaxNameLength">
          <source>ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</source>
          <target state="translated">Elementy ServiceName i DisplayName mają rozmiar ograniczenia, które muszą przestrzegać podczas ustawiania właściwości w klasie usługi.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>When implemented in a derived class, <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /&gt;</ph> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /&gt;</ph> jest uruchamiany, gdy polecenie Kontynuuj, jest wysyłane do usługi przez Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>Specifies actions to take when a service resumes normal functioning after being paused.</source>
          <target state="translated">Określa akcje w sytuacji, gdy usługa wznawia normalne działanie po wstrzymaniu.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to mirror your application's response to <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated">Implementowanie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> dublowanego odpowiedzi aplikacji <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>When you continue the service (either through the Services console or programmatically), the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> processing runs, and the service becomes active again.</source>
          <target state="translated">Jeśli nadal (lub za pośrednictwem konsoli usługi programowo), usługa <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> przetwarzania działa i usługa stanie się ponownie aktywna.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> powinien zostać zastąpiona po <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if they are implemented.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph2">`false`</ph>SCM nie przejdą Wstrzymaj i Kontynuuj żądania do usługi, więc <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> metody nie zostanie wywołany, nawet jeśli są one wykonywane.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnContinue">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">W SCM <ph id="ph1">`Pause`</ph> i <ph id="ph2">`Continue`</ph> formanty są wyłączone, gdy <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The command message sent to the service.</source>
          <target state="translated">Komunikat polecenia wysyłane do usługi.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>When implemented in a derived class, <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /&gt;</ph> executes when the Service Control Manager (SCM) passes a custom command to the service.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej <ph id="ph1">&lt;see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /&gt;</ph> wykonuje się, gdy Menedżer sterowania usługami (SCM) przekazuje polecenia niestandardowych do usługi.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Specifies actions to take when a command with the specified parameter value occurs.</source>
          <target state="translated">Określa akcje do wykonania po wystąpieniu polecenia podana wartość parametru.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> Pozwala określić dodatkowe funkcje oprócz uruchamianie, zatrzymywanie, wstrzymywanie i kontynuowanie usługi.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The SCM does not examine the custom command to verify whether the service supports the <ph id="ph1">`command`</ph> parameter passed in.</source>
          <target state="translated">Menedżer sterowania usługami nie bada niestandardowe polecenia, aby sprawdzić, czy usługa obsługuje <ph id="ph1">`command`</ph> przekazany parametr.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>It passes the custom command directly to the service.</source>
          <target state="translated">Przekazuje ono polecenia niestandardowych bezpośrednio do usługi.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>If the service does not recognize the <ph id="ph1">`command`</ph> parameter, it does nothing.</source>
          <target state="translated">Jeśli usługa nie rozpoznaje <ph id="ph1">`command`</ph> parametru go nie działają.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Custom commands are raised by an <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph> statement in a <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> component.</source>
          <target state="translated">Polecenia niestandardowe są wywoływane przez <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph> instrukcji w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> składnika.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Use a switch statement or if..then condition to handle the custom commands you define on your service.</source>
          <target state="translated">Użyj instrukcji switch lub, jeśli... następnie warunek do obsługi polecenia niestandardowych, które należy zdefiniować w usłudze.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>The only values for a custom command that you can define in your application or use in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> are those between 128 and 255.</source>
          <target state="translated">Tylko wartości dla polecenia niestandardowych, które można zdefiniować w aplikacji lub użyć w <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> są od 128 do 255.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>Integers below 128 correspond to system-reserved values.</source>
          <target state="translated">Liczby całkowite poniżej 128 odpowiadają wartościom zarezerwowana przez system.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> właściwość jest <ph id="ph2">`true`</ph>, niestandardowych poleceń, takich jak wszystkie inne polecenia tworzyć wpisy w dzienniku zdarzeń do raportowania, czy wykonanie metody powodzeniem lub niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wykonuje się, gdy polecenia Wstrzymaj jest wysyłane do usługi przez Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Specifies actions to take when a service pauses.</source>
          <target state="translated">Określa akcje w sytuacji, gdy wstrzymuje usługę.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> to specify the processing that occurs when the service receives a Pause command.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> do określenia przetwarzania, które występuje, gdy usługa odbierze polecenie wstrzymania.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> powinien zostać zastąpiona po <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>When you continue a paused service (either through the Services console or programmatically), the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> processing is run, and the service becomes active again.</source>
          <target state="translated">Jeśli będziesz kontynuować wstrzymanej usługi (lub za pośrednictwem konsoli usługi programowo), <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> przetwarzania jest uruchamiane, a usługa stanie się ponownie aktywna.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>The Pause command only allows your application to react to a specific event.</source>
          <target state="translated">Polecenie Wstrzymaj umożliwia tylko aplikację do reagowania na zdarzenia.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> does nothing to the service that you do not define it to do.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> nie działa z usługą nie definiują zrobić.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</source>
          <target state="translated">Wysyła żądanie wstrzymania do usługi można zaoszczędzić zasoby systemowe, ponieważ Wstrzymaj muszą zwalnia wszystkie zasoby systemowe.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</source>
          <target state="translated">Na przykład jeśli zostały otwarte wątków w procesie, wstrzymanie usługi, a nie jej zatrzymania umożliwiają wątków pozostają otwarte, co eliminuje konieczność ich ponowne przydzielenie, gdy usługa będzie.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>If you define Pause to release all system resources, it behaves like a Stop command.</source>
          <target state="translated">W przypadku definiowania Wstrzymaj, aby zwolnić wszystkie zasoby systemowe, zachowuje się jak polecenia zatrzymania.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> to <ph id="ph2">`true`</ph>, and override <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</source>
          <target state="translated">Ustaw <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> do <ph id="ph2">`true`</ph>i Zastąp <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> do określenia przetwarzania, który powinien wystąpić, gdy Menedżer sterowania usługami przekazuje żądanie wstrzymania lub kontynuować z usługą.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> should be implemented to undo the processing in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> powinny zostać wdrożone cofnąć przetwarzania w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM will not pass Pause or Continue requests to the service, so the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> methods will not be called even if implemented.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph2">`false`</ph>SCM nie przejdą Wstrzymaj i Kontynuuj żądania do usługi, więc <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph> metody nie zostanie wywołany, nawet jeśli zaimplementowane.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPause">
          <source>In the SCM, the <ph id="ph1">`Pause`</ph> and <ph id="ph2">`Continue`</ph> controls are disabled when <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">W SCM <ph id="ph1">`Pause`</ph> i <ph id="ph2">`Continue`</ph> formanty są wyłączone, gdy <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A&gt;</ph> jest <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> that indicates a notification from the system about its power status.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.PowerBroadcastStatus" /&gt;</ph> wskazujące powiadomienie z systemu o jego stan zasilania.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>When implemented in a derived class, executes when the computer's power status has changed.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wykonuje po zmianie stanu zasilania komputera.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</source>
          <target state="translated">Dotyczy to komputerów przenośnych gdy przejdą w tryb wstrzymania, który nie jest taka sama jak zamknięcia systemu.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>When implemented in a derived class, the needs of your application determine what value to return.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wymagań aplikacji ustalić, jakie wartości do zwrócenia.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>For example, if a <ph id="ph1">&lt;see langword="QuerySuspend" /&gt;</ph> broadcast status is passed, you could cause your application to reject the query by returning <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Na przykład jeśli <ph id="ph1">&lt;see langword="QuerySuspend" /&gt;</ph> emisji stanu jest przekazywana, może spowodować, że aplikacja do odrzucania zapytanie zwróciła <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> to specify the processing that occurs when the system event indicated in the <ph id="ph2">&lt;xref:System.ServiceProcess.PowerBroadcastStatus&gt;</ph> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> do określenia przetwarzania, które występuje, gdy zdarzenie systemowe <ph id="ph2">&lt;xref:System.ServiceProcess.PowerBroadcastStatus&gt;</ph> występuje wyliczenie — na przykład gdy komputer znajduje się w trybie wstrzymania lub wskazuje na niskim poziomie naładowania baterii zasilania.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A&gt;</ph> powinien zostać zastąpiona po <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A&gt;</ph> jest właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>A structure that identifies the change type.</source>
          <target state="translated">Struktura, która identyfikuje typ zmiany.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>Executes when a change event is received from a Terminal Server session.</source>
          <target state="translated">Wykonywana po odebraniu zdarzenia zmiany z sesji serwera terminali.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)">
          <source>You must set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable the execution of this method.</source>
          <target state="translated">Należy ustawić <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A&gt;</ph> właściwości <ph id="ph2">`true`</ph> umożliwiające wykonanie tej metody.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>When implemented in a derived class, executes when the system is shutting down.</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wykonuje się, gdy system jest zamykany.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>Specifies what should occur immediately prior to the system shutting down.</source>
          <target state="translated">Określa, jakie powinny występować bezpośrednio przed zamykanie systemu.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> to specify the processing that occurs when the system shuts down.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> do określenia przetwarzania, które występuje, gdy system będzie zamykany.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source>This event occurs only when the operating system is shut down, not when the computer is turned off.</source>
          <target state="translated">To zdarzenie występuje tylko wtedy, gdy system operacyjny jest zamknięta, nie w przypadku, gdy komputer jest wyłączony.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnShutdown">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> is expected to be overridden when the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnShutdown%2A&gt;</ph> powinien zostać zastąpiona po <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.CanShutdown%2A&gt;</ph> jest właściwość <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Data passed by the start command.</source>
          <target state="translated">Dane przekazywane przez polecenia uruchomienia.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wykonuje po wysłaniu polecenia Start z usługą przez Menedżera sterowania usługami (SCM) lub podczas uruchamiania systemu operacyjnego (dla usługi, które jest uruchamiane automatycznie).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Specifies actions to take when the service starts.</source>
          <target state="translated">Określa akcje do wykonania podczas uruchamiania usługi.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to specify the processing that occurs when the service receives a Start command.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> do określenia przetwarzania, które występuje, gdy usługa odbiera polecenia uruchomienia.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> is the method in which you specify the behavior of the service.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> jest to metoda, w którym można określić zachowania usługi.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> can take arguments as a way to pass data, but this usage is rare.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> Możliwe argumenty jako sposób przekazywania danych, ale to użycie jest rzadko.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Do not use the constructor to perform processing that should be in <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Konstruktor nie jest używany do przetwarzania, który powinien być w <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> to handle all initialization of your service.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> do obsługi wszystkich inicjowania usługi.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The constructor is called when the application's executable runs, not when the service runs.</source>
          <target state="translated">Konstruktor jest wywoływane, gdy aplikacja elementu wykonywalnego działa, a nie w przypadku, gdy usługa jest uruchamiana.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The executable runs before <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</source>
          <target state="translated">Plik wykonywalny uruchamiany przed <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</source>
          <target state="translated">Jeśli będziesz kontynuować, na przykład konstruktora nie jest wywoływany ponownie, ponieważ Menedżer sterowania usługami zawiera już obiekt w pamięci.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> releases resources allocated in the constructor rather than in <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, the needed resources would not be created again the second time the service is called.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> zwalnia zasoby przydzielone w konstruktorze, a nie w <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, niezbędnych zasobów nie będzie można utworzyć ponownie po raz drugi nosi nazwę usługi.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Services can be set to start automatically when the computer reboots by setting the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> on the service's installer to <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</source>
          <target state="translated">Usługi może być ustawiony na uruchamiane automatycznie po ponownym uruchomieniu komputera przez ustawienie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.StartType%2A&gt;</ph> na Instalatora usługi <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceStartMode.Automatic&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>In such a situation, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> would be called at system startup.</source>
          <target state="translated">W takiej sytuacji <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> będzie wywoływana podczas uruchamiania systemu.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> is expected to be overridden in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> powinien zostać zastąpiony w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>For the service to be useful, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should both be implemented in your service class.</source>
          <target state="translated">Dla usługi powinna być użyteczna <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> powinny być zarówno implementowane w klasie usługi.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Process initialization arguments for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method, not in the Main method.</source>
          <target state="translated">Przetwarzanie argumentów inicjowania usługi w <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> metody, nie znajduje się w metody Main.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The arguments in the <ph id="ph1">`args`</ph> parameter array can be set manually in the properties window for the service in the Services console.</source>
          <target state="translated">Argumenty <ph id="ph1">`args`</ph> tablicy parametrów można ustawić ręcznie w oknie dialogowym właściwości usługi w konsoli usługi.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</source>
          <target state="translated">Argumenty wprowadzony w konsoli nie są zapisywane; są one przekazywane do usługi jednorazowo po uruchomieniu usługi w Panelu sterowania.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services<ph id="ph1">\\</ph><bpt id="p1">*</bpt><ph id="ph2">\&lt;</ph>service name&gt;<ept id="p1">*</ept>).</source>
          <target state="translated">Argumenty, które musi być obecny, jeśli usługa zostanie automatycznie uruchomiony można umieścić w wartości ciągu ImagePath dla klucza rejestru usługi (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services<ph id="ph1">\\</ph> <bpt id="p1">*</bpt> <ph id="ph2">\&lt;</ph> Nazwa usługi &gt;<ept id="p1">*</ept>).</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])">
          <source>You can obtain the arguments from the registry using the <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> method, for example:  <ph id="ph2">`string[] imagePathArgs = Environment.GetCommandLineArgs();`</ph>.</source>
          <target state="translated">Argumenty można uzyskać z rejestru przy użyciu <ph id="ph1">&lt;xref:System.Environment.GetCommandLineArgs%2A&gt;</ph> metody, na przykład: <ph id="ph2">`string[] imagePathArgs = Environment.GetCommandLineArgs();`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</source>
          <target state="translated">Po zaimplementowaniu w klasie pochodnej, wykonuje się, gdy polecenie zatrzymania jest wysyłane do usługi przez Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>Specifies actions to take when a service stops running.</source>
          <target state="translated">Określa akcje do podjęcia, gdy usługa przestanie działać.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> to specify the processing that occurs when the service receives a Stop command.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> do określenia przetwarzania, które występuje, gdy usługa odbiera polecenia zatrzymania.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>When the SCM receives a Stop command, it uses the value of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> to verify whether the service accepts Stop commands.</source>
          <target state="translated">Menedżer sterowania usługami odebrania polecenia zatrzymania używa wartości <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> Aby sprawdzić, czy usługa akceptuje polecenia zatrzymania.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the Stop command is passed to the service, and the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method is called if it is defined.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, polecenia zatrzymania jest przekazywany do usługi i <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> metoda jest wywoływana, gdy jest zdefiniowana.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is not implemented in the service, the SCM handles the Stop command.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> nie jest zaimplementowana w usłudze Menedżer sterowania usługami obsługuje polecenia zatrzymania.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the SCM ignores the Stop command.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.CanStop%2A&gt;</ph> jest <ph id="ph2">`false`</ph>, SCM ignoruje polecenia zatrzymania.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>It is not passed to the service.</source>
          <target state="translated">Nie jest przekazywany do usługi.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>The Stop command returns and throws an exception.</source>
          <target state="translated">Polecenie zatrzymania zwraca i zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> is expected to be overridden in the derived class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> powinien zostać zastąpiony w klasie pochodnej.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.OnStop">
          <source>For the service to be useful, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> should both be implemented in your service class.</source>
          <target state="translated">Dla usługi powinna być użyteczna <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> powinny być zarówno implementowane w klasie usługi.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The requested time in milliseconds.</source>
          <target state="translated">Żądany czas w milisekundach.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>Requests additional time for a pending operation.</source>
          <target state="translated">Dodatkowy czas żądań oczekujących operacji.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A&gt;</ph> method is intended to be called by the overridden <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A&gt;</ph> Metoda jest przeznaczona do wywoływania przez przesłoniętych <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnContinue%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph>, lub <ph id="ph5">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> metod do żądania dodatkowego czasu oczekująca operacja, aby zapobiec Menedżera sterowania usługami (SCM) oznaczanie Usługa nie odpowiada.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>If the pending operation is not a continue, pause, start, or stop, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Jeśli nie jest oczekująca operacja Kontynuuj, Wstrzymaj, uruchomienia lub zatrzymania, <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> jest generowany.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)">
          <source>The service is not in a pending state.</source>
          <target state="translated">Usługa nie jest w stanie oczekiwania.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.ServiceProcess.ServiceBase">
          <source>Provides the main entry point for a service executable.</source>
          <target state="translated">Zawiera główny punkt wejścia dla pliku wykonywalnego usługi.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> which indicates a service to start.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.ServiceProcess.ServiceBase" /&gt;</ph> co oznacza usługi, aby rozpocząć.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>Registers the executable for a service with the Service Control Manager (SCM).</source>
          <target state="translated">Rejestruje plik wykonywalny usługi z Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>Call this overload in the <ph id="ph1">`main()`</ph> function of the service executable to register the service with the Service Control Manager.</source>
          <target state="translated">Wywołać tego przeciążenia <ph id="ph1">`main()`</ph> funkcja plik wykonywalny, aby zarejestrować usługę z Menedżerem sterowania usługami usługi.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29&gt;</ph>, the Service Control Manager issues a Start command, which results in a call to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> method in the service.</source>
          <target state="translated">Po wywołaniu metody <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29&gt;</ph>, Menedżer sterowania usługami wystawia polecenie Start, co powoduje wywołanie <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> metody w usłudze.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>The service is not started until the Start command is executed.</source>
          <target state="translated">Usługa nie jest uruchomiona do momentu rozpoczęcia polecenie zostanie wykonane.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> method is called in much the same way as <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> for Windows Forms applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana w znacznie taki sam sposób jak <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> dla aplikacji formularzy systemu Windows.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an entry is written to the event log if the service specified by the <ph id="ph3">`service`</ph> parameter fails to start.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, wpis są zapisywane w dzienniku zdarzeń, jeśli usługa określony przez <ph id="ph3">`service`</ph> parametru nie powiedzie się.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>An array of ServiceBase instances, which indicate services to start.</source>
          <target state="translated">Tablica wystąpień elementu ServiceBase, które wskazują uruchomienie usług.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>Registers the executable for multiple services with the Service Control Manager (SCM).</source>
          <target state="translated">Rejestruje plik wykonywalny dla wielu usług z Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>Call this overload in the <ph id="ph1">`main()`</ph> function of the service executable to register the services with the Service Control Manager.</source>
          <target state="translated">Wywołać tego przeciążenia <ph id="ph1">`main()`</ph> funkcja plik wykonywalny do rejestrowania usług z Menedżerem sterowania usługami usługi.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>After you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29&gt;</ph>, the Service Control Manager issues Start commands, which result in calls to the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> methods in the services.</source>
          <target state="translated">Po wywołaniu metody <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29&gt;</ph>, Menedżera sterowania usługami wydaje polecenia Start, których wynikiem wywołania <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStart%2A&gt;</ph> metod w usługach.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The services are not started until the Start commands are executed.</source>
          <target state="translated">Nie są uruchomione usługi, do momentu rozpoczęcia polecenia są wykonywane.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> method is called in much the same way as the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> method for Windows Forms applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType&gt;</ph> Metoda jest wywoływana w znacznie taki sam sposób jak <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType&gt;</ph> metodę dla aplikacji formularzy systemu Windows.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>If <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> is <ph id="ph2">`true`</ph>, an entry is written to the event log if any service in the array fails to start.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.AutoLog%2A&gt;</ph> jest <ph id="ph2">`true`</ph>, wpis są zapisywane w dzienniku zdarzeń, jeśli nie można uruchomić wszystkie usługi w tablicy.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>You did not supply a service to start.</source>
          <target state="translated">Nie dostarczył usługi, aby rozpocząć.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])">
          <source>The array might be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">Tablica może być <ph id="ph1">&lt;see langword="null" /&gt;</ph> lub jest pusty.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>Gets the service control handle for the service.</source>
          <target state="translated">Pobiera uchwyt formantu usługi dla usługi.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> structure that contains the service control handle for the service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> Strukturę, która zawiera uchwyt formantu usługi dla usługi.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>The service control handle is used to communicate with the Service Control Manager (SCM).</source>
          <target state="translated">Uchwyt formantu usługi jest używany do komunikacji z Menedżera sterowania usługami (SCM).</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>The handle can be used to update the service control manager's status information for the calling service using the unmanaged <ph id="ph1">`SetServiceStatus`</ph> function.</source>
          <target state="translated">Dojście można zaktualizować informacji o stanie menedżera kontroli usług dla wywołania usługi za pomocą niezarządzanych <ph id="ph1">`SetServiceStatus`</ph> funkcji.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>for access to unmanaged code.</source>
          <target state="translated">Aby uzyskać dostęp do kodu niezarządzanego.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Wyliczenie skojarzone: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>The number of arguments in the argument array.</source>
          <target state="translated">Liczba argumentów w tablicy argumentu.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> structure that points to an array of arguments.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> Strukturę, która odwołuje się do tablicy argumentów.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)">
          <source>Registers the command handler and starts the service.</source>
          <target state="translated">Rejestruje program obsługi poleceń i uruchamia usługę.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>Gets or sets the short name used to identify the service to the system.</source>
          <target state="translated">Pobiera lub ustawia krótką nazwę, używany do identyfikowania usługi do systemu.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The name of the service.</source>
          <target state="translated">Nazwa usługi.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> identifies the service to the Service Control Manager.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> Identyfikuje usługę menedżera kontroli usług.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The value of this property must be identical to the name recorded for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> property of the corresponding installer class.</source>
          <target state="translated">Wartość tej właściwości musi być taka sama jak nazwa zarejestrowane w usłudze <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType&gt;</ph> właściwość odpowiadającą klasę Instalatora.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>In code, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> of the service is usually set in the <ph id="ph2">`main()`</ph> function of the executable.</source>
          <target state="translated">W kodzie <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> usługi jest zwykle ustawiana <ph id="ph2">`main()`</ph> funkcja pliku wykonywalnego.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> is also used to specify the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> associated with the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph> Również służy do określania <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType&gt;</ph> skojarzone z <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>This <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> is an instance that writes service command information to the Application log.</source>
          <target state="translated">To <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.EventLog%2A&gt;</ph> jest wystąpieniem, który zapisuje informacje dotyczące poleceń usługi do dziennika aplikacji.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, which supplies the source string for the event log, must be set before the service writes to the event log.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.ServiceName%2A&gt;</ph>, Który dostarcza ciąg źródłowy dla dziennika zdarzeń, należy skonfigurować usługę zapisuje w dzienniku zdarzeń.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>Trying to access the event log before the source name is set causes an exception to be thrown.</source>
          <target state="translated">Próby dostępu do dziennika zdarzeń, przed skonfigurowaniem nazwę źródła powoduje, że wyjątek zostanie wygenerowany.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The service has already been started.</source>
          <target state="translated">Usługa została już uruchomiona.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The <ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph> property cannot be changed once the service has started.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /&gt;</ph> Nie można zmienić właściwości, gdy usługa została uruchomiona.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.ServiceProcess.ServiceBase.ServiceName">
          <source>The specified name is a zero-length string or is longer than <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /&gt;</ph>, or the specified name contains forward slash or backslash characters.</source>
          <target state="translated">Podana nazwa jest ciągiem o zerowej długości lub jej długość przekracza <ph id="ph1">&lt;see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" /&gt;</ph>, albo określona nazwa zawiera znaki, do przodu ukośnika ani ukośnika odwrotnego.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>Stops the executing service.</source>
          <target state="translated">Zatrzymuje usługę wykonywania.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Stop%2A&gt;</ph> method sets the service state to indicate a stop is pending and calls the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.Stop%2A&gt;</ph> Metoda ustawia stan usługi, aby wskazać Trwa oczekiwanie na zatrzymanie i wywołania <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceBase.OnStop%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>After the application is stopped, the service state is set to stopped.</source>
          <target state="translated">Po wyłączeniu aplikacji stan usługi jest ustawiony do zatrzymania.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceProcess.ServiceBase.Stop">
          <source>If the application is a hosted service, the application domain is unloaded.</source>
          <target state="translated">Jeśli aplikacja jest hostowana usługa, nie jest załadowany domeny aplikacji.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>