<Type Name="FontTypeConverter" FullName="System.Windows.Xps.Serialization.FontTypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="94faffb28fe7c7c8e6ae9bc486b7cb213cb857af" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39762447" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontTypeConverter : System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontTypeConverter extends System.ComponentModel.ExpandableObjectConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Xps.Serialization.FontTypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontTypeConverter&#xA;Inherits ExpandableObjectConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontTypeConverter : System::ComponentModel::ExpandableObjectConverter" />
  <TypeSignature Language="F#" Value="type FontTypeConverter = class&#xA;    inherit ExpandableObjectConverter" />
  <AssemblyInfo>
    <AssemblyName>ReachFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ExpandableObjectConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia typy konwerterów dla konwersji <see cref="T:System.Windows.Media.GlyphRun" /> obiektów do i z obiektów innych typów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa tylko za pośrednictwem dostępu <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody. Zobacz klas bazowych <xref:System.ComponentModel.TypeConverter> i <xref:System.ComponentModel.ExpandableObjectConverter> inne informacje o ważnych użycia.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontTypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Xps.Serialization.FontTypeConverter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa tylko za pośrednictwem dostępu <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> metody. Zobacz klas bazowych <xref:System.ComponentModel.TypeConverter> i <xref:System.ComponentModel.ExpandableObjectConverter> inne informacje o ważnych użycia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontTypeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt zawierający informacje kontekstowe.</param>
        <param name="sourceType">Typ obiektu do przekonwertowania.</param>
        <summary>Zwraca wartość wskazującą, czy ten konwerter można przekonwertować wystąpienia określonego typu <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
        <returns>
          <see langword="true" /> Jeśli obiekty określonego typu mogą być konwertowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementowanego w tej klasie, Metoda ta zwraca `true` tylko wtedy, gdy `sourceType` jest <xref:System.Uri>.  
  
 `context` Parametr nie jest używany. Zobacz uwagi dotyczące obiektów dziedziczących.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zastępuje tę metodę, aby zapewnić wymagań konwersji. Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera. Ten parametr może być <see langword="null" />; w związku z tym, Zawsze sprawdzaj ją. Ponadto we właściwościach <paramref name="context" /> obiektu może zwrócić odwołanie o wartości null (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="fontTypeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt zawierający informacje kontekstowe.</param>
        <param name="destinationType">Typ obiektu, który chcesz przekonwertować glif uruchomić.</param>
        <summary>Zwraca wartość wskazującą, czy to <see cref="T:System.Windows.Xps.Serialization.FontTypeConverter" /> można przekonwertować <see cref="T:System.Windows.Media.GlyphRun" /> na wystąpienie określonego typu.</summary>
        <returns>
          <see langword="true" /> Jeśli konwersja jest możliwa; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementowanego w tej klasie, Metoda ta zwraca `true` tylko wtedy, gdy `destinationType` jest <xref:System.Uri>.  
  
 `context` Parametr nie jest używany. Zobacz uwagi dotyczące obiektów dziedziczących.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zastępuje tę metodę, aby zapewnić wymagań konwersji. Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera. Ten parametr może być <see langword="null" />; w związku z tym, Zawsze sprawdzaj ją. Ponadto we właściwościach <paramref name="context" /> obiektu może zwrócić odwołanie o wartości null (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="fontTypeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt zawierający informacje kontekstowe.</param>
        <param name="culture">Języka i kultury, które są używane podczas konwersji.</param>
        <param name="value">Obiekt, który jest konwertowany.</param>
        <summary>Konwertuje określony obiekt do <see cref="T:System.Windows.Media.GlyphRun" />.</summary>
        <returns>Nowy <see cref="T:System.Windows.Media.GlyphRun" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zaimplementowana w tej klasie, z wyjątkiem sytuacji, aby zgłaszać wyjątki. Zobacz uwagi dotyczące obiektów dziedziczących.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ta metoda jest wywoływana z tej klasy, a nie z klasy pochodnej.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> Nie jest typem, który może zostać przekonwertowany.</exception>
        <block subset="none" type="overrides">
          <para>Zastępuje tę metodę, aby zapewnić metody konwersji. Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera. Użyj <paramref name="culture" /> parametru do podania informacji na temat języka lub kultury.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="fontTypeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt zawierający informacje kontekstowe.</param>
        <param name="culture">Języka i kultury, które są używane podczas konwersji.</param>
        <param name="value">Obiekt, który ma zostać przekonwertowany.</param>
        <param name="destinationType">Typ, który ma <c>wartość</c> przekonwertować.</param>
        <summary>Konwertuje <see cref="T:System.Windows.Media.GlyphRun" /> do obiektu określonego typu.</summary>
        <returns>Nowy <see cref="T:System.Object" /> wyznaczonym typu. Zaimplementowanego w tej klasie, musi to być <see cref="T:System.Uri" />. Wyraża [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] z podzbioru czcionki, który jest używany przez <paramref name="value" /> parametru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementowanego w tej klasie `value` musi być <xref:System.Windows.Media.GlyphRun>.  
  
 Zaimplementowanego w tej klasie `destinationType` musi być <xref:System.Uri> lub <xref:System.NotSupportedException> zgłaszany.  
  
 `culture` Parametr nie jest używany. Zobacz uwagi dotyczące obiektów dziedziczących.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="destinationType" /> Nie jest typem, <paramref name="value" /> mogą być konwertowane na.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.Windows.Xps.XpsSerializationException">Wystąpi błąd podczas serializowania wykonywania symbol.</exception>
        <block subset="none" type="overrides">
          <para>Zastępuje tę metodę, aby podać własne konwersji. Użyj <paramref name="culture" /> parametru do określenia języka i kultury. Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera. Ten parametr może być <see langword="null" />; w związku z tym, Zawsze sprawdzaj ją. Ponadto we właściwościach <paramref name="context" /> obiektu może zwrócić odwołanie o wartości null (<see langword="Nothing" />).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Xps.Serialization.FontTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="fontTypeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ReachFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">Obiekt zawierający informacje kontekstowe.</param>
        <param name="value">Obiekt, który należy opisy właściwości.</param>
        <param name="attributes">Tablica atrybutów, które filtrują zwrócona kolekcja w celu wykluczenia właściwości nie ma znaczenia.</param>
        <summary>Pobiera kolekcję opisy właściwości dla określonego typu.</summary>
        <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierający opisy właściwości, które są dostępne dla składnika; lub <see langword="null" /> Jeśli brak opisów właściwości są zwracane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest zaimplementowana w tej klasie, z wyjątkiem sytuacji, aby zgłosić wyjątek. Zobacz uwagi dotyczące obiektów dziedziczących.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ta metoda jest wywoływana z tej klasy, a nie z klasy pochodnej.</exception>
        <block subset="none" type="overrides">
          <para>Zastąpienie tej metody Podaj także metodę uzyskiwania wybrane <see cref="T:System.ComponentModel.PropertyDescriptor" /> obiektów lub typów. Użyj <paramref name="context" /> parametru, aby wyodrębnić dodatkowe informacje o środowisku, w którym jest wywoływana tego konwertera. Użyj <paramref name="attributes" /> tablicy, aby określić właściwości, aby uwzględnić lub wykluczyć.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>