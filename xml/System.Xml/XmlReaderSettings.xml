<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85fd8a174f89dadfc095852a1095bef2d6c66a51" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69439526" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zestaw funkcji do obsługi dla <see cref="T:System.Xml.XmlReader" /> obiektu utworzonego <see cref="Overload:System.Xml.XmlReader.Create" /> przez metodę.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Używasz metody do uzyskiwania <xref:System.Xml.XmlReader>wystąpień. <xref:System.Xml.XmlReader.Create%2A> Ta metoda używa klasy <xref:System.Xml.XmlReaderSettings> , aby określić, które funkcje zaimplementować w tworzonym przez <xref:System.Xml.XmlReader> niego obiekcie.  
  
 Zapoznaj się z sekcjami <xref:System.Xml.XmlReader> spostrzeżenia <xref:System.Xml.XmlReader.Create%2A> stron i strony referencyjne, aby uzyskać informacje o ustawieniach, które mają być używane do kontroli zgodności, sprawdzania poprawności i innych typowych scenariuszy. Aby uzyskać listę ustawień domyślnych, zobacz Konstruktor.<xref:System.Xml.XmlReaderSettings.%23ctor>  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 Podczas używania <xref:System.Xml.XmlReaderSettings> klasy należy wziąć pod uwagę następujące kwestie.  
  
-   Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawianedomyślnie.<xref:System.Xml.XmlReaderSettings> Gdy te flagi są ustawione, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schematu napotkanych w dokumencie wystąpienia w <xref:System.Xml.XmlReader>obiekcie. Jeśli obiekt jest `null`, lokalizacje schematu <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> nie są rozpoznawane, nawet jeśli flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> i walidacja są ustawione. <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>  
  
-   Schematy dodane podczas walidacji Dodaj nowe typy i można zmienić wynik walidacji zweryfikowanego dokumentu. W związku z tym schematy zewnętrzne powinny być rozpoznawane tylko z zaufanych źródeł.  
  
-   Komunikaty o błędach weryfikacji mogą uwidaczniać poufne informacje o modelu zawartości. Błędy walidacji i komunikaty ostrzegawcze są obsługiwane <xref:System.Xml.Schema.ValidationEventHandler> za pomocą delegata lub są udostępniane <xref:System.Xml.Schema.XmlSchemaValidationException> jako Jeśli nie ma <xref:System.Xml.XmlReaderSettings> obsługi zdarzeń do <xref:System.Xml.Schema.XmlSchemaValidationException> obiektu (ostrzeżenia o walidacji nie powodują zgłoszenia). Informacje o modelu zawartości nie powinny być ujawnione w scenariuszach niezaufanych. Komunikaty ostrzegawcze walidacji są domyślnie pomijane i mogą być zgłaszane przez ustawienie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flagi.  
  
-   <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość<xref:System.Xml.Schema.XmlSchemaValidationException> zwraca ścieżkę identyfikatora URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość nie powinna być ujawniana w scenariuszach niezaufanych.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> Wyłączenie flagi (domyślnie włączone) jest zalecane w przypadku walidacji, niezaufanych, dużych dokumentów XML w scenariuszach wysokiej dostępności względem schematu z ograniczeniami tożsamości w dużej części dokumentu.  
  
-   <xref:System.Xml.XmlReaderSettings>obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlReaderSettings> obiektów lub podczas <xref:System.Xml.XmlReaderSettings> przekazywania obiektu z jednego składnika do drugiego.  
  
-   Przetwarzanie DTD jest domyślnie wyłączone. W przypadku włączenia przetwarzania DTD należy zwrócić uwagę na to, co obejmuje definicje DTD z niezaufanych źródeł i możliwy atak typu "odmowa usługi". Użyj, <xref:System.Xml.XmlSecureResolver> aby ograniczyć zasoby <xref:System.Xml.XmlReader> , do których może uzyskać dostęp.  
  
-   Nie Akceptuj składników pomocniczych, takich jak <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>i <xref:System.Xml.XmlResolver> obiektów, z niezaufanego źródła.  
  
-   Użycie pamięci przez aplikację, która używa <xref:System.Xml.XmlReader> programu, może mieć korelację z rozmiarem przeanalizowanego dokumentu XML. Jedna z form ataku typu "odmowa usługi" polega na tym, że zbyt duże dokumenty XML są przesyłane w celu przeanalizowania. Można ograniczyć rozmiar dokumentu, który może być analizowany przez ustawienie <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> właściwości, a następnie ograniczyć liczbę znaków, które powodują rozwijanie jednostek przez <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> ustawienie właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> , który <xref:System.Xml.XmlUrlResolver> używa z z niezbędnymi poświadczeniami.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Dokumenty i dane XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Xml.XmlReaderSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (nie ma żadnego limitu liczby znaków będących wynikiem rozwinięcia jednostek).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (nie ma limitu rozmiaru dokumentu XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> Jeśli ustawiono `true` wartość`Prohibit`domyślną <xref:System.Xml.XmlTextReader.DtdProcessing%2A> . Jeśli ustawiono <xref:System.Xml.XmlTextReader.DtdProcessing%2A> ustawienienawartość`Parse`. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> `false`|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Pusty <xref:System.Xml.Schema.XmlSchemaSet> obiekt.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nowy <xref:System.Xml.XmlUrlResolver> obiekt.|  
  
   
  
## Examples  
 Poniżej przedstawiono tworzenie obiektu ustawień, który może służyć do konstruowania czytnika, który umożliwia przetwarzanie instrukcji, komentarzy i nieznaczących białych znaków.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver">Program rozpoznawania XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia, czy <see cref="T:System.Xml.XmlReader" /> metody asynchroniczne mogą być używane w konkretnym <see cref="T:System.Xml.XmlReader" /> wystąpieniu.</summary>
        <value><see langword="true" />Jeśli można użyć metod asynchronicznych; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić tę wartość na `true` podczas tworzenia nowego <xref:System.Xml.XmlReader> wystąpienia, jeśli chcesz użyć metod asynchronicznych <xref:System.Xml.XmlReader> dla tego wystąpienia. Po utworzeniu <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReaderSettings.Async%2A> wystąpienia właściwość jest tylko do odczytu. Wartość domyślna tej właściwości to `false`.  
  
 Ta flaga jest ignorowana przez <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> Przeciążenie. Oznacza to, <xref:System.Xml.XmlReader> że jeśli tworzysz nowy oparty na istniejącym <xref:System.Xml.XmlReader>, zachowanie asynchroniczne jest zależne od danych wejściowych <xref:System.Xml.XmlReader>i nie można użyć <xref:System.Xml.XmlReaderSettings.Async%2A> flagi, aby zmienić zachowanie asynchroniczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy sprawdzanie znaków ma być przeprowadzane.</summary>
        <value><see langword="true" />Aby przeprowadzić Sprawdzanie znaków; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 <see cref="T:System.Xml.XmlReader" /> Jeśli przetwarza dane tekstowe, zawsze sprawdza, czy nazwy XML i zawartość tekstowa są prawidłowe, niezależnie od ustawienia właściwości. Ustawienie <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> umożliwiające<see langword="false" /> wyłączenie sprawdzania znaków dla odwołań do jednostek znaków.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość nakazuje czytnikowi XML Sprawdzanie znaków w danych XML, które są odczytywane i <xref:System.Xml.XmlException> zgłasza, Jeśli dowolne znaki znajdują się poza zakresem dozwolonych znaków XML. Gdy sprawdzanie znaków jest włączone, należy wykonać następujące czynności:  
  
-   Znaki mieszczą się w zakresie dozwolonych znaków XML, jak zdefiniowano w sekcji [2,2 znaków](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) zalecenia W3C XML 1,0.  
  
-   Wszystkie nazwy XML są prawidłowe, zgodnie z definicją w sekcji [typowe konstrukcje składni 2,3](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) zalecenia dotyczącego W3C XML 1,0.  
  
 Gdy ta właściwość jest ustawiona na `true`, która jest ustawieniem domyślnym <xref:System.Xml.XmlException> , zgłaszany jest wyjątek, jeśli plik XML zawiera niedozwolone znaki lub nieprawidłowe nazwy XML (na przykład nazwa elementu zaczyna się od liczby).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Xml.XmlReaderSettings" /> wystąpienia.</summary>
        <returns>Sklonowany <see cref="T:System.Xml.XmlReaderSettings" /> obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.Xml.XmlReaderSettings> obiekt można modyfikować bez wpływu na ustawienia oryginalnego obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy strumień źródłowy lub <see cref="T:System.IO.TextReader" /> powinien być zamknięty, gdy czytnik jest zamknięty.</summary>
        <value><see langword="true" />Aby zamknąć źródłowy strumień lub <see cref="T:System.IO.TextReader" /> gdy czytnik jest zamknięty; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest używane, gdy strumień lub <xref:System.IO.TextReader> jest przesyłany <xref:System.Xml.XmlReader.Create%2A> do metody. Jeśli strumień jest tworzony przez czytelnika do własnego przetwarzania, na przykład gdy czytelnik jest tworzony przy użyciu identyfikatora URI lub gdy otwiera definicję typu dokumentu zewnętrznego, jest zawsze zamknięty, gdy czytnik jest zamknięty.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom zgodności, który <see cref="T:System.Xml.XmlReader" /> będzie zgodny.</summary>
        <value>Jedna z wartości wyliczenia, która określa poziom zgodności, który będzie wymuszany przez czytnik XML. Wartość domyślna to <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czytelnicy XML, które są tworzone przez <xref:System.Xml.XmlReader.Create%2A> metodę, domyślnie spełniają następujące wymagania dotyczące zgodności:  
  
-   Nowe wiersze i wartości atrybutów są znormalizowane zgodnie z zaleceniem W3C [XML 1,0](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Wszystkie jednostki są automatycznie rozszerzane.  
  
-   Atrybuty domyślne zadeklarowane w definicji typu dokumentu są zawsze dodawane nawet wtedy, gdy czytnik nie sprawdza poprawności.  
  
-   Deklaracja prefiksu XML zamapowanego na prawidłowy identyfikator URI przestrzeni nazw XML jest dozwolona.  
  
-   Nazwy notacji w `NotationType` jednoatrybutowej deklaracji i `NmTokens` w deklaracji jednego `Enumeration` atrybutu są różne.  
  
 Można użyć <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> właściwości do sprawdzenia i zagwarantowania, że odczytywany strumień jest zgodny z regułami dla poprawnie sformułowanego dokumentu XML 1,0 lub fragment dokumentu. Jeśli dane nie są zgodne, <xref:System.Xml.XmlException> zgłaszany jest wyjątek. Wartość domyślna to <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (zgodność na poziomie dokumentu).  
  
 Trzy poziomy zgodności są następujące:  
  
|Ustawienie|Opis|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Zapewnia, że dane XML są zgodne z regułami dla poprawnie sformułowanego dokumentu XML 1,0. Ten poziom sprawdzania zapewnia, że każdy procesor może zużywać strumień odczytywany jako [poprawnie sformułowany dokument XML 1,0](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> Czytnik sprawdza następujące elementy:<br /><br /> -Element najwyższego poziomu nie może mieć żadnych węzłów innych niż deklaracja XML, definicja typu dokumentu (DTD), element, komentarz, biały znak lub instrukcja przetwarzania.<br />-Dane XML muszą mieć dokładnie jeden węzeł elementu najwyższego poziomu.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Zapewnia, że dane XML są zgodne z regułami dla poprawnie sformułowanego fragmentu dokumentu XML 1,0.<br /><br /> To ustawienie akceptuje dane XML z wieloma elementami głównymi lub węzłami tekstu na najwyższego poziomu. Ten poziom sprawdzania zapewnia, że każdy procesor może zużywać strumień odczytywany jako [zewnętrzną przeanalizowana jednostkę](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Określa, że czytnik powinien określić poziom sprawdzania zgodności na podstawie danych przychodzących.<br /><br /> Sprawdzanie zgodności dokumentów jest stosowane, jeśli dane XML zawierają informacje DTD.<br /><br /> Sprawdzanie zgodności fragmentu jest stosowane, jeśli dane XML zawierają jedną z następujących wartości:<br /><br /> — Tekst, CDATA lub węzeł odwołania jednostki na poziomie głównym.<br />-Więcej niż jeden element na poziomie głównym.<br />-Brak elementu na poziomie głównym.<br /><br /> <xref:System.Xml.XmlException> Jest zgłaszany w przypadku konfliktu, na przykład gdy istnieje węzeł tekstowy i DTD na poziomie głównym.<br /><br /> To ustawienie może być używane w scenariuszach zawijania, <xref:System.Xml.XmlReader.Create%2A> gdy metoda jest używana do dodawania dodatkowych funkcji do istniejącej <xref:System.Xml.XmlReader>. W tym przypadku <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> nie dodaje żadnych nowych kontroli zgodności. Sprawdzanie zgodności jest pozostawione <xref:System.Xml.XmlReader> z zawiniętym.|  
  
> [!NOTE]
>  Zalecenie XML 1,0 wymaga zgodności na poziomie dokumentu, gdy jest obecny element DTD. W związku z tym, jeśli czytnik jest skonfigurowany <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>do obsługi, ale dane XML zawierają definicję typu dokumentu (DTD) <xref:System.Xml.XmlException> , jest zgłaszany.  
  
 Poniżej przedstawiono sposób, w jaki czytnik obsługuje określone naruszenia zgodności, w zależności od ustawienia <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> właściwości:  
  
|Warunek|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Tekst lub wartość o określonym typie pojawia się na najwyższym poziomie.|<xref:System.Xml.XmlException>jest zgłaszany.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|  
|Na najwyższego poziomu występuje wiele elementów lub nie ma elementów.|<xref:System.Xml.XmlException>jest zgłaszany.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|  
|Element najwyższego poziomu jest białym znakiem.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|  
|Element najwyższego poziomu jest atrybutem (rozpoznany jako węzeł tekstowy).|<xref:System.Xml.XmlException>jest zgłaszany.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|  
|Znaleziono wiele węzłów ciągłego tekstu.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|Nie jest uważany za naruszenie tego ustawienia.|  
|Ten sam prefiks przestrzeni nazw jest zadeklarowany dwa razy w tym samym zakresie lokalnym.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Przestrzeń nazw w elemencie lub atrybucie nie istnieje w zakresie lokalnym.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Dane zawierają niezgodność przestrzeni nazw z prefiksem.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|`xml:space`atrybut zawiera nieprawidłową wartość.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Napotkano nieprawidłową nazwę.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Prefiks nie jest zgodny http://www.w3.org/XML/1998/namespace z identyfikatorem URI. `xml`|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> obiekt, który odczytuje fragment XML.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą przetwarzanie elementów DTD.</summary>
        <value>Jedna z wartości wyliczenia, która określa przetwarzanie elementów DTD. Wartość domyślna to <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Walidacja definicji typu dokumentu (DTD) jest implementowana przy użyciu ograniczeń ważności zdefiniowanych w XML W3C ( [XML) 1,0 (czwarte wersje)](https://www.w3.org/TR/2006/REC-xml-20060816/). Definicje DTD wykorzystują formalną gramatykę do opisywania struktury i składni zgodnych dokumentów XML; określają zawartość i wartości dozwolone dla dokumentu XML.  
  
 Ta właściwość może mieć jedną z następujących wartości:  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType>Aby włączyć przetwarzanie DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType>Aby zgłosić <xref:System.Xml.XmlException> wyjątek w przypadku napotkania elementu DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>Aby wyłączyć przetwarzanie DTD bez ostrzeżeń lub wyjątków.  
  
 Aby przeprowadzić walidację względem DTD, <xref:System.Xml.XmlReader> używa DTD zdefiniowanego w deklaracji DOCTYPE dokumentu XML. Deklaracja DOCTYPE może wskazywać na wbudowany DTD lub może być odwołaniem do zewnętrznego pliku DTD. Aby sprawdzić poprawność pliku XML względem DTD:  
  
-   <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> Ustaw właściwość na`DtdProcessing.Parse.`  
  
-   Ustaw <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> właściwość `ValidationType.DTD`.  
  
-   Jeśli DTD jest plikiem zewnętrznym przechowywanym w ramach zasobu sieciowego, który wymaga uwierzytelnienia, <xref:System.Xml.XmlResolver> przekaż obiekt z niezbędnymi poświadczeniami <xref:System.Xml.XmlReader.Create%2A> do metody.  
  
> [!IMPORTANT]
>  Jeśli właściwość jest ustawiona na <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, <xref:System.Xml.XmlReader> nie będzie zgłaszać elementów DTD. <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> Oznacza to, że DTD/DOCTYPE zostanie utracony w danych wyjściowych.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność pliku XML przy użyciu pliku DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Dane wejściowe  
 W przykładzie jest użyty `itemDTD.xml` plik jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy komentarze mają być ignorowane.</summary>
        <value><see langword="true" />Aby zignorować Komentarze; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` może spowodować zwrócenie wielu węzłów tekstu ciągłego z czytnika. Nie ma to wpływu na weryfikację.  
  
   
  
## Examples  
 Poniżej przedstawiono tworzenie obiektu ustawień, który może służyć do konstruowania czytnika, który umożliwia przetwarzanie instrukcji, komentarzy i nieznaczących białych znaków.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ignorować instrukcje przetwarzania.</summary>
        <value><see langword="true" />Aby zignorować instrukcje przetwarzania; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` może spowodować zwrócenie wielu węzłów tekstu ciągłego z czytnika. Nie ma to wpływu na weryfikację.  
  
   
  
## Examples  
 Poniżej przedstawiono tworzenie obiektu ustawień, który może służyć do konstruowania czytnika, który umożliwia przetwarzanie instrukcji, komentarzy i nieznaczących białych znaków.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ignorowanie nieznaczącego odstępu.</summary>
        <value><see langword="true" />Aby zignorować biały znak; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Biały znak, który nie jest uważany za znaczący, zawiera spacje, tabulatory i puste wiersze używane do ustawiania adiustacji w celu zwiększenia czytelności. Przykładem jest biały znak w zawartości elementu.  
  
 To ustawienie właściwości nie wpływa na odstępy między znakami w trybie zawartości mieszanej ani na białym miejscu, które występuje w zakresie `xml:space='preserve'` atrybutu.  
  
   
  
## Examples  
 Poniżej przedstawiono tworzenie obiektu ustawień, który może służyć do konstruowania czytnika, który umożliwia przetwarzanie instrukcji, komentarzy i nieznaczących białych znaków.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie <see cref="T:System.Xml.XmlReader" /> numeru wiersza dla obiektu.</summary>
        <value>Przesunięcie numeru wiersza. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie określa miejsce, w <xref:System.Xml.IXmlLineInfo.LineNumber%2A> którym rozpocznie się Obliczanie właściwości. <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> Jest to przydatne, jeśli dane XML są osadzone w większym dokumencie. Na przykład jeśli dane XML zostały osadzone w większym dokumencie, a dane zostały uruchomione w wierszu 101 dokumentu, możesz chcieć określić, że czytnik rozpocznie się w wierszu 100. W związku z tym, jeśli czytnik zgłosił wyjątek podczas analizowania pierwszego wiersza XML, może zgłosić numer wiersza jako wiersz 101, a nie wiersz 1.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie <see cref="T:System.Xml.XmlReader" /> położenia wiersza dla obiektu.</summary>
        <value>Przesunięcie położenia wiersza. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie określa miejsce, w <xref:System.Xml.IXmlLineInfo.LinePosition%2A> którym rozpocznie się Obliczanie właściwości. <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> Jest to przydatne, jeśli dane XML są osadzone w większym dokumencie i nie ma żadnych nowych wierszy na początku kodu XML. W takim przypadku, jeśli czytnik zgłosi wyjątek podczas analizowania kodu XML, chce zwrócić pozycję wiersza względem głównego dokumentu, a nie tylko względem fragmentu XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą maksymalną dozwoloną liczbę znaków w dokumencie, która powoduje powiększanie jednostek.</summary>
        <value>Maksymalna dozwolona liczba znaków z rozwiniętych jednostek. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zerowa (0) oznacza brak limitów liczby znaków będących wynikiem rozwinięcia jednostek. Wartość różna od zera określa maksymalną liczbę znaków, które mogą wynikać z rozwijających się jednostek.  
  
 Jeśli czytelnik podejmie próbę odczytania dokumentu zawierającego jednostki, takie jak rozmiar rozwiniętej wartości spowoduje przekroczenie tej <xref:System.Xml.XmlException> właściwości, zostanie zgłoszony.  
  
 Ta właściwość pozwala wyeliminować ataki typu "odmowa usługi", gdy osoba atakująca przesyła dokumenty XML próbujące przekroczyć limity pamięci za pomocą rozszerzających się jednostek. Ograniczając znaki, które wynikają z rozwiniętych jednostek, można wykryć atak i przeprowadzić niezawodne odzyskiwanie.  
  
   
  
## Examples  
 Poniższy kod ustawia tę właściwość, a następnie próbuje przeanalizować dokument zawierający jednostkę, która rozwija się o rozmiar większy niż określony limit. W świecie rzeczywistym można ustawić ten limit na wartość wystarczającą do obsługi prawidłowych dokumentów, ale jest ona wystarczająco mała, aby ograniczyć zagrożenie ze strony złośliwych dokumentów.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Ten przykład generuje następujące wyniki:  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą maksymalną dozwoloną liczbę znaków w dokumencie XML. Wartość zerowa (0) oznacza brak limitów rozmiaru dokumentu XML. Wartość różna od zera określa maksymalny rozmiar w znakach.</summary>
        <value>Maksymalna dozwolona liczba znaków w dokumencie XML. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zerowa (0) oznacza brak limitów liczby znaków w analizowanym dokumencie. Wartość różna od zera określa maksymalną liczbę znaków, które mogą być analizowane.  
  
 Maksymalna liczba znaków dla dokumentu zawiera liczbę znaków będących wynikiem rozwiniętych jednostek.  
  
 Jeśli czytelnik próbuje odczytać dokument o rozmiarze przekraczającym tę właściwość, <xref:System.Xml.XmlException> zostanie zgłoszony.  
  
 Ta właściwość pozwala wyeliminować ataki typu "odmowa usługi", w przypadku których osoba atakująca przesyła bardzo duże dokumenty XML. Ograniczając rozmiar dokumentu, można wykryć atak i przeprowadzić niezawodne odzyskiwanie.  
  
   
  
## Examples  
 Poniższy kod ustawia tę właściwość, a następnie próbuje przeanalizować dokument większy niż limit. W świecie rzeczywistym można ustawić ten limit na wartość wystarczającą do obsługi prawidłowych dokumentów, ale jest ona wystarczająco mała, aby ograniczyć zagrożenie ze strony złośliwych dokumentów.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Ten kod generuje następujące dane wyjściowe:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Xml.XmlNameTable" /> używaną do porównywania ciągów.</summary>
        <value>W <see cref="T:System.Xml.XmlNameTable" /> którym są przechowywane wszystkie ciągi atomowe używane przez wszystkie <see cref="T:System.Xml.XmlReader" /> wystąpienia utworzone przy użyciu <see cref="T:System.Xml.XmlReaderSettings" /> tego obiektu.  
  
Wartość domyślna to <see langword="null" />. Utworzone <see cref="T:System.Xml.XmlReader" /> wystąpienie będzie używać nowej wartości pustej <see cref="T:System.Xml.NameTable" /> , jeśli ta wartość <see langword="null" />jest.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na <xref:System.Xml.XmlNameTable> wystąpienie, jeśli chcesz udostępnić tabelę nazw wspólnych między wszystkimi utworzonymi <xref:System.Xml.XmlReader> wystąpieniami.  
  
> [!NOTE]
>  <xref:System.Xml.NameTable> Klasa nie jest bezpieczna wątkowo. W związku z tym nie może <xref:System.Xml.XmlReader> być współużytkowany między obiektami, które są uruchamiane jednocześnie w różnych wątkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy zakazać przetwarzania definicji typu dokumentu (DTD). Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
        <value><see langword="true" />aby zabronić przetwarzania DTD; w <see langword="false" />przeciwnym razie. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest ustawiona `true`na <xref:System.Xml.XmlReader> , zgłasza <xref:System.Xml.XmlException> , gdy zostanie napotkana zawartość DTD. Nie należy włączać przetwarzania DTD, jeśli chodzi o problemy z odmową usługi lub w przypadku postępowania z niezaufanymi źródłami.  
  
 Jeśli jest włączone przetwarzanie DTD, można użyć <xref:System.Xml.XmlSecureResolver> , aby ograniczyć zasoby <xref:System.Xml.XmlReader> , do których może uzyskać dostęp. Możesz również projektować aplikację, tak aby przetwarzanie XML było ograniczone do pamięci i czasu. Na przykład skonfiguruj limity limitu czasu w aplikacji ASP.NET.  
  
 Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> Jeśli ustawiono `true` wartość`Prohibit`domyślną <xref:System.Xml.XmlTextReader.DtdProcessing%2A> . Jeśli ustawiono <xref:System.Xml.XmlTextReader.DtdProcessing%2A> ustawienienawartość`Parse`. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> `false`  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność danych przy użyciu DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 W przykładzie zastosowano plik itemDTD. XML jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje elementy członkowskie klasy Settings do ich wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Xml.XmlReaderSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (nie ma żadnego limitu liczby znaków będących wynikiem rozwinięcia jednostek).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (nie ma limitu rozmiaru dokumentu XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> Jeśli ustawiono `true` wartość`Prohibit`domyślną <xref:System.Xml.XmlTextReader.DtdProcessing%2A> . Jeśli ustawiono <xref:System.Xml.XmlTextReader.DtdProcessing%2A> ustawienienawartość`Parse`. <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> `false`|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Pusty <xref:System.Xml.Schema.XmlSchemaSet> obiekt.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nowy <xref:System.Xml.XmlUrlResolver> obiekt.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Xml.Schema.XmlSchemaSet" /> do użycia podczas wykonywania walidacji schematu.</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaSet" /> Do użycia podczas przeprowadzania walidacji schematu. Wartość domyślna to pusty <see cref="T:System.Xml.Schema.XmlSchemaSet" /> obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   Nie używaj schematów z nieznanych lub niezaufanych źródeł lub lokalizacji. Takie działanie spowoduje naruszenie zabezpieczeń kodu.  
> -   Schematy XML (w tym schematy wbudowane) są podatne na ataki typu "odmowa usługi"; nie Akceptuj ich w scenariuszach niezaufanych.  
> -   Komunikaty o błędach i wyjątki dotyczące sprawdzania poprawności schematu mogą ujawniać poufne informacje o modelu zawartości lub ścieżkach URI do pliku schematu. Należy zachować ostrożność, aby nie ujawniać tych informacji osobom niezaufanym wywołującym.  
> -   Aby uzyskać dodatkowe informacje, zobacz sekcję "zagadnienia dotyczące zabezpieczeń".  
  
 <xref:System.Xml.Schema.XmlSchemaSet> Klasa obsługuje tylko schematy języka definicji schematu XML (XSD). <xref:System.Xml.XmlReader>nie można skonfigurować wystąpień <xref:System.Xml.XmlReader.Create%2A> utworzonych przez metodę w celu włączenia walidacji schematu danych XML (XDR).  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
  
-   Nie używaj schematów z nieznanych lub niezaufanych źródeł. Takie działanie spowoduje naruszenie zabezpieczeń kodu. <xref:System.Xml.XmlUrlResolver> Klasa jest używana do rozpoznawania schematów zewnętrznych domyślnie. Aby wyłączyć rozwiązanie dołączania, importowania i ponownego definiowania elementów schematu, należy ustawić <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> właściwość na. `null`  
  
-   Wyjątki wywoływane w wyniku użycia <xref:System.Xml.Schema.XmlSchemaSet> klasy, takie <xref:System.Xml.Schema.XmlSchemaException> jak Klasa mogą zawierać poufne informacje, które nie powinny być ujawnione w scenariuszach niezaufanych. Na przykład <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość <xref:System.Xml.Schema.XmlSchemaException> zwraca ścieżkę URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość nie powinna być ujawniana w scenariuszach niezaufanych. Wyjątki powinny być prawidłowo obsługiwane, aby te informacje poufne nie były ujawniane w scenariuszach niezaufanych.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlReaderSettings> obiekt <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> i metodę, aby skojarzyć schemat z dokumentem XML. Schemat zostanie dodany do <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwości <xref:System.Xml.XmlReaderSettings> obiektu. Wartość <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwości<xref:System.Xml.Schema.XmlSchemaSet> jest obiektem. Schemat jest używany do sprawdzania, czy dokument XML jest zgodny ze schematem modelu zawartości. Błędy i ostrzeżenia walidacji schematu są obsługiwane przez <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> zdefiniowane <xref:System.Xml.XmlReaderSettings> w obiekcie.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 W przykładzie zastosowano plik Books. XML jako dane wejściowe.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 W przykładzie jest użyty plik Books. xsd jako dane wejściowe.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy czytnik napotyka błędy walidacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te zdarzenia występują podczas odczytywania dokumentu wystąpienia XML, <xref:System.Xml.XmlReaderSettings.ValidationType%2A> jeśli jest ustawiony <xref:System.Xml.ValidationType.DTD> na lub <xref:System.Xml.ValidationType.Schema>. Jeśli ustawienie zostało włączone dla właściwości, <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> te zdarzenia również występują, gdy napotkane zostaną ostrzeżenia dotyczące walidacji. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings>  
  
 Jeśli czytnik jest skonfigurowany do sprawdzania poprawności i nie ustawiono modułu obsługi zdarzeń sprawdzania poprawności, <xref:System.Xml.Schema.XmlSchemaValidationException> zostanie zgłoszony dla wszystkich błędów walidacji. (Ostrzeżenia dotyczące walidacji nie powodują <xref:System.Xml.Schema.XmlSchemaValidationException> , że zostaną zgłoszone).  
  
> [!IMPORTANT]
>  Komunikaty o błędach weryfikacji mogą uwidaczniać poufne informacje o modelu zawartości. Błędy walidacji i komunikaty ostrzegawcze są obsługiwane <xref:System.Xml.Schema.ValidationEventHandler> za pomocą delegata lub są udostępniane <xref:System.Xml.Schema.XmlSchemaValidationException> jako Jeśli nie ma <xref:System.Xml.XmlReaderSettings> obsługi zdarzeń do <xref:System.Xml.Schema.XmlSchemaValidationException> obiektu (ostrzeżenia o walidacji nie powodują zgłoszenia). Informacje o modelu zawartości nie powinny być ujawnione w scenariuszach niezaufanych. Komunikaty ostrzegawcze walidacji są domyślnie pomijane i mogą być zgłaszane przez ustawienie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flagi.  
>   
>  <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość<xref:System.Xml.Schema.XmlSchemaValidationException> zwraca ścieżkę identyfikatora URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość nie powinna być ujawniana w scenariuszach niezaufanych.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono ustawienia, które należy określić, aby utworzyć czytnik, który sprawdza poprawność przy użyciu wbudowanego schematu, a także wyświetla ostrzeżenia dotyczące walidacji. Procedura obsługi zdarzeń walidacji używa <xref:System.Xml.Schema.XmlSeverityType> wyliczenia, aby rozróżnić ostrzeżenia i błędy.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą ustawienia walidacji schematu. To ustawienie dotyczy <see cref="T:System.Xml.XmlReader" /> obiektów, które weryfikują schematy<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> (Właściwość ustawiona <see langword="ValidationType.Schema" />na).</summary>
        <value>Bitowa kombinacja wartości wyliczenia, które określają opcje walidacji. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" />i <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> są domyślnie włączone. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" /> i<see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> są domyślnie wyłączone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawianedomyślnie.<xref:System.Xml.XmlReaderSettings> Gdy te flagi są ustawione, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schematu napotkanych w dokumencie wystąpienia w <xref:System.Xml.XmlReader>obiekcie. Jeśli obiekt jest `null`, lokalizacje schematu <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> nie są rozpoznawane, nawet jeśli flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> i walidacja są ustawione. <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>  
>   
>  Schematy dodane podczas walidacji Dodaj nowe typy i można zmienić wynik walidacji zweryfikowanego dokumentu. W związku z tym schematy zewnętrzne powinny być rozpoznawane tylko z zaufanych źródeł.  
>   
>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> Wyłączenie flagi (domyślnie włączone) jest zalecane w przypadku walidacji, niezaufanych, dużych dokumentów XML w scenariuszach wysokiej dostępności względem schematu z ograniczeniami tożsamości w dużej części dokumentu.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność pliku XML względem wbudowanego schematu XML przez włączenie tego <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> ustawienia. Czytnik XML jest skonfigurowany do wyświetlania ostrzeżeń dotyczących sprawdzania poprawności, SP zobaczysz również oczekiwane Ostrzeżenie dla elementu głównego.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Dane wejściowe  
 W przykładzie zastosowano plik inlineSchema. XML jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Dane wyjściowe  
 Ostrzeżenie:   Nie znaleziono zgodnego schematu. Nie przeprowadzono weryfikacji. Nie można znaleźć informacji o schemacie dla elementu "root".  
  
 Błąd walidacji:   Element "xsdHeadCount: liczba pracowników" ma nieprawidłowy element podrzędny "dzielenie". Oczekiwano elementu "ID".  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlReader" /> program będzie wykonywał walidację, czy przypisanie typu podczas odczytu.</summary>
        <value>Jedna z <see cref="T:System.Xml.ValidationType" /> wartości, która wskazuje, czy element XmlReader będzie wykonywał walidację lub przypisanie typu podczas odczytu. Wartość domyślna to <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano <xref:System.Xml.ValidationType> wartości.  
  
> [!NOTE]
>  Wartości wyliczenia <xref:System.Xml.ValidationType.XDR> i są przestarzałe w .NET Framework w wersji 2,0. <xref:System.Xml.ValidationType.Auto>  
  
|Typ weryfikacji|Opis|  
|--------------------|-----------------|  
|`DTD`|Walidacja jest przeprowadzana przy użyciu definicji typu dokumentu (DTD). **Uwaga:**  Właściwość musi również mieć <xref:System.Xml.DtdProcessing.Parse>ustawioną wartość. <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>|  
|`None`|<xref:System.Xml.XmlReader> Nie weryfikuje danych ani nie wykonuje żadnego przypisania typu.|  
|`Schema`|Walidacja i przypisanie typu są wykonywane przy użyciu schematu języka definicji schematu XML (XSD). Czytnik uzyskuje dostęp do schematu XML przy użyciu następujących czynności:<br /><br /> -Używa <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwości, aby <xref:System.Xml.Schema.XmlSchemaSet> uzyskać dostęp do obiektu skojarzonego z tym czytnikiem.<br />-Używa schematu w wierszu zawartego w dokumencie wystąpienia XML. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> (Opcja musi być włączona).<br />-Używa schematu XML określonego przez wskazówki dotyczące lokalizacji schematu (`xsi:schemaLocation` lub `xsi:noNamespaceSchemaLocation` atrybutu) Znalezione w dokumencie wystąpienia XML. <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> (Opcja musi być włączona).|  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność przy użyciu schematu przechowywanego <xref:System.Xml.Schema.XmlSchemaSet>w.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 W przykładzie są stosowane następujące pliki wejściowe:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Xml.XmlResolver" /> Ustawia używany do uzyskiwania dostępu do zewnętrznych dokumentów.</summary>
        <value><see cref="T:System.Xml.XmlResolver" /> Służy do uzyskiwania dostępu do zewnętrznych dokumentów. Jeśli <see cref="T:System.Xml.XmlException" /> jest ustawiona <see langword="null" />na, jest generowany, gdy <see cref="T:System.Xml.XmlReader" /> próbuje uzyskać dostęp do zasobu zewnętrznego. Wartość domyślna to New <see cref="T:System.Xml.XmlUrlResolver" /> bez poświadczeń.  Począwszy od .NET Framework 4.5.2, to ustawienie ma wartość <see langword="null" />domyślną.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Służy do lokalizowania i otwierania dokumentu wystąpienia XML lub do lokalizowania i otwierania wszelkich zasobów zewnętrznych, do których odwołuje się dokument wystąpienia XML. Może to obejmować jednostki, DTD lub schematy. <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> Właściwość może służyć do określania poświadczeń wymaganych do uwierzytelniania w sieci.  
  
> [!IMPORTANT]
>  Ponieważ mogą zawierać poufne informacje, takie jak poświadczenia użytkownika, należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlReaderSettings> obiektów lub podczas przekazywania <xref:System.Xml.XmlReaderSettings> obiektu z jednego składnika do drugiego. <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>  
>   
>  <xref:System.Xml.XmlSecureResolver> Może służyć do uzyskiwania dostępu do zewnętrznych dokumentów. Klasa pomaga zabezpieczyć inną <xref:System.Xml.XmlResolver> implementację przez Zawijanie <xref:System.Xml.XmlResolver> obiektu i ograniczanie zasobów, do których podstawowy <xref:System.Xml.XmlResolver> ma dostęp. <xref:System.Xml.XmlSecureResolver>  
>   
>  Flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Walidacja obiektuniesąustawianedomyślnie.<xref:System.Xml.XmlReaderSettings> Gdy te flagi są ustawione, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schematu napotkanych w dokumencie wystąpienia w <xref:System.Xml.XmlReader>obiekcie. Jeśli obiekt jest `null`, lokalizacje schematu <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> nie są rozpoznawane, nawet jeśli flagi <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> i walidacja są ustawione. <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>  
>   
>  Schematy dodane podczas walidacji Dodaj nowe typy i można zmienić wynik walidacji zweryfikowanego dokumentu. W związku z tym schematy zewnętrzne powinny być rozpoznawane tylko z zaufanych źródeł.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> , który <xref:System.Xml.XmlSecureResolver> używa z poświadczeniami domyślnymi.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
