<Type Name="XmlReaderSettings" FullName="System.Xml.XmlReaderSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52f4f41e920ed2951fff4589215925f116e9d6a2" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52600543" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReaderSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zbiór funkcji do obsługi na <see cref="T:System.Xml.XmlReader" /> obiekt utworzony przez <see cref="Overload:System.Xml.XmlReader.Create" /> metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Xml.XmlReader.Create%2A> metodę, aby uzyskać <xref:System.Xml.XmlReader> wystąpień. Ta metoda używa <xref:System.Xml.XmlReaderSettings> klasy, aby określić, które funkcje można zaimplementować w <xref:System.Xml.XmlReader> obiekt, tworzy go.  
  
 Zobacz sekcje uwag <xref:System.Xml.XmlReader> i <xref:System.Xml.XmlReader.Create%2A> odwoływać się do strony, aby uzyskać informacje o ustawieniach na potrzeby sprawdzania zgodności, weryfikacji i innych typowych scenariuszy. Zobacz <xref:System.Xml.XmlReaderSettings.%23ctor> konstruktora, aby uzyskać listę ustawień domyślnych.  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 Rozważ następujące opcje, korzystając z <xref:System.Xml.XmlReaderSettings> klasy.  
  
-   <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> flagi weryfikacji <xref:System.Xml.XmlReaderSettings> obiektu nie są domyślnie ustawione. Gdy te flagi są ustawiane, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> z <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schemat w dokumencie wystąpienia w <xref:System.Xml.XmlReader>. Jeśli <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> obiekt jest `null`, lokalizacji schematu nie są rozpoznawane nawet wtedy, gdy <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> ustawiono flagi weryfikacji.  
  
-   Dodany podczas weryfikacji schematów dodać nowe typy i zmienić wynik sprawdzania poprawności dokumentu weryfikowana. W rezultacie Schematy zewnętrzne mają zostać rozwiązane z zaufanych źródeł.  
  
-   Komunikaty o błędach weryfikacji może ujawnić informacje poufne modelu zawartości. Błąd weryfikacji i komunikaty ostrzegawcze są obsługiwane przy użyciu <xref:System.Xml.Schema.ValidationEventHandler> delegowanie lub są widoczne jako <xref:System.Xml.Schema.XmlSchemaValidationException> Jeśli żadna procedura obsługi zdarzeń jest dostarczany w celu <xref:System.Xml.XmlReaderSettings> obiektu (nie powodują ostrzeżenia sprawdzania poprawności <xref:System.Xml.Schema.XmlSchemaValidationException> zgłoszenie). Te informacje w modelu zawartości nie powinny zostać ujawnione w scenariuszach niezaufanych. Komunikaty ostrzegawcze sprawdzania poprawności są domyślnie pomijane i mogą zostać zgłoszone przez ustawienie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flagi.  
  
-   <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość <xref:System.Xml.Schema.XmlSchemaValidationException> zwraca składnik path identyfikatora URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwości nie powinny zostać ujawnione w scenariuszach niezaufanych.  
  
-   Wyłączanie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flagi (domyślnie włączony) jest zalecane, gdy sprawdzania poprawności i niezaufanych, duże XML dokumenty w scenariuszach wysokiej dostępności względem schematu z ograniczeniami tożsamości przez dużą część dokumentu.  
  
-   <xref:System.Xml.XmlReaderSettings> obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlReaderSettings> obiektów, lub podczas przekazywania <xref:System.Xml.XmlReaderSettings> obiekt z jednego składnika.  
  
-   Przetwarzanie elementu DTD jest domyślnie wyłączona. Jeśli włączysz przetwarzanie elementu DTD, musisz wiedzieć, w tym pliki DTD ze źródeł niezaufanych i możliwe atakom typu odmowa usługi. Użyj <xref:System.Xml.XmlSecureResolver> do ograniczania zasobów, <xref:System.Xml.XmlReader> można uzyskać dostęp.  
  
-   Nie są akceptowane składniki pomocnicze, takie jak <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, i <xref:System.Xml.XmlResolver> obiektów z niezaufanego źródła.  
  
-   Użycie pamięci przez aplikację, która używa <xref:System.Xml.XmlReader> może mieć wpływ na rozmiar przeanalizowany dokumentu XML. Jeden formularz "odmowa usługi" jest przesyłanej zbyt dużych dokumentów XML do przeanalizowania. Umożliwia ograniczenie rozmiaru dokumentu, który może być analizowane przez ustawienie <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> właściwości i następnie limit liczbę znaków, które wynikają z rozwijanie jednostek, ustawiając <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> , który używa <xref:System.Xml.XmlUrlResolver> niezbędne poświadczenia.  
  
 [!code-csharp[XmlReader.Create#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#2)]
 [!code-vb[XmlReader.Create#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">Dokumenty i dane XML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Xml.XmlReaderSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (nie ma limitu liczby znaków, które wynikają z rozwijanie jednostek).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (nie ma żadnego limitu rozmiaru dokumentu XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do wartości domyślnej `true` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Prohibit`. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do `false` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Pusta <xref:System.Xml.Schema.XmlSchemaSet> obiektu.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nowy <xref:System.Xml.XmlUrlResolver> obiektu.|  
  
   
  
## Examples  
 W poniższym przykładzie tworzony obiekt ustawień, który może służyć do utworzenia czytnika wyodrębniania przetwarzania instrukcji, komentarze i nieważny biały znak.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlReaderSettings (System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.#ctor(System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlReaderSettings(System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlReaderSettings : System.Xml.XmlResolver -&gt; System.Xml.XmlReaderSettings" Usage="new System.Xml.XmlReaderSettings resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Program rozpoznawania nazw XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlReaderSettings" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlReaderSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informację, czy asynchroniczne <see cref="T:System.Xml.XmlReader" /> metody mogą być używane w przypadku określonego <see cref="T:System.Xml.XmlReader" /> wystąpienia.</summary>
        <value>
          <see langword="true" /> Jeśli metod asynchronicznych mogą być używane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić tę wartość na `true` podczas tworzenia nowego <xref:System.Xml.XmlReader> wystąpienia, jeśli chcesz używać asynchronicznych <xref:System.Xml.XmlReader> metod, w tym wystąpieniu. Po <xref:System.Xml.XmlReader> tworzone jest wystąpienie, <xref:System.Xml.XmlReaderSettings.Async%2A> właściwość jest tylko do odczytu. Wartość domyślna tej właściwości to `false`.  
  
 Ta flaga jest ignorowana przez <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> przeciążenia. Oznacza to, że jeśli utworzysz nową <xref:System.Xml.XmlReader> oparty na istniejącym <xref:System.Xml.XmlReader>, zachowanie asynchronicznej zależy od danych wejściowych <xref:System.Xml.XmlReader>, i nie można użyć <xref:System.Xml.XmlReaderSettings.Async%2A> flagę, aby zmienić zachowanie asynchroniczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlReaderSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy znak sprawdzania.</summary>
        <value>
          <see langword="true" /> znaku sprawdzanie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.  
  
 <block subset="none" type="note"><para>  
 Jeśli <see cref="T:System.Xml.XmlReader" /> jest przetwarzanie danych tekstowych, zawsze sprawdza czy nazw XML i zawartości tekstowej są prawidłowe, bez względu na ustawienie właściwości. Ustawienie <see cref="P:System.Xml.XmlReaderSettings.CheckCharacters" /> do <see langword="false" /> wyłącza znak sprawdzanie odwołania do jednostki znaku.  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej właściwości powoduje, że czytnik XML, aby sprawdzać znaki w danych XML go odczytuje i zgłosić <xref:System.Xml.XmlException> przypadku dowolne znaki poza zakresem prawne znaków XML. Po włączeniu sprawdzanie znaków są zapewnić następujące czynności:  
  
-   Znaki są w zakresie prawne znaków XML, zgodnie z definicją [2,2 znaków](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) sekcji zalecenia 1.0 W3C XML.  
  
-   Wszystkie nazwy XML są prawidłowe, zgodnie z definicją [2.3 typowe konstrukcje składni](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) sekcji zalecenia 1.0 W3C XML.  
  
 Jeśli ta właściwość jest równa `true`, co jest ustawieniem domyślnym <xref:System.Xml.XmlException> wyjątek jest generowany, jeśli plik XML zawiera niedozwolone znaki lub nieprawidłowych nazw XML (na przykład nazwę elementu rozpoczyna się od numeru).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReaderSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReaderSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReaderSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlReaderSettings" Usage="xmlReaderSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Xml.XmlReaderSettings" /> wystąpienia.</summary>
        <returns>Sklonowany <see cref="T:System.Xml.XmlReaderSettings" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.Xml.XmlReaderSettings> można zmodyfikować obiektu, bez wywierania wpływu na ustawienia do oryginalnego obiektu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseInput : bool with get, set" Usage="System.Xml.XmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy podstawowe strumienia lub <see cref="T:System.IO.TextReader" /> powinien zostać zamknięty, gdy proces czytający jest zamykany.</summary>
        <value>
          <see langword="true" /> Aby zamknąć zasadniczy strumień lub <see cref="T:System.IO.TextReader" /> gdy czytnik jest zamknięty, a w przeciwnym <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest używane, gdy strumień lub <xref:System.IO.TextReader> jest przekazywany do <xref:System.Xml.XmlReader.Create%2A> metody. Jeśli strumień jest tworzony przez czytnik dla własnej przetwarzania, takich jak podczas tworzenia czytnika z identyfikatora URI lub gdy zostanie on otwarty w definicji typu dokumentu zewnętrznego, zawsze jest zamykane, gdy proces czytający jest zamykany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlReaderSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom zgodności który <see cref="T:System.Xml.XmlReader" /> będą zgodne.</summary>
        <value>Jedna z wartości wyliczenia, które określa poziom zgodności, który będzie wymuszać odczytującego XML. Wartość domyślna to <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Czytelnicy XML, które są tworzone przez <xref:System.Xml.XmlReader.Create%2A> metoda spełniać następujące wymagania zgodności domyślnie:  
  
-   Nowe wiersze, a wartość atrybutu są znormalizowane zgodnie z W3C [XML 1.0 zalecenie](https://www.w3.org/TR/2006/REC-xml-20060816/).  
  
-   Wszystkie jednostki zostaną automatycznie rozwinięte.  
  
-   Atrybuty domyślne zadeklarowanej w definicji typu dokumentu zawsze są dodawane, nawet wtedy, gdy czytnik nie można zweryfikować.  
  
-   Deklaracja XML prefiksu mapowany na poprawną przestrzeń nazw XML identyfikatora URI jest dozwolona.  
  
-   Nazw w notacji w jednym `NotationType` atrybutu deklaracji i `NmTokens` w jednym `Enumeration` różniące się od deklaracji atrybutu.  
  
 Możesz użyć <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> właściwości w celu sprawdzenia i gwarantuje, że strumień odczytywany jest zgodny z reguły dla poprawnie sformułowany dokument XML 1.0 lub fragment dokumentu. Jeśli dane nie jest zgodne, <xref:System.Xml.XmlException> wyjątku. Wartość domyślna to <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (zgodność na poziomie dokumentu).  
  
 Poziomy zgodności trzech są następujące:  
  
|Ustawienie|Opis|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Zapewnia, że dane XML jest zgodny z regułami dotyczącymi poprawnie sformułowany dokument XML 1.0. Ten poziom kontroli zapewnia, że każdy procesor mogą wykorzystywać strumienia odczytywany jako [poprawnie sformułowany dokument XML 1.0](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).<br /><br /> Czytnik sprawdza, czy następujące czynności:<br /><br /> — Element najwyższego poziomu nie może mieć żadnych węzłów innych niż deklaracja XML, definicja typu dokumentu (DTD), element, komentarza, biały lub instrukcji przetwarzania.<br />-Dane XML musi mieć dokładnie jeden element najwyższego poziomu węzła.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Zapewnia, że dane XML jest zgodny z regułami dotyczącymi fragmentu poprawnie sformułowany dokument XML 1.0.<br /><br /> To ustawienie akceptuje dane XML z wielu elementów głównego lub węzły tekstowe na najwyższym poziomie. Ten poziom kontroli zapewnia, że każdy procesor mogą wykorzystywać strumienia odczytywany jako [zewnętrzne przeanalizowana jednostka](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).|  
|<xref:System.Xml.ConformanceLevel.Auto>|Określa, że czytnik należy określić poziom sprawdzania zgodności, na podstawie danych przychodzących.<br /><br /> Sprawdzanie zgodności dokumentu jest stosowana, jeśli dane XML zawierają informacje o definicji DTD.<br /><br /> Fragment zgodność sprawdzanie jest stosowana, jeśli dane XML zawiera jedną z następujących czynności:<br /><br /> -Text, CDATA lub jednostki węzeł odniesienia na poziomie głównym.<br />— Więcej niż jednego elementu na poziomie głównym.<br />-Brak elementu na poziomie głównym.<br /><br /> <xref:System.Xml.XmlException> Jest generowany, jeśli występuje konflikt, takie jak czas istnieje węzeł tekstowy i DTD na poziomie głównym.<br /><br /> To ustawienie może być używane w scenariuszy zawijania podczas <xref:System.Xml.XmlReader.Create%2A> metoda służy do dodawania dodatkowe funkcje do istniejącego <xref:System.Xml.XmlReader>. W tym przypadku <xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> nie dodaje żadnych nowych sprawdzania zgodności. Sprawdzanie zgodności pozostało do <xref:System.Xml.XmlReader> które opakowane.|  
  
> [!NOTE]
>  XML 1.0 zalecenie wymaga zgodność na poziomie dokumentu, gdy obecny jest DTD. W związku z tym Jeśli czytnik jest skonfigurowany do obsługi <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, ale dane XML zawierają definicji typu dokumentu (DTD), <xref:System.Xml.XmlException> zgłaszany.  
  
 Oto jak czytnik obsługuje naruszeń zgodności określonego w zależności od ustawień <xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> właściwości:  
  
|Warunek|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Tekst lub typizowaną wartość pojawia się na najwyższym poziomie.|<xref:System.Xml.XmlException> jest zgłaszany.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|  
|Wiele elementów lub element nie pojawiają się na najwyższym poziomie.|<xref:System.Xml.XmlException> jest zgłaszany.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|  
|Element najwyższego poziomu jest biały znak.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|  
|Element najwyższego poziomu jest atrybut (został rozpoznany jako węzeł tekstowy).|<xref:System.Xml.XmlException> jest zgłaszany.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|  
|Wiele sąsiadujących tekstu znajdują się węzły.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|Nie uznany za naruszenie dla tego ustawienia.|  
|Ten sam prefiks przestrzeni nazw jest zadeklarowany w tym samym zakresie lokalnym.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Przestrzeń nazw w element lub atrybut nie istnieje w zakresie lokalnym.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Dane zawierają niezgodność przestrzeni nazw prefiks.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|`xml:space` atrybut zawiera nieprawidłową wartość.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Napotkano nieprawidłową nazwę.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|`xml` Prefiks nie jest dopasowany do http://www.w3.org/XML/1998/namespace identyfikatora URI.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> obiekt, który odczytuje XML fragment.  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DtdProcessing">
      <MemberSignature Language="C#" Value="public System.Xml.DtdProcessing DtdProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.DtdProcessing DtdProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberSignature Language="VB.NET" Value="Public Property DtdProcessing As DtdProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::DtdProcessing DtdProcessing { System::Xml::DtdProcessing get(); void set(System::Xml::DtdProcessing value); };" />
      <MemberSignature Language="F#" Value="member this.DtdProcessing : System.Xml.DtdProcessing with get, set" Usage="System.Xml.XmlReaderSettings.DtdProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.DtdProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, przetwarzanie definicji DTD.</summary>
        <value>Jedna z wartości wyliczenia, które określa przetwarzanie definicji DTD. Wartość domyślna to <see cref="F:System.Xml.DtdProcessing.Prohibit" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Walidacja definicji (DTD) typu dokumentu jest implementowany przy użyciu się ograniczenia ważności zdefiniowane w W3C [języka XML (Extensible Markup) 1.0 (wydanie czwarte) zalecenie](https://www.w3.org/TR/2006/REC-xml-20060816/). Pliki DTD Użyj formalne gramatyki do opisania struktury i składni zgodny z dokumentów XML; określają zawartość i wartości dozwolony dla dokumentu XML.  
  
 Ta właściwość może mieć jedną z następujących wartości:  
  
-   <xref:System.Xml.DtdProcessing.Parse?displayProperty=nameWithType> Aby włączyć przetwarzanie elementu DTD.  
  
-   <xref:System.Xml.DtdProcessing.Prohibit?displayProperty=nameWithType> Aby zgłosić <xref:System.Xml.XmlException> wyjątek po napotkaniu DTD.  
  
-   <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType> Aby wyłączyć DTD przetwarzania bez ostrzeżenia lub wyjątki.  
  
 Aby wykonać sprawdzanie poprawności względem DTD, <xref:System.Xml.XmlReader> używa schematu DTD, zdefiniowane w deklaracji DOCTYPE dokumentu XML. Deklaracja DOCTYPE albo może wskazywać wbudowany DTD lub może być odwołaniem do pliku zewnętrznego elementu DTD. Aby sprawdzić poprawność pliku XML przed DTD:  
  
-   Ustaw <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A?displayProperty=nameWithType> właściwości `DtdProcessing.Parse.`  
  
-   Ustaw <xref:System.Xml.XmlReaderSettings.ValidationType%2A?displayProperty=nameWithType> właściwość `ValidationType.DTD`.  
  
-   W przypadku DTD zewnętrznego pliku przechowywanych w zasobie sieciowym, która wymaga uwierzytelnienia, przekazać <xref:System.Xml.XmlResolver> obiektu o poświadczenia niezbędne do <xref:System.Xml.XmlReader.Create%2A> metody.  
  
> [!IMPORTANT]
>  Jeśli <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> właściwość jest ustawiona na <xref:System.Xml.DtdProcessing.Ignore?displayProperty=nameWithType>, <xref:System.Xml.XmlReader> nie będą zgłaszać elementów DTD. Oznacza to, że DTD/DOCTYPE zostaną utracone na dane wyjściowe.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność pliku XML przy użyciu pliku definicji DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
## <a name="input"></a>Dane wejściowe  
 W przykładzie użyto `itemDTD.xml` pliku jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreComments">
      <MemberSignature Language="C#" Value="public bool IgnoreComments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreComments" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreComments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreComments { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreComments : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreComments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ignorować komentarzy.</summary>
        <value>
          <see langword="true" /> ignorowanie komentarze w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` może spowodować wiele węzłów ciągłych tekstu zwracanego z czytnika. Nie ma to wpływu na sprawdzania poprawności.  
  
   
  
## Examples  
 W poniższym przykładzie tworzony obiekt ustawień, który może służyć do utworzenia czytnika wyodrębniania przetwarzania instrukcji, komentarze i nieważny biały znak.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreProcessingInstructions">
      <MemberSignature Language="C#" Value="public bool IgnoreProcessingInstructions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreProcessingInstructions" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreProcessingInstructions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreProcessingInstructions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreProcessingInstructions : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreProcessingInstructions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ignorować instrukcji przetwarzania.</summary>
        <value>
          <see langword="true" /> ignorowanie instrukcje przetwarzania; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości na `true` może spowodować wiele węzłów ciągłych tekstu zwracanego z czytnika. Nie ma to wpływu na sprawdzania poprawności.  
  
   
  
## Examples  
 W poniższym przykładzie tworzony obiekt ustawień, który może służyć do utworzenia czytnika wyodrębniania przetwarzania instrukcji, komentarze i nieważny biały znak.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWhitespace">
      <MemberSignature Language="C#" Value="public bool IgnoreWhitespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWhitespace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWhitespace : bool with get, set" Usage="System.Xml.XmlReaderSettings.IgnoreWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ignorować nieważny biały znak.</summary>
        <value>
          <see langword="true" /> ignoruje biały w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Biały znak, który nie jest uznawany za znaczny obejmuje miejsca do magazynowania, karty i puste wiersze, używany do oddzielania znaczniki dla czytelności większa. Na przykład jest biały znak w zawartości elementu.  
  
 Ustawienie tej właściwości nie wpływa na odstępy między kodu znaczników w trybie mieszanym zawartości lub biały, który występuje w zakresie `xml:space='preserve'` atrybutu.  
  
   
  
## Examples  
 W poniższym przykładzie tworzony obiekt ustawień, który może służyć do utworzenia czytnika wyodrębniania przetwarzania instrukcji, komentarze i nieważny biały znak.  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LineNumberOffset">
      <MemberSignature Language="C#" Value="public int LineNumberOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumberOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LineNumberOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumberOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineNumberOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LineNumberOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie numeru wiersza <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <value>Przesunięcie numeru wiersza. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A> Ustawienie określa punkt, gdzie <xref:System.Xml.IXmlLineInfo.LineNumber%2A> właściwość rozpoczyna się zliczania. Jest to przydatne, jeśli dane XML jest osadzony w obrębie dokumentu większe. Na przykład jeśli dane XML zostały osadzone w dokumencie większy, a dane rozpoczęty w wierszu 101 dokumentu, można określić, że czytnik rozpoczynają się od wiersza 100. W związku z tym Jeśli czytnik zgłosił wyjątek podczas analizowania pierwszy wiersz pliku XML, będą zgłaszać numer wiersza, jako linii 101 zamiast 1. wiersz.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LinePositionOffset">
      <MemberSignature Language="C#" Value="public int LinePositionOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePositionOffset" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property LinePositionOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePositionOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LinePositionOffset : int with get, set" Usage="System.Xml.XmlReaderSettings.LinePositionOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie pozycji wiersza <see cref="T:System.Xml.XmlReader" /> obiektu.</summary>
        <value>Przesunięcie pozycji wiersza. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A> Ustawienie określa punkt, gdzie <xref:System.Xml.IXmlLineInfo.LinePosition%2A> właściwość rozpoczyna się zliczania. Jest to przydatne w danych XML jest osadzony w obrębie dokumentu większe, jeśli nie ma żadnych nowy wiersz na początku pliku XML. W tym przypadku jeśli czytnik zgłasza wyjątek podczas analizowania pliku XML, która będzie wrócić położenie wiersza względem głównego dokumentu, nie tylko względem fragmentu XML.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersFromEntities">
      <MemberSignature Language="C#" Value="public long MaxCharactersFromEntities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersFromEntities" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersFromEntities As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersFromEntities { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersFromEntities : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersFromEntities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną dozwoloną liczbę znaków w dokumencie, wynikających z rozwijanie jednostek.</summary>
        <value>Maksymalną dozwoloną liczbę znaków z rozwiniętej jednostki. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zero (0) oznacza nieograniczoną liczbę znaków, które wynikają z rozwijanie jednostek. Wartość różna od zera określa maksymalną liczbę znaków, które mogą wynikać z rozwijanie jednostek.  
  
 Jeśli czytnik próbuje odczytać dokument, który zawiera jednostki w taki sposób, że rozmiar po powiększeniu przekroczy tę właściwość, <xref:System.Xml.XmlException> zostanie zgłoszony.  
  
 Ta właściwość umożliwia eliminowanie atakom typu odmowa usługi gdy osoba atakująca przesyła dokumentów XML, które próby przekroczenia limity pamięci za pomocą rozwijanie jednostek. Ograniczając znaki, które wynikają z rozwiniętej jednostki, można wykryć ataku i niezawodne odzyskiwanie.  
  
   
  
## Examples  
 Poniższy kod ustawia tę właściwość, a następnie próbuje analizy dokumentu, który zawiera jednostki, która rozszerza się, aby rozmiar większy niż limit zestawu. W rzeczywistym scenariuszu należy ustawić ten limit z wartością jest wystarczająco duża do obsługi ważnych dokumentów jeszcze wystarczająco mała, aby ograniczyć ryzyko ze strony złośliwych dokumentów.  
  
```csharp  
string markup =  
@"<!DOCTYPE Root [  
  <!ENTITY anEntity ""Expands to more than 30 characters"">  
  <!ELEMENT Root (#PCDATA)>  
]>  
<Root>Content &anEntity;</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD;  
settings.MaxCharactersFromEntities = 30;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = _  
    "<!DOCTYPE Root [" + Environment.NewLine + _  
    "  <!ENTITY anEntity ""Expands to more than 30 characters"">" + Environment.NewLine + _  
    "  <!ELEMENT Root (#PCDATA)>" + Environment.NewLine + _  
    "]>" + Environment.NewLine + _  
    "<Root>Content &anEntity;</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.DtdProcessing = DtdProcessing.Parse;  
settings.ValidationType = ValidationType.DTD  
settings.MaxCharactersFromEntities = 30  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Ten przykład generuje następujące wyniki:  
  
```  
There is an error in XML document (MaxCharactersFromEntities, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCharactersInDocument">
      <MemberSignature Language="C#" Value="public long MaxCharactersInDocument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxCharactersInDocument" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCharactersInDocument As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxCharactersInDocument { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCharactersInDocument : int64 with get, set" Usage="System.Xml.XmlReaderSettings.MaxCharactersInDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną dozwoloną liczbę znaków w dokumentach XML. Wartość zero (0) oznacza brak limitów rozmiaru dokumentu XML. Wartość różna od zera określa maksymalny rozmiar w znakach.</summary>
        <value>Maksymalną dozwoloną liczbę znaków w dokumentach XML. Wartość domyślna to 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zero (0) oznacza nieograniczoną liczbę znaków w dokumencie przeanalizowany. Wartość różna od zera określa maksymalną liczbę znaków, które można przeanalizować.  
  
 Maksymalną liczbę znaków w dokumencie obejmują liczbę znaków, które wynikają z rozwiniętej jednostki.  
  
 Jeśli czytnik podejmuje próbę odczytu dokumentu o rozmiarze, który przekracza tę właściwość, <xref:System.Xml.XmlException> zostanie zgłoszony.  
  
 Ta właściwość umożliwia eliminowanie atakom typu odmowa usługi w przypadku gdy osoba atakująca składa się bardzo dużych dokumentów XML. Poprzez ograniczenie rozmiaru dokumentu, można wykryć ataku i niezawodne odzyskiwanie.  
  
   
  
## Examples  
 Poniższy kod ustawia tę właściwość, a następnie próbuje zanalizować dokumentu większe niż limit. W rzeczywistym scenariuszu należy ustawić ten limit z wartością jest wystarczająco duża do obsługi ważnych dokumentów jeszcze wystarczająco mała, aby ograniczyć ryzyko ze strony złośliwych dokumentów.  
  
```csharp  
string markup = "<Root>Content</Root>";  
  
XmlReaderSettings settings = new XmlReaderSettings();  
settings.MaxCharactersInDocument = 10;  
  
try  
{  
    XmlReader reader = XmlReader.Create(new StringReader(markup), settings);  
    while (reader.Read()) { }  
}  
catch (XmlException ex)  
{  
    Console.WriteLine(ex.Message);  
}  
```  
  
```vb  
Dim markup As String = "<Root>Content</Root>"  
  
Dim settings As XmlReaderSettings = New XmlReaderSettings()  
settings.MaxCharactersInDocument = 10  
  
Try  
    Dim reader As XmlReader = XmlReader.Create(New StringReader(markup), settings)  
    While (reader.Read())  
    End While  
Catch ex As XmlException  
    Console.WriteLine(ex.Message)  
End Try  
```  
  
 Ten kod generuje następujące dane wyjściowe:  
  
```  
There is an error in XML document (MaxCharactersInDocument, ).  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); void set(System::Xml::XmlNameTable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable with get, set" Usage="System.Xml.XmlReaderSettings.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.XmlNameTable" /> używane do porównywania ciągów znaków rozproszone obiekty.</summary>
        <value>
          <see cref="T:System.Xml.XmlNameTable" /> Który przechowuje wszystkie ciągi rozproszone obiekty używane przez wszystkie <see cref="T:System.Xml.XmlReader" /> wystąpienia utworzone za pomocą tego <see cref="T:System.Xml.XmlReaderSettings" /> obiektu.  
  
Wartość domyślna to <see langword="null" />. Utworzony <see cref="T:System.Xml.XmlReader" /> wystąpienia użyje nowy pusty <see cref="T:System.Xml.NameTable" /> Jeśli ta wartość jest <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na <xref:System.Xml.XmlNameTable> wystąpienia, jeśli chcesz udostępnić typowych tabela nazw wszystkim utworzony <xref:System.Xml.XmlReader> wystąpień.  
  
> [!NOTE]
>  <xref:System.Xml.NameTable> Klasa nie jest metodą o bezpiecznych wątkach. W związku z tym nie może być współużytkowane między <xref:System.Xml.XmlReader> obiektów, które są uruchamiane jednocześnie w różnych wątkach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProhibitDtd">
      <MemberSignature Language="C#" Value="public bool ProhibitDtd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProhibitDtd" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberSignature Language="VB.NET" Value="Public Property ProhibitDtd As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProhibitDtd { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProhibitDtd : bool with get, set" Usage="System.Xml.XmlReaderSettings.ProhibitDtd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Use XmlReaderSettings.DtdProcessing property instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy zakazać przetwarzanie definition (DTD) typu dokumentu. Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <see cref="P:System.Xml.XmlTextReader.DtdProcessing" />.</summary>
        <value>
          <see langword="true" /> Aby uniemożliwić przetwarzanie elementu DTD; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu `true`, <xref:System.Xml.XmlReader> zgłasza <xref:System.Xml.XmlException> po napotkaniu dowolną zawartość DTD. Nie należy włączać DTD przetwarzanie danych, jeśli masz obawy "odmowa usługi" problemy lub jeśli masz do czynienia z niezaufanego źródła.  
  
 Jeśli masz przetwarzanie elementu DTD, włączone, możesz użyć <xref:System.Xml.XmlSecureResolver> do ograniczania zasobów, <xref:System.Xml.XmlReader> można uzyskać dostęp. Można również projektowanie aplikacji, tak aby przetwarzania XML pamięci i ograniczonego czasu. Na przykład skonfigurować limitów czasu w aplikacji programu ASP.NET.  
  
 Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do wartości domyślnej `true` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Prohibit`. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do `false` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Parse`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza poprawność danych przy użyciu DTD.  
  
 [!code-cpp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CPP/XmlReaderSettings.DtdValidate.cpp#1)]
 [!code-csharp[XmlReaderSettings.DtdValidate#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.DtdValidate/CS/validdtd.cs#1)]
 [!code-vb[XmlReaderSettings.DtdValidate#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.DtdValidate/VB/validdtd.vb#1)]  
  
 W przykładzie użyto pliku itemDTD.xml jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.DtdValidate#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.DtdValidate/XML/itemDTD.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReaderSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlReaderSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje elementów członkowskich klasy ustawienia do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Xml.XmlReaderSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlReaderSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`.|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|0.|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A>|0 (nie ma limitu liczby znaków, które wynikają z rozwijanie jednostek).|  
|<xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A>|0 (nie ma żadnego limitu rozmiaru dokumentu XML).|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`.|  
|<xref:System.Xml.XmlTextReader.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A>|`true`. Ta właściwość jest przestarzała. Zamiast nich należy używać słów kluczowych <xref:System.Xml.XmlTextReader.DtdProcessing%2A>. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do wartości domyślnej `true` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Prohibit`. Jeśli zostały ustawione <xref:System.Xml.XmlReaderSettings.ProhibitDtd%2A> do `false` ustaw <xref:System.Xml.XmlTextReader.DtdProcessing%2A> do `Parse`.|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|Pusta <xref:System.Xml.Schema.XmlSchemaSet> obiektu.|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints>.|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>.|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|Nowy <xref:System.Xml.XmlUrlResolver> obiektu.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); void set(System::Xml::Schema::XmlSchemaSet ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet with get, set" Usage="System.Xml.XmlReaderSettings.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Xml.Schema.XmlSchemaSet" /> do użycia podczas przeprowadzania walidacji schematu.</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaSet" /> Do użycia podczas przeprowadzania walidacji schematu. Wartość domyślna to pusta <see cref="T:System.Xml.Schema.XmlSchemaSet" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   Nie należy używać schematów z nieznanej lub niezaufanej źródła lub lokalizacji. Ten sposób spowoduje złamanie zabezpieczeń kodu.  
> -   Schematy XML (w tym wbudowane schematy) są założenia podatne na ataki; ich nie akceptuje w scenariuszach niezaufanych.  
> -   Komunikaty o błędach weryfikacji schematu i wyjątków może narazić poufnych informacji o modelu zawartości lub ścieżek identyfikatora URI do pliku schematu. Uważaj, aby nie ujawnić te informacje do niezaufanych wywołujących.  
> -   Aby uzyskać dodatkowe informacje Zobacz sekcję "Uwagi dotyczące zabezpieczeń".  
  
 <xref:System.Xml.Schema.XmlSchemaSet> Klasy obsługuje tylko schematy języka (XSD) definicji schematu XML. <xref:System.Xml.XmlReader> wystąpienia utworzone przez <xref:System.Xml.XmlReader.Create%2A> metody nie można skonfigurować tak, aby włączyć sprawdzanie poprawności schematu danych XML (XDR).  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
  
-   Nie należy używać schematów z nieznanej lub niezaufanej źródeł. Ten sposób spowoduje złamanie zabezpieczeń kodu. <xref:System.Xml.XmlUrlResolver> Klasy jest używany do rozpoznawania schematów zewnętrznych domyślnie. Aby wyłączyć rozpoznawanie include, importowanie i ponownie zdefiniować elementy schematu, ustaw <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> właściwość `null`.  
  
-   Wyjątki zgłoszone w wyniku użycia <xref:System.Xml.Schema.XmlSchemaSet> klasy, takie jak <xref:System.Xml.Schema.XmlSchemaException> klas mogą zawierać poufne informacje, które nie powinny zostać ujawnione w scenariuszach niezaufanych. Na przykład <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> właściwość <xref:System.Xml.Schema.XmlSchemaException> zwraca składnik path identyfikatora URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwości nie powinny zostać ujawnione w scenariuszach niezaufanych. Wyjątki powinny być poprawnie traktowane tak, aby te informacje poufne nie jest widoczny w niezaufanych scenariuszy.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlReaderSettings> obiektu i <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metodę, aby skojarzyć schematu z dokumentu XML. Schemat jest dodawany do <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwość <xref:System.Xml.XmlReaderSettings> obiektu. Wartość <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwość <xref:System.Xml.Schema.XmlSchemaSet> obiektu. Schemat jest używana do zweryfikowania, że dokument XML jest zgodny ze schematu modelu zawartości. Błędy sprawdzania poprawności schematu i ostrzeżenia, które są obsługiwane przez <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> zdefiniowane w <xref:System.Xml.XmlReaderSettings> obiektu.  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 W przykładzie użyto pliku books.xml jako dane wejściowe.  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 W przykładzie użyto pliku books.xsd jako dane wejściowe.  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.XmlReaderSettings.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy proces czytający napotka błędy sprawdzania poprawności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Te zdarzenia występują podczas odczytywania wystąpienia dokumentu XML, jeśli <xref:System.Xml.XmlReaderSettings.ValidationType%2A> jest ustawiona jako <xref:System.Xml.ValidationType.DTD> lub <xref:System.Xml.ValidationType.Schema>. Jeśli <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> ustawienie zostało włączone na <xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> właściwości tych zdarzeń również wystąpić, gdy wystąpią wszelkie ostrzeżenia sprawdzania poprawności.  
  
 Jeśli czytnik jest skonfigurowany do weryfikacji i nie została skonfigurowana żadna procedura obsługi zdarzeń sprawdzania poprawności, <xref:System.Xml.Schema.XmlSchemaValidationException> jest generowany dla wszystkich błędów sprawdzania poprawności. (Nie powodują ostrzeżenia sprawdzania poprawności <xref:System.Xml.Schema.XmlSchemaValidationException> zgłoszenie).  
  
> [!IMPORTANT]
>  Komunikaty o błędach weryfikacji może ujawnić informacje poufne modelu zawartości. Błąd weryfikacji i komunikaty ostrzegawcze są obsługiwane przy użyciu <xref:System.Xml.Schema.ValidationEventHandler> delegowanie lub są widoczne jako <xref:System.Xml.Schema.XmlSchemaValidationException> Jeśli żadna procedura obsługi zdarzeń jest dostarczany w celu <xref:System.Xml.XmlReaderSettings> obiektu (nie powodują ostrzeżenia sprawdzania poprawności <xref:System.Xml.Schema.XmlSchemaValidationException> zgłoszenie). Te informacje w modelu zawartości nie powinny zostać ujawnione w scenariuszach niezaufanych. Komunikaty ostrzegawcze sprawdzania poprawności są domyślnie pomijane i mogą zostać zgłoszone przez ustawienie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings> flagi.  
>   
>  <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwość <xref:System.Xml.Schema.XmlSchemaValidationException> zwraca składnik path identyfikatora URI do pliku schematu, który spowodował wyjątek. <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> Właściwości nie powinny zostać ujawnione w scenariuszach niezaufanych.  
  
   
  
## Examples  
 Poniższy przykład pokazuje ustawienia Aby określić, czy utworzyć czytnika, który sprawdza poprawność przy użyciu wbudowanego schematu i wyświetla również ostrzeżenia sprawdzania poprawności. Program obsługi zdarzeń sprawdzania poprawności używa <xref:System.Xml.Schema.XmlSeverityType> wyliczeniu, aby odróżnić ostrzeżeń i błędów.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationFlags">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaValidationFlags ValidationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationFlags As XmlSchemaValidationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaValidationFlags ValidationFlags { System::Xml::Schema::XmlSchemaValidationFlags get(); void set(System::Xml::Schema::XmlSchemaValidationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationFlags : System.Xml.Schema.XmlSchemaValidationFlags with get, set" Usage="System.Xml.XmlReaderSettings.ValidationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaValidationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, ustawienia sprawdzania poprawności schematu. To ustawienie dotyczy <see cref="T:System.Xml.XmlReader" /> obiekty, które sprawdzają poprawność schematów (<see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> właściwością <see langword="ValidationType.Schema" />).</summary>
        <value>Bitowa kombinacja wartości wyliczenia, które określają opcje weryfikacji. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints" /> i <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.AllowXmlAttributes" /> są domyślnie włączone. <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema" />, <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation" />, i <see cref="F:System.Xml.Schema.XmlSchemaValidationFlags.ReportValidationWarnings" /> są domyślnie wyłączone.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> flagi weryfikacji <xref:System.Xml.XmlReaderSettings> obiektu nie są domyślnie ustawione. Gdy te flagi są ustawiane, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> z <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schemat w dokumencie wystąpienia w <xref:System.Xml.XmlReader>. Jeśli <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> obiekt jest `null`, lokalizacji schematu nie są rozpoznawane nawet wtedy, gdy <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> ustawiono flagi weryfikacji.  
>   
>  Dodany podczas weryfikacji schematów dodać nowe typy i zmienić wynik sprawdzania poprawności dokumentu weryfikowana. W rezultacie Schematy zewnętrzne mają zostać rozwiązane z zaufanych źródeł.  
>   
>  Wyłączanie <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flagi (domyślnie włączony) jest zalecane, gdy sprawdzania poprawności i niezaufanych, duże XML dokumenty w scenariuszach wysokiej dostępności względem schematu z ograniczeniami tożsamości przez dużą część dokumentu.  
  
   
  
## Examples  
 Poniższy przykład sprawdza plik XML dla wbudowanego schematu XML, włączając <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> ustawienie. Czytnik XML został skonfigurowany do wyświetlania ostrzeżenia sprawdzania poprawności, sp zostanie również wyświetlony oczekiwane ostrzeżenie dla elementu głównego.  
  
 [!code-csharp[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/CS/factory_rdr_cctor.cs#1)]
 [!code-vb[XmlReaderSettings.IgnoreInlineSchema#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/VB/factory_rdr_cctor.vb#1)]  
  
## <a name="input"></a>Dane wejściowe  
 W przykładzie użyto pliku inlineSchema.xml jako dane wejściowe.  
  
 [!code-xml[XmlReaderSettings.IgnoreInlineSchema#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReaderSettings.IgnoreInlineSchema/XML/inlineSchema.xml#3)]  
  
## <a name="output"></a>Dane wyjściowe  
 Ostrzeżenie: Dopasowywania nie można odnaleźć schematu. Nie przeprowadzono weryfikacji. Nie można odnaleźć informacji schematu dla elementu "root".  
  
 Błąd sprawdzania poprawności: element "xsdHeadCount:HeadCount" ma nieprawidłowy element podrzędny "dzielenia". Oczekiwano 'ID'.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidationType">
      <MemberSignature Language="C#" Value="public System.Xml.ValidationType ValidationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ValidationType ValidationType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.ValidationType" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationType As ValidationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ValidationType ValidationType { System::Xml::ValidationType get(); void set(System::Xml::ValidationType value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationType : System.Xml.ValidationType with get, set" Usage="System.Xml.XmlReaderSettings.ValidationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ValidationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Xml.XmlReader" /> będzie sprawdzenia poprawności lub typu przydziału podczas odczytywania.</summary>
        <value>Jedną z <see cref="T:System.Xml.ValidationType" /> wartości, które wskazuje, czy element XmlReader będzie sprawdzenia poprawności lub typu przydziału podczas odczytywania. Wartość domyślna to <see langword="ValidationType.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli opisano <xref:System.Xml.ValidationType> wartości.  
  
> [!NOTE]
>  <xref:System.Xml.ValidationType.Auto> i <xref:System.Xml.ValidationType.XDR> wartości wyliczenia są przestarzałe w programie .NET Framework w wersji 2.0.  
  
|ValidationType|Opis|  
|--------------------|-----------------|  
|`DTD`|Sprawdzanie poprawności jest wykonywane przy użyciu definicji typu dokumentu (DTD). **Uwaga:** <xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> właściwości również musi być ustawiona na <xref:System.Xml.DtdProcessing.Parse>.|  
|`None`|<xref:System.Xml.XmlReader> Nie sprawdzanie poprawności danych lub dowolnego typu przypisania.|  
|`Schema`|Sprawdzanie poprawności i typ przydziału jest wykonywane przy użyciu schematu języka (XSD) definicji schematu XML. Czytnik uzyskuje dostęp do schematu XML przy użyciu następujących czynności:<br /><br /> — Wykorzystanie <xref:System.Xml.XmlReaderSettings.Schemas%2A> właściwości w celu uzyskania dostępu do <xref:System.Xml.Schema.XmlSchemaSet> obiekt skojarzony z tym czytnika.<br />-Wykorzystuje schemat w tekście, zawarte w dokumencie wystąpienia XML. ( <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> Należy włączyć opcję.)<br />-Używa schematu XML, określony przez wskazówek lokalizacji schematu (`xsi:schemaLocation` lub `xsi:noNamespaceSchemaLocation` atrybutu) znalezione w dokumencie wystąpienia XML. ( <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> Należy włączyć opcję.)|  
  
   
  
## Examples  
 Poniższy przykład sprawdza przy użyciu schematu, przechowywane w <xref:System.Xml.Schema.XmlSchemaSet>.  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
 W przykładzie użyto następujących plików wejściowych:  
  
 `booksSchemaFail.xml`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 `books.xsd`  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaValidationFlags" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.XmlReaderSettings.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zestawy <see cref="T:System.Xml.XmlResolver" /> umożliwiający dostęp do dokumentów zewnętrznych.</summary>
        <value>
          <see cref="T:System.Xml.XmlResolver" /> Umożliwiający dostęp do dokumentów zewnętrznych. Jeśli ustawiono <see langword="null" />, <see cref="T:System.Xml.XmlException" /> jest generowany, gdy <see cref="T:System.Xml.XmlReader" /> próbuje uzyskać dostęp zewnętrznego zasobu. Wartość domyślna to nowy <see cref="T:System.Xml.XmlUrlResolver" /> bez poświadczeń.  Począwszy od programu .NET Framework 4.5.2, to ustawienie ma wartość domyślną <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Jest używana do lokalizowania i otworzyć dokumentu wystąpienia XML, lub aby znaleźć i otworzyć dowolnych zasobów zewnętrznych, które odwołuje się wystąpienia dokumentu XML. Może to obejmować jednostki DTD i schematy. <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> Właściwość może służyć do określania wszystkie poświadczenia wymagane do uwierzytelniania sieciowego.  
  
> [!IMPORTANT]
>  Ponieważ <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> mogą zawierać poufne informacje takie jak poświadczenia użytkownika, należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlReaderSettings> obiektów, lub podczas przekazywania <xref:System.Xml.XmlReaderSettings> obiekt z jednego składnika.  
>   
>  <xref:System.Xml.XmlSecureResolver> Może służyć do dostępu do dokumentów zewnętrznych. <xref:System.Xml.XmlSecureResolver> Klasy pomaga zabezpieczyć inną implementację <xref:System.Xml.XmlResolver> opakowując <xref:System.Xml.XmlResolver> obiektu i ograniczenie zasobów, podstawowe <xref:System.Xml.XmlResolver> ma dostęp do.  
>   
>  <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> flagi weryfikacji <xref:System.Xml.XmlReaderSettings> obiektu nie są domyślnie ustawione. Gdy te flagi są ustawiane, <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> z <xref:System.Xml.XmlReaderSettings> obiekt jest używany do rozpoznawania lokalizacji schemat w dokumencie wystąpienia w <xref:System.Xml.XmlReader>. Jeśli <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> obiekt jest `null`, lokalizacji schematu nie są rozpoznawane nawet wtedy, gdy <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> i <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> ustawiono flagi weryfikacji.  
>   
>  Dodany podczas weryfikacji schematów dodać nowe typy i zmienić wynik sprawdzania poprawności dokumentu weryfikowana. W rezultacie Schematy zewnętrzne mają zostać rozwiązane z zaufanych źródeł.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlReader> , który używa <xref:System.Xml.XmlSecureResolver> przy użyciu poświadczeń domyślnych.  
  
 [!code-csharp[XmlReader.Create#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#10)]
 [!code-vb[XmlReader.Create#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <altmember cref="M:System.Xml.XmlReader.Create(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>