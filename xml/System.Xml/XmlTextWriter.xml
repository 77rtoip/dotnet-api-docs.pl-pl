<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db79cd9b712348998be2cd5a08d9d8bed660851f" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53233177" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9ee1c-101">Reprezentuje edytor, który umożliwia szybkie niebuforowanym, tylko do przodu generowania strumienie lub pliki zawierające dane XML, który jest zgodny z W3C Extensible Markup Language (XML) 1.0 i przestrzenie nazw w zaleceniach XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
<span data-ttu-id="9ee1c-102">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca użycie <see cref="T:System.Xml.XmlWriter" /> klasy zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9ee1c-103">Ta klasa implementuje <xref:System.Xml.XmlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-104">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-105">`XmlTextWriter` przechowuje stosu przestrzeni nazw, odpowiadający wszystkich obszarów nazw zdefiniowanych w bieżącego elementu stosu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="9ee1c-106">Za pomocą `XmlTextWriter` ręcznie zadeklarować przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="9ee1c-107">Powyższy kod C# tworzy następujące wyniki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-107">The above C# code produces the following output.</span></span> <span data-ttu-id="9ee1c-108">`XmlTextWriter` promuje deklaracji przestrzeni nazw do elementu głównego, aby uniknąć jego zduplikowane na elementy podrzędne dwa.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="9ee1c-109">Elementy podrzędne przejmą prefiks z deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="9ee1c-110">`XmlTextWriter` Umożliwia również zastąpienie bieżącej deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="9ee1c-111">W poniższym przykładzie identyfikator URI "123" przestrzeni nazw jest zastępowany przez "abc", aby utworzyć XML element `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="9ee1c-112">Za pomocą metod zapisywania, przyjmujące prefiksu jako argument można również określić, który prefiks używany.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="9ee1c-113">W poniższym przykładzie dwa różne prefiksy są mapowane na tej samej przestrzeni nazw URI, aby wygenerować tekst XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="9ee1c-114">W przypadku wielu deklaracji przestrzeni nazw mapowania różnych prefiksów do tej samej przestrzeni nazw URI, `XmlTextWriter` wstecz przedstawia stos deklaracje przestrzeni nazw, a następnie wybiera się najbliżej.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="9ee1c-115">W tym C# przykładzie ponieważ `WriteAttributeString` wywołania nie określono prefiksu, moduł zapisujący używa ostatniego prefiksu wypychane na stosie przestrzeni nazw i tworzy następujący kod XML:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="9ee1c-116">Jeśli wystąpią konflikty nazw, `XmlTextWriter` rozpoznaje je jako generując prefiksy alternatywne.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="9ee1c-117">Na przykład, jeśli atrybut i element ma taki sam prefiks ale o innej przestrzeni nazw, `XmlWriter` generuje alternatywnego prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="9ee1c-118">Wygenerowane prefiksy są nazywane `n{i}` gdzie `i` to liczba od 1.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="9ee1c-119">Liczba jest resetowany do 1 dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="9ee1c-120">Atrybuty, które są skojarzone z identyfikatora URI obszaru nazw musi mieć prefiks (ustawienie domyślne, których przestrzenie nazw nie są stosowane do atrybutów).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="9ee1c-121">To jest zgodny z sekcji 5.2 przestrzenie nazw W3C z zaleceniem XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="9ee1c-122">Jeśli atrybut odwołuje się do identyfikatora URI obszaru nazw, ale nie określono prefiksu, moduł zapisujący generuje prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="9ee1c-123">Podczas pisania pustego elementu, dodatkowe dodawany jest odstęp między nazwę tagu i tagiem zamykającym na przykład `<item />`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="9ee1c-124">To zapewnia zgodność z starsze przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="9ee1c-125">Gdy `String` jest używany jako parametr metody `null` i `String.Empty` są równoważne.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="9ee1c-126">`String.Empty` regułom W3C.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="9ee1c-127">Aby napisać silnie typizowane dane, użyj <xref:System.Xml.XmlConvert> klasy, aby przekonwertować typy danych na ciąg.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="9ee1c-128">Na przykład, poniższy kod C# konwertuje dane z `Double` do `String` i zapisuje element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="9ee1c-129">`XmlTextWriter` nie sprawdza następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="9ee1c-130">Nieprawidłowe znaki w polu nazwy atrybutu i elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="9ee1c-131">Znaki Unicode, które nie pasują do określonego kodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="9ee1c-132">Jeśli znaki Unicode nie odpowiadają określonego kodowania `XmlTextWriter` nie zmienia znaczenia znaków Unicode do encje znaków.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="9ee1c-133">Zduplikowane atrybuty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="9ee1c-134">Znaki w DOCTYPE identyfikator publiczny lub identyfikatora systemu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9ee1c-135">Zagadnienia dotyczące zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="9ee1c-135">Security Considerations</span></span>  
 <span data-ttu-id="9ee1c-136">Poniżej wymieniono elementy kwestii, które należy wziąć pod uwagę podczas pracy z <xref:System.Xml.XmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="9ee1c-137">Wyjątki generowane przez <xref:System.Xml.XmlTextWriter> może ujawnić informacje o ścieżce, które mają być przetwarzane do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="9ee1c-138">Aplikacje należy przechwytywać wyjątki i odpowiednio je przetwarzać.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="9ee1c-139">Podczas przekazywania <xref:System.Xml.XmlTextWriter> do innej aplikacji zasadniczy strumień jest uwidaczniany w tej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="9ee1c-140">Jeśli musisz przekazać <xref:System.Xml.XmlTextWriter> aby częściowo zaufanych aplikacji, należy użyć <xref:System.Xml.XmlWriter> obiekt utworzony przez <xref:System.Xml.XmlWriter.Create%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="9ee1c-141"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> lub <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="9ee1c-142">Dowolne dane nie mają być przekazywane do tych metod.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="9ee1c-143">Zmiana ustawień domyślnych nie ma żadnej gwarancji, że wygenerowanych danych wyjściowych jest poprawnie sformułowanym danych XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="9ee1c-144">Nie są akceptowane składniki pomocnicze, takie jak <xref:System.Text.Encoding> obiektu z niezaufanego źródła.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="9ee1c-145">Dokumenty i dane XML</span><span class="sxs-lookup"><span data-stu-id="9ee1c-145">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ee1c-146">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-147">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="9ee1c-148"><see langword="TextWriter" /> Do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-148">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="9ee1c-149">Zakłada się, że <see langword="TextWriter" /> są już ustawione na prawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="9ee1c-150">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-151">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="9ee1c-152">Strumień, do której chcesz zapisać.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-152">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="9ee1c-153">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-153">The encoding to generate.</span></span> <span data-ttu-id="9ee1c-154">Jeśli kodowanie <see langword="null" /> zapisuje się strumienia w formacie UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="9ee1c-155">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego strumienia i kodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-156">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-157">Kodowanie nie jest obsługiwany lub nie można zapisać strumienia.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-157">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-158"><paramref name="w" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-158"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="9ee1c-159">Nazwa pliku do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-159">The filename to write to.</span></span> <span data-ttu-id="9ee1c-160">Jeśli plik istnieje, jej obcina i zastępuje go z nową zawartością.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-160">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="9ee1c-161">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-161">The encoding to generate.</span></span> <span data-ttu-id="9ee1c-162">Jeśli kodowanie <see langword="null" /> zapisuje plik w formacie UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="9ee1c-163">Tworzy wystąpienie <see cref="T:System.Xml.XmlTextWriter" /> przy użyciu określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-164">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-165">Kodowanie nie jest obsługiwana; Nazwa pliku jest pusta, zawiera tylko znak odstępu lub zawiera jeden lub więcej nieprawidłowych znaków.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="9ee1c-166">Odmowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-166">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-167">Nazwa pliku jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-167">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="9ee1c-168">Nie można odnaleźć katalogu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-168">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="9ee1c-169">Nazwa pliku zawiera nieprawidłowe lub nieprawidłowa składnia nazwy pliku, nazwa katalogu lub składnia etykiety woluminu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="9ee1c-170">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-170">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-171">Pobiera obiekt strumienia.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-171">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="9ee1c-172">Strumień, do którego <see langword="XmlTextWriter" /> jest pisanie lub <see langword="null" /> Jeśli <see langword="XmlTextWriter" /> został zbudowany przy użyciu <see cref="T:System.IO.TextWriter" /> który nie dziedziczy <see cref="T:System.IO.StreamWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-173">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-174">Jeśli moduł zapisujący został zbudowany przy użyciu `TextWriter` , jest tworzony na podstawie `StreamWriter` klasy, ta właściwość jest równoważna <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9ee1c-175">Jeśli moduł zapisujący został zbudowany przy użyciu <xref:System.IO.Stream>, właściwość ta zwraca `Stream` przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="9ee1c-176">Jeśli moduł zapisujący został zbudowany przy użyciu nazwy pliku, ta właściwość zwraca `Stream` reprezentujący plik.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-177">Zamknięcie tego strumienia i zasadniczy strumień.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-177">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-178">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-179">Wszystkie elementy lub atrybuty pozostawione otwarte są automatycznie zamykane.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="9ee1c-180">Ta metoda nie generuje żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-181">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-182">Opróżnia dowolnie znajduje się w buforze do bazowego strumieni i również opróżnia zasadniczy strumień.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-183">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-184">Jest to nazywane zamiast <xref:System.Xml.XmlTextWriter.Close%2A> kiedy chcesz zapisać więcej do źródłowego strumienia bez utraty, co to jest nadal w buforze.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-185">Poniższy przykład zapisuje się dwa fragmenty XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-186">Wskazuje sposób formatowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-186">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="9ee1c-187">Jedną z <see cref="T:System.Xml.Formatting" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="9ee1c-188">Wartość domyślna to <see langword="Formatting.None" /> (żadne specjalne formatowanie).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-188">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-189">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-190">Jeśli `Indented` wyboru jest zaznaczone, elementy podrzędne są wcięte przy użyciu <xref:System.Xml.XmlTextWriter.Indentation%2A> i <xref:System.Xml.XmlTextWriter.IndentChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="9ee1c-191">Tworzone jest wcięcie tylko zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-191">Only element content is indented.</span></span> <span data-ttu-id="9ee1c-192">Poniższy kod C# zapisuje się elementy HTML, w tym zawartość mieszana:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="9ee1c-193">Powyższy kod generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="9ee1c-194">Gdy to zostanie wyświetlony w formacie HTML między elementami pogrubiony i kursywę pojawia się żadne inne białe.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="9ee1c-195">W rzeczywistości w tym przykładzie wcięć zostało dodane między tymi elementami słowo "Syna" będzie mieć niepoprawnie przerwane.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="9ee1c-196">Zapisywanie zawartości, z wyłączeniem tekst `String.Empty` umieszcza tego elementu z zawartości w trybie mieszanym.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="9ee1c-197">Elementy podrzędne nie dziedziczą ten stan "mieszanego".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="9ee1c-198">Element podrzędny elementu "mieszany" jest wcięcia, chyba że jest to również zawartością "mieszany".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="9ee1c-199">[Zawartość elementu](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) i [mieszaną zawartość i](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) są zdefiniowane zgodnie z definicji XML 1.0 tych terminów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="9ee1c-200">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-201">Pobiera lub ustawia liczbę IndentChars do zapisu dla poszczególnych poziomów w hierarchii podczas <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ustawiono <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="9ee1c-202">Liczba <see langword="IndentChars" /> dla poszczególnych poziomów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-202">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="9ee1c-203">Wartość domyślna to 2.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-203">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-204">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-205">Wcięcie odbywa się na następujące typy węzłów: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, i `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="9ee1c-206">Nie wpływa na inne typy węzłów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-206">All other node types are not affected.</span></span> <span data-ttu-id="9ee1c-207">`XmlTextWriter` Nie twórz wcięcie wewnętrzny podzbiór DTD.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="9ee1c-208">Można jednak wykonać następujące polecenie, aby zastosować formatowanie do wewnętrzny podzbiór DTD.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-209">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-210">Ustawienie tej właściwości na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-210">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-211">Pobiera lub ustawia znak, który na potrzeby wcięcia, kiedy <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ustawiono <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="9ee1c-212">Znak do użytku wcięcia.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-212">The character to use for indenting.</span></span> <span data-ttu-id="9ee1c-213">Wartość domyślna to miejsce.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-213">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="9ee1c-214"><see langword="XmlTextWriter" /> Pozwala ustawić tę właściwość na dowolny znak.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="9ee1c-215">Aby zapewnić prawidłowy kod XML, należy określić prawidłowy biały znak, 0x9, 0x10, 0x13 lub 0x20.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-216">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="9ee1c-217">Identyfikator URI Namespace prefiks, którego ma zostać odnaleziona.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-217">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="9ee1c-218">Zwraca najbliższego prefiks zdefiniowany w bieżącym zakresie przestrzeni nazw dla identyfikatora URI obszaru nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="9ee1c-219">Zgodny prefiks.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-219">The matching prefix.</span></span> <span data-ttu-id="9ee1c-220">Lub <see langword="null" /> Jeśli brak pasujących przestrzeni nazw URI znajduje się w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-221">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-222">Poniższy przykład zapisuje się książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-223"><paramref name="ns" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-223"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-224">Pobiera lub ustawia wartość wskazującą, czy w celu obsługi przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-224">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="9ee1c-225"><see langword="true" /> Aby obsługiwać przestrzenie nazw; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-225"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="9ee1c-226">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-226">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-227">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-228">Ta właściwość określa, czy edytor obsługuje przestrzenie nazw W3C zaleceniem XML znajdujący się w www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-228">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-229">Tę właściwość można zmienić tylko w <see langword="WriteState.Start" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-230">Pobiera lub ustawia znak cudzysłowu wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-230">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="9ee1c-231">Znak na potrzeby cudzysłów wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-231">The character to use to quote attribute values.</span></span> <span data-ttu-id="9ee1c-232">Musi to być pojedynczy cudzysłów (&amp;#39;) lub podwójny cudzysłów (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="9ee1c-233">Wartość domyślna to podwójny cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-233">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-234">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-235">Ustawienie tej właściwości na coś innego niż albo pojedynczym lub podwójnym oferty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-235">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9ee1c-236">Tablica bajtów do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-236">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="9ee1c-237">Pozycja buforu wskazujący na początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-237">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="9ee1c-238">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-238">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-239">Koduje określoną bajtów binarnych jako base64 i zapisuje wynikowy tekstu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-240">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-241">Poniższy przykład koduje przy użyciu pliku wejściowego `WriteBase64` i generowanie tymczasowego pliku XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="9ee1c-242">Tymczasowy plik XML jest dekodowana przy użyciu <xref:System.Xml.XmlTextReader.ReadBase64%2A> metody i w porównaniu do oryginalnego pliku.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-243"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-243"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-244">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9ee1c-245"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-245"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-246"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9ee1c-247">Tablica bajtów do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-247">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="9ee1c-248">Pozycja w buforze, wskazujący na początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-248">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="9ee1c-249">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-249">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-250">Koduje określoną bajtów binarnych jako binhex i zapisuje wynikowy tekstu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-251">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-252"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-252"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-253">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9ee1c-254"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-254"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-255"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="9ee1c-256">Tekst, aby umieścić wewnątrz bloku CDATA.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-256">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="9ee1c-257">Zapisuje &lt;! [CDATA [...]] &gt; bloku zawierających określony tekst.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-258">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-259">Jeśli `text` jest `null` lub `String.Empty`, Metoda ta zapisuje pusty blok CDATA, na przykład \<! [ CDATA]</span><span class="sxs-lookup"><span data-stu-id="9ee1c-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-260">Tekst mogłoby spowodować innych dobrze sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-261"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="9ee1c-262">Znak Unicode, dla którego należy wygenerować jednostki znaku.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="9ee1c-263">Wymusza generowania jednostki znaków dla określona wartość znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-264">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-265">Ta metoda zapisuje znak Unicode w formacie odwołanie do jednostki znaków szesnastkowych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-266">W poniższym przykładzie użyto `WriteCharEntity` metodę, aby zapisać adres e-mail.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-267">Znak jest z zakresu znaków zastępczych pary <see langword="0xd800" />  -  <see langword="0xdfff" />; lub tekst mogłoby spowodować innych dobrze sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-268"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9ee1c-269">Tablica znaków zawierający tekst do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="9ee1c-270">Pozycja w buforze, wskazujący na początek tekstu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="9ee1c-271">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-272">Zapisuje bufor tekstowy jednego naraz.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-273">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-274">Ta metoda może służyć do zapisania dużych ilości buforu tekstu w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="9ee1c-275">Specjalnej obsługi, należy wykonać w celu zapewnienia `WriteChars` metody nie podzielić zastępczych par znaków między wieloma buforu zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="9ee1c-276">Specyfikacja XML definiuje prawidłowe zakresy dla pary zastępcze.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="9ee1c-277">Wyjątek jest generowany, jeśli zastępczych par znaków są zapisywane, które mogłyby spowodować zastępczych par znaków, podzielenia się w buforze.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-278"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9ee1c-279"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9ee1c-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="9ee1c-280">-or-</span></span> 
<span data-ttu-id="9ee1c-281">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />; podzielenia wyniki wywołań w zastępczych par znaków lub zapisywanych para zastępcza nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-282"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="9ee1c-283">Tekst, aby umieścić wewnątrz komentarz.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="9ee1c-284">Zapisuje się komentarz &lt;!--... -&gt; zawierających określony tekst.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-285">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-286">Jeśli `text` jest `null` lub `String.Empty`, Metoda ta zapisuje `Comment` bez danych zawartości, na przykład \<!--->.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-287">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-288">Tekst mogłoby spowodować innych dobrze sformułowany dokument XML</span><span class="sxs-lookup"><span data-stu-id="9ee1c-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-289"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ee1c-290">Nazwa typu dokumentu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="9ee1c-291">Musi to być pusty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="9ee1c-292">Jeśli inna niż null usługa również zapisuje publicznego "pubid" "sysid" gdzie <paramref name="pubid" /> i <paramref name="sysid" /> zostaną zastąpione danego argumentów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="9ee1c-293">Jeśli <paramref name="pubid" /> ma wartość null i <paramref name="sysid" /> jest inna niż null zapisuje systemu "sysid" gdzie <paramref name="sysid" /> jest zastępowana wartością tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="9ee1c-294">Jeśli inna niż null zapisuje [podzbioru] gdzie podzbioru jest zastępowany przez wartość tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="9ee1c-295">Zapisuje deklaracji DOCTYPE o określonej nazwie i opcjonalnych atrybutów.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-296">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-297">Ta metoda nie sprawdza obecności nieprawidłowe znaki w `pubid`, `sysid` lub `subset`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="9ee1c-298">Ponadto nie sprawdza ona, że wewnętrzny podzbiór jest poprawnie sformułowany.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ee1c-299"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="9ee1c-300">Dowolne dane nie mają być przekazywane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-301">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-302">Ta metoda została wywołana poza prologu (po elemencie głównym).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-303"><paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="9ee1c-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
<span data-ttu-id="9ee1c-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="9ee1c-304">-or-</span></span> 
<span data-ttu-id="9ee1c-305">Wartość <paramref name="name" /> mogłoby spowodować nieprawidłowy kod XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-306">Zamyka poprzedniego <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> wywołania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-307">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-308">Jeśli wywołasz `WriteStartAttribute`, możesz zamknąć ten atrybut przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="9ee1c-309">Ten atrybut można również zamknąć, wywołując `WriteStartAttribute` ponownie podczas wywoływania <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, lub podczas wywoływania <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-310">Poniższy przykład zapisuje się książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-311">Zamyka wszystkie otwarte elementy lub atrybuty i umieszcza moduł zapisujący z powrotem w stanie początkowym.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-312">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-313">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-314">Dokument XML jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-315">Zamyka jeden element i pobiera odpowiednie zakres przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-316">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-317">Jeśli element nie zawiera żadnej zawartości krótki tagu końcowego "/ >" jest zapisywany; w przeciwnym razie są zapisywane pełne taga.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-318">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ee1c-319">Nazwa odwołania do jednostki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="9ee1c-320">Zapisuje się odwołania do jednostki jako <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-321">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-322">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-323">Tekst mogłoby spowodować innych dobrze sformułowany dokument XML lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-324">Zamyka jeden element i pobiera odpowiednie zakres przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-325">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-326">Ta metoda zawsze zapisuje pełny taga.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-326">This method always writes the full end tag.</span></span> <span data-ttu-id="9ee1c-327">Jest to przydatne podczas pracy z elementami, które musi zawierać pełną taga.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="9ee1c-328">Na przykład przeglądarek oczekiwać HTML Bloki skryptu zostanie zamknięty z " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-329">Poniższy przykład zapisuje się do elementu za pomocą żadnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="9ee1c-330">Używa WriteFullEndElement można zapisać pełną końcowym tagu elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ee1c-331">Nazwa do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-332">Zapisuje się z określoną nazwą, zapewniając jest prawidłową nazwą zgodnie z zaleceniem W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-333">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-334">Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`, `WriteName` sprawdza również, czy nazwa również jest nieprawidłowa według przestrzeni nazw W3C zaleceniem XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-335"><paramref name="name" /> nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ee1c-336">Nazwa do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-337">Zapisuje się z określoną nazwą, zapewniania jest w prawidłowym <see langword="NmToken" /> zgodnie z zaleceniem W3C XML 1.0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-338">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-339"><paramref name="name" /> nie jest prawidłowym <see langword="NmToken" />; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9ee1c-340">Nazwa instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="9ee1c-341">Tekst do uwzględnienia w instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="9ee1c-342">Zapisuje się instrukcja przetwarzania ze spacją między nazwą a tekst w następujący sposób: &lt;? Nazwa tekstu?&gt;.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-343">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-344">Jeśli `text` jest `null` lub `String.Empty`, Metoda ta zapisuje `ProcessingInstruction` bez danych zawartości, na przykład \<? nazwa? >.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-345">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-346">Tekst mogłoby spowodować innych dobrze sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="9ee1c-347"><paramref name="name" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="9ee1c-348">Ta metoda jest używany do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> została już wywołana.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="9ee1c-349">Lokalna nazwa do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="9ee1c-350">Identyfikator URI przestrzeni nazw do skojarzenia z nazwą.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="9ee1c-351">Zapisuje się nazwę kwalifikowaną przestrzenią nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="9ee1c-352">Metoda ta wyszukuje prefiks, który znajduje się w zakresie dla danego obszaru nazw.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-353">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-354">Na przykład, poniższy kod języka Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="9ee1c-355">Generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="9ee1c-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="9ee1c-356">Jeśli `ns` generowany jest mapowany do bieżącej domyślnej przestrzeni nazw, żadnego prefiksu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="9ee1c-357">Podczas zapisywania wartości atrybutów, ta metoda generuje prefiksu, jeśli `ns` nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="9ee1c-358">Podczas zapisywania zawartości elementu, zgłasza wyjątek, jeśli `ns` nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="9ee1c-359">Jeśli ten moduł zapisujący obsługuje przestrzenie nazw (<xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`), ta metoda sprawdza, czy nazwa jest nieprawidłowa zgodnie z opisem w [przestrzenie nazw W3C XML zalecenie](https://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-360">Poniższy przykład zapisuje się częścią schematu XSD.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-361"><paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="9ee1c-362"><paramref name="localName" /> nie jest prawidłową nazwą według specyfikacji przestrzeni nazw W3C.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ee1c-363">Zapisuje nieprzetworzone znaczników ręcznie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-364">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="9ee1c-365">Ciąg zawierający tekst do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-366">Zapisuje nieprzetworzone znaczników ręcznie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-367">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-368">Ta metoda nie zmienia znaczenia znaków specjalnych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ee1c-369"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="9ee1c-370">Dowolne dane nie mają być przekazywane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-371">Poniższy przykład zapisuje na ciąg za pośrednictwem `WriteRaw` metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="9ee1c-372">Tablica znaków zawierający tekst do zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="9ee1c-373">Pozycja buforu wskazujące początek tekstu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="9ee1c-374">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-375">Zapisuje nieprzetworzone znaczników ręcznie z buforu znaków.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-376">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-377">Ta metoda nie zmienia znaczenia znaków specjalnych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9ee1c-378"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="9ee1c-379">Dowolne dane nie mają być przekazywane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9ee1c-380"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9ee1c-381"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza niż zero.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="9ee1c-382">—lub—</span><span class="sxs-lookup"><span data-stu-id="9ee1c-382">-or-</span></span> 
<span data-ttu-id="9ee1c-383">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="9ee1c-384"><see langword="Namespace" /> Prefiks atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="9ee1c-385"><see langword="LocalName" /> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="9ee1c-386"><see langword="NamespaceURI" /> atrybutu</span><span class="sxs-lookup"><span data-stu-id="9ee1c-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="9ee1c-387">Zapisuje początek atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-388">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-389">Jest to nieco bardziej zaawansowanych <xref:System.Xml.XmlWriter.WriteAttributeString%2A> dzięki niemu można będzie zapisać wartości atrybutu przy użyciu wielu metod zapisywania, takich jak <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-390">Poniższy przykład zapisuje się książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-391"><paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9ee1c-392">Zapisuje deklaracji XML za pomocą wersji "1.0".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-393">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9ee1c-394">Zapisuje deklaracji XML za pomocą wersji "1.0".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-395">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-396">Kodowania poziomu dokumentu jest określany przez implementacji modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="9ee1c-397">Na przykład jeśli <xref:System.Text.Encoding> obiektu jest określona w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="9ee1c-398">Ta metoda nie powoduje utworzenia atrybutu autonomicznego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="9ee1c-399">Gdy `WriteStartDocument` nosi nazwę składnika zapisywania programu weryfikuje, czy jest pisana jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="9ee1c-400">Na przykład sprawdza, czy deklaracja XML jest pierwszym węźle, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="9ee1c-401">W przypadku ta metoda nie jest wywoływana, moduł zapisujący zakłada XML fragment jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="9ee1c-402">Jeśli `WriteStartDocument` została wywołana i następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-403">Poniższy przykład zapisuje plik XML reprezentujący książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-404">Nie jest wywoływana po konstruktora pierwszej metody zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="9ee1c-405">Jeśli <see langword="true" />, zapisuje "autonomiczne = yes"; w wypadku <see langword="false" />, zapisuje "autonomiczne = nie".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="9ee1c-406">Zapisuje deklaracji XML za pomocą wersji "1.0" i atrybut autonomiczny.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-407">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-408">Kodowania poziomu dokumentu jest określany przez implementacji modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="9ee1c-409">Na przykład jeśli <xref:System.Text.Encoding> obiektu jest określona w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="9ee1c-410">Gdy `WriteStartDocument` nosi nazwę składnika zapisywania programu weryfikuje, czy jest pisana jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="9ee1c-411">Na przykład sprawdza, czy deklaracja XML jest pierwszym węźle, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="9ee1c-412">W przypadku ta metoda nie jest wywoływana, moduł zapisujący zakłada XML fragment jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="9ee1c-413">Jeśli `WriteStartDocument` została wywołana i następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-414">Nie jest wywoływana po konstruktora pierwszej metody zapisu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="9ee1c-415">Prefiks przestrzeni nazw elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="9ee1c-416">Lokalna nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="9ee1c-417">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="9ee1c-418">Jeśli ta przestrzeń nazw jest już w zakresie i ma prefiks skojarzone następnie moduł zapisujący automatycznie zapisuje tego prefiksu również.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="9ee1c-419">Zapisuje określony taga i kojarzy ją z danej przestrzeni nazw i prefiksu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-420">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-421">Po wywołaniu tej metody można Zapis atrybutów lub tworzyć zawartość przy użyciu <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, lub <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="9ee1c-422">Możesz zamknąć element z <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> co tag końcowy jest zapisywany.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-423">Poniższy przykład zapisuje się książki.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9ee1c-424">Element writer jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-425">Pobiera stan składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="9ee1c-426">Jedną z <see cref="T:System.Xml.WriteState" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-427">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="9ee1c-428">Tekst do zapisania.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="9ee1c-429">Zapisuje zawartość podanego tekstu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-430">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-431">`WriteString` wykonuje następujące czynności</span><span class="sxs-lookup"><span data-stu-id="9ee1c-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="9ee1c-432">Znaki `&`, `<`, i `>` są zastępowane `&amp;`, `&lt;`, i `&gt;`, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="9ee1c-433">Znak wartości x-0x1F zakresu od 0 (z wyjątkiem znaków odstępu 0x9 0xA i 0xD) są zastępowane encje znaków liczbowych (`&#0;` za pośrednictwem `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="9ee1c-434">Jeśli `WriteString` jest wywoływana w kontekście wartość atrybutu, double i jednej oferty są zastępowane `&quot;` i `&apos;` odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="9ee1c-435">Na przykład, wprowadź ten ciąg `test<item>test` jest zapisywany jako</span><span class="sxs-lookup"><span data-stu-id="9ee1c-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="9ee1c-436">Jeśli `text` jest `null` lub `String.Empty`, Metoda ta zapisuje węzeł tekstowy bez zawartości danych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-437">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-438">Ciąg tekstowy zawiera para zastępcza nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="9ee1c-439">Znak zastępczy niskiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-439">The low surrogate.</span></span> <span data-ttu-id="9ee1c-440">Musi to być wartość z zakresu od <see langword="0xDC00" /> i <see langword="0xDFFF" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="9ee1c-441">Znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-441">The high surrogate.</span></span> <span data-ttu-id="9ee1c-442">Musi to być wartość z zakresu od <see langword="0xD800" /> i <see langword="0xDBFF" />.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="9ee1c-443">Generuje i zapisuje surogatu znak jednostki dla pary znaków zastępczych.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-444">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-445">Ta metoda ma zastosowanie tylko w systemach używających kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="9ee1c-446">Jednostki znaków dwuskładnikowych jest zapisywany w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="9ee1c-447">Zakres znaków dwuskładnikowych to `#x10000` do `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="9ee1c-448">Następująca formuła służy do generowania jednostki znaków zastępczych: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="9ee1c-449">Dla kodu HTML i XML zestaw znaków dokumentu (i w związku z tym notacji znaku numerycznego odwołania) jest zależne od UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="9ee1c-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="9ee1c-450">Odwołanie pojedynczego znaku numerycznego w dokumencie źródłowym może w związku z tym w niektórych przypadkach odpowiadać dwie jednostki 16-bitowych w ciągu (znakiem zastępczym wysokiego poziomu i znak zastępczy niskiego poziomu).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="9ee1c-451">Te jednostki 16-bitowe są określane jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="9ee1c-452">Więcej informacji na temat surogaty lub znaków, można znaleźć w sekcji 3.7 Unicode standard 2.0 3.0/Unicode znajdujący się w <https://www.unicode.org>, lub [sekcji 2.2 zalecenia 1.0 W3C XML](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="9ee1c-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <https://www.unicode.org>, or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="9ee1c-453">Pary znaków zastępczych nieprawidłowy został przekazany.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="9ee1c-454">Ciąg znaków odstępu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="9ee1c-455">Zapisuje się danym białego obszaru w gałęzi.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-456">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-457">Ta metoda służy do ręcznego formatowania dokumentu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-457">This method is used to manually format your document.</span></span> <span data-ttu-id="9ee1c-458">Użyj <xref:System.Xml.XmlTextWriter.Formatting%2A> właściwości składnika zapisywania automatycznie sformatować dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-459">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9ee1c-460">Ciąg zawiera znaki, innego niż biały.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-461">Pobiera bieżący <see langword="xml:lang" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="9ee1c-462">Bieżący <see langword="xml:lang" /> lub <see langword="null" /> w przypadku nie <see langword="xml:lang" /> w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-463">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-464">Ta właściwość umożliwia jeden składnik dowiedzieć się, jakie stanu innego składnika opuścił składnika zapisywania w.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="9ee1c-465">Na przykład być może jeden składnik chce Powiedz innym tekstu Pomocy języka wygenerować.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="9ee1c-466">Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9ee1c-467">Pobiera <see cref="T:System.Xml.XmlSpace" /> reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="9ee1c-468"><see langword="XmlSpace" /> Reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="9ee1c-469">Wartość</span><span class="sxs-lookup"><span data-stu-id="9ee1c-469">Value</span></span> 
 </term><description> <span data-ttu-id="9ee1c-470">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="9ee1c-470">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="9ee1c-471">Brak</span><span class="sxs-lookup"><span data-stu-id="9ee1c-471">None</span></span> 
 </term><description> <span data-ttu-id="9ee1c-472">Jeśli nie jest to opcja domyślna <see langword="xml:space" /> występuje zakresie.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-472">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9ee1c-473">Domyślny</span><span class="sxs-lookup"><span data-stu-id="9ee1c-473">Default</span></span> 
 </term><description> <span data-ttu-id="9ee1c-474">Bieżący zakres jest <see langword="xml:space" />= "default".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-474">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term> <span data-ttu-id="9ee1c-475">Zachowaj</span><span class="sxs-lookup"><span data-stu-id="9ee1c-475">Preserve</span></span> 
 </term><description> <span data-ttu-id="9ee1c-476">Bieżący zakres jest <see langword="xml:space" />= "preserve".</span><span class="sxs-lookup"><span data-stu-id="9ee1c-476">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9ee1c-477">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody i <xref:System.Xml.XmlWriterSettings> klasy, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9ee1c-478">Ta właściwość umożliwia jeden składnik dowiedzieć się, w który stan, że inny składnik opuścił składnika zapisywania programu.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9ee1c-479">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="9ee1c-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>