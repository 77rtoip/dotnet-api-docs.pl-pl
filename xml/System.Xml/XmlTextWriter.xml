<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49897c0e8187ec4202e01dd0a5133ff531a85fe3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36434137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="45fab-101">Reprezentuje edytor, który umożliwia szybkie, niebuforowanym, tylko do przodu generować strumienie lub pliki zawierające dane XML, które odpowiada W3C Extensible Markup Language (XML) 1.0 i przestrzenie nazw w zalecenia XML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45fab-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="45fab-102">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca użycie <see cref="T:System.Xml.XmlWriter" /> zamiast klasy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="45fab-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="45fab-103">Ta klasa implementuje <xref:System.Xml.XmlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="45fab-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45fab-104">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-105">`XmlTextWriter` przechowuje stosu przestrzeni nazw odpowiadający wszystkich obszarów nazw zdefiniowanych w stosie bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="45fab-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="45fab-106">Przy użyciu `XmlTextWriter` można zadeklarować przestrzeni nazw ręcznie.</span><span class="sxs-lookup"><span data-stu-id="45fab-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="45fab-107">Powyższy kod C# tworzy następujące dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="45fab-107">The above C# code produces the following output.</span></span> <span data-ttu-id="45fab-108">`XmlTextWriter` Zamienia deklaracji przestrzeni nazw do elementu głównego, aby uniknąć jej duplikować na elementy podrzędne dwa.</span><span class="sxs-lookup"><span data-stu-id="45fab-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="45fab-109">Wybierz elementy podrzędne prefiks z deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="45fab-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="45fab-110">`XmlTextWriter` Umożliwia również zastąpić bieżący deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="45fab-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="45fab-111">W poniższym przykładzie "123" identyfikator URI przestrzeni nazw jest zastępowana "abc", aby utworzyć XML element `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="45fab-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="45fab-112">Za pomocą metod zapisywania, które przyjmują prefiksu jako argument można również określić, które prefiks używany.</span><span class="sxs-lookup"><span data-stu-id="45fab-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="45fab-113">W poniższym przykładzie dwa różne prefiksy są mapowane do tego samego obszaru nazw identyfikator URI do utworzenia tekstu XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="45fab-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="45fab-114">Jeśli istnieje wiele deklaracji przestrzeni nazw mapowanie różnymi prefiksami do tego samego obszaru nazw URI, `XmlTextWriter` wstecz przeprowadzi stosu deklaracje przestrzeni nazw i wybiera jeden najbliższego.</span><span class="sxs-lookup"><span data-stu-id="45fab-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="45fab-115">W powyższym C# przykładzie ponieważ `WriteAttributeString` wywołań nie określono prefiksu, moduł zapisujący używa ostatniego prefiksu wypychana na stosie przestrzeni nazw i tworzy następujące XML:</span><span class="sxs-lookup"><span data-stu-id="45fab-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="45fab-116">Jeśli występują konflikty nazw, `XmlTextWriter` rozpoznaje je generując alternatywny prefiksy.</span><span class="sxs-lookup"><span data-stu-id="45fab-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="45fab-117">Na przykład, jeśli atrybut i element ma taki sam prefiks ale o innej przestrzeni nazw, `XmlWriter` generuje alternatywny prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="45fab-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="45fab-118">Wygenerowane prefiksy są nazywane `n{i}` gdzie `i` jest liczb od 1.</span><span class="sxs-lookup"><span data-stu-id="45fab-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="45fab-119">Liczba jest resetowany do 1 dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="45fab-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="45fab-120">Atrybuty, które są skojarzone z identyfikatorem URI przestrzeni nazw musi mieć prefiksu (ustawienie domyślne, które przestrzeni nazw nie dotyczą atrybutów).</span><span class="sxs-lookup"><span data-stu-id="45fab-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="45fab-121">To jest zgodna z sekcji 5.2 przestrzenie nazw W3C w zalecenie XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="45fab-122">Jeśli atrybut odwołuje się identyfikator URI przestrzeni nazw, ale nie określono prefiksu, moduł zapisujący generuje prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="45fab-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="45fab-123">Podczas zapisywania pustego elementu, dodatkowe dodawany jest odstęp nazwa tagu i tagu zamykającego, na przykład `<item />`.</span><span class="sxs-lookup"><span data-stu-id="45fab-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="45fab-124">Zapewnia zgodność z przeglądarkami starszej.</span><span class="sxs-lookup"><span data-stu-id="45fab-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="45fab-125">Gdy `String` jest używany jako parametr metody `null` i `String.Empty` są równoważne.</span><span class="sxs-lookup"><span data-stu-id="45fab-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="45fab-126">`String.Empty` zgodny z regułami W3C.</span><span class="sxs-lookup"><span data-stu-id="45fab-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="45fab-127">Aby napisać silnie typizowane dane, użyj <xref:System.Xml.XmlConvert> klasy można przekonwertować na ciąg typów danych.</span><span class="sxs-lookup"><span data-stu-id="45fab-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="45fab-128">Na przykład następujący kod C# konwertuje dane z `Double` do `String` i zapisuje element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="45fab-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="45fab-129">`XmlTextWriter` nie sprawdza następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="45fab-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="45fab-130">Nieprawidłowe znaki w nazwach atrybutów i elementów.</span><span class="sxs-lookup"><span data-stu-id="45fab-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="45fab-131">Znaków Unicode, które nie pasują do określonego kodowania.</span><span class="sxs-lookup"><span data-stu-id="45fab-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="45fab-132">Jeśli znaki Unicode nie pasują do określonego kodowania `XmlTextWriter` nie Usuń znaki Unicode w encje znaków.</span><span class="sxs-lookup"><span data-stu-id="45fab-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="45fab-133">Duplikuj atrybuty.</span><span class="sxs-lookup"><span data-stu-id="45fab-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="45fab-134">Znaki w identyfikatora systemowego lub identyfikatora publicznego DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="45fab-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="45fab-135">Zagadnienia dotyczące zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="45fab-135">Security Considerations</span></span>  
 <span data-ttu-id="45fab-136">Następujące elementy są rzeczy, które należy wziąć pod uwagę podczas pracy z <xref:System.Xml.XmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="45fab-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="45fab-137">Wyjątki generowane przez <xref:System.Xml.XmlTextWriter> może ujawnić informacje o ścieżce, który nie ma przepuszcza do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="45fab-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="45fab-138">Aplikacji należy przechwytywać wyjątki i odpowiednio je przetworzyć.</span><span class="sxs-lookup"><span data-stu-id="45fab-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="45fab-139">Podczas przekazywania <xref:System.Xml.XmlTextWriter> do innej aplikacji zasadniczy strumień jest widoczne dla tej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="45fab-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="45fab-140">Jeśli musisz przekazać <xref:System.Xml.XmlTextWriter> częściowo zaufanych aplikacji, należy używać <xref:System.Xml.XmlWriter> obiekt utworzony przez <xref:System.Xml.XmlWriter.Create%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="45fab-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="45fab-141"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> lub <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="45fab-142">Nie należy przekazać dowolne dane do tych metod.</span><span class="sxs-lookup"><span data-stu-id="45fab-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="45fab-143">Jeśli ustawienia domyślne są zmieniane, nie ma żadnej gwarancji, że wygenerowanych danych wyjściowych jest poprawnie sformułowanym danych XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="45fab-144">Nie akceptuj pomocnicze składniki, takie jak <xref:System.Text.Encoding> obiektu z niezaufanego źródła.</span><span class="sxs-lookup"><span data-stu-id="45fab-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-145">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-146">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="45fab-147">
            <see langword="TextWriter" /> Do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-147">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="45fab-148">Zakłada ona, że <see langword="TextWriter" /> jest już ustawiony na prawidłowe kodowanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-149">Tworzy wystąpienie <see langword="XmlTextWriter" /> przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-150">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="45fab-151">Strumień, do której chcesz zapisać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-151">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="45fab-152">Kodowanie do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-152">The encoding to generate.</span>
          </span>
          <span data-ttu-id="45fab-153">Jeśli kodowanie jest <see langword="null" /> zapisuje się strumienia jako UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-154">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego obiektu stream i kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-155">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-156">Kodowanie nie jest obsługiwany lub nie można zapisać w strumieniu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-156">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-157">
            <paramref name="w" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-157">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="45fab-158">Nazwa pliku do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-158">The filename to write to.</span>
          </span>
          <span data-ttu-id="45fab-159">Jeśli plik istnieje, jej obcina i zastępuje go z nową zawartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-159">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="45fab-160">Kodowanie do wygenerowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-160">The encoding to generate.</span>
          </span>
          <span data-ttu-id="45fab-161">Jeśli kodowanie jest <see langword="null" /> zapisuje plik jako UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-162">Tworzy wystąpienie <see cref="T:System.Xml.XmlTextWriter" /> przy użyciu określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-163">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-164">Kodowanie nie jest obsługiwany; Nazwa pliku jest pusta, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="45fab-165">Odmowa dostępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-165">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-166">Nazwa pliku jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-166">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="45fab-167">Nie znaleziono katalogu do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-167">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="45fab-168">Nazwa pliku zawiera nieprawidłowe lub nieprawidłową składnię nazwy pliku, nazwa katalogu lub składnia etykiety woluminu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="45fab-169">Obiekt wywołujący nie posiada wymaganych uprawnień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-169">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-170">Pobiera obiekt strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-170">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-171">Strumień, do którego <see langword="XmlTextWriter" /> jest pisanie lub <see langword="null" /> Jeśli <see langword="XmlTextWriter" /> został skonstruowany przy użyciu <see cref="T:System.IO.TextWriter" /> który nie dziedziczy <see cref="T:System.IO.StreamWriter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-172">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-173">Jeśli moduł zapisujący został skonstruowany przy użyciu `TextWriter` która jest pochodną `StreamWriter` klasy, ta właściwość jest odpowiednikiem <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="45fab-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="45fab-174">Jeśli moduł zapisujący został skonstruowany przy użyciu <xref:System.IO.Stream>, ta właściwość zwraca `Stream` przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="45fab-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="45fab-175">Jeśli moduł zapisujący został skonstruowany przy użyciu nazwy pliku, ta właściwość zwraca `Stream` reprezentujący plik.</span><span class="sxs-lookup"><span data-stu-id="45fab-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-176">Zamyka tego strumienia i podstawowego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-176">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-177">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-178">Wszystkie elementy lub atrybuty otwarte automatycznie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="45fab-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="45fab-179">Ta metoda nie generują żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="45fab-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-180">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="45fab-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-181">Liczba opróżnień znajduje się w buforze do podstawowej strumieni i opróżnia również odpowiedniego strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-182">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-183">Ta metoda jest wywoływana zamiast <xref:System.Xml.XmlTextWriter.Close%2A> gdy chcesz zapisać więcej do źródłowego strumienia bez utraty, co to jest nadal w buforze.</span><span class="sxs-lookup"><span data-stu-id="45fab-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-184">Poniższy przykład zapisuje się dwa fragmenty XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-185">Wskazuje sposób formatowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-185">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-186">Jeden z <see cref="T:System.Xml.Formatting" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="45fab-187">Wartość domyślna to <see langword="Formatting.None" /> (nie specjalne formatowanie).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-187">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-188">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-189">Jeśli `Indented` opcja jest ustawiona, elementy podrzędne tworzone jest wcięcie przy użyciu <xref:System.Xml.XmlTextWriter.Indentation%2A> i <xref:System.Xml.XmlTextWriter.IndentChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="45fab-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="45fab-190">Tworzone jest wcięcie tylko zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="45fab-190">Only element content is indented.</span></span> <span data-ttu-id="45fab-191">Poniższy kod C# zapisuje układ elementów HTML zawartości mieszanej w tym:</span><span class="sxs-lookup"><span data-stu-id="45fab-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="45fab-192">Powyższy kod tworzy następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="45fab-192">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="45fab-193">Gdy to są wyświetlane w formacie HTML między elementami pogrubionego oraz pochylonego pojawi się nie biały znak.</span><span class="sxs-lookup"><span data-stu-id="45fab-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="45fab-194">W rzeczywistości w tym przykładzie, jeśli wcięcia dodano między tymi elementami słowo "Słoń" będzie niepoprawnie przerwane.</span><span class="sxs-lookup"><span data-stu-id="45fab-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="45fab-195">Pisanie tekstu zawartości, z wyłączeniem `String.Empty` umieszcza elementu zawartości w trybie mieszanym.</span><span class="sxs-lookup"><span data-stu-id="45fab-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="45fab-196">Elementy podrzędne nie dziedziczy ten stan "mieszanego".</span><span class="sxs-lookup"><span data-stu-id="45fab-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="45fab-197">Element podrzędny elementu "mieszany" jest wcięcia, chyba że jest również zawartość "mieszaną".</span><span class="sxs-lookup"><span data-stu-id="45fab-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="45fab-198">Zawartość elementu (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) i zawartość mieszaną (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) są zdefiniowane zgodnie z definicji XML 1.0 niniejsze warunki.</span><span class="sxs-lookup"><span data-stu-id="45fab-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-199">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="45fab-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-200">Pobiera lub ustawia liczbę IndentChars do zapisu dla każdego poziomu w hierarchii podczas <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ma ustawioną wartość <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-201">Liczba <see langword="IndentChars" /> dla każdego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-201">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="45fab-202">Wartość domyślna to 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-202">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-203">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-204">Wcięcie odbywa się na następujące typy węzłów: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, i `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="45fab-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="45fab-205">Nie dotyczy innych typów węzłów.</span><span class="sxs-lookup"><span data-stu-id="45fab-205">All other node types are not affected.</span></span> <span data-ttu-id="45fab-206">`XmlTextWriter` Nie wcięcie wewnętrznego podzbioru DTD.</span><span class="sxs-lookup"><span data-stu-id="45fab-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="45fab-207">Można jednak, wykonaj następujące czynności do formatowania wewnętrznego podzbioru DTD.</span><span class="sxs-lookup"><span data-stu-id="45fab-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft']]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-208">Ustawienie tej właściwości na wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-208">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-209">Pobiera lub ustawia znak do użycia podczas gdy wcięcia <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ma ustawioną wartość <see langword="Formatting.Indented" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-209">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-210">Znak do użycia na potrzeby wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-210">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="45fab-211">Wartość domyślna to miejsce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-211">The default is space.</span>
          </span>
          <span data-ttu-id="45fab-212">
            <block subset="none" type="note">
              <para>
                <see langword="XmlTextWriter" /> Pozwala ustawić tę właściwość na dowolny znak. Aby zapewnić prawidłowy kod XML, należy określić prawidłowy biały znak — 0x9, 0x10, 0x13 lub 0x20.  </para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-212">
              <block subset="none" type="note">
                <para> The <see langword="XmlTextWriter" /> allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.  </para>
              </block>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-213">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-213">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="45fab-214">Identyfikator URI Namespace prefiksu, którego ma zostać znaleziona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-214">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-215">Zwraca najbliższego prefiks zdefiniowany w bieżącym zakresie przestrzeni nazw dla identyfikatora URI przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-215">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="45fab-216">Zgodny prefiks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-216">The matching prefix.</span>
          </span>
          <span data-ttu-id="45fab-217">Lub <see langword="null" /> Jeśli nie pasujących przestrzeni nazw URI znajduje się w bieżącym zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-217">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-218">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-218">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-219">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="45fab-219">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-220">
            <paramref name="ns" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-220">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-221">Pobiera lub ustawia wartość wskazującą, czy w celu obsługi przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-221">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-222">
            <see langword="true" /> do obsługi przestrzeni nazw. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-222">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="45fab-223">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-223">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-224">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-224">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-225">Ta właściwość określa, czy składnik zapisywania obsługuje W3C przestrzenie nazw w zalecenie XML znajduje się w www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="45fab-225">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-226">Tę właściwość można zmienić tylko w czasie <see langword="WriteState.Start" /> stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-226">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-227">Pobiera lub ustawia znak cudzysłowu zamykającego wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-227">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-228">Znak na potrzeby cudzysłowu zamykającego wartości atrybutów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-228">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="45fab-229">Musi to być ujęty w apostrofy (&amp;#39;) lub podwójny cudzysłów (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-229">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="45fab-230">Wartość domyślna to podwójny cudzysłów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-230">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-231">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-231">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-232">Ustawienie tej właściwości inną niż albo pojedynczym lub podwójnym oferty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-232">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="45fab-233">Tablica bajtów do kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-233">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="45fab-234">Pozycja buforu wskazująca początek bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-234">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="45fab-235">Liczba bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-235">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-236">Koduje określonych bajtów binarne jako base64 i zapisuje tekst wynikowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-236">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-237">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-237">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-238">Poniższy przykład koduje pliku wejściowego przy użyciu `WriteBase64` i generuje tymczasowym pliku XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-238">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="45fab-239">Tymczasowy plik XML jest dekodowany przy użyciu <xref:System.Xml.XmlTextReader.ReadBase64%2A> metody i w porównaniu z oryginalnym plikiem.</span><span class="sxs-lookup"><span data-stu-id="45fab-239">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-240">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-240">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-241">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-241">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="45fab-242">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-242">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-243">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-243">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="45fab-244">Tablica bajtów do kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-244">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="45fab-245">Pozycja buforu wskazująca początek bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-245">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="45fab-246">Liczba bajtów do zapisania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-246">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-247">Koduje określonych bajtów binarne jako binhex i zapisuje tekst wynikowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-247">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-248">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-248">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-249">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-249">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-250">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-250">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="45fab-251">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-251">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-252">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-252">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="45fab-253">Tekst, aby umieścić wewnątrz bloku CDATA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-253">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-254">Zapisuje &lt;! [CDATA [...]] &gt; bloku zawierających określony tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-254">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-255">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-255">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-256">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje pusty blok CDATA, na przykład \<! [[ CDATA]</span><span class="sxs-lookup"><span data-stu-id="45fab-256">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-257">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-257">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-258">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-258">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="45fab-259">Znak Unicode, do których chcesz wygenerować jednostki znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-259">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-260">Wymusza Generowanie jednostki znaków dla określona wartość znaku Unicode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-260">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-261">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-261">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-262">Ta metoda zapisuje znaków Unicode w formacie odwołanie do jednostki znaków szesnastkowych.</span><span class="sxs-lookup"><span data-stu-id="45fab-262">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-263">W poniższym przykładzie użyto `WriteCharEntity` metodę, aby zapisać adres e-mail.</span><span class="sxs-lookup"><span data-stu-id="45fab-263">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-264">Znak jest w zakresie znaków para zastępcza <see langword="0xd800" />  -  <see langword="0xdfff" />; lub tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-264">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-265">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-265">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="45fab-266">Tablica znaków zawierająca tekst można zapisać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-266">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="45fab-267">Pozycja buforu wskazująca początek tekstu do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-267">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="45fab-268">Liczba znaków, jaka ma zostać zapisana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-268">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-269">Zapisuje bufor tekstowy jednym naraz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-269">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-270">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-270">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-271">Ta metoda może służyć do zapisania dużych ilości buforu tekstu w czasie.</span><span class="sxs-lookup"><span data-stu-id="45fab-271">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="45fab-272">Specjalnej obsługi, należy wykonać w celu zapewnienia `WriteChars` — metoda nie dzieli znaków dwuskładnikowych pary przez wiele zapisy buforu.</span><span class="sxs-lookup"><span data-stu-id="45fab-272">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="45fab-273">Specyfikacja XML definiuje prawidłowych zakresów dla Znaki dwuskładnikowe.</span><span class="sxs-lookup"><span data-stu-id="45fab-273">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="45fab-274">Jeśli znaki dwuskładnikowe pary są zapisywane, które mogłyby spowodować znaków para zastępcza dzieleniu w buforze, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="45fab-274">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-275">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-275">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="45fab-276">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-276">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="45fab-277">- lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />; dzieleniu wyniki wywołania w znaki dwuskładnikowe pary lub zapisywana para zastępcza nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-277">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-278">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-278">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="45fab-279">Tekst, aby umieścić wewnątrz komentarz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-279">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-280">Zapisuje się komentarz &lt;!--... -&gt; zawierających określony tekst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-280">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-281">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-281">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-282">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje `Comment` bez danych zawartości, na przykład \<!--->.</span><span class="sxs-lookup"><span data-stu-id="45fab-282">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-283">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-283">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-284">Tekst spowoduje także z systemem innym niż sformułowany dokument XML</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-284">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-285">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-285">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45fab-286">Nazwa typu dokumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-286">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="45fab-287">Musi to być pusty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-287">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="45fab-288">Jeśli inne niż null również zapisuje publicznego "pubid" "sysid" gdzie <c>pubid</c> i <c>sysid</c> zostaną zastąpione danego argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-288">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="45fab-289">Jeśli <c>pubid</c> ma wartość null i <c>sysid</c> jest inne niż null jest zapisywany systemu "sysid" gdzie <c>sysid</c> zostanie zastąpiona wartością tego argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-289">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="45fab-290">Jeśli inne niż null jest zapisywany [podzestawu] gdzie podzbioru jest zamienione na wartość tego argumentu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-290">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-291">Zapisuje deklaracji typu dokumentu z określoną nazwą i opcjonalne atrybuty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-291">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-292">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-292">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-293">Ta metoda sprawdza nieprawidłowych znaków w `pubid`, `sysid` lub `subset`.</span><span class="sxs-lookup"><span data-stu-id="45fab-293">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="45fab-294">On również nie sprawdza, czy podzestawu wewnętrznego jest poprawnie sformułowany.</span><span class="sxs-lookup"><span data-stu-id="45fab-294">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45fab-295"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-295">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="45fab-296">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-296">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-297">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-297">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-298">Ta metoda została wywołana poza prologu (po elemencie głównym).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-298">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-299">
            <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" /> - lub - wartość <paramref name="name" /> spowoduje nieprawidłowe dane XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-299">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" />  -or-  the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-300">Zamyka poprzedniej <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-300">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-301">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-301">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-302">Jeśli należy wywołać `WriteStartAttribute`, ten atrybut można zamknąć przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-302">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="45fab-303">Możesz też zamknąć ten atrybut, wywołując `WriteStartAttribute` ponownie, wywoływania <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, lub wywoływania <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="45fab-303">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-304">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="45fab-304">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-305">Zamyka wszystkie otwarte elementów lub atrybutów i naraża ponownie moduł zapisujący stan początkowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-305">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-306">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-306">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-307">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-307">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-308">Dokument XML jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-308">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-309">Zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-309">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-310">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-310">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-311">Jeśli element nie zawiera żadnej zawartości tagu końcowego krótki "/ >" jest zapisywany; w przeciwnym razie jest zapisywana tagu końcowego pełna.</span><span class="sxs-lookup"><span data-stu-id="45fab-311">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-312">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-312">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45fab-313">Nazwa odwołania do jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-313">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-314">Zapisuje się odwołania do jednostki jako <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-314">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-315">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-316">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-316">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-317">Tekst spowoduje także z systemem innym niż sformułowany dokument XML lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-317">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-318">Zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-318">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-319">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-319">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-320">Ta metoda zawsze zapisuje do tagu końcowego pełna.</span><span class="sxs-lookup"><span data-stu-id="45fab-320">This method always writes the full end tag.</span></span> <span data-ttu-id="45fab-321">Jest to przydatne podczas pracy z elementami, które musi zawierać znacznik pełnego zakończenia.</span><span class="sxs-lookup"><span data-stu-id="45fab-321">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="45fab-322">Na przykład przeglądarek oczekiwać blokach skryptu HTML zostanie zamknięty z " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="45fab-322">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-323">Poniższy przykład zapisuje się element z żadnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="45fab-323">The following example writes out an element with no content.</span></span> <span data-ttu-id="45fab-324">Używa WriteFullEndElement zapisu tagu elementu pełnego zakończenia.</span><span class="sxs-lookup"><span data-stu-id="45fab-324">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45fab-325">Nazwa do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-325">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-326">Zapisuje się określoną nazwą, zapewniając jest prawidłową nazwą zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-326">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-327">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-327">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-328">Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`, `WriteName` sprawdza również, czy nazwa również jest nieprawidłowa według przestrzeni nazw W3C w zalecenie XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-328">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-329">
            <paramref name="name" /> nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-329">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45fab-330">Nazwa do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-330">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-331">Zapisuje się określoną nazwą, zapewniając jest prawidłowy <see langword="NmToken" /> zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-331">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-332">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-332">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-333">
            <paramref name="name" /> nie jest prawidłową <see langword="NmToken" />; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-333">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="45fab-334">Nazwa instrukcji przetwarzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-334">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="45fab-335">Tekst do uwzględnienia w instrukcji przetwarzania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-335">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-336">Zapisuje się instrukcja przetwarzania ze spacją między nazwą i tekst w następujący sposób: &lt;? nazwa tekst?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-336">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-337">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-338">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje `ProcessingInstruction` bez danych zawartości, na przykład \<? nazwy? >.</span><span class="sxs-lookup"><span data-stu-id="45fab-338">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-339">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-339">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-340">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-340">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="45fab-341">
            <paramref name="name" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-341">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="45fab-342">Ta metoda jest używany do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> została już wywołana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-342">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="45fab-343">Lokalna nazwa do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-343">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="45fab-344">Identyfikator URI do skojarzenia z nazwą przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-344">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-345">Zapisuje się nazwa kwalifikowana przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-345">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="45fab-346">Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danej przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-346">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-347">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-347">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-348">Na przykład następujący kod języka Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="45fab-348">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="45fab-349">Generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="45fab-349">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="45fab-350">Jeśli `ns` generowany jest mapowana na bieżącej domyślnej przestrzeni nazw, nie ma prefiksu.</span><span class="sxs-lookup"><span data-stu-id="45fab-350">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="45fab-351">Podczas zapisywania wartości atrybutów, ta metoda generuje prefiksu, jeśli `ns` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="45fab-351">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="45fab-352">Podczas zapisywania elementu zawartości, zgłasza wyjątek, jeśli `ns` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="45fab-352">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="45fab-353">Jeśli ten moduł zapisujący obsługuje przestrzenie nazw (<xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`), ta metoda sprawdza, czy nazwa jest nieprawidłowa według przestrzeni nazw W3C w zalecenie XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="45fab-353">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-354">Poniższy przykład zapisuje out fragmentu schematu XSD.</span><span class="sxs-lookup"><span data-stu-id="45fab-354">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-355">
            <paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-355">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="45fab-356">
            <paramref name="localName" /> nie jest prawidłową nazwą według specyfikacji przestrzeni nazw W3C.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-356">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-357">Zapisuje nieprzetworzone znaczników ręcznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-357">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-358">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-358">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="45fab-359">Ciąg zawierający tekst do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-359">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-360">Zapisuje nieprzetworzone znaczników ręcznie z ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-360">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-361">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-361">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-362">Ta metoda nie Usuń znaki specjalne.</span><span class="sxs-lookup"><span data-stu-id="45fab-362">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45fab-363"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-363">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="45fab-364">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-364">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-365">Poniższy przykład zapisuje ciąg za pomocą `WriteRaw` metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-365">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="45fab-366">Tablica znaków zawierająca tekst można zapisać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-366">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="45fab-367">Pozycja buforu wskazująca początek tekstu do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-367">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="45fab-368">Liczba znaków, jaka ma zostać zapisana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-368">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-369">Zapisuje nieprzetworzone znaczników ręcznie z buforu znaków.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-369">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-370">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-370">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-371">Ta metoda nie Usuń znaki specjalne.</span><span class="sxs-lookup"><span data-stu-id="45fab-371">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="45fab-372"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-372">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="45fab-373">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="45fab-373">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="45fab-374">
            <paramref name="buffer" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-374">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="45fab-375">
            <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-375">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="45fab-376">- lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-376">-or-  The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="45fab-377">
            <see langword="Namespace" /> Prefiks atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-377">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="45fab-378">
            <see langword="LocalName" /> atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-378">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="45fab-379">
            <see langword="NamespaceURI" /> atrybutu</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-379">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-380">Zapisuje początku atrybutu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-380">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-381">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-381">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-382">Jest to bardziej zaawansowanych wersji <xref:System.Xml.XmlWriter.WriteAttributeString%2A> umożliwiająca można zapisać wartości atrybutu przy użyciu wielu metod zapisywania, takich jak <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="45fab-382">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-383">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="45fab-383">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-384">
            <paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-384">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-385">Zapisuje deklaracja XML z wersji "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-385">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-386">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-386">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="45fab-387">Zapisuje deklaracja XML z wersji "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-387">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-388">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-389">Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="45fab-389">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="45fab-390">Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="45fab-390">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="45fab-391">Ta metoda nie powoduje utworzenia autonomicznego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="45fab-391">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="45fab-392">Gdy `WriteStartDocument` nosi nazwę modułu zapisującego sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-392">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="45fab-393">Na przykład sprawdza, czy deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="45fab-393">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="45fab-394">Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="45fab-394">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="45fab-395">Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="45fab-395">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-396">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="45fab-396">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-397">To nie jest wywoływana po wykonaniu konstruktora pierwszy metody zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-397">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="45fab-398">Jeśli <see langword="true" />, zapisuje "autonomiczny = yes"; w wypadku <see langword="false" />, zapisuje "autonomiczny = nie".</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-398">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-399">Zapisuje z wersji "1.0" i autonomicznego atrybutu deklaracji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-399">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-400">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-400">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-401">Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="45fab-401">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="45fab-402">Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="45fab-402">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="45fab-403">Gdy `WriteStartDocument` nosi nazwę modułu zapisującego sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="45fab-403">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="45fab-404">Na przykład sprawdza, czy deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="45fab-404">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="45fab-405">Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="45fab-405">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="45fab-406">Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="45fab-406">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-407">To nie jest wywoływana po wykonaniu konstruktora pierwszy metody zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-407">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="45fab-408">Prefiks przestrzeni nazw elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-408">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="45fab-409">Lokalna nazwa elementu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-409">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="45fab-410">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-410">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="45fab-411">Jeśli ten obszar nazw już jest w zakresie i skojarzona prefiksu następnie twórcę automatycznie zapisuje tego prefiksu również.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-411">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-412">Zapisuje tag datą początkową i kojarzy ją z danej przestrzeni nazw i prefiksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-412">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-413">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-413">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-414">Po wywołaniu tej metody można zapisywać atrybuty lub utworzyć zawartości za pomocą <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, lub <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="45fab-414">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="45fab-415">Możesz zamknąć elementu o <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> po tym czasie jest zapisywany tagu końcowego.</span><span class="sxs-lookup"><span data-stu-id="45fab-415">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-416">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="45fab-416">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="45fab-417">Element writer jest zamknięty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-417">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-418">Pobiera stan modułu zapisującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-418">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-419">Jeden z <see cref="T:System.Xml.WriteState" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-419">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-420">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="45fab-421">Tekst do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-421">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-422">Zapisuje zawartość danego tekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-422">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-423">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-423">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-424">`WriteString` wykonuje następujące czynności</span><span class="sxs-lookup"><span data-stu-id="45fab-424">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="45fab-425">Znaki `&`, `<`, i `>` są zastępowane `&amp;`, `&lt;`, i `&gt;`odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="45fab-425">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="45fab-426">Wartości znakowych w x-0x1F zakresu od 0 (z wyłączeniem białe znaki 0x9 0xA i 0xD) są zastępowane jednostki znaku numerycznego (`&#0;` za pośrednictwem `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="45fab-426">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="45fab-427">Jeśli `WriteString` jest wywoływana w kontekście wartość atrybutu są zastępowane cudzysłowy podwójne i jednego `&quot;` i `&apos;` odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="45fab-427">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="45fab-428">Na przykład ciąg wejściowy `test<item>test` są zapisywane jako</span><span class="sxs-lookup"><span data-stu-id="45fab-428">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="45fab-429">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje węzła tekst z zawartości danych.</span><span class="sxs-lookup"><span data-stu-id="45fab-429">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-430">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="45fab-430">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-431">Ciąg tekstowy zawiera para zastępcza nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-431">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="45fab-432">Dwuskładnikowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-432">The low surrogate.</span>
          </span>
          <span data-ttu-id="45fab-433">Musi to być wartość z zakresu od <see langword="0xDC00" /> i <see langword="0xDFFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-433">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="45fab-434">Znakiem zastępczym wysokiego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-434">The high surrogate.</span>
          </span>
          <span data-ttu-id="45fab-435">Musi to być wartość z zakresu od <see langword="0xD800" /> i <see langword="0xDBFF" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-435">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-436">Generuje i zapisuje surogatu znak jednostki dla Para dwuskładnikowa znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-436">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-437">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-437">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-438">Ta metoda ma zastosowanie tylko w systemach, które używają kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="45fab-438">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="45fab-439">Jednostki znaku dwuskładnikowego jest zapisywany w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="45fab-439">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="45fab-440">Zakres znaków dwuskładnikowych to `#x10000` do `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="45fab-440">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="45fab-441">Następująca formuła służy do generowania jednostki znaku dwuskładnikowego: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="45fab-441">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="45fab-442">HTML i XML zestaw znaków dokumentu (i w związku z tym notacji znaku numerycznego odwołania) jest oparta na UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="45fab-442">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="45fab-443">Odwołanie pojedynczego znaku numerycznego w dokumencie źródłowym może w związku z tym w niektórych przypadkach odpowiadają dwie jednostki 16-bitową w ciągu (zastępczym wysokiego poziomu i dwuskładnikowego).</span><span class="sxs-lookup"><span data-stu-id="45fab-443">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="45fab-444">Te jednostki 16-bitowych są określane jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="45fab-444">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="45fab-445">Aby uzyskać więcej informacji dotyczących surogatów lub znaków, znajdują się w sekcji 3.7 Unicode 3.0/Unicode 2.0 standardowe znajdujący się w http://www.unicode.org, lub sekcja 2.2 zaleceń 1.0 W3C XML znajduje się w http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="45fab-445">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="45fab-446">Przekazano parę Surogat nieprawidłowy znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-446">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="45fab-447">Ciąg znaków odstępu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-447">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="45fab-448">Zapisuje się danego biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-448">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-449">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-449">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-450">Ta metoda jest używana do formatowania ręcznie dokumentu.</span><span class="sxs-lookup"><span data-stu-id="45fab-450">This method is used to manually format your document.</span></span> <span data-ttu-id="45fab-451">Użyj <xref:System.Xml.XmlTextWriter.Formatting%2A> właściwości mają twórcę automatycznie sformatować dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="45fab-451">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-452">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="45fab-452">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="45fab-453">Ciąg zawiera znaki z systemem innym niż biały znak.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-453">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-454">Pobiera bieżący <see langword="xml:lang" /> zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-454">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-455">Bieżący <see langword="xml:lang" /> lub <see langword="null" /> w przypadku nie <see langword="xml:lang" /> w bieżącym zakresie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-455">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-456">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-457">Ta właściwość umożliwia jeden składnik dowiedzieć się, jakie stanu inny składnik opuścił zapisywania w.</span><span class="sxs-lookup"><span data-stu-id="45fab-457">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="45fab-458">Na przykład prawdopodobnie jeden składnik chce Poinformuj inny język tekstu pomocy do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="45fab-458">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="45fab-459">Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="45fab-459">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="45fab-460">Pobiera <see cref="T:System.Xml.XmlSpace" /> reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-460">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="45fab-461">
            <see langword="XmlSpace" /> Reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-461">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <span data-ttu-id="45fab-462">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> znaczenie </description>
              </listheader>
              <item>
                <term> Brak </term>
                <description> jest wartością domyślną, jeśli nie <see langword="xml:space" /> istnieje zakres.  </description>
              </item>
              <item>
                <term> Domyślne </term>
                <description> bieżącego zakresu jest <see langword="xml:space" />= "default".  </description>
              </item>
              <item>
                <term> Zachowaj </term>
                <description> bieżącego zakresu jest <see langword="xml:space" />= "preserve".  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="45fab-462">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> None  </term>
                  <description> This is the default if no <see langword="xml:space" /> scope exists.  </description>
                </item>
                <item>
                  <term> Default  </term>
                  <description> The current scope is <see langword="xml:space" />="default".  </description>
                </item>
                <item>
                  <term> Preserve  </term>
                  <description> The current scope is <see langword="xml:space" />="preserve".  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="45fab-463">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="45fab-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="45fab-464">Ta właściwość umożliwia jeden składnik dowiedzieć się, w co stanie się, że inny składnik opuścił modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="45fab-464">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="45fab-465">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="45fab-465">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>