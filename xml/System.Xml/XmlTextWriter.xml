<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e1599-101">Reprezentuje edytor, który umożliwia szybkie, niebuforowanym, tylko do przodu generować strumienie lub pliki zawierające dane XML, które odpowiada W3C Extensible Markup Language (XML) 1.0 i przestrzenie nazw w zalecenia XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
 <span data-ttu-id="e1599-102">Począwszy od programu .NET Framework 2.0, firma Microsoft zaleca użycie <see cref="T:System.Xml.XmlWriter" /> zamiast klasy.</span><span class="sxs-lookup"><span data-stu-id="e1599-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1599-103">Ta klasa implementuje <xref:System.Xml.XmlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1599-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1599-104">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-105">`XmlTextWriter` przechowuje stosu przestrzeni nazw odpowiadający wszystkich obszarów nazw zdefiniowanych w stosie bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="e1599-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="e1599-106">Przy użyciu `XmlTextWriter` można zadeklarować przestrzeni nazw ręcznie.</span><span class="sxs-lookup"><span data-stu-id="e1599-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="e1599-107">Powyższy kod C# tworzy następujące dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="e1599-107">The above C# code produces the following output.</span></span> <span data-ttu-id="e1599-108">`XmlTextWriter` Zamienia deklaracji przestrzeni nazw do elementu głównego, aby uniknąć jej duplikować na elementy podrzędne dwa.</span><span class="sxs-lookup"><span data-stu-id="e1599-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="e1599-109">Wybierz elementy podrzędne prefiks z deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="e1599-110">`XmlTextWriter` Umożliwia również zastąpić bieżący deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="e1599-111">W poniższym przykładzie "123" identyfikator URI przestrzeni nazw jest zastępowana "abc", aby utworzyć XML element `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="e1599-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="e1599-112">Za pomocą metod zapisywania, które przyjmują prefiksu jako argument można również określić, które prefiks używany.</span><span class="sxs-lookup"><span data-stu-id="e1599-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="e1599-113">W poniższym przykładzie dwa różne prefiksy są mapowane do tego samego obszaru nazw identyfikator URI do utworzenia tekstu XML `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="e1599-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="e1599-114">Jeśli istnieje wiele deklaracji przestrzeni nazw mapowanie różnymi prefiksami do tego samego obszaru nazw URI, `XmlTextWriter` wstecz przeprowadzi stosu deklaracje przestrzeni nazw i wybiera jeden najbliższego.</span><span class="sxs-lookup"><span data-stu-id="e1599-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="e1599-115">W powyższym C# przykładzie ponieważ `WriteAttributeString` wywołań nie określono prefiksu, moduł zapisujący używa ostatniego prefiksu wypychana na stosie przestrzeni nazw i tworzy następujące XML:</span><span class="sxs-lookup"><span data-stu-id="e1599-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="e1599-116">Jeśli występują konflikty nazw, `XmlTextWriter` rozpoznaje je generując alternatywny prefiksy.</span><span class="sxs-lookup"><span data-stu-id="e1599-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="e1599-117">Na przykład, jeśli atrybut i element ma taki sam prefiks ale o innej przestrzeni nazw, `XmlWriter` generuje alternatywny prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="e1599-118">Wygenerowane prefiksy są nazywane `n{i}` gdzie `i` jest liczb od 1.</span><span class="sxs-lookup"><span data-stu-id="e1599-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="e1599-119">Liczba jest resetowany do 1 dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="e1599-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="e1599-120">Atrybuty, które są skojarzone z identyfikatorem URI przestrzeni nazw musi mieć prefiksu (ustawienie domyślne, które przestrzeni nazw nie dotyczą atrybutów).</span><span class="sxs-lookup"><span data-stu-id="e1599-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="e1599-121">To jest zgodna z sekcji 5.2 przestrzenie nazw W3C w zalecenie XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="e1599-122">Jeśli atrybut odwołuje się identyfikator URI przestrzeni nazw, ale nie określono prefiksu, moduł zapisujący generuje prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="e1599-123">Podczas zapisywania pustego elementu, dodatkowe dodawany jest odstęp nazwa tagu i tagu zamykającego, na przykład `<item />`.</span><span class="sxs-lookup"><span data-stu-id="e1599-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="e1599-124">Zapewnia zgodność z przeglądarkami starszej.</span><span class="sxs-lookup"><span data-stu-id="e1599-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="e1599-125">Gdy `String` jest używany jako parametr metody `null` i `String.Empty` są równoważne.</span><span class="sxs-lookup"><span data-stu-id="e1599-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="e1599-126">`String.Empty` zgodny z regułami W3C.</span><span class="sxs-lookup"><span data-stu-id="e1599-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="e1599-127">Aby napisać silnie typizowane dane, użyj <xref:System.Xml.XmlConvert> klasy można przekonwertować na ciąg typów danych.</span><span class="sxs-lookup"><span data-stu-id="e1599-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="e1599-128">Na przykład następujący kod C# konwertuje dane z `Double` do `String` i zapisuje element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="e1599-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="e1599-129">`XmlTextWriter` nie sprawdza następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="e1599-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="e1599-130">Nieprawidłowe znaki w nazwach atrybutów i elementów.</span><span class="sxs-lookup"><span data-stu-id="e1599-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="e1599-131">Znaków Unicode, które nie pasują do określonego kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="e1599-132">Jeśli znaki Unicode nie pasują do określonego kodowania `XmlTextWriter` nie Usuń znaki Unicode w encje znaków.</span><span class="sxs-lookup"><span data-stu-id="e1599-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="e1599-133">Duplikuj atrybuty.</span><span class="sxs-lookup"><span data-stu-id="e1599-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="e1599-134">Znaki w identyfikatora systemowego lub identyfikatora publicznego DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="e1599-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="e1599-135">Zagadnienia dotyczące zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="e1599-135">Security Considerations</span></span>  
 <span data-ttu-id="e1599-136">Następujące elementy są rzeczy, które należy wziąć pod uwagę podczas pracy z <xref:System.Xml.XmlTextWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1599-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="e1599-137">Wyjątki generowane przez <xref:System.Xml.XmlTextWriter> może ujawnić informacje o ścieżce, który nie ma przepuszcza do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e1599-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="e1599-138">Aplikacji należy przechwytywać wyjątki i odpowiednio je przetworzyć.</span><span class="sxs-lookup"><span data-stu-id="e1599-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="e1599-139">Podczas przekazywania <xref:System.Xml.XmlTextWriter> do innej aplikacji zasadniczy strumień jest widoczne dla tej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="e1599-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="e1599-140">Jeśli musisz przekazać <xref:System.Xml.XmlTextWriter> częściowo zaufanych aplikacji, należy używać <xref:System.Xml.XmlWriter> obiekt utworzony przez <xref:System.Xml.XmlWriter.Create%2A> metody zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="e1599-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="e1599-141"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> lub <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="e1599-142">Nie należy przekazać dowolne dane do tych metod.</span><span class="sxs-lookup"><span data-stu-id="e1599-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="e1599-143">Jeśli ustawienia domyślne są zmieniane, nie ma żadnej gwarancji, że wygenerowanych danych wyjściowych jest poprawnie sformułowanym danych XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="e1599-144">Nie akceptuj pomocnicze składniki, takie jak <xref:System.Text.Encoding> obiektu z niezaufanego źródła.</span><span class="sxs-lookup"><span data-stu-id="e1599-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1599-145">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1599-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-146">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="e1599-147"><see langword="TextWriter" /> Do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-147">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="e1599-148">Zakłada ona, że <see langword="TextWriter" /> jest już ustawiony na prawidłowe kodowanie.</span><span class="sxs-lookup"><span data-stu-id="e1599-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="e1599-149">Tworzy wystąpienie <see langword="XmlTextWriter" /> przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-150">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="e1599-151">Strumień, do której chcesz zapisać.</span><span class="sxs-lookup"><span data-stu-id="e1599-151">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="e1599-152">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-152">The encoding to generate.</span></span> <span data-ttu-id="e1599-153">Jeśli kodowanie jest <see langword="null" /> zapisuje się strumienia jako UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="e1599-154">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego obiektu stream i kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-155">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-156">Kodowanie nie jest obsługiwany lub nie można zapisać w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="e1599-156">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1599-157"><paramref name="w" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-157"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="e1599-158">Nazwa pliku do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-158">The filename to write to.</span></span> <span data-ttu-id="e1599-159">Jeśli plik istnieje, jej obcina i zastępuje go z nową zawartość.</span><span class="sxs-lookup"><span data-stu-id="e1599-159">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="e1599-160">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-160">The encoding to generate.</span></span> <span data-ttu-id="e1599-161">Jeśli kodowanie jest <see langword="null" /> zapisuje plik jako UTF-8, a pominięto atrybut kodowania z <see langword="ProcessingInstruction" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="e1599-162">Tworzy wystąpienie <see cref="T:System.Xml.XmlTextWriter" /> przy użyciu określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="e1599-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-163">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-164">Kodowanie nie jest obsługiwany; Nazwa pliku jest pusta, zawiera tylko biały znak lub zawiera jeden lub więcej nieprawidłowych znaków.</span><span class="sxs-lookup"><span data-stu-id="e1599-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e1599-165">Odmowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="e1599-165">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e1599-166">Nazwa pliku jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-166">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="e1599-167">Nie znaleziono katalogu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-167">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e1599-168">Nazwa pliku zawiera nieprawidłowe lub nieprawidłową składnię nazwy pliku, nazwa katalogu lub składnia etykiety woluminu.</span><span class="sxs-lookup"><span data-stu-id="e1599-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="e1599-169">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="e1599-169">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-170">Pobiera obiekt strumienia.</span><span class="sxs-lookup"><span data-stu-id="e1599-170">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="e1599-171">Strumień, do którego <see langword="XmlTextWriter" /> jest pisanie lub <see langword="null" /> Jeśli <see langword="XmlTextWriter" /> został skonstruowany przy użyciu <see cref="T:System.IO.TextWriter" /> który nie dziedziczy <see cref="T:System.IO.StreamWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="e1599-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-172">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-173">Jeśli moduł zapisujący został skonstruowany przy użyciu `TextWriter` która jest pochodną `StreamWriter` klasy, ta właściwość jest odpowiednikiem <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e1599-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="e1599-174">Jeśli moduł zapisujący został skonstruowany przy użyciu <xref:System.IO.Stream>, ta właściwość zwraca `Stream` przekazany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="e1599-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="e1599-175">Jeśli moduł zapisujący został skonstruowany przy użyciu nazwy pliku, ta właściwość zwraca `Stream` reprezentujący plik.</span><span class="sxs-lookup"><span data-stu-id="e1599-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-176">Zamyka tego strumienia i podstawowego strumienia.</span><span class="sxs-lookup"><span data-stu-id="e1599-176">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-177">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-178">Wszystkie elementy lub atrybuty otwarte automatycznie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="e1599-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="e1599-179">Ta metoda nie generują żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="e1599-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-180">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="e1599-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-181">Liczba opróżnień znajduje się w buforze do podstawowej strumieni i opróżnia również odpowiedniego strumienia.</span><span class="sxs-lookup"><span data-stu-id="e1599-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-182">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-183">Ta metoda jest wywoływana zamiast <xref:System.Xml.XmlTextWriter.Close%2A> gdy chcesz zapisać więcej do źródłowego strumienia bez utraty, co to jest nadal w buforze.</span><span class="sxs-lookup"><span data-stu-id="e1599-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-184">Poniższy przykład zapisuje się dwa fragmenty XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-185">Wskazuje sposób formatowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="e1599-185">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="e1599-186">Jeden z <see cref="T:System.Xml.Formatting" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="e1599-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="e1599-187">Wartość domyślna to <see langword="Formatting.None" /> (nie specjalne formatowanie).</span><span class="sxs-lookup"><span data-stu-id="e1599-187">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-188">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-189">Jeśli `Indented` opcja jest ustawiona, elementy podrzędne tworzone jest wcięcie przy użyciu <xref:System.Xml.XmlTextWriter.Indentation%2A> i <xref:System.Xml.XmlTextWriter.IndentChar%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="e1599-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="e1599-190">Tworzone jest wcięcie tylko zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="e1599-190">Only element content is indented.</span></span> <span data-ttu-id="e1599-191">Poniższy kod C# zapisuje układ elementów HTML zawartości mieszanej w tym:</span><span class="sxs-lookup"><span data-stu-id="e1599-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="e1599-192">Powyższy kod tworzy następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="e1599-192">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="e1599-193">Gdy to są wyświetlane w formacie HTML między elementami pogrubionego oraz pochylonego pojawi się nie biały znak.</span><span class="sxs-lookup"><span data-stu-id="e1599-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="e1599-194">W rzeczywistości w tym przykładzie, jeśli wcięcia dodano między tymi elementami słowo "Słoń" będzie niepoprawnie przerwane.</span><span class="sxs-lookup"><span data-stu-id="e1599-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e1599-195">Pisanie tekstu zawartości, z wyłączeniem `String.Empty` umieszcza elementu zawartości w trybie mieszanym.</span><span class="sxs-lookup"><span data-stu-id="e1599-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="e1599-196">Elementy podrzędne nie dziedziczy ten stan "mieszanego".</span><span class="sxs-lookup"><span data-stu-id="e1599-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="e1599-197">Element podrzędny elementu "mieszany" jest wcięcia, chyba że jest również zawartość "mieszaną".</span><span class="sxs-lookup"><span data-stu-id="e1599-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="e1599-198">Zawartość elementu (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) i zawartość mieszaną (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) są zdefiniowane zgodnie z definicji XML 1.0 niniejsze warunki.</span><span class="sxs-lookup"><span data-stu-id="e1599-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-199">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="e1599-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-200">Pobiera lub ustawia liczbę IndentChars do zapisu dla każdego poziomu w hierarchii podczas <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ma ustawioną wartość <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="e1599-201">Liczba <see langword="IndentChars" /> dla każdego poziomu.</span><span class="sxs-lookup"><span data-stu-id="e1599-201">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="e1599-202">Wartość domyślna to 2.</span><span class="sxs-lookup"><span data-stu-id="e1599-202">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-203">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-204">Wcięcie odbywa się na następujące typy węzłów: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, i `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="e1599-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="e1599-205">Nie dotyczy innych typów węzłów.</span><span class="sxs-lookup"><span data-stu-id="e1599-205">All other node types are not affected.</span></span> <span data-ttu-id="e1599-206">`XmlTextWriter` Nie wcięcie wewnętrznego podzbioru DTD.</span><span class="sxs-lookup"><span data-stu-id="e1599-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="e1599-207">Można jednak, wykonaj następujące czynności do formatowania wewnętrznego podzbioru DTD.</span><span class="sxs-lookup"><span data-stu-id="e1599-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="e1599-208">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="e1599-208">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-209">Ustawienie tej właściwości na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="e1599-209">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-210">Pobiera lub ustawia znak do użycia podczas gdy wcięcia <see cref="P:System.Xml.XmlTextWriter.Formatting" /> ma ustawioną wartość <see langword="Formatting.Indented" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="e1599-211">Znak do użycia na potrzeby wcięcia.</span><span class="sxs-lookup"><span data-stu-id="e1599-211">The character to use for indenting.</span></span> <span data-ttu-id="e1599-212">Wartość domyślna to miejsce.</span><span class="sxs-lookup"><span data-stu-id="e1599-212">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="e1599-213"><see langword="XmlTextWriter" /> Pozwala ustawić tę właściwość na dowolny znak.</span><span class="sxs-lookup"><span data-stu-id="e1599-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="e1599-214">Aby zapewnić prawidłowy kod XML, należy określić prawidłowy biały znak — 0x9, 0x10, 0x13 lub 0x20.</span><span class="sxs-lookup"><span data-stu-id="e1599-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-215">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="e1599-216">Identyfikator URI Namespace prefiksu, którego ma zostać znaleziona.</span><span class="sxs-lookup"><span data-stu-id="e1599-216">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="e1599-217">Zwraca najbliższego prefiks zdefiniowany w bieżącym zakresie przestrzeni nazw dla identyfikatora URI przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="e1599-218">Zgodny prefiks.</span><span class="sxs-lookup"><span data-stu-id="e1599-218">The matching prefix.</span></span> <span data-ttu-id="e1599-219">Lub <see langword="null" /> Jeśli nie pasujących przestrzeni nazw URI znajduje się w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="e1599-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-220">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-221">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e1599-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-222"><paramref name="ns" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-222"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-223">Pobiera lub ustawia wartość wskazującą, czy w celu obsługi przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-223">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value>
          <span data-ttu-id="e1599-224"><see langword="true" /> do obsługi przestrzeni nazw. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-224"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="e1599-225">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-225">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-226">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-227">Ta właściwość określa, czy składnik zapisywania obsługuje W3C przestrzenie nazw w zalecenie XML znajduje się w www.w3.org/TR/REC-xml-names.</span><span class="sxs-lookup"><span data-stu-id="e1599-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-228">Tę właściwość można zmienić tylko w czasie <see langword="WriteState.Start" /> stanu.</span><span class="sxs-lookup"><span data-stu-id="e1599-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-229">Pobiera lub ustawia znak cudzysłowu zamykającego wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="e1599-229">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="e1599-230">Znak na potrzeby cudzysłowu zamykającego wartości atrybutów.</span><span class="sxs-lookup"><span data-stu-id="e1599-230">The character to use to quote attribute values.</span></span> <span data-ttu-id="e1599-231">Musi to być ujęty w apostrofy (&amp;#39;) lub podwójny cudzysłów (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="e1599-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="e1599-232">Wartość domyślna to podwójny cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="e1599-232">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-233">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-234">Ustawienie tej właściwości inną niż albo pojedynczym lub podwójnym oferty.</span><span class="sxs-lookup"><span data-stu-id="e1599-234">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1599-235">Tablica bajtów do kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-235">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e1599-236">Pozycja buforu wskazująca początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="e1599-236">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e1599-237">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="e1599-237">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e1599-238">Koduje określonych bajtów binarne jako base64 i zapisuje tekst wynikowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-239">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-240">Poniższy przykład koduje pliku wejściowego przy użyciu `WriteBase64` i generuje tymczasowym pliku XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="e1599-241">Tymczasowy plik XML jest dekodowany przy użyciu <xref:System.Xml.XmlTextReader.ReadBase64%2A> metody i w porównaniu z oryginalnym plikiem.</span><span class="sxs-lookup"><span data-stu-id="e1599-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1599-242"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-242"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-243">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1599-244"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="e1599-244"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-245"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1599-246">Tablica bajtów do kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-246">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e1599-247">Pozycja buforu wskazująca początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="e1599-247">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="e1599-248">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="e1599-248">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e1599-249">Koduje określonych bajtów binarne jako binhex i zapisuje tekst wynikowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-250">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1599-251"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-251"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-252">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1599-253"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="e1599-253"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-254"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e1599-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e1599-255">Tekst, aby umieścić wewnątrz bloku CDATA.</span><span class="sxs-lookup"><span data-stu-id="e1599-255">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="e1599-256">Zapisuje &lt;! [CDATA [...]] &gt; bloku zawierających określony tekst.</span><span class="sxs-lookup"><span data-stu-id="e1599-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-257">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-258">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje pusty blok CDATA, na przykład \<![CDATA []]] ><! [CDATA [] >.</span><span class="sxs-lookup"><span data-stu-id="e1599-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-259">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-259">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-260">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-261"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="e1599-262">Znak Unicode, do których chcesz wygenerować jednostki znaku.</span><span class="sxs-lookup"><span data-stu-id="e1599-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="e1599-263">Wymusza Generowanie jednostki znaków dla określona wartość znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="e1599-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-264">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-265">Ta metoda zapisuje znaków Unicode w formacie odwołanie do jednostki znaków szesnastkowych.</span><span class="sxs-lookup"><span data-stu-id="e1599-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-266">W poniższym przykładzie użyto `WriteCharEntity` metodę, aby zapisać adres e-mail.</span><span class="sxs-lookup"><span data-stu-id="e1599-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-267">Znak jest w zakresie znaków para zastępcza <see langword="0xd800" />  -  <see langword="0xdfff" />; lub tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-268"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1599-269">Tablica znaków zawierająca tekst można zapisać.</span><span class="sxs-lookup"><span data-stu-id="e1599-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e1599-270">Pozycja buforu wskazująca początek tekstu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e1599-271">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="e1599-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e1599-272">Zapisuje bufor tekstowy jednym naraz.</span><span class="sxs-lookup"><span data-stu-id="e1599-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-273">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-274">Ta metoda może służyć do zapisania dużych ilości buforu tekstu w czasie.</span><span class="sxs-lookup"><span data-stu-id="e1599-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="e1599-275">Specjalnej obsługi, należy wykonać w celu zapewnienia `WriteChars` — metoda nie dzieli znaków dwuskładnikowych pary przez wiele zapisy buforu.</span><span class="sxs-lookup"><span data-stu-id="e1599-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="e1599-276">Specyfikacja XML definiuje prawidłowych zakresów dla Znaki dwuskładnikowe.</span><span class="sxs-lookup"><span data-stu-id="e1599-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="e1599-277">Jeśli znaki dwuskładnikowe pary są zapisywane, które mogłyby spowodować znaków para zastępcza dzieleniu w buforze, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e1599-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1599-278"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1599-279"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="e1599-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="e1599-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="e1599-280">-or-</span></span>  
  
 <span data-ttu-id="e1599-281">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />; dzieleniu wyniki wywołania w znaki dwuskładnikowe pary lub zapisywana para zastępcza nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-282"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e1599-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e1599-283">Tekst, aby umieścić wewnątrz komentarz.</span><span class="sxs-lookup"><span data-stu-id="e1599-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="e1599-284">Zapisuje się komentarz &lt;!--... -&gt; zawierających określony tekst.</span><span class="sxs-lookup"><span data-stu-id="e1599-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-285">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-286">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje `Comment` bez danych zawartości, na przykład \<!--->.</span><span class="sxs-lookup"><span data-stu-id="e1599-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-287">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-288">Tekst spowoduje także z systemem innym niż sformułowany dokument XML</span><span class="sxs-lookup"><span data-stu-id="e1599-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-289"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1599-290">Nazwa typu dokumentu.</span><span class="sxs-lookup"><span data-stu-id="e1599-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="e1599-291">Musi to być pusty.</span><span class="sxs-lookup"><span data-stu-id="e1599-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="e1599-292">Jeśli inne niż null również zapisuje publicznego "pubid" "sysid" gdzie <c>pubid</c> i <c>sysid</c> zostaną zastąpione danego argumentów.</span><span class="sxs-lookup"><span data-stu-id="e1599-292">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="e1599-293">Jeśli <c>pubid</c> ma wartość null i <c>sysid</c> jest inne niż null jest zapisywany systemu "sysid" gdzie <c>sysid</c> zostanie zastąpiona wartością tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="e1599-293">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="e1599-294">Jeśli inne niż null jest zapisywany [podzestawu] gdzie podzbioru jest zamienione na wartość tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="e1599-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="e1599-295">Zapisuje deklaracji typu dokumentu z określoną nazwą i opcjonalne atrybuty.</span><span class="sxs-lookup"><span data-stu-id="e1599-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-296">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-297">Ta metoda sprawdza nieprawidłowych znaków w `pubid`, `sysid` lub `subset`.</span><span class="sxs-lookup"><span data-stu-id="e1599-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="e1599-298">On również nie sprawdza, czy podzestawu wewnętrznego jest poprawnie sformułowany.</span><span class="sxs-lookup"><span data-stu-id="e1599-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e1599-299"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteDocType%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="e1599-300">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-301">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-302">Ta metoda została wywołana poza prologu (po elemencie głównym).</span><span class="sxs-lookup"><span data-stu-id="e1599-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-303"><paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="e1599-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
 <span data-ttu-id="e1599-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="e1599-304">-or-</span></span>  
  
 <span data-ttu-id="e1599-305">Wartość <paramref name="name" /> spowoduje nieprawidłowe dane XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-306">Zamyka poprzedniej <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> wywołania.</span><span class="sxs-lookup"><span data-stu-id="e1599-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-307">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-308">Jeśli należy wywołać `WriteStartAttribute`, ten atrybut można zamknąć przy użyciu tej metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="e1599-309">Możesz też zamknąć ten atrybut, wywołując `WriteStartAttribute` ponownie, wywoływania <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, lub wywoływania <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1599-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-310">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e1599-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-311">Zamyka wszystkie otwarte elementów lub atrybutów i naraża ponownie moduł zapisujący stan początkowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-312">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-313">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-314">Dokument XML jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-315">Zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-316">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-317">Jeśli element nie zawiera żadnej zawartości tagu końcowego krótki "/ >" jest zapisywany; w przeciwnym razie jest zapisywana tagu końcowego pełna.</span><span class="sxs-lookup"><span data-stu-id="e1599-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-318">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1599-319">Nazwa odwołania do jednostki.</span><span class="sxs-lookup"><span data-stu-id="e1599-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="e1599-320">Zapisuje się odwołania do jednostki jako <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-321">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-322">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-323">Tekst spowoduje także z systemem innym niż sformułowany dokument XML lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-324">Zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-325">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-326">Ta metoda zawsze zapisuje do tagu końcowego pełna.</span><span class="sxs-lookup"><span data-stu-id="e1599-326">This method always writes the full end tag.</span></span> <span data-ttu-id="e1599-327">Jest to przydatne podczas pracy z elementami, które musi zawierać znacznik pełnego zakończenia.</span><span class="sxs-lookup"><span data-stu-id="e1599-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="e1599-328">Na przykład przeglądarek oczekiwać blokach skryptu HTML zostanie zamknięty z " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="e1599-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-329">Poniższy przykład zapisuje się element z żadnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="e1599-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="e1599-330">Używa WriteFullEndElement zapisu tagu elementu pełnego zakończenia.</span><span class="sxs-lookup"><span data-stu-id="e1599-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1599-331">Nazwa do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="e1599-332">Zapisuje się określoną nazwą, zapewniając jest prawidłową nazwą zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="e1599-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-333">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-334">Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`, `WriteName` sprawdza również, czy nazwa również jest nieprawidłowa według przestrzeni nazw W3C w zalecenie XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-335"><paramref name="name" /> nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1599-336">Nazwa do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="e1599-337">Zapisuje się określoną nazwą, zapewniając jest prawidłowy <see langword="NmToken" /> zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="e1599-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-338">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-339"><paramref name="name" /> nie jest prawidłową <see langword="NmToken" />; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e1599-340">Nazwa instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="e1599-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="e1599-341">Tekst do uwzględnienia w instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="e1599-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="e1599-342">Zapisuje się instrukcja przetwarzania ze spacją między nazwą i tekst w następujący sposób: &lt;? nazwa tekst?&gt;.</span><span class="sxs-lookup"><span data-stu-id="e1599-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-343">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-344">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje `ProcessingInstruction` bez danych zawartości, na przykład \<? nazwy? >.</span><span class="sxs-lookup"><span data-stu-id="e1599-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-345">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-346">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="e1599-347"><paramref name="name" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="e1599-348">Ta metoda jest używany do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> została już wywołana.</span><span class="sxs-lookup"><span data-stu-id="e1599-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="e1599-349">Lokalna nazwa do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="e1599-350">Identyfikator URI do skojarzenia z nazwą przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="e1599-351">Zapisuje się nazwa kwalifikowana przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="e1599-352">Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danej przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="e1599-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-353">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-354">Na przykład następujący kod języka Microsoft Visual C#:</span><span class="sxs-lookup"><span data-stu-id="e1599-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="e1599-355">Generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="e1599-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="e1599-356">Jeśli `ns` generowany jest mapowana na bieżącej domyślnej przestrzeni nazw, nie ma prefiksu.</span><span class="sxs-lookup"><span data-stu-id="e1599-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="e1599-357">Podczas zapisywania wartości atrybutów, ta metoda generuje prefiksu, jeśli `ns` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="e1599-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="e1599-358">Podczas zapisywania elementu zawartości, zgłasza wyjątek, jeśli `ns` nie znaleziono.</span><span class="sxs-lookup"><span data-stu-id="e1599-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="e1599-359">Jeśli ten moduł zapisujący obsługuje przestrzenie nazw (<xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`), ta metoda sprawdza, czy nazwa jest nieprawidłowa według przestrzeni nazw W3C w zalecenie XML (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="e1599-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-360">Poniższy przykład zapisuje out fragmentu schematu XSD.</span><span class="sxs-lookup"><span data-stu-id="e1599-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-361"><paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="e1599-362"><paramref name="localName" /> nie jest prawidłową nazwą według specyfikacji przestrzeni nazw W3C.</span><span class="sxs-lookup"><span data-stu-id="e1599-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1599-363">Zapisuje nieprzetworzone znaczników ręcznie.</span><span class="sxs-lookup"><span data-stu-id="e1599-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-364">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e1599-365">Ciąg zawierający tekst do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="e1599-366">Zapisuje nieprzetworzone znaczników ręcznie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="e1599-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-367">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-368">Ta metoda nie Usuń znaki specjalne.</span><span class="sxs-lookup"><span data-stu-id="e1599-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e1599-369"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="e1599-370">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-371">Poniższy przykład zapisuje ciąg za pomocą `WriteRaw` metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e1599-372">Tablica znaków zawierająca tekst można zapisać.</span><span class="sxs-lookup"><span data-stu-id="e1599-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="e1599-373">Pozycja buforu wskazująca początek tekstu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="e1599-374">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="e1599-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e1599-375">Zapisuje nieprzetworzone znaczników ręcznie z buforu znaków.</span><span class="sxs-lookup"><span data-stu-id="e1599-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-376">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-377">Ta metoda nie Usuń znaki specjalne.</span><span class="sxs-lookup"><span data-stu-id="e1599-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e1599-378"><xref:System.Xml.XmlTextWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlTextWriter.WriteRaw%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="e1599-379">Nie należy przekazać dowolne dane do tej metody.</span><span class="sxs-lookup"><span data-stu-id="e1599-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e1599-380"><paramref name="buffer" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e1599-381"><paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="e1599-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="e1599-382">—lub—</span><span class="sxs-lookup"><span data-stu-id="e1599-382">-or-</span></span>  
  
 <span data-ttu-id="e1599-383">Długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="e1599-384"><see langword="Namespace" /> Prefiks atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName">
          <span data-ttu-id="e1599-385"><see langword="LocalName" /> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns">
          <span data-ttu-id="e1599-386"><see langword="NamespaceURI" /> atrybutu</span><span class="sxs-lookup"><span data-stu-id="e1599-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="e1599-387">Zapisuje początku atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-388">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-389">Jest to bardziej zaawansowanych wersji <xref:System.Xml.XmlWriter.WriteAttributeString%2A> umożliwiająca można zapisać wartości atrybutu przy użyciu wielu metod zapisywania, takich jak <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="e1599-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-390">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e1599-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e1599-391"><paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e1599-392">Zapisuje deklaracja XML z wersji "1.0".</span><span class="sxs-lookup"><span data-stu-id="e1599-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-393">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1599-394">Zapisuje deklaracja XML z wersji "1.0".</span><span class="sxs-lookup"><span data-stu-id="e1599-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-395">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-396">Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="e1599-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="e1599-397">Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="e1599-398">Ta metoda nie powoduje utworzenia autonomicznego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="e1599-399">Gdy `WriteStartDocument` nosi nazwę modułu zapisującego sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="e1599-400">Na przykład sprawdza, czy deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="e1599-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="e1599-401">Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="e1599-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="e1599-402">Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e1599-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-403">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="e1599-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-404">To nie jest wywoływana po wykonaniu konstruktora pierwszy metody zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="e1599-405">Jeśli <see langword="true" />, zapisuje "autonomiczny = yes"; w wypadku <see langword="false" />, zapisuje "autonomiczny = nie".</span><span class="sxs-lookup"><span data-stu-id="e1599-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="e1599-406">Zapisuje z wersji "1.0" i autonomicznego atrybutu deklaracji XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-407">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-408">Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="e1599-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="e1599-409">Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="e1599-410">Gdy `WriteStartDocument` nosi nazwę modułu zapisującego sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="e1599-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="e1599-411">Na przykład sprawdza, czy deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="e1599-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="e1599-412">Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="e1599-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="e1599-413">Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="e1599-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-414">To nie jest wywoływana po wykonaniu konstruktora pierwszy metody zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="e1599-415">Prefiks przestrzeni nazw elementu.</span><span class="sxs-lookup"><span data-stu-id="e1599-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="e1599-416">Lokalna nazwa elementu.</span><span class="sxs-lookup"><span data-stu-id="e1599-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="e1599-417">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="e1599-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="e1599-418">Jeśli ten obszar nazw już jest w zakresie i skojarzona prefiksu następnie twórcę automatycznie zapisuje tego prefiksu również.</span><span class="sxs-lookup"><span data-stu-id="e1599-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="e1599-419">Zapisuje tag datą początkową i kojarzy ją z danej przestrzeni nazw i prefiksu.</span><span class="sxs-lookup"><span data-stu-id="e1599-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-420">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-421">Po wywołaniu tej metody można zapisywać atrybuty lub utworzyć zawartości za pomocą <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, lub <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="e1599-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="e1599-422">Możesz zamknąć elementu o <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> po tym czasie jest zapisywany tagu końcowego.</span><span class="sxs-lookup"><span data-stu-id="e1599-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-423">Dokonuje książkę zapisu w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="e1599-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e1599-424">Element writer jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e1599-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-425">Pobiera stan modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="e1599-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="e1599-426">Jeden z <see cref="T:System.Xml.WriteState" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="e1599-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-427">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="e1599-428">Tekst do zapisu.</span><span class="sxs-lookup"><span data-stu-id="e1599-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="e1599-429">Zapisuje zawartość danego tekstu.</span><span class="sxs-lookup"><span data-stu-id="e1599-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-430">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-431">`WriteString` wykonuje następujące czynności</span><span class="sxs-lookup"><span data-stu-id="e1599-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="e1599-432">Znaki `&`, `<`, i `>` są zastępowane `&amp;`, `&lt;`, i `&gt;`odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="e1599-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="e1599-433">Wartości znakowych w x-0x1F zakresu od 0 (z wyłączeniem białe znaki 0x9 0xA i 0xD) są zastępowane jednostki znaku numerycznego (`&#0;` za pośrednictwem `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="e1599-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="e1599-434">Jeśli `WriteString` jest wywoływana w kontekście wartość atrybutu są zastępowane cudzysłowy podwójne i jednego `&quot;` i `&apos;` odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="e1599-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="e1599-435">Na przykład ciąg wejściowy `test<item>test` są zapisywane jako</span><span class="sxs-lookup"><span data-stu-id="e1599-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="e1599-436">Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje węzła tekst z zawartości danych.</span><span class="sxs-lookup"><span data-stu-id="e1599-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-437">Poniższy przykład zapisuje XML fragment.</span><span class="sxs-lookup"><span data-stu-id="e1599-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-438">Ciąg tekstowy zawiera para zastępcza nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="e1599-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="e1599-439">Dwuskładnikowego.</span><span class="sxs-lookup"><span data-stu-id="e1599-439">The low surrogate.</span></span> <span data-ttu-id="e1599-440">Musi to być wartość z zakresu od <see langword="0xDC00" /> i <see langword="0xDFFF" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="e1599-441">Znakiem zastępczym wysokiego poziomu.</span><span class="sxs-lookup"><span data-stu-id="e1599-441">The high surrogate.</span></span> <span data-ttu-id="e1599-442">Musi to być wartość z zakresu od <see langword="0xD800" /> i <see langword="0xDBFF" />.</span><span class="sxs-lookup"><span data-stu-id="e1599-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="e1599-443">Generuje i zapisuje surogatu znak jednostki dla Para dwuskładnikowa znaku.</span><span class="sxs-lookup"><span data-stu-id="e1599-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-444">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-445">Ta metoda ma zastosowanie tylko w systemach, które używają kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="e1599-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="e1599-446">Jednostki znaku dwuskładnikowego jest zapisywany w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="e1599-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="e1599-447">Zakres znaków dwuskładnikowych to `#x10000` do `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="e1599-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="e1599-448">Następująca formuła służy do generowania jednostki znaku dwuskładnikowego: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="e1599-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="e1599-449">HTML i XML zestaw znaków dokumentu (i w związku z tym notacji znaku numerycznego odwołania) jest oparta na UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="e1599-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="e1599-450">Odwołanie pojedynczego znaku numerycznego w dokumencie źródłowym może w związku z tym w niektórych przypadkach odpowiadają dwie jednostki 16-bitową w ciągu (zastępczym wysokiego poziomu i dwuskładnikowego).</span><span class="sxs-lookup"><span data-stu-id="e1599-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="e1599-451">Te jednostki 16-bitowych są określane jako para zastępcza.</span><span class="sxs-lookup"><span data-stu-id="e1599-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="e1599-452">Aby uzyskać więcej informacji dotyczących surogatów lub znaków, znajdują się w sekcji 3.7 Unicode 3.0/Unicode 2.0 standardowe znajdujący się w http://www.unicode.org, lub sekcja 2.2 zaleceń 1.0 W3C XML znajduje się w http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="e1599-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="e1599-453">Przekazano parę Surogat nieprawidłowy znak.</span><span class="sxs-lookup"><span data-stu-id="e1599-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="e1599-454">Ciąg znaków odstępu.</span><span class="sxs-lookup"><span data-stu-id="e1599-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="e1599-455">Zapisuje się danego biały znak.</span><span class="sxs-lookup"><span data-stu-id="e1599-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-456">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-457">Ta metoda jest używana do formatowania ręcznie dokumentu.</span><span class="sxs-lookup"><span data-stu-id="e1599-457">This method is used to manually format your document.</span></span> <span data-ttu-id="e1599-458">Użyj <xref:System.Xml.XmlTextWriter.Formatting%2A> właściwości mają twórcę automatycznie sformatować dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="e1599-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-459">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="e1599-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e1599-460">Ciąg zawiera znaki z systemem innym niż biały znak.</span><span class="sxs-lookup"><span data-stu-id="e1599-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-461">Pobiera bieżący <see langword="xml:lang" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="e1599-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="e1599-462">Bieżący <see langword="xml:lang" /> lub <see langword="null" /> w przypadku nie <see langword="xml:lang" /> w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="e1599-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-463">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-464">Ta właściwość umożliwia jeden składnik dowiedzieć się, jakie stanu inny składnik opuścił zapisywania w.</span><span class="sxs-lookup"><span data-stu-id="e1599-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="e1599-465">Na przykład prawdopodobnie jeden składnik chce Poinformuj inny język tekstu pomocy do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="e1599-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="e1599-466">Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="e1599-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e1599-467">Pobiera <see cref="T:System.Xml.XmlSpace" /> reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="e1599-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="e1599-468"><see langword="XmlSpace" /> Reprezentujący bieżącą <see langword="xml:space" /> zakresu.</span><span class="sxs-lookup"><span data-stu-id="e1599-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="e1599-469"><list type="table"><listheader><term> Wartość</span><span class="sxs-lookup"><span data-stu-id="e1599-469"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="e1599-470"></term><description> Znaczenie</span><span class="sxs-lookup"><span data-stu-id="e1599-470"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="e1599-471"></description></listheader><item><term> Brak</span><span class="sxs-lookup"><span data-stu-id="e1599-471"></description></listheader><item><term> None</span></span>  
  
 <span data-ttu-id="e1599-472"></term><description> Jeśli nie jest to domyślny <see langword="xml:space" /> istnieje zakres.</span><span class="sxs-lookup"><span data-stu-id="e1599-472"></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="e1599-473"></description></item><item><term> Domyślne</span><span class="sxs-lookup"><span data-stu-id="e1599-473"></description></item><item><term> Default</span></span>  
  
 <span data-ttu-id="e1599-474"></term><description> Bieżący zakres jest <see langword="xml:space" />= "default".</span><span class="sxs-lookup"><span data-stu-id="e1599-474"></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="e1599-475"></description></item><item><term> Zachowaj</span><span class="sxs-lookup"><span data-stu-id="e1599-475"></description></item><item><term> Preserve</span></span>  
  
 <span data-ttu-id="e1599-476"></term><description> Bieżący zakres jest <see langword="xml:space" />= "preserve".</span><span class="sxs-lookup"><span data-stu-id="e1599-476"></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e1599-477">Począwszy od programu .NET Framework 2.0, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> — metoda i <xref:System.Xml.XmlWriterSettings> klasę, aby móc korzystać z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="e1599-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="e1599-478">Ta właściwość umożliwia jeden składnik dowiedzieć się, w co stanie się, że inny składnik opuścił modułu zapisującego.</span><span class="sxs-lookup"><span data-stu-id="e1599-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1599-479">W poniższym przykładzie użyto `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="e1599-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>