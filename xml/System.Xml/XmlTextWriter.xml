<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c85c3754011013f2f4a01e0fcf5882a1bfbcbd0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69439461" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2b0b5-101">Reprezentuje składnik zapisywania, który zapewnia szybki, niebuforowany, tylko do przodu sposób generowania strumieni lub plików zawierających dane XML, które są zgodne XML W3C (XML) 1,0 i przestrzenie nazw w zaleceniach XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
<span data-ttu-id="2b0b5-102">Począwszy od .NET Framework 2,0 zaleca się użycie <see cref="T:System.Xml.XmlWriter" /> klasy zamiast.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2b0b5-103">Ta klasa implementuje <xref:System.Xml.XmlWriter> klasę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-104">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-105">`XmlTextWriter`utrzymuje stos przestrzeni nazw odpowiadający wszystkim przestrzeniom nazw zdefiniowanym w bieżącym stosie elementów.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="2b0b5-106">Za `XmlTextWriter` pomocą można zadeklarować przestrzenie nazw ręcznie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="2b0b5-107">Powyższy C# kod generuje następujące dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-107">The above C# code produces the following output.</span></span> <span data-ttu-id="2b0b5-108">`XmlTextWriter`promuje deklarację przestrzeni nazw do elementu głównego, aby uniknąć jego duplikowania na dwóch elementach podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="2b0b5-109">Elementy podrzędne pobierają prefiks z deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="2b0b5-110">`XmlTextWriter`umożliwia również przesłonięcie bieżącej deklaracji przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="2b0b5-111">W poniższym przykładzie identyfikator URI przestrzeni nazw "123" jest zastępowany przez "ABC" w celu utworzenia elementu `<x:node xmlns:x="abc"/>`XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="2b0b5-112">Przy użyciu metod zapisu, które przyjmują prefiks jako argument, można również określić, którego prefiks ma być używany.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="2b0b5-113">W poniższym przykładzie dwa różne prefiksy są mapowane na ten sam identyfikator URI przestrzeni nazw w celu utworzenia tekstu `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="2b0b5-114">Jeśli istnieje wiele deklaracji przestrzeni nazw mapowania różnych prefiksów na ten sam identyfikator URI przestrzeni `XmlTextWriter` nazw, przeszukiwany jest stos deklaracji przestrzeni nazw do tyłu i wybiera najbliższy zakres.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="2b0b5-115">W powyższym C# przykładzie, ponieważ `WriteAttributeString` wywołanie nie określa prefiksu, składnik zapisywania używa ostatniego prefiksu wypchnięte do stosu przestrzeni nazw i tworzy następujący kod XML:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="2b0b5-116">Jeśli wystąpi konflikt przestrzeni nazw `XmlTextWriter` , program rozwiązuje je, generując alternatywne prefiksy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="2b0b5-117">Na przykład, jeśli atrybut i element mają ten sam prefiks, ale różne przestrzenie `XmlWriter` nazw, program generuje alternatywny prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="2b0b5-118">Wygenerowane prefiksy mają nazwę `n{i}` , `i` gdzie jest liczbą rozpoczynającą się od 1.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="2b0b5-119">Liczba jest resetowana do 1 dla każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="2b0b5-120">Atrybuty, które są skojarzone z identyfikatorem URI przestrzeni nazw, muszą mieć prefiks (domyślne przestrzenie nazw nie mają zastosowania do atrybutów).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="2b0b5-121">Jest to zgodne z sekcją 5,2 przestrzeni nazw W3C w rekomendacji XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="2b0b5-122">Jeśli atrybut odwołuje się do identyfikatora URI przestrzeni nazw, ale nie określa prefiksu, składnik zapisywania generuje prefiks dla atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="2b0b5-123">Podczas zapisywania pustego elementu jest dodawane dodatkowe miejsce między nazwą tagu i tagiem zamykającym, na przykład `<item />`.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="2b0b5-124">Zapewnia to zgodność ze starszymi przeglądarkami.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="2b0b5-125">Gdy jest używany jako `null` parametr metody i `String.Empty` jest równoważne. `String`</span><span class="sxs-lookup"><span data-stu-id="2b0b5-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="2b0b5-126">`String.Empty`obowiązują reguły W3C.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="2b0b5-127">Aby napisać dane o jednoznacznie określonym typie, <xref:System.Xml.XmlConvert> Użyj klasy do przekonwertowania typów danych na ciąg.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="2b0b5-128">Na przykład C# Poniższy kod konwertuje dane `Double` z do `String` i zapisuje element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="2b0b5-129">`XmlTextWriter`nie sprawdza następujących:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="2b0b5-130">Nieprawidłowe znaki w nazwach atrybutów i elementów.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="2b0b5-131">Znaki Unicode, które nie pasują do określonego kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="2b0b5-132">Jeśli znaki Unicode nie mieszczą się w określonym kodowaniu, `XmlTextWriter` znaki Unicode nie są wyprowadzane na jednostki znakowe.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="2b0b5-133">Zduplikowane atrybuty.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="2b0b5-134">Znaki w identyfikatorze publicznym DOCTYPE lub identyfikatorze systemowym.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="2b0b5-135">Zagadnienia dotyczące zabezpieczeń</span><span class="sxs-lookup"><span data-stu-id="2b0b5-135">Security Considerations</span></span>  
 <span data-ttu-id="2b0b5-136">Następujące elementy są brane pod uwagę podczas pracy z <xref:System.Xml.XmlTextWriter> klasą.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="2b0b5-137">Wyjątki zgłoszone przez <xref:System.Xml.XmlTextWriter> program mogą ujawniać informacje o ścieżce, które nie mają być rzutowane do aplikacji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="2b0b5-138">Aplikacje muszą przechwycić wyjątki i odpowiednio je przetworzyć.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="2b0b5-139">Gdy przejdziesz <xref:System.Xml.XmlTextWriter> do innej aplikacji, źródłowy strumień jest narażony na tę aplikację.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="2b0b5-140">Jeśli musisz przekazać <xref:System.Xml.XmlTextWriter> do aplikacji częściowo zaufanej, należy zamiast tego <xref:System.Xml.XmlWriter> użyć obiektu utworzonego przez <xref:System.Xml.XmlWriter.Create%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="2b0b5-141">Program nie sprawdza poprawności żadnych danych, które są przesyłane <xref:System.Xml.XmlTextWriter.WriteDocType%2A> do metod <xref:System.Xml.XmlTextWriter.WriteRaw%2A>lub. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="2b0b5-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="2b0b5-142">Nie należy przekazywać dowolnych danych do tych metod.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="2b0b5-143">Jeśli ustawienia domyślne ulegną zmianie, nie ma gwarancji, że generowane dane wyjściowe są poprawnie sformułowanymi danymi XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="2b0b5-144">Nie Akceptuj składników pomocniczych, takich jak <xref:System.Text.Encoding> obiekt, z niezaufanego źródła.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="2b0b5-145">Dokumenty i dane XML</span><span class="sxs-lookup"><span data-stu-id="2b0b5-145">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b0b5-146">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-147">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="2b0b5-148"><see langword="TextWriter" /> Do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-148">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="2b0b5-149">Zakłada się, że <see langword="TextWriter" /> jest już ustawiony prawidłowy kodowanie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="2b0b5-150">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego <see cref="T:System.IO.TextWriter" />elementu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-151">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="2b0b5-152">Strumień, do którego chcesz pisać.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-152">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="2b0b5-153">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-153">The encoding to generate.</span></span> <span data-ttu-id="2b0b5-154">Jeśli jest <see langword="null" /> to kodowanie, zapisuje strumień jako UTF-8 i pomija atrybut Encoding <see langword="ProcessingInstruction" />z.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="2b0b5-155">Tworzy wystąpienie <see langword="XmlTextWriter" /> klasy przy użyciu określonego strumienia i kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-156">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-157">Kodowanie nie jest obsługiwane lub nie można zapisać w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-157">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-158"><paramref name="w" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-158"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="2b0b5-159">Nazwa pliku do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-159">The filename to write to.</span></span> <span data-ttu-id="2b0b5-160">Jeśli plik istnieje, obcina go i zastępuje go nową zawartością.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-160">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="2b0b5-161">Kodowanie do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-161">The encoding to generate.</span></span> <span data-ttu-id="2b0b5-162">Jeśli jest <see langword="null" /> to kodowanie, zapisuje plik jako UTF-8 i pomija atrybut Encoding <see langword="ProcessingInstruction" />z.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="2b0b5-163">Tworzy wystąpienie <see cref="T:System.Xml.XmlTextWriter" /> klasy przy użyciu określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-164">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-165">Kodowanie nie jest obsługiwane; Nazwa pliku jest pusta, zawiera tylko znak odstępu lub zawiera jeden lub więcej nieprawidłowych znaków.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="2b0b5-166">Odmowa dostępu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-166">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-167">Nazwa pliku to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-167">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="2b0b5-168">Nie znaleziono katalogu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-168">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="2b0b5-169">Nazwa pliku zawiera niepoprawną lub nieprawidłową składnię dla nazwy, nazwy katalogu lub składni etykiety woluminu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="2b0b5-170">Obiekt wywołujący nie posiada wymaganych uprawnień.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-170">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-171">Pobiera źródłowy obiekt strumienia.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-171">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="2b0b5-172">Strumień, <see langword="XmlTextWriter" /> do którego jest zapisywany lub <see langword="null" /> Jeśli <see langword="XmlTextWriter" /> został skonstruowany <see cref="T:System.IO.StreamWriter" /> przy użyciu <see cref="T:System.IO.TextWriter" /> , który nie dziedziczy z klasy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-173">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-174">Jeśli składnik zapisywania został skonstruowany przy `TextWriter` użyciu, który jest pochodną `StreamWriter` klasy, ta <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> właściwość jest równoważna z właściwością.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="2b0b5-175">Jeśli składnik zapisywania został skonstruowany przy <xref:System.IO.Stream>użyciu, ta właściwość `Stream` zwraca przesłany do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="2b0b5-176">Jeśli moduł zapisujący został skonstruowany przy użyciu nazwy pliku, ta właściwość `Stream` zwraca plik reprezentujący.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-177">Zamyka ten strumień i źródłowy strumień.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-177">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-178">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-179">Wszystkie elementy lub atrybuty pozostawione w otwartym obszarze są automatycznie zamykane.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="2b0b5-180">Ta metoda nie generuje żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-181">Poniższy przykład zapisuje fragment XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-182">Opróżnia w buforze do źródłowych strumieni, a także opróżnia strumień źródłowy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-183">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-184">Ta funkcja jest wywoływana zamiast <xref:System.Xml.XmlTextWriter.Close%2A> , gdy chcesz napisać więcej w źródłowym strumieniu bez utraty informacji o tym, co wciąż znajduje się w buforze.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-185">Poniższy przykład zapisuje dwa fragmenty kodu XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-186">Wskazuje sposób formatowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-186">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="2b0b5-187">Jedna z <see cref="T:System.Xml.Formatting" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="2b0b5-188">Wartość domyślna to <see langword="Formatting.None" /> (bez specjalnego formatowania).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-188">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-189">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-190">Jeśli opcja jest ustawiona, elementy podrzędne są wcięte <xref:System.Xml.XmlTextWriter.Indentation%2A> przy użyciu właściwości i <xref:System.Xml.XmlTextWriter.IndentChar%2A>. `Indented`</span><span class="sxs-lookup"><span data-stu-id="2b0b5-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="2b0b5-191">Tylko zawartość elementu ma wcięcia.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-191">Only element content is indented.</span></span> <span data-ttu-id="2b0b5-192">Poniższy C# kod zapisuje elementy HTML, w tym zawartość mieszaną:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="2b0b5-193">Powyższy kod generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="2b0b5-194">Gdy ta opcja jest wyświetlana w kodzie HTML, między elementami pogrubionymi i kursywą pojawia się biały znak.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="2b0b5-195">W tym przykładzie, jeśli wcięcie zostało dodane między tymi elementami, wyraz "słoni" byłby niepoprawnie przerwany.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="2b0b5-196">Zapisanie zawartości tekstowej, z `String.Empty` wyłączeniem umieszczania tego elementu w trybie zawartości mieszanej.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="2b0b5-197">Elementy podrzędne nie dziedziczą tego stanu trybu mieszanego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="2b0b5-198">Element podrzędny elementu "Mixed" wykonuje wcięcia, chyba że zawiera również zawartość "Mixed".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="2b0b5-199">[Zawartość elementu](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) i zawartość [mieszana](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) są zdefiniowane zgodnie z definicjami XML 1,0 tych warunków.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="2b0b5-200">Poniższy przykład zapisuje fragment XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-201">Pobiera lub ustawia liczbę IndentChars do zapisania dla każdego poziomu w hierarchii, gdy <see cref="P:System.Xml.XmlTextWriter.Formatting" /> jest ustawiony na. <see langword="Formatting.Indented" /></span><span class="sxs-lookup"><span data-stu-id="2b0b5-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="2b0b5-202"><see langword="IndentChars" /> Liczba dla każdego poziomu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-202">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="2b0b5-203">Wartość domyślna to 2.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-203">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-204">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-205">Wcięcia są wykonywane w następujących typach węzłów: `DocumentType`, `Element`, `Comment` `ProcessingInstruction`, i `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="2b0b5-206">Nie dotyczy to wszystkich typów węzłów.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-206">All other node types are not affected.</span></span> <span data-ttu-id="2b0b5-207">`XmlTextWriter` Nie ma wcięcia wewnętrznego podzestawu DTD.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="2b0b5-208">Można jednak wykonać następujące czynności, aby zastosować formatowanie do wewnętrznego podzestawu DTD.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-209">Poniższy przykład zapisuje fragment XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-210">Ustawienie tej właściwości na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-210">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-211">Pobiera lub ustawia znak, który ma być używany podczas tworzenia <see cref="P:System.Xml.XmlTextWriter.Formatting" /> wcięć, gdy <see langword="Formatting.Indented" />jest ustawiony na.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="2b0b5-212">Znak używany do tworzenia wcięć.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-212">The character to use for indenting.</span></span> <span data-ttu-id="2b0b5-213">Wartość domyślna to Space.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-213">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="2b0b5-214"><see langword="XmlTextWriter" /> Pozwala na ustawienie tej właściwości na dowolny znak.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="2b0b5-215">Aby zapewnić prawidłowy kod XML, należy określić prawidłowy znak odstępu, 0x9, 0x10, 0x13 lub 0x20.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-216">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="2b0b5-217">Identyfikator URI przestrzeni nazw, którego prefiks ma zostać znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-217">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="2b0b5-218">Zwraca najbliższy prefiks zdefiniowany w zakresie bieżącego obszaru nazw dla identyfikatora URI przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="2b0b5-219">Pasujący prefiks.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-219">The matching prefix.</span></span> <span data-ttu-id="2b0b5-220">Lub <see langword="null" /> Jeśli w bieżącym zakresie nie znaleziono zgodnego identyfikatora URI przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-221">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-222">Poniższy przykład zapisuje książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-223"><paramref name="ns" /><see langword="null" /> jest<see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-223"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-224">Pobiera lub ustawia wartość wskazującą, czy ma być obsługiwana przestrzeń nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-224">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="2b0b5-225"><see langword="true" />do obsługi przestrzeni nazw; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="2b0b5-225"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="2b0b5-226">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-226">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-227">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-228">Ta właściwość określa, czy składnik zapisywania obsługuje [przestrzenie nazw W3C w](https://www.w3.org/TR/REC-xml-names) rekomendacji XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-228">This property determines whether the writer supports the W3C [Namespaces in XML](https://www.w3.org/TR/REC-xml-names) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-229">Tę właściwość można zmienić tylko wtedy, gdy jest <see langword="WriteState.Start" /> w stanie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-230">Pobiera lub ustawia znak, który ma być używany do wartości atrybutów cudzysłowu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-230">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="2b0b5-231">Znak, który ma być używany dla wartości atrybutów cudzysłowu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-231">The character to use to quote attribute values.</span></span> <span data-ttu-id="2b0b5-232">Musi to być pojedynczy cudzysłów (&amp;#39;) lub podwójny cudzysłów (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="2b0b5-233">Wartość domyślna to podwójny cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-233">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-234">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-235">Ustawienie tej właściwości na coś innego niż pojedynczy lub podwójny cudzysłów.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-235">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2b0b5-236">Tablica bajtów do kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-236">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="2b0b5-237">Pozycja w buforze wskazująca początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-237">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="2b0b5-238">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-238">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-239">Koduje określone bajty binarne jako base64 i zapisuje otrzymany tekst.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-240">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-241">Poniższy przykład koduje plik wejściowy przy użyciu `WriteBase64` i generuje tymczasowy plik XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="2b0b5-242">Tymczasowy plik XML jest dekodowane przy użyciu <xref:System.Xml.XmlTextReader.ReadBase64%2A> metody i w porównaniu z oryginalnym plikiem.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-243"><paramref name="buffer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-243"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-244">Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b0b5-245"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-245"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-246"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Ma<see langword="Closed" />wartość.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2b0b5-247">Tablica bajtów do kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-247">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="2b0b5-248">Pozycja w buforze wskazująca początek bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-248">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="2b0b5-249">Liczba bajtów do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-249">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-250">Koduje określone bajty binarne jako BinHex i zapisuje otrzymany tekst.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-251">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-252"><paramref name="buffer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-252"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-253">Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b0b5-254"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-254"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-255"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="2b0b5-256">Tekst, który ma zostać umieszczony wewnątrz bloku CDATA.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-256">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="2b0b5-257">Zapisuje &lt;! [CDATA [...]] &gt; bloku zawierających określony tekst.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-258">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-259">Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje pusty blok CDATA, na przykład \<! [ CDATA []</span><span class="sxs-lookup"><span data-stu-id="2b0b5-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-260">Wynikiem może być niewłaściwie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-261"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Ma<see langword="Closed" />wartość.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="2b0b5-262">Znak Unicode, dla którego ma zostać wygenerowana jednostka znaku.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="2b0b5-263">Wymusza generowanie jednostki znaku dla określonej wartości znaku Unicode.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-264">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-265">Ta metoda zapisuje znak Unicode w formacie odwołania do jednostki znaku szesnastkowego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-266">Poniższy przykład używa `WriteCharEntity` metody do napisania adresu e-mail.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-267">Znak znajduje się w zakresie znaków pary zastępczej; <see langword="0xd800" />w przeciwnym razie  -  <see langword="0xdfff" />tekst spowoduje niewłaściwie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-268"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Ma<see langword="Closed" />wartość.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2b0b5-269">Tablica znaków zawierająca tekst do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="2b0b5-270">Pozycja w buforze wskazująca początek tekstu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="2b0b5-271">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-272">Zapisuje tekst jeden bufor w danym momencie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-273">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-274">Ta metoda może służyć do pisania dużych ilości tekstu po jednym buforze naraz.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="2b0b5-275">Należy wykonać specjalną obsługę, aby upewnić się, że `WriteChars` Metoda nie dzieli znaków dwuskładnikowych między wiele zapisów buforu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="2b0b5-276">Specyfikacja XML definiuje prawidłowe zakresy dla par surogatu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="2b0b5-277">Wyjątek jest generowany, jeśli znaki dwuskładnikowe są zapisywane, co spowoduje, że znaki pary zastępczej są dzielone w buforze.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-278"><paramref name="buffer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b0b5-279"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="2b0b5-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="2b0b5-280">-or-</span></span> 
<span data-ttu-id="2b0b5-281">Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />; Wywołaj wyniki w postaci dwuskładnikowej pary znaków lub zapisywana jest nieprawidłowa para dwuskładnikowa.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-282"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="2b0b5-283">Tekst do umieszczenia w komentarzu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="2b0b5-284">Zapisuje komentarz &lt;!--...--&gt; zawierający określony tekst.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-285">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-286">Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje `Comment` zawartość bez danych, na przykład \<!---->.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-287">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-288">Wynikiem może być niewłaściwie sformułowany dokument XML</span><span class="sxs-lookup"><span data-stu-id="2b0b5-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-289"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> Ma<see langword="Closed" />wartość.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b0b5-290">Nazwa elementu DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="2b0b5-291">To nie może być puste.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="2b0b5-292">Jeśli wartość nie jest równa null, zapisuje także publiczne "pubid" " <paramref name="pubid" /> sysid <paramref name="sysid" /> ", gdzie i są zastępowane wartością danego argumentu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="2b0b5-293">Jeśli <paramref name="pubid" /> ma wartość null <paramref name="sysid" /> i ma wartość różną od null, zapisuje system "sysid <paramref name="sysid" /> ", gdzie jest zastępowana wartością tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="2b0b5-294">Jeśli nie ma wartości null, zapisuje [podzestaw], w którym podzbiór jest zastępowany wartością tego argumentu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="2b0b5-295">Zapisuje deklarację DOCTYPE z określoną nazwą i opcjonalnymi atrybutami.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-296">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-297">Ta metoda nie sprawdza pod kątem nieprawidłowych `pubid`znaków `sysid` w `subset`, lub.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="2b0b5-298">Nie sprawdza również, czy podzestaw wewnętrzny jest poprawnie sformułowany.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b0b5-299">Nie sprawdza poprawności żadnych danych, które są przesyłane <xref:System.Xml.XmlTextWriter.WriteDocType%2A> do metody. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="2b0b5-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="2b0b5-300">Nie należy przekazywać dowolnych danych do tej metody.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-301">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-302">Ta metoda została wywołana poza prologem (po elemencie głównym).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-303"><paramref name="name" />jest <see langword="null" /> lub<see langword="String.Empty" /></span><span class="sxs-lookup"><span data-stu-id="2b0b5-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
<span data-ttu-id="2b0b5-304">—lub—</span><span class="sxs-lookup"><span data-stu-id="2b0b5-304">-or-</span></span> 
<span data-ttu-id="2b0b5-305">wartość <paramref name="name" /> spowodowałaby powstanie nieprawidłowego kodu XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-306">Zamyka poprzednie <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> wywołanie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-307">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-308">W przypadku wywołania `WriteStartAttribute`, można zamknąć atrybut za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="2b0b5-309">Możesz również zamknąć atrybut, wywołując `WriteStartAttribute` ponownie, wywołując <xref:System.Xml.XmlWriter.WriteAttributeString%2A>lub wywołując <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-310">Poniższy przykład zapisuje książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-311">Zamyka wszystkie otwarte elementy lub atrybuty i umieszcza składnik zapisywania w stanie początkowym.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-312">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-313">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-314">Dokument XML jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-315">Zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-316">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-317">Jeśli element nie zawiera zawartości, zostanie zapisany krótki tag końcowy "/>". w przeciwnym razie pełny tag końcowy jest zapisywana.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-318">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b0b5-319">Nazwa odwołania do jednostki.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="2b0b5-320">Zapisuje odwołanie do jednostki jako <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-321">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-322">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-323">Wynikiem może być niewłaściwie sformułowany dokument XML lub <paramref name="name" /> <see langword="null" /> <see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-324">Zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-325">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-326">Ta metoda zawsze zapisuje pełny tag końcowy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-326">This method always writes the full end tag.</span></span> <span data-ttu-id="2b0b5-327">Jest to przydatne podczas pracy z elementami, które muszą zawierać pełny tag końcowy.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="2b0b5-328">Na przykład przeglądarki oczekują, że bloki skryptu HTML mają być zamknięte\<przy użyciu "/Script >".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-329">Poniższy przykład zapisuje element bez zawartości.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="2b0b5-330">Używa WriteFullEndElement, aby napisać pełny tag elementu końcowego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b0b5-331">Nazwa do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-332">Zapisuje określoną nazwę, upewniając się, że jest to prawidłowa nazwa zgodnie z <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">zaleceniem W3C XML 1,0</see>.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-332">Writes out the specified name, ensuring it is a valid name according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-333">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-334">Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> jest ustawiona na `true`, `WriteName` sprawdza także, czy nazwa jest również prawidłowa zgodnie z zasadami nazw W3C w rekomendacji XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-335"><paramref name="name" />nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest<see langword="String.Empty" />albo <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="2b0b5-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b0b5-336">Nazwa do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-337">Zapisuje określoną nazwę, upewniając się, że jest ona <see langword="NmToken" /> prawidłowa zgodnie z <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">zaleceniem W3C XML 1,0</see>.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-338">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-339"><paramref name="name" />nie jest prawidłową <see langword="NmToken" />wartością; lub <paramref name="name" /> jest <see langword="null" /> <see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="2b0b5-340">Nazwa instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="2b0b5-341">Tekst do uwzględnienia w instrukcji przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="2b0b5-342">Zapisuje instrukcję przetwarzania z odstępem między nazwą i tekstem w następujący sposób: &lt;? Name Text?.&gt;</span><span class="sxs-lookup"><span data-stu-id="2b0b5-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-343">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-344">Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje `ProcessingInstruction` zawartość bez danych, na przykład \<? Name? >.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-345">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-346">Wynikiem może być niewłaściwie sformułowany dokument XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="2b0b5-347"><paramref name="name" /><see langword="null" /> jest<see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="2b0b5-348">Ta metoda jest używana do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> już wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="2b0b5-349">Nazwa lokalna do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="2b0b5-350">Identyfikator URI przestrzeni nazw do skojarzenia z nazwą.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="2b0b5-351">Zapisuje nazwę kwalifikowaną nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="2b0b5-352">Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danego obszaru nazw.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-353">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-354">Na przykład następujący kod programu Microsoft Visual C# Code:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="2b0b5-355">Generuje następujące dane wyjściowe:</span><span class="sxs-lookup"><span data-stu-id="2b0b5-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="2b0b5-356">Jeśli `ns` mapuje do bieżącej domyślnej przestrzeni nazw, nie jest generowany żaden prefiks.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="2b0b5-357">Podczas zapisywania wartości atrybutów ta metoda generuje prefiks, jeśli `ns` nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="2b0b5-358">Podczas zapisywania zawartości elementu zgłasza wyjątek, jeśli `ns` nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="2b0b5-359">Jeśli ten moduł zapisujący obsługuje<xref:System.Xml.XmlTextWriter.Namespaces%2A> przestrzenie nazw `true`(jest ustawione na), ta metoda sprawdza również, czy nazwa jest prawidłowa, zgodnie z [zaleceniami przestrzeni nazw W3C w pliku XML](https://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-360">Poniższy przykład zapisuje część schematu XSD.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-361"><paramref name="localName" /><see langword="null" /> jest<see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="2b0b5-362"><paramref name="localName" />nie jest prawidłową nazwą zgodnie z specyfikacją przestrzeni nazw W3C.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b0b5-363">Zapisuje nieprzetworzone znaczniki ręcznie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-364">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="2b0b5-365">Ciąg zawierający tekst do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-366">Zapisuje nieprzetworzone znaczniki ręcznie z ciągu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-367">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-368">Ta metoda nie wyprowadza znaków specjalnych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b0b5-369">Nie sprawdza poprawności żadnych danych, które są przesyłane <xref:System.Xml.XmlTextWriter.WriteRaw%2A> do metody. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="2b0b5-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="2b0b5-370">Nie należy przekazywać dowolnych danych do tej metody.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-371">Poniższy przykład zapisuje ciąg przy użyciu `WriteRaw` metody.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="2b0b5-372">Tablica znaków zawierająca tekst do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="2b0b5-373">Pozycja w buforze wskazująca początek tekstu do zapisu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="2b0b5-374">Liczba znaków, jaka ma zostać zapisana.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-375">Zapisuje nieprzetworzone znaczniki ręcznie z buforu znaków.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-376">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-377">Ta metoda nie wyprowadza znaków specjalnych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2b0b5-378">Nie sprawdza poprawności żadnych danych, które są przesyłane <xref:System.Xml.XmlTextWriter.WriteRaw%2A> do metody. <xref:System.Xml.XmlTextWriter></span><span class="sxs-lookup"><span data-stu-id="2b0b5-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="2b0b5-379">Nie należy przekazywać dowolnych danych do tej metody.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2b0b5-380"><paramref name="buffer" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2b0b5-381"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="2b0b5-382">—lub—</span><span class="sxs-lookup"><span data-stu-id="2b0b5-382">-or-</span></span> 
<span data-ttu-id="2b0b5-383">Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2b0b5-384"><see langword="Namespace" />prefiks atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="2b0b5-385"><see langword="LocalName" />atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="2b0b5-386"><see langword="NamespaceURI" />atrybutu</span><span class="sxs-lookup"><span data-stu-id="2b0b5-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="2b0b5-387">Zapisuje początek atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-388">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-389">Jest to bardziej zaawansowana wersja <xref:System.Xml.XmlWriter.WriteAttributeString%2A> programu, która umożliwia pisanie wartości atrybutów przy użyciu wielu metod zapisu, takich jak <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-390">Poniższy przykład zapisuje książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-391"><paramref name="localName" /><see langword="null" /> jest<see langword="String.Empty" />albo.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2b0b5-392">Zapisuje deklarację XML w wersji "1,0".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-393">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2b0b5-394">Zapisuje deklarację XML w wersji "1,0".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-395">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-396">Poziom kodowania dokumentu jest określany na podstawie sposobu implementacji składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="2b0b5-397">Na przykład jeśli <xref:System.Text.Encoding> obiekt jest określony `XmlTextWriter` w konstruktorze, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="2b0b5-398">Ta metoda nie tworzy atrybutu autonomicznego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="2b0b5-399">Gdy `WriteStartDocument` jest wywoływana, walidacja jest sprawdzana w postaci dobrze sformułowanego dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="2b0b5-400">Na przykład sprawdza, czy deklaracja XML jest pierwszym węzłem, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="2b0b5-401">Jeśli ta metoda nie zostanie wywołana, moduł zapisujący zakłada, że fragment kodu XML jest zapisywany i nie stosuje reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="2b0b5-402">Jeśli `WriteStartDocument` został wywołany, a <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> następnie metoda jest używana do tworzenia innej deklaracji XML, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-403">Poniższy przykład zapisuje plik XML reprezentujący książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-404">Nie jest to pierwsza metoda zapisu wywołana po konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="2b0b5-405">Jeśli <see langword="true" />, zapisuje "autonomiczne = tak"; w <see langword="false" />przypadku zapisu "Standalone = No".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="2b0b5-406">Zapisuje deklarację XML z wersją "1,0" i atrybutem autonomicznym.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-407">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-408">Poziom kodowania dokumentu jest określany na podstawie sposobu implementacji składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="2b0b5-409">Na przykład jeśli <xref:System.Text.Encoding> obiekt jest określony `XmlTextWriter` w konstruktorze, określa wartość atrybutu kodowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="2b0b5-410">Gdy `WriteStartDocument` jest wywoływana, walidacja jest sprawdzana w postaci dobrze sformułowanego dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="2b0b5-411">Na przykład sprawdza, czy deklaracja XML jest pierwszym węzłem, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="2b0b5-412">Jeśli ta metoda nie zostanie wywołana, moduł zapisujący zakłada, że fragment kodu XML jest zapisywany i nie stosuje reguł poziomu głównego.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="2b0b5-413">Jeśli `WriteStartDocument` został wywołany, a <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> następnie metoda jest używana do tworzenia innej deklaracji XML, zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-414">Nie jest to pierwsza metoda zapisu wywołana po konstruktorze.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="2b0b5-415">Prefiks przestrzeni nazw elementu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="2b0b5-416">Nazwa lokalna elementu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="2b0b5-417">Identyfikator URI przestrzeni nazw do skojarzenia z elementem.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="2b0b5-418">Jeśli ta przestrzeń nazw jest już w zakresie i ma skojarzony prefiks, moduł zapisujący automatycznie zapisuje ten prefiks.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="2b0b5-419">Zapisuje określony tag początkowy i kojarzy go z podaną przestrzenią nazw i prefiksem.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-420">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-421">Po wywołaniu tej metody można zapisywać atrybuty lub tworzyć zawartość przy użyciu <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>lub <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> dla elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="2b0b5-422">Można zamknąć element z <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> , w którym czasie tag końcowy jest zapisywana.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-423">Poniższy przykład zapisuje książkę.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2b0b5-424">Składnik zapisywania jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-425">Pobiera stan składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="2b0b5-426">Jedna z <see cref="T:System.Xml.WriteState" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-427">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="2b0b5-428">Tekst do zapisania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="2b0b5-429">Zapisuje daną zawartość tekstową.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-430">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-431">`WriteString`wykonuje następujące czynności</span><span class="sxs-lookup"><span data-stu-id="2b0b5-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="2b0b5-432">Znaki `&`, `<`i `&amp;` `&lt;`są zastępowane odpowiednio,, i`&gt;`. `>`</span><span class="sxs-lookup"><span data-stu-id="2b0b5-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="2b0b5-433">Wartości znakowe w zakresie 0x-0x1F (z wyjątkiem białych znaków 0x9, 0xA i 0xd) są zastępowane jednostkami znaku liczbowego (`&#0;` do `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="2b0b5-434">Jeśli `WriteString` jest wywoływana w kontekście wartości atrybutu, podwójne i pojedyncze cudzysłowy są `&quot;` zastępowane i `&apos;` odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="2b0b5-435">Na przykład ten ciąg `test<item>test` wejściowy jest zapisywana jako</span><span class="sxs-lookup"><span data-stu-id="2b0b5-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="2b0b5-436">Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje węzeł tekstowy bez zawartości danych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-437">Poniższy przykład zapisuje fragment XML.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-438">Ciąg tekstowy zawiera nieprawidłową parę surogatu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="2b0b5-439">Mały Surogat.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-439">The low surrogate.</span></span> <span data-ttu-id="2b0b5-440">Musi to być wartość z zakresu <see langword="0xDC00" /> od <see langword="0xDFFF" />do.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="2b0b5-441">Duży Surogat.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-441">The high surrogate.</span></span> <span data-ttu-id="2b0b5-442">Musi to być wartość z zakresu <see langword="0xD800" /> od <see langword="0xDBFF" />do.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="2b0b5-443">Generuje i zapisuje jednostkę znaku dwuskładnikowego dla pary znaków zastępczych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-444">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-445">Ta metoda ma zastosowanie tylko w systemach używających kodowania UTF-16.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="2b0b5-446">Jednostka znaku dwuskładnikowego jest zapisywana w formacie szesnastkowym.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="2b0b5-447">Zakres znaków dwuskładnikowych to `#x10000`. `#x10FFFF`</span><span class="sxs-lookup"><span data-stu-id="2b0b5-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="2b0b5-448">Następująca formuła służy do generowania jednostkowego znaku dwuskładnikowego: (`highChar` -  - `0xD800`) \* `0x400` + (`lowChar``0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="2b0b5-449">W przypadku języków HTML i XML zestaw znaków dokumentu (i w związku z tym notacja odwołań do znaków numerycznych) jest oparty na protokole UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="2b0b5-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="2b0b5-450">W przypadku jednego odwołania do znaku numerycznego w dokumencie źródłowym mogą być w niektórych przypadkach odnoszące się do 2 16-bitowych jednostek w ciągu (duży Surogat i niski Surogat).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="2b0b5-451">Te 16-bitowe jednostki są określane jako para dwuskładnikowa.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="2b0b5-452">Aby uzyskać więcej informacji na temat surogatów lub znaków, zapoznaj się z sekcją 3,7 [standardu Unicode 3.0/unicode 2,0](https://www.unicode.org)lub [sekcję 2,2 zalecenia XML 1,0](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="2b0b5-452">For more information regarding surrogates or characters, refer to section 3.7 of the [Unicode 3.0/Unicode 2.0 standard](https://www.unicode.org), or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="2b0b5-453">Przekazano nieprawidłową parę znaków dwuskładnikowych.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="2b0b5-454">Ciąg znaków odstępu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="2b0b5-455">Zapisuje dane z danego odstępu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-456">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-457">Ta metoda służy do ręcznego formatowania dokumentu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-457">This method is used to manually format your document.</span></span> <span data-ttu-id="2b0b5-458"><xref:System.Xml.XmlTextWriter.Formatting%2A> Użyj właściwości, aby moduł zapisu automatycznie sformatuje dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-459">W poniższym przykładzie zastosowano `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2b0b5-460">Ciąg zawiera znaki niebędące znakami odstępu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-461">Pobiera bieżący <see langword="xml:lang" /> zakres.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="2b0b5-462">Bieżąca <see langword="xml:lang" /> lub <see langword="null" /> Jeśli nie<see langword="xml:lang" /> ma w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-463">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-464">Ta właściwość umożliwia jednemu składnikowi dowiedzieć się, jaki stan inny składnik opuścił moduł zapisujący.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="2b0b5-465">Na przykład, być może jeden składnik chce powiedzieć inny język tekstu pomocy do wygenerowania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="2b0b5-466">Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2b0b5-467">Pobiera reprezentującą bieżący <see langword="xml:space" />zakres. <see cref="T:System.Xml.XmlSpace" /></span><span class="sxs-lookup"><span data-stu-id="2b0b5-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="2b0b5-468">Reprezentujący bieżący <see langword="xml:space" />zakres. <see langword="XmlSpace" /></span><span class="sxs-lookup"><span data-stu-id="2b0b5-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="2b0b5-469">Wartość</span><span class="sxs-lookup"><span data-stu-id="2b0b5-469">Value</span></span> 
 </term><description> <span data-ttu-id="2b0b5-470">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="2b0b5-470">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="2b0b5-471">Brak</span><span class="sxs-lookup"><span data-stu-id="2b0b5-471">None</span></span> 
 </term><description> <span data-ttu-id="2b0b5-472">Jest to wartość domyślna, jeśli <see langword="xml:space" /> nie istnieje żaden zakres.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-472">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2b0b5-473">Domyślny</span><span class="sxs-lookup"><span data-stu-id="2b0b5-473">Default</span></span> 
 </term><description> <span data-ttu-id="2b0b5-474">Bieżący zakres to <see langword="xml:space" />= "domyślny".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-474">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term> <span data-ttu-id="2b0b5-475">Zachowywał</span><span class="sxs-lookup"><span data-stu-id="2b0b5-475">Preserve</span></span> 
 </term><description> <span data-ttu-id="2b0b5-476">Bieżący zakres to <see langword="xml:space" />= "preserve".</span><span class="sxs-lookup"><span data-stu-id="2b0b5-476">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="2b0b5-477">Począwszy od .NET Framework 2,0 zalecamy utworzenie <xref:System.Xml.XmlWriter> wystąpień przy <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> użyciu metody i <xref:System.Xml.XmlWriterSettings> klasy w celu skorzystania z nowych funkcji.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="2b0b5-478">Ta właściwość umożliwia jednemu składnikowi znalezienie informacji o stanie, w którym inny składnik opuścił składnik zapisywania.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2b0b5-479">W poniższym przykładzie zastosowano `WriteWhitespace` metodę, aby kontrolować sposób formatowania pliku.</span><span class="sxs-lookup"><span data-stu-id="2b0b5-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
