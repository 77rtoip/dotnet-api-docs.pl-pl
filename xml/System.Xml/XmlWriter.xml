<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2609f3ce6c7f4e0e78ea56746c2a6bc71d2770de" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69407248" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje składnik zapisywania, który zapewnia szybki, niebuforowany, tylko do przodu sposób generowania strumieni lub plików, które zawierają dane XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Klasa zapisuje dane XML do strumienia, pliku, czytnika tekstu lub ciągu. Obsługuje ona XML W3C [(XML) 1,0 (czwarte wersje)](https://www.w3.org/TR/2006/REC-xml-20060816/) i [przestrzenie nazw w XML 1,0 (wydanie trzecie)](https://www.w3.org/TR/REC-xml-names/) .  
  
 Członkowie <xref:System.Xml.XmlWriter> klasy umożliwiają:  
  
-   Sprawdź, czy znaki są dozwolonymi znakami XML i czy nazwy elementów i atrybutów są prawidłowymi nazwami XML.  
  
-   Sprawdź, czy dokument XML jest poprawnie sformułowany.  
  
-   Koduj bajty binarne jako base64 lub BinHex i napisz otrzymany tekst.  
  
-   Przekazuj wartości przy użyciu typów środowiska uruchomieniowego języka wspólnego zamiast ciągów, aby uniknąć konieczności ręcznego wykonywania konwersji wartości.  
  
-   Zapisuj wiele dokumentów w jednym strumieniu wyjściowym.  
  
-   Zapisuj prawidłowe nazwy, nazwy kwalifikowane i tokeny nazw.  
  
 W tej sekcji:  
  
 [Tworzenie składnika zapisywania XML](#create)   
 [Określanie formatu danych wyjściowych](#output)   
 [Zgodność danych](#conformance)   
 [Pisanie elementów](#writing_elements)   
 [Pisanie atrybutów](#writing_attributes)   
 [Obsługa przestrzeni nazw](#handling_ns)   
 [Zapisywanie danych wpisanych](#writing_types)   
 [Zamykanie składnika zapisywania XML](#close)   
 [Programowanie asynchroniczne](#async)   
 [Zagadnienia dotyczące bezpieczeństwa](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a>Tworzenie składnika zapisywania XML  
 Aby utworzyć <xref:System.Xml.XmlWriter> wystąpienie, <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Użyj metody. Aby określić zestaw funkcji, które mają być włączone w składniku zapisywania XML, Przekaż <xref:System.Xml.XmlWriterSettings> <xref:System.Xml.XmlWriter.Create%2A> metodę. W przeciwnym razie używane są ustawienia domyślne. Szczegóły można znaleźć na stronach referencyjnych.<xref:System.Xml.XmlWriter.Create%2A>  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a>Określanie formatu danych wyjściowych  
 Klasa zawiera kilka właściwości, które kontrolują <xref:System.Xml.XmlWriter> sposób formatowania danych wyjściowych: <xref:System.Xml.XmlWriterSettings>  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Określa kodowanie tekstu, które ma być używane. Wartość domyślna to `Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Wskazuje, czy mają być Wcięte elementy. Wartość domyślna to `false` (bez wcięć).|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Określa ciąg znaków, który ma być używany podczas tworzenia wcięcia. Wartość domyślna to dwie spacje.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Określa ciąg znaków, który ma być używany dla podziałów wierszy. Wartość domyślna to `\r\n` (znak powrotu karetki, wiersz wysuwu wiersza).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Określa sposób obsługi znaków nowego wiersza.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Wskazuje, czy atrybuty mają być zapisywane w nowym wierszu. <xref:System.Xml.XmlWriterSettings.Indent%2A>należy ustawić wartość `true` przy użyciu tej właściwości. Wartość domyślna to `false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Wskazuje, czy należy napisać deklarację XML. Wartość domyślna to `false`.|  
  
 Właściwości <xref:System.Xml.XmlWriterSettings.Indent%2A> i <xref:System.Xml.XmlWriterSettings.IndentChars%2A> kontrolują sposób, w jaki jest sformatowany nieznaczący biały znak. Na przykład, aby wciąć węzły elementu:  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 Użyj, <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> aby napisać każdy atrybut w nowym wierszu o jednym dodatkowym poziomie wcięcia:  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a>Zgodność danych  
 Składnik zapisywania XML używa dwóch właściwości z <xref:System.Xml.XmlWriterSettings> klasy do sprawdzania zgodności danych:  
  
-   Właściwość instruuje składnik zapisywania XML, aby sprawdzał znaki i <xref:System.Xml.XmlException> zgłaszać wyjątek, jeśli jakiekolwiek znaki wykraczają poza dozwolony zakres, zgodnie z definicją W3C. <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>  
  
-   <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> Właściwość konfiguruje składnik zapisywania XML, aby sprawdzić, czy zapisany strumień jest zgodny z regułami dla poprawnie sformułowanego dokumentu XML 1,0 lub fragment dokumentu, zgodnie z definicją W3C. Trzy poziomy zgodności są opisane w poniższej tabeli. Wartość domyślna to <xref:System.Xml.ConformanceLevel.Document>. Aby uzyskać szczegółowe informacje, <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Zobacz Właściwość <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> i Wyliczenie.  
  
    |Poziom|Opis|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|Dane wyjściowe XML są zgodne z regułami dla poprawnie sformułowanego dokumentu XML 1,0 i mogą być przetwarzane przez dowolny Procesor zgodny.|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|Dane wyjściowe XML są zgodne z regułami dla poprawnie sformułowanego fragmentu dokumentu XML 1,0.|  
    |<xref:System.Xml.ConformanceLevel.Auto>|Składnik zapisywania XML określa, który poziom sprawdzania zgodności ma być stosowany (dokument lub fragment) na podstawie danych przychodzących.|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a>Pisanie elementów  
 Aby napisać węzły elementów, <xref:System.Xml.XmlWriter> można użyć następujących metod. Aby zapoznać się z przykładami, zobacz listę metod.  
  
|Zastosowanie|Zadanie|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|Napisz cały węzeł elementu, łącznie z wartością ciągu.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|Aby napisać wartość elementu przy użyciu wielu wywołań metod.  Na przykład można wywołać <xref:System.Xml.XmlWriter.WriteValue%2A> , aby napisać wartość typu, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> aby napisać jednostkę znaku, <xref:System.Xml.XmlWriter.WriteAttributeString%2A> napisać atrybut lub można napisać element podrzędny. Jest to bardziej zaawansowana wersja <xref:System.Xml.XmlWriter.WriteElementString%2A> metody.<br /><br /> Aby zamknąć element, należy wywołać <xref:System.Xml.XmlWriter.WriteEndElement%2A> metodę lub. <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|Aby skopiować węzeł elementu znaleziony w bieżącym miejscu <xref:System.Xml.XmlReader> obiektu lub. <xref:System.Xml.XPath.XPathNavigator> Gdy jest wywoływana, kopiuje wszystko z obiektu źródłowego do <xref:System.Xml.XmlWriter> wystąpienia.|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a>Pisanie atrybutów  
 Przy użyciu poniższych <xref:System.Xml.XmlWriter> metod można pisać atrybuty w węzłach elementów. Te metody mogą również służyć do tworzenia deklaracji przestrzeni nazw dla elementu, zgodnie z opisem w następnej sekcji.  
  
|Zastosowanie|Zadanie|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|Aby napisać cały węzeł atrybutu, w tym wartość ciągu.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|Aby zapisać wartość atrybutu przy użyciu wielu wywołań metod. Na przykład można wywołać <xref:System.Xml.XmlWriter.WriteValue%2A> , aby napisać wartość wpisaną. Jest to bardziej zaawansowana wersja <xref:System.Xml.XmlWriter.WriteElementString%2A> metody.<br /><br /> Aby zamknąć element, należy wywołać <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> metodę.|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|Aby skopiować wszystkie atrybuty znalezione na bieżącym miejscu <xref:System.Xml.XmlReader> obiektu. Zapisywane atrybuty zależą od typu węzła, w którym jest obecnie umieszczony czytnik:<br /><br /> — Dla węzła atrybutu zapisuje bieżący atrybut, a następnie resztę atrybutów do znacznika zamykającego elementu.<br />-Dla węzła elementu zapisuje wszystkie atrybuty zawarte w elemencie.<br />-Dla węzła deklaracji XML zapisuje wszystkie atrybuty w deklaracji.<br />— Dla wszystkich innych typów węzłów Metoda zgłasza wyjątek.|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a>Obsługa przestrzeni nazw  
 Przestrzenie nazw służą do kwalifikowania nazw elementów i atrybutów w dokumencie XML. Prefiksy przestrzeni nazw kojarzą elementy i atrybuty z przestrzeniami nazw, które są skojarzone z odwołaniami do identyfikatorów URI. Przestrzenie nazw tworzą unikatowość nazw elementów i atrybutów w dokumencie XML.  
  
 <xref:System.Xml.XmlWriter> Zachowuje stos przestrzeni nazw, który odnosi się do wszystkich przestrzeni nazw zdefiniowanych w bieżącym zakresie przestrzeni nazw. Podczas pisania elementów i atrybutów można używać przestrzeni nazw w następujący sposób:  
  
-   Ręcznie deklaruj przestrzenie nazw przy <xref:System.Xml.XmlWriter.WriteAttributeString%2A> użyciu metody. Może to być przydatne, gdy wiesz, jak najlepiej zoptymalizować liczbę deklaracji przestrzeni nazw. Aby zapoznać się z przykładem <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> , zobacz metodę.  
  
-   Zastąp bieżącą deklarację przestrzeni nazw nową przestrzenią nazw. W poniższym kodzie <xref:System.Xml.XmlWriter.WriteAttributeString%2A> Metoda zmienia identyfikator URI przestrzeni nazw `"x"` dla prefiksu z `"123"` na `"abc"`.  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     Kod generuje następujący ciąg XML:  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   Określ prefiks przestrzeni nazw podczas pisania atrybutów lub elementów. Wiele metod służących do zapisywania elementów i atrybutów umożliwia wykonywanie tych czynności. Na przykład <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> Metoda zapisuje tag początkowy i kojarzy go z określonym obszarem nazw i prefiksem.  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a>Zapisywanie danych wpisanych  
 Metoda akceptuje obiekt środowiska uruchomieniowego języka wspólnego (CLR), konwertuje wartość wejściową na jej reprezentację w postaci ciągu zgodnie z regułami konwersji typów danych języka definicji schematu XML (XSD) i zapisuje je za <xref:System.Xml.XmlWriter.WriteString%2A> pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A> Jest to łatwiejsze niż użycie metod w <xref:System.Xml.XmlConvert> klasie w celu przekonwertowania wpisanych danych na wartość ciągu przed ich zapisaniem.  
  
 Podczas zapisywania do tekstu wartość wpisanej jest serializowana do tekstu przy użyciu <xref:System.Xml.XmlConvert> reguł dla tego typu schematu.  
  
 W przypadku domyślnych typów danych XSD, które odpowiadają typom CLR <xref:System.Xml.XmlWriter.WriteValue%2A> , zobacz metodę.  
  
 <xref:System.Xml.XmlWriter> Może również służyć do zapisu w magazynie danych XML. Na przykład <xref:System.Xml.XPath.XPathNavigator> Klasa może <xref:System.Xml.XmlWriter> utworzyć obiekt <xref:System.Xml.XmlDocument> , aby utworzyć węzły dla obiektu. Jeśli magazyn danych ma dostępne informacje o schemacie, <xref:System.Xml.XmlWriter.WriteValue%2A> Metoda zgłasza wyjątek, jeśli próba konwersji na typ, który jest niedozwolony. Jeśli magazyn danych nie ma dostępnych informacji o schemacie, <xref:System.Xml.XmlWriter.WriteValue%2A> Metoda traktuje wszystkie wartości `xsd:anySimpleType` jako typ.  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a>Zamykanie składnika zapisywania XML  
 W przypadku używania <xref:System.Xml.XmlWriter> metod do wyprowadzania kodu XML elementy i atrybuty nie są zapisywane do momentu <xref:System.Xml.XmlWriter.Close%2A> wywołania metody. Na przykład, jeśli używasz <xref:System.Xml.XmlWriter> do <xref:System.Xml.XmlDocument> wypełniania obiektu, nie będzie można zobaczyć elementów i atrybutów pisanych w <xref:System.Xml.XmlWriter> dokumencie docelowym do momentu zamknięcia wystąpienia.  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a>Programowanie asynchroniczne  
 <xref:System.Xml.XmlWriter> Większość metod ma asynchroniczne odpowiedniki, które mają wartość "Async" na końcu nazw metod. Na przykład asynchroniczny odpowiednik <xref:System.Xml.XmlWriter.WriteAttributeString%2A> to. <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>  
  
 Dla metody, która nie ma odpowiednika asynchronicznego, przekonwertuj wartość zwracaną na ciąg i <xref:System.Xml.XmlWriter.WriteStringAsync%2A> Użyj metody zamiast niej. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
<a name="security"></a>   
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 Podczas pracy z <xref:System.Xml.XmlWriter> klasą należy wziąć pod uwagę następujące kwestie:  
  
-   Wyjątki zgłoszone przez <xref:System.Xml.XmlWriter> program mogą ujawniać informacje o ścieżce, które nie mają być rzutowane do aplikacji. Aplikacja musi przechwytywać wyjątki i przetwarzać je odpowiednio.  
  
-   <xref:System.Xml.XmlWriter>nie weryfikuje żadnych danych, które są przesyłane do <xref:System.Xml.XmlWriter.WriteDocType%2A> metody lub. <xref:System.Xml.XmlWriter.WriteRaw%2A> Nie należy przekazywać dowolnych danych do tych metod.  
  
   
  
## Examples  
 Poniższy przykładowy kod pokazuje, jak używać asynchronicznego interfejsu API do generowania kodu XML.  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Dokumenty i dane XML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zamyka ten strumień i źródłowy strumień.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie elementy lub atrybuty pozostawione w otwartym obszarze są automatycznie zamykane.  
  
> [!NOTE]
>  W przypadku używania <xref:System.Xml.XmlWriter> metod do wyprowadzania kodu XML elementy i atrybuty nie będą zapisywane do momentu <xref:System.Xml.XmlWriter.Close%2A> wywołania metody. Na przykład jeśli używasz XmlWriter do wypełniania <xref:System.Xml.XmlDocument>, dopóki nie <xref:System.Xml.XmlWriter>zamkniesz, nie będziesz w stanie obserwować pisanych elementów i atrybutów w dokumencie docelowym.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzeł XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nastąpiło wywołanie zapisu większej ilości danych wyjściowych po <see langword="Close" /> wywołaniu lub wynik tego wywołania jest nieprawidłowym dokumentem XML.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre przeciążenia obejmują parametr, który akceptuje <xref:System.Xml.XmlWriterSettings> obiekt. `settings` <xref:System.Xml.XmlWriter.Create%2A> Można użyć tego obiektu, aby:  
  
-   Określ, które funkcje mają być obsługiwane dla utworzonego <xref:System.Xml.XmlWriter> obiektu.  
  
-   Ponownie Użyj <xref:System.Xml.XmlWriterSettings> obiektu, aby utworzyć wiele obiektów składnika zapisywania. <xref:System.Xml.XmlWriterSettings> Obiekt jest kopiowany i oznaczany jako tylko do odczytu dla każdego utworzonego składnika zapisywania. Zmiany w ustawieniach <xref:System.Xml.XmlWriterSettings> wystąpienia nie mają wpływu na istniejących autorów z tymi samymi ustawieniami. W tym celu można użyć tych samych ustawień, aby utworzyć wiele autorów z tą samą funkcjonalnością. Można też zmodyfikować ustawienia w <xref:System.Xml.XmlWriterSettings> wystąpieniu i utworzyć nowy moduł zapisujący z innym zestawem funkcji.  
  
-   Dodaj funkcje do istniejącego składnika zapisywania XML. Metoda może akceptować inny <xref:System.Xml.XmlWriter>obiekt. <xref:System.Xml.XmlWriter.Create%2A> Obiekt źródłowy <xref:System.Xml.XmlWriter> nie musi być składnikiem zapisywania XML utworzonym za pomocą metody statycznej <xref:System.Xml.XmlWriter.Create%2A> . Na przykład można określić zdefiniowany przez użytkownika moduł zapisujący XML, aby dodać do niego dodatkowe funkcje.  
  
-   W pełni korzystaj z funkcji, takich jak lepsze sprawdzanie zgodności i zgodność z zaleceniem [XML 1,0](https://www.w3.org/TR/2006/REC-xml-20060816/) , które są dostępne tylko dla <xref:System.Xml.XmlWriter> obiektów utworzonych przez metodę statyczną. <xref:System.Xml.XmlWriter.Create%2A>  
  
 Jeśli używasz <xref:System.Xml.XmlWriter.Create%2A> przeciążenia, które nie <xref:System.Xml.XmlWriterSettings> akceptuje obiektu, są używane następujące domyślne ustawienia składnika zapisywania:  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  Chociaż .NET Framework zawiera <xref:System.Xml.XmlTextWriter> klasę, która jest konkretną implementacją <xref:System.Xml.XmlWriter> klasy, zalecamy <xref:System.Xml.XmlWriter.Create%2A> utworzenie <xref:System.Xml.XmlWriter> wystąpień przy użyciu metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">Strumień, do którego chcesz pisać. Składnia <see cref="T:System.Xml.XmlWriter" /> tekstu w formacie XML 1,0 i dołącza je do określonego strumienia.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonego strumienia.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiekt z następującymi ustawieniami domyślnymi jest używany do tworzenia składnika zapisywania XML:  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić funkcje do obsługi w utworzonym składniku zapisywania, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z argumentów, i przekaż <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami niestandardowymi.  
  
 Ponadto element XmlWriter zawsze zapisuje znacznik kolejności bajtów (BOM) do bazowego strumienia danych; Niektóre strumienie nie mogą jednak mieć BOM. Aby pominąć BOM, należy utworzyć nowy <xref:System.Xml.XmlWriterSettings> obiekt i ustawić właściwość Encoding na nowy <xref:System.Text.UTF8Encoding> obiekt o wartości logicznej w konstruktorze ustawionej na wartość false.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci. (Używa <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> przeciążenia, które również konfiguruje ustawienia dla nowego wystąpienia składnika zapisywania XML.)  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">, <see cref="T:System.IO.TextWriter" /> Do którego chcesz pisać. Składnia tekstowa <see cref="T:System.IO.TextWriter" />zapisuXML1,0 i dołącza ją do określonego. <see cref="T:System.Xml.XmlWriter" /></param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonego <see cref="T:System.IO.TextWriter" />elementu.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami domyślnymi jest używany do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić funkcje do obsługi w utworzonym składniku zapisywania, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z argumentów, i przekaż <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami niestandardowymi.  
  
   
  
## Examples  
 Poniższy przykład tworzy składnik zapisywania danych wyjściowych w konsoli programu.  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="outputFileName">Plik, do którego chcesz pisać. <see cref="T:System.Xml.XmlWriter" /> Tworzy plik w określonej ścieżce i zapisuje w nim w składni tekstu XML 1,0. <paramref name="outputFileName" /> Musi to być ścieżka systemu plików.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonej nazwy pliku.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami domyślnymi jest używany do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić funkcje do obsługi dla utworzonego składnika zapisywania XML, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z argumentów, i przekaż <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami niestandardowymi.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt i zapisuje węzeł książki.  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="url" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">, <see cref="T:System.Text.StringBuilder" /> Do którego ma zostać zapisany. Zawartość zapisywana przez <see cref="T:System.Xml.XmlWriter" /> program jest dołączana <see cref="T:System.Text.StringBuilder" />do.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonego <see cref="T:System.Text.StringBuilder" />elementu.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku korzystania z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami domyślnymi jest używany do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić funkcje do obsługi dla utworzonego składnika zapisywania XML, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z argumentów, i przekaż <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami niestandardowymi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="builder" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.Xml.XmlWriter" /> Obiekt, który ma być używany jako źródłowy składnik zapisywania.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonego <see cref="T:System.Xml.XmlWriter" /> obiektu.</summary>
        <returns>Obiekt, który jest opakowany wokół określonego <see cref="T:System.Xml.XmlWriter" /> obiektu. <see cref="T:System.Xml.XmlWriter" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodanie funkcji do obiektu źródłowego <xref:System.Xml.XmlWriter> . Obiekt źródłowy <xref:System.Xml.XmlWriter> może być obiektem utworzonym <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> przez metodę lub obiektem utworzonym przy użyciu <xref:System.Xml.XmlTextWriter> implementacji.  
  
 W przypadku korzystania z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami domyślnymi jest używany do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default>(bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić funkcje do obsługi dla utworzonego składnika zapisywania XML, Użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z argumentów, i przekaż <xref:System.Xml.XmlWriterSettings> obiekt z ustawieniami niestandardowymi.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">Strumień, do którego chcesz pisać. Składnia <see cref="T:System.Xml.XmlWriter" /> tekstu w formacie XML 1,0 i dołącza je do określonego strumienia.</param>
        <param name="settings">Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /> W takim <see langword="null" /> <see cref="T:System.Xml.XmlWriterSettings" /> przypadku używane są ustawienia domyślne.  
  
Jeśli jest używany <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> z metodą <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> , należy użyć właściwości, aby uzyskać <see cref="T:System.Xml.XmlWriterSettings" /> obiekt z prawidłowymi ustawieniami. <see cref="T:System.Xml.XmlWriter" /> Dzięki temu utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu strumienia i <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element XmlWriter zawsze zapisuje znacznik kolejności bajtów (BOM) w źródłowym strumieniu danych; Niektóre strumienie nie mogą jednak mieć BOM. Aby pominąć BOM, należy utworzyć nowy <xref:System.Xml.XmlWriterSettings> obiekt i ustawić właściwość Encoding na nowy <xref:System.Text.UTF8Encoding> obiekt o wartości logicznej w konstruktorze ustawionej na wartość false.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">, <see cref="T:System.IO.TextWriter" /> Do którego chcesz pisać. Składnia tekstowa <see cref="T:System.IO.TextWriter" />zapisuXML1,0 i dołącza ją do określonego. <see cref="T:System.Xml.XmlWriter" /></param>
        <param name="settings">Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /> W takim <see langword="null" /> <see cref="T:System.Xml.XmlWriterSettings" /> przypadku używane są ustawienia domyślne.  
  
Jeśli jest używany <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> z metodą <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> , należy użyć właściwości, aby uzyskać <see cref="T:System.Xml.XmlWriterSettings" /> obiekt z prawidłowymi ustawieniami. <see cref="T:System.Xml.XmlWriter" /> Dzięki temu utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie <see cref="T:System.IO.TextWriter" /> przy użyciu obiektów i <see cref="T:System.Xml.XmlWriterSettings" /> .</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zapisuje ciąg XML.  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (outputFileName, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="outputFileName">Plik, do którego chcesz pisać. <see cref="T:System.Xml.XmlWriter" /> Tworzy plik w określonej ścieżce i zapisuje w nim w składni tekstu XML 1,0. <paramref name="outputFileName" /> Musi to być ścieżka systemu plików.</param>
        <param name="settings">Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /> W takim <see langword="null" /> <see cref="T:System.Xml.XmlWriterSettings" /> przypadku używane są ustawienia domyślne.  
  
Jeśli jest używany <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> z metodą <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> , należy użyć właściwości, aby uzyskać <see cref="T:System.Xml.XmlWriterSettings" /> obiekt z prawidłowymi ustawieniami. <see cref="T:System.Xml.XmlWriter" /> Dzięki temu utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu nazwy pliku i <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt ze zdefiniowanymi ustawieniami.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="url" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output">, <see cref="T:System.Text.StringBuilder" /> Do którego ma zostać zapisany. Zawartość zapisywana przez <see cref="T:System.Xml.XmlWriter" /> program jest dołączana <see cref="T:System.Text.StringBuilder" />do.</param>
        <param name="settings">Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /> W takim <see langword="null" /> <see cref="T:System.Xml.XmlWriterSettings" /> przypadku używane są ustawienia domyślne.  
  
Jeśli jest używany <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> z metodą <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> , należy użyć właściwości, aby uzyskać <see cref="T:System.Xml.XmlWriterSettings" /> obiekt z prawidłowymi ustawieniami. <see cref="T:System.Xml.XmlWriter" /> Dzięki temu utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie <see cref="T:System.Text.StringBuilder" /> przy użyciu obiektów i <see cref="T:System.Xml.XmlWriterSettings" /> .</summary>
        <returns><see cref="T:System.Xml.XmlWriter" /> Obiekt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="builder" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="output"><see cref="T:System.Xml.XmlWriter" /> Obiekt, który ma być używany jako źródłowy składnik zapisywania.</param>
        <param name="settings">Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /> W takim <see langword="null" /> <see cref="T:System.Xml.XmlWriterSettings" /> przypadku używane są ustawienia domyślne.  
  
Jeśli jest używany <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> z metodą <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> , należy użyć właściwości, aby uzyskać <see cref="T:System.Xml.XmlWriterSettings" /> obiekt z prawidłowymi ustawieniami. <see cref="T:System.Xml.XmlWriter" /> Dzięki temu utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma poprawne ustawienia danych wyjściowych.</param>
        <summary>Tworzy nowe <see cref="T:System.Xml.XmlWriter" /> wystąpienie przy użyciu określonych <see cref="T:System.Xml.XmlWriter" /> obiektów i <see cref="T:System.Xml.XmlWriterSettings" /> .</summary>
        <returns>Obiekt, który jest opakowany wokół określonego <see cref="T:System.Xml.XmlWriter" /> obiektu. <see cref="T:System.Xml.XmlWriter" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodanie dodatkowych funkcji do obiektu źródłowego <xref:System.Xml.XmlWriter> . Obiekt źródłowy <xref:System.Xml.XmlWriter> może być obiektem utworzonym <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> przez metodę lub obiektem utworzonym przy użyciu <xref:System.Xml.XmlTextWriter> implementacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> Wartość to<see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Xml.XmlWriter" /> klasę.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie zasoby używane przez bieżące wystąpienie <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" />Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> do zwolnienia tylko zasobów niezarządzanych.</param>
        <summary>Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Xml.XmlWriter" /> program i opcjonalnie zwalnia zarządzane zasoby.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="xmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, opróżnia w buforze do źródłowych strumieni, a także opróżnia strumień źródłowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta funkcja jest wywoływana zamiast <xref:System.Xml.XmlWriter.Close%2A> , gdy chcesz napisać więcej w źródłowym strumieniu bez utraty informacji o tym, co wciąż znajduje się w buforze.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.FlushAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje dwa fragmenty kodu XML.  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie opróżnia w buforze do źródłowych strumieni, a także opróżnia strumień źródłowy.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="Flush" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.Flush%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="xmlWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Identyfikator URI przestrzeni nazw, którego prefiks ma zostać znaleziony.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zwraca najbliższy prefiks zdefiniowany w zakresie bieżącego obszaru nazw dla identyfikatora URI przestrzeni nazw.</summary>
        <returns>W bieżącym zakresie nie <see langword="null" /> znaleziono pasującego prefiksu lub w przypadku braku zgodnego identyfikatora URI przestrzeni nazw.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zapisuje książkę.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ns" /><see langword="null" /> jest<see langword="String.Empty" />albo.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlWriterSettings" Usage="System.Xml.XmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt użyty do utworzenia tego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. <see cref="T:System.Xml.XmlWriterSettings" /></summary>
        <value><see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do utworzenia tego wystąpienia modułu zapisywania. Jeśli ten składnik zapisywania nie został utworzony przy <see cref="Overload:System.Xml.XmlWriter.Create" /> użyciu metody, ta właściwość <see langword="null" />zwraca.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings> Klasa służy do określania zestawu funkcji do obsługi dla utworzonego wystąpienia składnika zapisywania. Nie można zmodyfikować <xref:System.Xml.XmlWriter.Settings%2A> obiektu zwróconego przez właściwość. <xref:System.Xml.XmlWriterSettings> Każda próba zmiany poszczególnych ustawień skutkuje wystąpieniem wyjątku.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.IDisposable.Dispose" />Zobacz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Xml.XmlWriter> gdy wystąpienie jest rzutowane <xref:System.IDisposable> do interfejsu.

Ten element członkowski może zachowywać się inaczej, gdy jest używany w projekcie biblioteki klas przenośnych. Aby uzyskać więcej informacji, zobacz [różnice interfejsu API w przenośnej bibliotece klas](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100)).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributes : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteAttributes : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteAttributes (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">, <see langword="XmlReader" /> Z którego mają zostać skopiowane atrybuty.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne z <see langword="XmlReader" />; w przeciwnym razie,. <see langword="false" /></param>
        <summary>Gdy jest zastępowany w klasie pochodnej, program zapisuje wszystkie atrybuty znajdujące się w bieżącej pozycji w <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli czytnik jest umieszczony w `element` węźle `WriteAttributes` , kopiuje wszystkie zawarte atrybuty. Jeśli czytnik jest umieszczony w `attribute` węźle, ta metoda zapisuje bieżący atrybut, a następnie resztę atrybutów do znacznika zamykającego elementu. Jeśli czytnik jest umieszczony w `XmlDeclaration` węźle, ta metoda zapisuje wszystkie atrybuty w deklaracji. Jeśli czytnik jest umieszczony na dowolnym innym typie węzła, <xref:System.Xml.XmlException>ta metoda zgłasza.  
  
 Jeśli ta metoda jest wywoływana przy <xref:System.Xml.XmlValidatingReader>użyciu, aby zapewnić poprawnie sformułowaną zawartość XML (która została rozwinięta z jednostek), co może spowodować, że nieważny dokument zostanie zamieniony. Na przykład, jeśli atrybut zawiera `&gt;` jednostkę, która została rozwinięta, aby zapewnić poprawnie sformułowany dokument, rozwinięty > jest zastępowany przy użyciu. `&gt;`  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład kopiuje wszystkie elementy do danych wyjściowych, zmienia nazwy tagów na wielkie litery i kopiuje wszystkie atrybuty bez zmian.  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 W przykładzie jest użyty plik, `test1.xml`, jako dane wejściowe.  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">Czytnik nie jest umieszczony w <see langword="element" />węźle, <see langword="attribute" /> ani <see langword="XmlDeclaration" /> .</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributesAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader">, <see langword="XmlReader" /> Z którego mają zostać skopiowane atrybuty.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne z <see langword="XmlReader" />; w przeciwnym razie,. <see langword="false" /></param>
        <summary>Asynchronicznie zapisuje wszystkie atrybuty, które znajdują się w bieżącej pozycji <see cref="T:System.Xml.XmlReader" />w.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteAttributes" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteAttributes%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje atrybut o określonej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje atrybut z określoną nazwą lokalną i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `WriteAttributeString`wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera podwójne lub pojedyncze cudzysłowy, są one zastępowane `&quot;` i `&apos;` odpowiednio.  
  
-   W przypadku pisania `xml:space` atrybutu moduł zapisujący weryfikuje wartość atrybutu jest prawidłowa. (Prawidłowe wartości to `preserve` lub `default`).  
  
-   W przypadku pisania `xml:lang` atrybutu składnik zapisywania nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1,0.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje książkę.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Stan składnika zapisywania to nie <see langword="WriteState.Element" /> lub jest zamknięty.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.ArgumentException">Wartość atrybutu <see langword="xml:lang" />orjestnieprawidłowa. <see langword="xml:space" /></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z atrybutem.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje atrybut z określoną nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje atrybut z prefiksem przestrzeni nazw zdefiniowanym przez użytkownika i kojarzy go z podaną przestrzenią nazw. Jeśli `localName` jest to "xmlns", ta metoda również traktuje ją jako deklarację przestrzeni nazw. W takim przypadku `ns` argument może być `null`.  
  
 `WriteAttributeString`wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera podwójne lub pojedyncze cudzysłowy, są one zastępowane `&quot;` i `&apos;` odpowiednio.  
  
-   W przypadku pisania `xml:space` atrybutu moduł zapisujący weryfikuje wartość atrybutu jest prawidłowa. (Prawidłowe wartości to `preserve` lub `default`).  
  
-   W przypadku pisania `xml:lang` atrybutu składnik zapisywania nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1,0.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metodę zapisu deklaracji przestrzeni nazw.  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Stan składnika zapisywania to nie <see langword="WriteState.Element" /> lub jest zamknięty.

—lub— 
<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.ArgumentException">Wartość atrybutu <see langword="xml:lang" />orjestnieprawidłowa. <see langword="xml:space" /></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje atrybut z określonym prefiksem, nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje atrybut z prefiksem przestrzeni nazw zdefiniowanym przez użytkownika i kojarzy go z podaną przestrzenią nazw. Jeśli prefiks jest "xmlns", ta metoda również traktuje ją jako deklarację przestrzeni nazw i kojarzy zadeklarowany prefiks z identyfikatorem URI przestrzeni nazw podanym w danej wartości atrybutu. W takim przypadku `ns` argument może być `null`.  
  
 `WriteAttributeString`wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera podwójne lub pojedyncze cudzysłowy, są one zastępowane `&quot;` i `&apos;` odpowiednio.  
  
-   W przypadku pisania `xml:space` atrybutu moduł zapisujący weryfikuje wartość atrybutu jest prawidłowa. (Prawidłowe wartości to `preserve` lub `default`).  
  
-   W przypadku pisania `xml:lang` atrybutu składnik zapisywania nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1,0.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metodę zapisu deklaracji przestrzeni nazw.  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Stan składnika zapisywania to nie <see langword="WriteState.Element" /> lub jest zamknięty.

—lub— 
<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.ArgumentException">Wartość atrybutu <see langword="xml:lang" />orjestnieprawidłowa. <see langword="xml:space" /></exception>
        <exception cref="T:System.Xml.XmlException"><paramref name="localName" /> Lub<paramref name="ns" /> jest .<see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributeStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Asynchronicznie zapisuje atrybut z określonym prefiksem, nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteAttributeString" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteAttributeString%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub— 
Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja w buforze wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, koduje określone bajty binarne jako base64 i zapisuje powstały tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład bufor bajtów może zawierać zawartość binarną obrazu GIF. To jasno nie będzie prawidłowy kod XML. `Base64` Kodowanie jest przeznaczone do reprezentowania dowolnej liczby sekwencji bajtów w postaci tekstowej składającej się z znaków 65 US-ASCII ([a-za-Z0-9 +/=]), gdzie każdy znak koduje 6 bitów danych binarnych. Aby uzyskać więcej informacji, zobacz artykuł Request for Comments (RFC) 1521 znajdujący się w [witrynie Request for Comments w sieci Web](https://www.rfc-editor.org).  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Xml.XmlWriter.WriteBase64%2A> metody do zapisu `Base64` danych. Dane są osadzone `<image>` w obrębie elementu. `Base64`  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja w buforze wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Asynchronicznie koduje określone bajty binarne jako base64 i zapisuje otrzymany tekst.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteBase64" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteBase64%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit&#xA;override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja w buforze wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, koduje określone bajty binarne <see langword="BinHex" /> jako i zapisuje powstały tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład używa <xref:System.Xml.XmlWriter.WriteBinHex%2A> metody do zapisu `BinHex` danych. Dane są osadzone `<image>` w obrębie elementu. `BinHex`  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty lub jest w stanie błędu.
—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja w buforze wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Asynchronicznie koduje określone bajty binarne <see langword="BinHex" /> jako i zapisuje otrzymany tekst.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteBinHex" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteBinHex%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCData : string -&gt; unit" Usage="xmlWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać umieszczony wewnątrz bloku CDATA.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje &lt;![CDATA [...]]&gt; bloku zawierających określony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje pusty blok CDATA, na przykład \<! [ CDATA []]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wynikiem może być niewłaściwie sformułowany dokument XML.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCDataAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCDataAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCDataAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać umieszczony wewnątrz bloku CDATA.</param>
        <summary>Zapisuje asynchronicznie &lt;![CDATA [...]]&gt; bloku zawierających określony tekst.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteCData" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteCData%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntity : char -&gt; unit" Usage="xmlWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Znak Unicode, dla którego ma zostać wygenerowana jednostka znaku.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, wymusza generowanie jednostki znaku dla określonej wartości znaku Unicode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje znak Unicode w formacie odwołania do jednostki znaku szesnastkowego.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Znak jest w zakresie <see langword="0xd800" />  - znaków pary zastępczej. <see langword="0xdfff" /></exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharEntityAsync ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ch">Znak Unicode, dla którego ma zostać wygenerowana jednostka znaku.</param>
        <summary>Asynchronicznie wymusza generowanie jednostki znaku dla określonej wartości znaku Unicode.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteCharEntity" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteCharEntity%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst do zapisania.</param>
        <param name="index">Pozycja w buforze wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje tekst jeden bufor w danym momencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do pisania dużych ilości tekstu po jednym buforze naraz.  
  
 Należy wykonać specjalną obsługę, aby upewnić się, że `WriteChars` Metoda nie dzieli znaków dwuskładnikowych między wiele zapisów buforu. Specyfikacja XML definiuje prawidłowe zakresy dla par surogatu.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />; Wywołaj wyniki w postaci dwuskładnikowej pary znaków lub zapisywana jest nieprawidłowa para dwuskładnikowa.</exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="buffer" /> parametru jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharsAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst do zapisania.</param>
        <param name="index">Pozycja w buforze wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Asynchronicznie zapisuje tekst po jednym buforze w danym momencie.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteChars" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteChars%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteComment : string -&gt; unit" Usage="xmlWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do umieszczenia w komentarzu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje komentarz &lt;!--...--&gt; zawierający określony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje komentarz bez zawartości danych, na przykład \<!---->.  
  
 Jeśli `text` zawiera nieprawidłową sekwencję dwóch kresek "-- <xref:System.Xml.XmlWriter> " może zgłosić <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> obiekty) lub wstawić odstęp między kreskami "--", tak aby tekst był prawidłowym komentarzem XML (<xref:System.Xml.XmlWriter> obiekty utworzone przez <xref:System.Xml.XmlWriter.Create%2A> Metoda).  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wynikiem może być niewłaściwie sformułowany dokument XML.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCommentAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCommentAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCommentAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do umieszczenia w komentarzu.</param>
        <summary>Asynchronicznie zapisuje komentarz &lt;!--...--&gt; zawierający określony tekst.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteComment" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteComment%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocType : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu DOCTYPE. To nie może być puste.</param>
        <param name="pubid">Jeśli wartość nie jest równa null, zapisuje także publiczne "pubid" " <paramref name="pubid" /> sysid <paramref name="sysid" /> ", gdzie i są zastępowane wartością danego argumentu.</param>
        <param name="sysid">Jeśli <paramref name="pubid" /> jest <see langword="null" /> <paramref name="sysid" /> i mawartośćróżnąodnull,zapisujesystem"sysid",gdziejestzastępowanawartościątegoargumentu.<paramref name="sysid" /></param>
        <param name="subset">Jeśli nie ma wartości null, zapisuje [podzestaw], w którym podzbiór jest zastępowany wartością tego argumentu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje deklarację DOCTYPE z określoną nazwą i opcjonalnymi atrybutami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie sprawdza pod kątem nieprawidłowych `pubid`znaków `sysid` w `subset`, lub. Nie sprawdza również, czy podzestaw wewnętrzny jest poprawnie sformułowany.  
  
> [!IMPORTANT]
>  Nie sprawdza poprawności danych, które są przesyłane <xref:System.Xml.XmlWriter.WriteDocType%2A> do metody. <xref:System.Xml.XmlWriter> Nie należy przekazywać dowolnych danych do tej metody.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ta metoda została wywołana poza prologem (po elemencie głównym).

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="name" /> spowodowałaby powstanie nieprawidłowego kodu XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteDocTypeAsync (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pubid" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="sysid" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="subset" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu DOCTYPE. To nie może być puste.</param>
        <param name="pubid">Jeśli wartość nie jest równa null, zapisuje także publiczne "pubid" " <paramref name="pubid" /> sysid <paramref name="sysid" /> ", gdzie i są zastępowane wartością danego argumentu.</param>
        <param name="sysid">Jeśli <paramref name="pubid" /> jest <see langword="null" /> <paramref name="sysid" /> i mawartośćróżnąodnull,zapisujesystem"sysid",gdziejestzastępowanawartościątegoargumentu.<paramref name="sysid" /></param>
        <param name="subset">Jeśli nie ma wartości null, zapisuje [podzestaw], w którym podzbiór jest zastępowany wartością tego argumentu.</param>
        <summary>Asynchronicznie zapisuje deklarację DOCTYPE z określoną nazwą i opcjonalnymi atrybutami.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteDocType" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteDocType%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Zapisuje element zawierający wartość ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element z określoną nazwą lokalną i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie kilku metod zapisu w celu utworzenia fragmentu kodu XML.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="localName" /> Wartość jest<see langword="null" /> lub ciągiem pustym.  
  
—lub— 
Wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z elementem.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element z określoną nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono użycie kilku metod zapisu w celu utworzenia fragmentu kodu XML.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="localName" /> Wartość jest<see langword="null" /> lub ciągiem pustym.  
  
—lub— 
Wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks elementu.</param>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw elementu.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element z określonym prefiksem, nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="localName" /> Wartość jest<see langword="null" /> lub ciągiem pustym.  
  
—lub— 
Wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteElementStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks elementu.</param>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw elementu.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Asynchronicznie zapisuje element z określonym prefiksem, nazwą lokalną, identyfikatorem URI przestrzeni nazw i wartością.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteElementString" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteElementString%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttribute : unit -&gt; unit" Usage="xmlWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zamyka poprzednie <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> wywołanie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku wywołania `WriteStartAttribute`, można zamknąć atrybut za pomocą tej metody.  
  
 Możesz również zamknąć atrybut, wywołując `WriteStartAttribute` ponownie, wywołując <xref:System.Xml.XmlWriter.WriteAttributeString%2A>lub wywołując <xref:System.Xml.XmlWriter.WriteEndElement%2A>.  
  
> [!NOTE]
>  W przypadku używania <xref:System.Xml.XmlWriter> metod do wyprowadzania kodu XML elementy i atrybuty nie będą zapisywane do momentu <xref:System.Xml.XmlWriter.Close%2A> wywołania metody. Na przykład jeśli używasz XmlWriter do wypełniania <xref:System.Xml.XmlDocument>, dopóki nie <xref:System.Xml.XmlWriter>zamkniesz, nie będziesz w stanie obserwować pisanych elementów i atrybutów w dokumencie docelowym.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndAttributeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka poprzednie <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> wywołanie.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteEndAttribute" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocument : unit -&gt; unit" Usage="xmlWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zamyka wszystkie otwarte elementy lub atrybuty i umieszcza moduł zapisujący z powrotem w stanie początkowym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  W przypadku używania <xref:System.Xml.XmlWriter> metod do wyprowadzania kodu XML elementy i atrybuty nie będą zapisywane do momentu <xref:System.Xml.XmlWriter.Close%2A> wywołania metody. Na przykład jeśli używasz XmlWriter do wypełniania <xref:System.Xml.XmlDocument>, dopóki nie <xref:System.Xml.XmlWriter>zamkniesz, nie będziesz w stanie obserwować pisanych elementów i atrybutów w dokumencie docelowym.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dokument XML jest nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka wszystkie otwarte elementy lub atrybuty i umieszcza moduł zapisujący z powrotem w stanie początkowym.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteEndDocument" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteEndDocument%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElement : unit -&gt; unit" Usage="xmlWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element nie zawiera żadnej zawartości, zostanie zapisany krótki tag końcowy "/>". w przeciwnym razie zostanie zapisany pełny tag końcowy.  
  
> [!NOTE]
>  W przypadku używania <xref:System.Xml.XmlWriter> metod do wyprowadzania kodu XML elementy i atrybuty nie będą zapisywane do momentu <xref:System.Xml.XmlWriter.Close%2A> wywołania metody. Na przykład jeśli używasz XmlWriter do wypełniania <xref:System.Xml.XmlDocument>, dopóki nie <xref:System.Xml.XmlWriter>zamkniesz, nie będziesz w stanie obserwować pisanych elementów i atrybutów w dokumencie docelowym.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlWriter.WriteEndElement%2A> <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> metody i.  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Powoduje to niewłaściwy dokument XML.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteEndElement" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteEndElement%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRef : string -&gt; unit" Usage="xmlWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do jednostki.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje odwołanie do jednostki jako <see langword="&amp;name;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" /><see langword="null" /> jest<see langword="String.Empty" />albo.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEntityRefAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do jednostki.</param>
        <summary>Asynchronicznie zapisuje odwołanie do jednostki jako <see langword="&amp;name;" />.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteEntityRef" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteEntityRef%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElement : unit -&gt; unit" Usage="xmlWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zawsze zapisuje pełny tag końcowy. Jest to przydatne podczas pracy z elementami, które muszą zawierać pełny tag końcowy. Na przykład przeglądarki oczekują, że bloki skryptu HTML mają być zamknięte\<przy użyciu "/Script >".  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlWriter.WriteEndElement%2A> <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> metody i.  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteFullEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka jeden element i pop odpowiadający zakres przestrzeni nazw.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteFullEndElement" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit&#xA;override this.WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje określoną nazwę, upewniając się, że jest to prawidłowa nazwa zgodnie z zaleceniem XML 1,0 (https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> jest ustawiona na `true`, `WriteName` sprawdza także, czy nazwa jest również prawidłowa zgodnie z zasadami nazw W3C w rekomendacji XML.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest<see langword="String.Empty" />albo <see langword="null" /> .</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNameAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNameAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisania.</param>
        <summary>Asynchronicznie zapisuje określoną nazwę, upewniając się, że jest to prawidłowa nazwa zgodnie z zaleceniem W3C XML 1,0https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)(.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteName" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteName%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit&#xA;override this.WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje określoną nazwę, upewniając się, że jest to prawidłowy element NmToken zgodnie z zaleceniem XML 1,0https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)(.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="name" />nie jest prawidłowym elementem NmToken; lub <paramref name="name" /> jest<see langword="String.Empty" />albo <see langword="null" /> .</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNmTokenAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisania.</param>
        <summary>Asynchronicznie zapisuje określoną nazwę, upewniając się, że jest to prawidłowy element NmToken zgodnie z zaleceniem W3C XMLhttps://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)1,0 (.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteNmToken" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteNmToken%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Kopiuje wszystko z obiektu źródłowego do bieżącego wystąpienia składnika zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteNode (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">, <see cref="T:System.Xml.XmlReader" /> Z którego ma zostać odczytany.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne z <see langword="XmlReader" />; w przeciwnym razie,. <see langword="false" /></param>
        <summary>Gdy jest zastępowany w klasie pochodnej, kopiuje wszystko z czytnika do składnika zapisywania i przenosi czytnik na początek następnego elementu równorzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono obsługiwane typy węzłów dla tej metody.  
  
|NodeType|Zachowanie WriteNode|  
|--------------|------------------------|  
|`None`|Zapisuje wszystkie węzły niezależnie od typu. Oznacza to, że moduł zapisujący korzysta <xref:System.Xml.XmlReader> z i zapisuje wszystkie węzły, takie jak atrybuty, przetwarzanie instrukcji, komentarze itd.<br /><br /> Ta sytuacja występuje, <xref:System.Xml.XmlReader> gdy jest w stanie początkowym. (Zwraca <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> `ReaderState.Initial`Właściwość).|  
|`Element`|Zapisuje węzeł elementu i wszystkie węzły atrybutów.|  
|`Attribute`|Brak operacji. Użyj <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> polecenia <xref:System.Xml.XmlWriter.WriteAttributeString%2A> or.|  
|`Text`|Zapisuje w węźle tekstowym.|  
|`CDATA`|Zapisuje węzeł sekcji CDATA.|  
|`EntityReference`|Zapisuje węzeł odwołania do jednostki.|  
|`ProcessingInstruction`|Zapisuje węzeł instrukcji przetwarzania.|  
|`Comment`|Zapisuje węzeł komentarz.|  
|`DocumentType`|Zapisuje węzeł typ dokumentu.|  
|`SignificantWhitespace`|Zapisuje w nim znaczący biały znak.|  
|`Whitespace`|Zapisuje poza obszarem białych znaków.|  
|`EndElement`|Zapisuje tag elementu końcowego.|  
|`EndEntity`|Brak operacji.|  
|`XmlDeclaration`|Zapisuje węzeł deklaracji XML.|  
  
 Jeśli czytnik jest w stanie początkowym, ta metoda przesuwa czytnik do końca pliku. Jeśli czytnik znajduje się już na końcu pliku lub w stanie zamkniętym, ta metoda nie działa.  
  
 Poniższy C# kod kopiuje cały dokument wejściowy XML do konsoli programu:  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 Jeśli przeniesiono węzeł główny i są one umieszczone w innym miejscu w dokumencie, poniższy C# przykład prawidłowo Zapisuje węzły.  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 Jeśli czytnik jest skonfigurowany do zwracania białych znaków, a moduł zapisujący jest skonfigurowany do tworzenia wcięcia danych `WriteNode` wyjściowych, może generować dziwne dane wyjściowe. Zasadniczo będzie można uzyskać podwójne formatowanie.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje pierwszy i ostatni węzeł książki w konsoli programu.  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 W przykładzie jest użyty plik, `books.xml`, jako dane wejściowe.  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="reader" />zawiera nieprawidłowe znaki.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit" Usage="xmlWriter.WriteNode (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="navigator"><see cref="T:System.Xml.XPath.XPathNavigator" /> Do kopiowania z.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne; w przeciwnym razie. <see langword="false" /></param>
        <summary>Kopiuje wszystko z <see cref="T:System.Xml.XPath.XPathNavigator" /> obiektu do składnika zapisywania. Pozycja <see cref="T:System.Xml.XPath.XPathNavigator" /> pozostaje niezmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono obsługiwane `XPath` typy węzłów dla tej metody.  
  
|XPathNodeType|Zachowanie WriteNode|  
|-------------------|------------------------|  
|`Root`|Zapisuje wszystkie węzły niezależnie od typu. Oznacza to, że moduł zapisujący wykorzystuje <xref:System.Xml.XPath.XPathNavigator> i zapisuje wszystkie węzły z węzła głównego (w tym atrybuty, przetwarzanie instrukcji, komentarze itd.)|  
|`Element`|Zapisuje węzeł elementu i wszystkie węzły atrybutów.|  
|`Attribute`|Brak operacji. Użyj <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> polecenia <xref:System.Xml.XmlWriter.WriteAttributeString%2A> or.|  
|`Text`|Zapisuje w węźle tekstowym.|  
|`Namespace`|Brak operacji. Użyj metody <xref:System.Xml.XmlWriter.WriteAttributeString%2A> lub, aby zapisać deklarację przestrzeni nazw. <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|  
|`ProcessingInstruction`|Zapisuje węzeł instrukcji przetwarzania.|  
|`Comment`|Zapisuje węzeł komentarz.|  
|`SignificantWhitespace`|Zapisuje w nim znaczący biały znak.|  
|`Whitespace`|Zapisuje poza obszarem białych znaków.|  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie zastosowano <xref:System.Xml.XmlWriter.WriteNode%2A> metodę kopiowania pierwszego węzła książki z dokumentu i zapisania go w konsoli programu.  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 W przykładzie zastosowano plik Books. XML jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="navigator" />jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <summary>Asynchronicznie kopiuje wszystko z obiektu źródłowego do bieżącego wystąpienia składnika zapisywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteNode%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader">, <see cref="T:System.Xml.XmlReader" /> Z którego ma zostać odczytany.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne z <see langword="XmlReader" />; w przeciwnym razie,. <see langword="false" /></param>
        <summary>Asynchronicznie kopiuje wszystko z czytnika do składnika zapisywania i przenosi czytelnika na początek następnego elementu równorzędnego.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteNode" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteNode%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="defattr" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="navigator"><see cref="T:System.Xml.XPath.XPathNavigator" /> Do kopiowania z.</param>
        <param name="defattr"><see langword="true" />Aby skopiować atrybuty domyślne; w przeciwnym razie. <see langword="false" /></param>
        <summary>Asynchronicznie kopiuje wszystko z <see cref="T:System.Xml.XPath.XPathNavigator" /> obiektu do składnika zapisywania. Pozycja <see cref="T:System.Xml.XPath.XPathNavigator" /> pozostaje niezmieniona.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteNode" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteNode%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa instrukcji przetwarzania.</param>
        <param name="text">Tekst do uwzględnienia w instrukcji przetwarzania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje instrukcję przetwarzania z odstępem między nazwą i tekstem w następujący sposób: &lt;? nazwa tekstowa?.&gt;</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do pisania deklaracji XML (a nie <xref:System.Xml.XmlWriter.WriteStartDocument%2A>). Może to spowodować, że atrybut kodowania jest niepoprawnie zapisany. Na przykład poniższy C# kod spowoduje nieprawidłowy dokument XML, ponieważ domyślne kodowanie to UTF-8.  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje `ProcessingInstruction` zawartość bez danych, na przykład \<? Name? >.  
  
 Jeśli tekst zawiera nieprawidłową sekwencję "? >", <xref:System.Xml.XmlWriter> może <xref:System.ArgumentException> zgłosić (<xref:System.Xml.XmlTextWriter> obiekty) lub wstawić spację "? > ", aby uniknąć pisania nieprawidłowego kodu XML<xref:System.Xml.XmlWriter> ( <xref:System.Xml.XmlWriter.Create%2A> obiekty utworzone przez metodę).  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wynikiem może być niewłaściwie sformułowany dokument XML.  
  
 <paramref name="name" /><see langword="null" /> jest<see langword="String.Empty" />albo.  
  
Ta metoda jest używana do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> już wywołaniu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteProcessingInstructionAsync (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="text" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa instrukcji przetwarzania.</param>
        <param name="text">Tekst do uwzględnienia w instrukcji przetwarzania.</param>
        <summary>Asynchronicznie zapisuje instrukcję przetwarzania z odstępem między nazwą i tekstem w następujący sposób: &lt;? Nazwij tekst?.&gt;</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteProcessingInstruction" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit&#xA;override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna do zapisu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla nazwy.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje nazwę kwalifikowaną przestrzeni nazw. Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danego obszaru nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` mapuje do bieżącej domyślnej przestrzeni nazw, nie jest generowany żaden prefiks.  
  
 Podczas zapisywania wartości atrybutów ta metoda generuje prefiks, jeśli `ns` nie zostanie znaleziony. Podczas zapisywania zawartości elementu zgłasza wyjątek, jeśli `ns` nie zostanie znaleziony.  
  
> [!NOTE]
>  Jeśli klasa pochodna od <xref:System.Xml.XmlWriter> nie przesłania tej metody `localName` nie jest sprawdzana jako prawidłowa nazwa W3C XML. W takim przypadku przed wywołaniem tej metody ważność ciągu może być sprawdzana przez <xref:System.Xml.XmlReader.IsName%2A> metodę.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.  
  
   
  
## Examples  
 Przykład zapisuje następujący element:  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="localName" /><see langword="null" /> jest<see langword="String.Empty" />albo.  
  
 <paramref name="localName" />nie jest prawidłową nazwą.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteQualifiedNameAsync (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna do zapisu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla nazwy.</param>
        <summary>Asynchronicznie zapisuje nazwę kwalifikowaną przestrzeni nazw. Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danego obszaru nazw.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteQualifiedName" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Gdy jest zastępowany w klasie pochodnej, ręcznie zapisuje pierwotne znaczniki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : string -&gt; unit" Usage="xmlWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">Ciąg zawierający tekst do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, ręcznie zapisuje pierwotne znaczniki z ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie wyprowadza znaków specjalnych.  
  
> [!IMPORTANT]
>  Nie sprawdza poprawności danych, które są przesyłane <xref:System.Xml.XmlWriter.WriteRaw%2A> do metody. <xref:System.Xml.XmlWriter> Nie należy przekazywać dowolnych danych do tej metody.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="data" /><see langword="null" /> jest<see langword="String.Empty" />albo.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst do zapisania.</param>
        <param name="index">Pozycja w buforze wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, ręcznie zapisuje pierwotne znaczniki z buforu znaków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie wyprowadza znaków specjalnych.  
  
> [!IMPORTANT]
>  Nie sprawdza poprawności danych, które są przesyłane <xref:System.Xml.XmlWriter.WriteRaw%2A> do metody. <xref:System.Xml.XmlWriter> Nie należy przekazywać dowolnych danych do tej metody.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" />lub <paramref name="count" /> jest mniejsza od zera.  
  
—lub— 
Długość buforu minus <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczniki ręcznie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteRaw%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="data">Ciąg zawierający tekst do zapisania.</param>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczniki ręcznie z ciągu.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteRaw" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteRaw%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst do zapisania.</param>
        <param name="index">Pozycja w buforze wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczniki ręcznie z buforu znaków.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteRaw" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteRaw%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje początek atrybutu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string -&gt; unit" Usage="xmlWriter.WriteStartAttribute localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <summary>Zapisuje początek atrybutu z określoną nazwą lokalną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia pisanie wartości przy użyciu wielu metod zapisu.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <summary>Zapisuje początek atrybutu z określoną nazwą lokalną i identyfikatorem URI przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to bardziej zaawansowana wersja <xref:System.Xml.XmlWriter.WriteAttributeString%2A> programu, która umożliwia pisanie wartości atrybutów przy użyciu wielu metod zapisu, takich jak <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, i tak dalej.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla atrybutu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje początek atrybutu z określonym prefiksem, nazwą lokalną i identyfikatorem URI przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia pisanie wartości przy użyciu wielu metod zapisu.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartAttributeAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Nazwa lokalna atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla atrybutu.</param>
        <summary>Asynchronicznie zapisuje początek atrybutu z określonym prefiksem, nazwą lokalną i identyfikatorem URI przestrzeni nazw.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteStartAttribute" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje deklarację XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : unit -&gt; unit" Usage="xmlWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, program zapisuje deklarację XML w wersji "1,0".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom kodowania dokumentu jest określany na podstawie sposobu implementacji składnika zapisywania. Na przykład jeśli <xref:System.Text.Encoding> obiekt jest określony `XmlTextWriter` w konstruktorze, określa wartość atrybutu kodowania. Ta metoda nie tworzy atrybutu autonomicznego.  
  
 Gdy `WriteStartDocument` jest wywoływana, walidacja jest sprawdzana w postaci dobrze sformułowanego dokumentu XML. Na przykład sprawdza, czy deklaracja XML jest pierwszym węzłem, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej. Jeśli ta metoda nie zostanie wywołana, moduł zapisujący zakłada, że fragment kodu XML jest zapisywany i nie stosuje reguł poziomu głównego.  
  
 Jeśli `WriteStartDocument` został wywołany, a <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> następnie metoda jest używana do tworzenia innej deklaracji XML, zostanie zgłoszony wyjątek.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie jest to pierwsza metoda zapisu wywołana po konstruktorze.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : bool -&gt; unit" Usage="xmlWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">Jeśli <see langword="true" />, zapisuje "autonomiczne = tak"; w <see langword="false" />przypadku zapisu "Standalone = No".</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, program zapisuje deklarację XML z wersją "1,0" i atrybutem autonomicznym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom kodowania dokumentu jest określany na podstawie sposobu implementacji składnika zapisywania. Na przykład jeśli <xref:System.Text.Encoding> obiekt jest określony `XmlTextWriter` w konstruktorze, określa wartość atrybutu kodowania.  
  
 Gdy `WriteStartDocument` jest wywoływana, składnik zapisywania sprawdza, czy jest to poprawnie sformułowany dokument XML. Na przykład sprawdza, czy deklaracja XML jest pierwszym węzłem, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej. Jeśli ta metoda nie zostanie wywołana, moduł zapisujący zakłada, że fragment kodu XML jest zapisywany i nie stosuje reguł poziomu głównego.  
  
 Jeśli `WriteStartDocument` został wywołany, a <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> następnie metoda jest używana do tworzenia innej deklaracji XML, zostanie zgłoszony wyjątek.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie jest to pierwsza metoda zapisu wywołana po konstruktorze.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <summary>Asynchronicznie zapisuje deklarację XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zapisuje deklarację XML w wersji "1,0".</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteStartDocument" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="standalone">Jeśli <see langword="true" />, zapisuje "autonomiczne = tak"; w <see langword="false" />przypadku zapisu "Standalone = No".</param>
        <summary>Asynchronicznie zapisuje deklarację XML przy użyciu wersji "1,0" i atrybutu autonomicznego.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteStartDocument" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje określony tag początkowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string -&gt; unit" Usage="xmlWriter.WriteStartElement localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje tag początkowy z określoną nazwą lokalną.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzeł XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z elementem. Jeśli ta przestrzeń nazw jest już w zakresie i ma skojarzony prefiks, moduł zapisujący automatycznie zapisuje ten prefiks.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje określony tag początkowy i kojarzy ją z podaną przestrzenią nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody można zapisywać atrybuty lub tworzyć zawartość przy użyciu <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>lub `WriteStartElement` dla elementów podrzędnych. Można zamknąć element przy użyciu <xref:System.Xml.XmlWriter.WriteEndElement%2A> albo lub. <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> Na przykład następujący C# kod:  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 Generuje następujące dane wyjściowe:  
  
```xml  
<item>some text</item>  
```  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElement : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw elementu.</param>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z elementem.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje określony tag początkowy i kojarzy go z podaną przestrzenią nazw i prefiksem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <exception cref="T:System.Text.EncoderFallbackException">W buforze znajduje się znak, który jest prawidłowym znakiem XML, ale jest nieprawidłowy dla kodowania danych wyjściowych. Na przykład, Jeśli kodowanie danych wyjściowych jest ASCII, należy używać tylko znaków z zakresu od 0 do 127 dla nazw elementów i atrybutów. Nieprawidłowy znak może być argumentem tej metody lub argumentem poprzednich metod, które były zapisywane w buforze. Takie znaki są wyprowadzane przez odwołania do jednostek znaków, gdy jest to możliwe (na przykład w węzłach tekstowych lub wartościach atrybutów). Jednak odwołanie do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarzach, instrukcjach przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartElementAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ns" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw elementu.</param>
        <param name="localName">Nazwa lokalna elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z elementem.</param>
        <summary>Asynchronicznie zapisuje określony tag początkowy i kojarzy go z podaną przestrzenią nazw i prefiksem.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteStartElement" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteStartElement%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, Pobiera stan składnika zapisywania.</summary>
        <value>Jedna z <see cref="T:System.Xml.WriteState" /> wartości.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteString : string -&gt; unit" Usage="xmlWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do zapisania.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje daną zawartość tekstową.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `WriteString`wykonuje następujące czynności:  
  
-   Znaki `&`, `<`i `&amp;` `&lt;`są zastępowane odpowiednio,, i`&gt;`. `>`  
  
-   Domyślnym zachowaniem <xref:System.Xml.XmlWriter> utworzonego elementu using <xref:System.Xml.XmlWriter.Create%2A> jest wygenerowanie <xref:System.ArgumentException> podczas próby zapisu wartości znakowych w zakresie 0x-0x1F (z wyjątkiem białych znaków 0x9, 0xA i 0xd). Te nieprawidłowe znaki XML można zapisać, tworząc <xref:System.Xml.XmlWriter> <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> właściwość z właściwością ustawioną na `false`. Spowoduje to zamianę znaków na jednostki znaków numerycznych (&\#0; za pomocą & #0x1F). Ponadto, <xref:System.Xml.XmlTextWriter> utworzony `new` za pomocą operatora zastąpią nieprawidłowe znaki z jednostkami znaku liczbowego domyślnie.  
  
 **Uwaga** Firma Microsoft nie zachęca do stosowania nieprawidłowych znaków XML, ponieważ wiele aplikacji korzystających z kodu XML nie jest przeznaczonych do obsługi nieprawidłowych znaków.  
  
-   Jeśli `WriteString` jest wywoływana w kontekście wartości atrybutu, podwójne i pojedyncze cudzysłowy są `&quot;` zastępowane i `&apos;` odpowiednio.  
  
 Na przykład ten ciąg `test<item>test` wejściowy jest zapisywana jako  
  
```  
test&lt;item&gt;test  
```  
  
 Jeśli `text` parametr ma `null` wartość `String.Empty`lub, ta metoda zapisuje węzeł tekstowy bez zawartości danych.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzeł XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ciąg tekstowy zawiera nieprawidłową parę surogatu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteStringAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStringAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStringAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do zapisania.</param>
        <summary>Asynchronicznie zapisuje daną zawartość tekstową.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteString" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteString%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">Mały Surogat. Musi to być wartość z zakresu od 0xDC00 do 0xDFFF.</param>
        <param name="highChar">Duży Surogat. Musi to być wartość z zakresu od 0xD800 do 0xDBFF.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, generuje i zapisuje jednostkę znaku dwuskładnikowego dla pary znaków zastępczych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma zastosowanie tylko w systemach używających kodowania UTF-16.  
  
 Jednostka znaku dwuskładnikowego jest zapisywana w formacie szesnastkowym. Zakres znaków zastępczych jest #x10000, aby #x10FFFF. Następująca formuła służy do generowania jednostkowego znaku dwuskładnikowego: (`highChar` -0xD800) * 0x400 + (`lowChar` -0xDC00) + 0x10000  
  
 W przypadku języków HTML i XML zestaw znaków dokumentu (i w związku z tym notacja odwołań do znaków numerycznych) jest oparty na protokole UCS [ISO-10646]. W przypadku jednego odwołania do znaku numerycznego w dokumencie źródłowym mogą być w niektórych przypadkach odnoszące się do 2 16-bitowych jednostek w ciągu (duży Surogat i niski Surogat). Te 16-bitowe jednostki są określane jako para dwuskładnikowa.  
  
 Aby uzyskać więcej informacji na temat surogatów lub znaków, zapoznaj się z sekcją 3,7 standardu Unicode 3.0/ <https://www.unicode.org>Unicode 2,0, który znajduje się w [sekcji 2,2 XML 1,0](https://www.w3.org/TR/REC-xml#charsets).  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Przekazano nieprawidłową parę znaków dwuskładnikowych.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteSurrogateCharEntityAsync (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="highChar" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="lowChar">Mały Surogat. Musi to być wartość z zakresu od 0xDC00 do 0xDFFF.</param>
        <param name="highChar">Duży Surogat. Musi to być wartość z zakresu od 0xD800 do 0xDBFF.</param>
        <summary>Asynchronicznie generuje i zapisuje jednostkę znaku dwuskładnikowego dla pary znaków zastępczych.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteSurrogateCharEntity" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
        <summary>Zapisuje pojedynczą wartość o typie prostym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda akceptuje wartości typu prostego środowiska uruchomieniowego języka wspólnego (CLR), konwertuje je na ich reprezentacje ciągów zgodnie z regułami konwersji typów danych XML schematu definicji języka (XSD) i zapisuje je za pomocą <xref:System.Xml.XmlWriter.WriteString%2A> <xref:System.Xml.XmlWriter.WriteValue%2A> Method. Pozwala to na popotokowanie wartości typu prostego z minimalnymi obciążeniami ponownej analizy podczas <xref:System.Xml.XPath.XPathDocument>przekazywania <xref:System.Xml.XmlReader>danych między <xref:System.Xml.XmlWriter> obiektami, i. Ta możliwość jest również przydatna podczas pracy z prostymi typami CLR i <xref:System.Xml.XmlWriter> wystąpieniem. Można wywołać metodę, <xref:System.Xml.XmlWriter.WriteValue%2A> aby napisać wartość wpisaną zamiast użyć metod <xref:System.Xml.XmlConvert> w klasie w celu przekonwertowania wpisanych danych na wartość ciągu przed ich zapisaniem.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość <xref:System.Xml.XmlWriter.WriteValue%2A> zwracaną na ciąg i <xref:System.Xml.XmlWriter.WriteStringAsync%2A> Użyj metody.  
  
 W poniższej tabeli przedstawiono domyślne typy danych XSD, które odpowiadają typom CLR.  
  
 Jeśli obiekt CLR jest typem listy, <xref:System.Collections.IEnumerable> <xref:System.Collections.IList>na przykład,, lub <xref:System.Collections.ICollection>, jest traktowany jako tablica typu wartości.  
  
|Typ CLR|Domyślny typ danych XSD|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|XSD: wartość logiczna|  
|<xref:System.Byte?displayProperty=nameWithType>**|XSD: integer|  
|<xref:System.Byte?displayProperty=nameWithType>macierzy|xsd:base64Binary|  
|<xref:System.Char?displayProperty=nameWithType>**|XSD: String|  
|<xref:System.DateTime?displayProperty=nameWithType>|xsd:dateTime|  
|<xref:System.Decimal?displayProperty=nameWithType>|xsd:decimal|  
|<xref:System.Double?displayProperty=nameWithType>|XSD: Double|  
|<xref:System.Int16?displayProperty=nameWithType>**|XSD: integer|  
|<xref:System.Int32?displayProperty=nameWithType>|XSD: integer|  
|<xref:System.Int64?displayProperty=nameWithType>|XSD: integer|  
|<xref:System.Single?displayProperty=nameWithType>|XSD: float|  
|<xref:System.String?displayProperty=nameWithType>|XSD: String|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|XSD: String|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|xsd:base64Binary|  
  
 * * Te typy nie są zgodne ze specyfikacją CLS. Nie mają odpowiednich <xref:System.Xml.XmlWriter.WriteValue%2A> metod.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : bool -&gt; unit&#xA;override this.WriteValue : bool -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Boolean" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.Boolean" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTime -&gt; unit&#xA;override this.WriteValue : DateTime -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.DateTime" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.DateTime" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzeł książki przy użyciu danych wpisanych.  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTimeOffset -&gt; unit&#xA;override this.WriteValue : DateTimeOffset -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.DateTimeOffset" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.DateTimeOffset" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : decimal -&gt; unit&#xA;override this.WriteValue : decimal -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Decimal" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.Decimal" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : double -&gt; unit&#xA;override this.WriteValue : double -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Double" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.Double" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzeł książki przy użyciu danych wpisanych.  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int -&gt; unit&#xA;override this.WriteValue : int -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Int32" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.Int32" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int64 -&gt; unit&#xA;override this.WriteValue : int64 -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Int64" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.Int64" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit&#xA;override this.WriteValue : obj -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Wartość obiektu do zapisania.  
  
 **Uwaga** W przypadku wydania .NET Framework 3,5 Metoda ta akceptuje <see cref="T:System.DateTimeOffset" /> jako parametr.</param>
        <summary>Zapisuje wartość obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego (CLR) i konwertuje wartość wejściową na żądany typ danych wyjściowych przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Jeśli obiekt CLR jest typem <xref:System.Collections.IEnumerable>listy, <xref:System.Collections.IList>na przykład,, lub <xref:System.Collections.ICollection>, jest traktowany jako tablica typu wartości. Konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i zapisuje je <xref:System.Xml.XmlWriter.WriteString%2A> za pomocą metody. <xref:System.Xml.XmlWriter>  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> Ma<see langword="null" />wartość.</exception>
        <exception cref="T:System.InvalidOperationException">Składnik zapisywania jest zamknięty lub jest w stanie błędu.

—lub—

<see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : single -&gt; unit&#xA;override this.WriteValue : single -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value">Liczba zmiennoprzecinkowa pojedynczej precyzji do zapisu.</param>
        <summary>Zapisuje liczbę zmiennoprzecinkową o pojedynczej precyzji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Gdy metoda jest wywoływana <xref:System.Xml.XmlWriter> , konwertuje wartość na jej reprezentacje ciągów zgodnie z regułami typu danych schematu XML (XSD) i <xref:System.Xml.XmlWriter.WriteString%2A> zapisuje je za pomocą metody. <xref:System.Xml.XmlWriter.WriteValue%2A>  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych Konwertuj wartość zwracaną tej metody na ciąg i Użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : string -&gt; unit&#xA;override this.WriteValue : string -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.String" /> Wartość do zapisania.</param>
        <summary><see cref="T:System.String" /> Zapisuje wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiekt środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściową na żądany typ wyjściowy przy użyciu reguł konwersji typu danych XML schematu definicji języka (XSD).  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywoływana wiele razy, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między <xref:System.Xml.XmlWriter.WriteValue%2A> wywołaniami, aby wstawić biały znak. Przekaż typ tablicy do przeciążenia, <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> aby zapisać tablicę unikatowych wartości.  
  
 Jeśli ta metoda jest wywoływana w <xref:System.Xml.XmlWriter> wystąpieniu, które wyprowadza tylko tekst, wartością wpisaną jest Serializacja do tekstu.  
  
 W przypadku operacji asynchronicznych należy <xref:System.Xml.XmlWriter.WriteStringAsync%2A> użyć metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespace : string -&gt; unit" Usage="xmlWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">Ciąg znaków odstępu.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, zapisuje dany biały znak.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do ręcznego formatowania dokumentu.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ciąg zawiera znaki niebędące znakami odstępu.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteWhitespaceAsync ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ws">Ciąg znaków odstępu.</param>
        <summary>Asynchronicznie zapisuje dane z danego odstępu.</summary>
        <returns>Zadanie, które reprezentuje operację asynchroniczną <see langword="WriteWhitespace" /> .</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlWriter.WriteWhitespace%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".

—lub—

Metoda asynchroniczna została wywołana bez <see cref="P:System.Xml.XmlWriterSettings.Async" /> ustawienia flagi na <see langword="true" />. <see cref="T:System.Xml.XmlWriter" /> W tym przypadku jest <see cref="T:System.InvalidOperationException" /> generowane z komunikatem "Ustaw XmlWriterSettings. Async to true, jeśli chcesz użyć metod asynchronicznych".</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera bieżący <see langword="xml:lang" /> zakres.</summary>
        <value>Bieżący <see langword="xml:lang" /> zakres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia jednemu składnikowi znalezienie informacji o stanie, w którym inny składnik opuścił składnik zapisywania. Na przykład, być może jeden składnik chce powiedzieć inny język tekstu pomocy do wygenerowania. Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, pobiera <see cref="T:System.Xml.XmlSpace" /> reprezentuje bieżący <see langword="xml:space" /> zakres.</summary>
        <value>Reprezentujący bieżący <see langword="xml:space" />zakres. <see langword="XmlSpace" />  
  
 <list type="table"><listheader><term> Wartość 
 </term><description> Znaczenie 
 </description></listheader><item><term><see langword="None" /></term><description> Jest to wartość domyślna, jeśli <see langword="xml:space" /> nie istnieje żaden zakres.  
  
 </description></item><item><term><see langword="Default" /></term><description> Bieżący zakres to <see langword="xml:space" />= "domyślny".  
  
 </description></item><item><term><see langword="Preserve" /></term><description> Bieżący zakres to <see langword="xml:space" />= "preserve".  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pozwala to jednemu składnikowi dowiedzieć się, jaki stan inny składnik opuścił moduł zapisujący.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W tym przypadku <see cref="T:System.InvalidOperationException" /> jest generowane z komunikatem "asynchroniczna operacja jest już w toku".</exception>
      </Docs>
    </Member>
  </Members>
</Type>
