<Type Name="XmlWriter" FullName="System.Xml.XmlWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faeaca36aae3d66cdb1bac1d23a58482295b2b99" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36435030" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class XmlWriter : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlWriter extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlWriter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriter abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type XmlWriter = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Reprezentuje edytor, który umożliwia szybkie, niebuforowanym, tylko do przodu generować strumienie lub pliki, które zawierają dane XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Klasy zapisuje dane XML do strumienia, pliku, czytnika tekstu lub ciąg. Obsługuje ona W3C [języka XML (Extensible Markup) 1.0 (czwarty edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) i [przestrzeniach nazw XML 1.0 (trzeci edition)](https://www.w3.org/TR/REC-xml-names/) zalecenia.  
  
 Elementy członkowskie <xref:System.Xml.XmlWriter> klasy umożliwiają:  
  
-   Sprawdź, czy znaki są prawidłowe znaki XML i elementu i nazwach atrybutów jest prawidłowe nazwy XML.  
  
-   Sprawdź, czy poprawnie sformułowany dokument XML.  
  
-   Kodowanie binarne bajty jako Base64 lub BinHex i wpisywanie tekstu.  
  
-   Przekaż wartości przy użyciu popularnych typów środowiska wykonawczego języka zamiast ciągów, aby uniknąć konieczności ręcznie przeprowadzić konwersji wartości.  
  
-   Zapis wielu dokumentów do jednego strumienia wyjściowego.  
  
-   Wpisz prawidłowe nazwy kwalifikowane nazwy i nazwa tokenów.  
  
 W tej sekcji:  
  
 [Tworzenie edytora XML](#create)   
 [Określanie format danych wyjściowych](#output)   
 [Zgodność danych](#conformance)   
 [Zapisywanie elementów](#writing_elements)   
 [Zapisywanie atrybutów](#writing_attributes)   
 [Obsługa przestrzenie nazw](#handling_ns)   
 [Zapisywanie typu danych](#writing_types)   
 [Zamykanie składnika zapisywania XML](#close)   
 [Programowanie asynchroniczne](#async)   
 [Zagadnienia dotyczące zabezpieczeń](#security)  
  
<a name="create"></a>   
## <a name="creating-an-xml-writer"></a>Tworzenie edytora XML  
 Aby utworzyć <xref:System.Xml.XmlWriter> wystąpienia, należy użyć <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metody. Aby określić zestaw funkcji, które chcesz włączyć w edytorze XML, Przekaż <xref:System.Xml.XmlWriterSettings> do <xref:System.Xml.XmlWriter.Create%2A> metody. W przeciwnym razie są używane ustawienia domyślne. Zobacz <xref:System.Xml.XmlWriter.Create%2A> odwołanie strony, aby uzyskać szczegółowe informacje.  
  
<a name="output"></a>   
## <a name="specifying-the-output-format"></a>Określanie format danych wyjściowych  
 <xref:System.Xml.XmlWriterSettings> Klasa zawiera kilka właściwości, które kontrolują sposób <xref:System.Xml.XmlWriter> ma format wyjściowy:  
  
|Właściwość|Opis|  
|--------------|-----------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Określa kodowanie tekstu. Wartość domyślna to `Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Wskazuje, czy stosować wcięcia elementów. Wartość domyślna to `false` (nie wcięcia).|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Określa ciąg znaków do użycia podczas tworzenia wcięć. Wartość domyślna to dwóch spacji.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Określa ciąg znaków na potrzeby podziały wiersza. Wartość domyślna to `\r\n` (powrotu karetki, wysuwu wiersza).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Określa sposób obsługi znaki nowego wiersza.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Wskazuje, czy należy zapisywać atrybuty w nowym wierszu. <xref:System.Xml.XmlWriterSettings.Indent%2A> należy wybrać opcję `true` przy użyciu tej właściwości. Wartość domyślna to `false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Wskazuje, czy można zapisać deklaracji XML. Wartość domyślna to `false`.|  
  
 <xref:System.Xml.XmlWriterSettings.Indent%2A> i <xref:System.Xml.XmlWriterSettings.IndentChars%2A> właściwości formantu jak nieważny biały znak jest sformatowany. Na przykład, aby zmniejszyć wcięcia węzłów elementów:  
  
 [!code-csharp[XmlWriter_v2#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#8)]
 [!code-vb[XmlWriter_v2#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#8)]  
  
 Użyj <xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A> zapisu każdego atrybutu w nowym wierszu o jeden poziom dodatkowego wcięcia:  
  
 [!code-csharp[XmlWriter_v2#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#9)]
 [!code-vb[XmlWriter_v2#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#9)]  
  
<a name="conformance"></a>   
## <a name="data-conformance"></a>Zgodność danych  
 Edytora XML używa dwóch właściwości z <xref:System.Xml.XmlWriterSettings> klasy, aby sprawdzić zgodność danych:  
  
-   <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> Instruuje edytora XML, aby sprawdzać znaki i zgłosić <xref:System.Xml.XmlException> wyjątek, jeśli wszystkie znaki spoza dopuszczalnego zakresu, zgodnie z definicją W3C.  
  
-   <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> Właściwość konfiguruje edytora XML, aby sprawdzić, czy strumień zapisywana jest zgodny z zasady poprawnie sformułowany dokument XML 1.0 lub fragment dokumentu, zgodnie z definicją W3C. W poniższej tabeli opisano zgodność trzy poziomy. Wartość domyślna to <xref:System.Xml.ConformanceLevel.Document>. Aby uzyskać więcej informacji, zobacz <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> właściwości i <xref:System.Xml.ConformanceLevel?displayProperty=nameWithType> wyliczenia.  
  
    |Poziom|Opis|  
    |-----------|-----------------|  
    |<xref:System.Xml.ConformanceLevel.Document>|Dane wyjściowe XML zgodne z regułami dotyczącymi poprawnie sformułowany dokument XML 1.0 i mogą być przetwarzane przez dowolnego zgodnych procesora.|  
    |<xref:System.Xml.ConformanceLevel.Fragment>|Dane wyjściowe XML jest zgodny z regułami dotyczącymi poprawnie sformułowanym fragmentem dokumentu XML 1.0.|  
    |<xref:System.Xml.ConformanceLevel.Auto>|Edytora XML określa poziom budowy sprawdzanie dotyczyć (dokument lub fragmentu) na podstawie danych przychodzących.|  
  
<a name="writing_elements"></a>   
## <a name="writing-elements"></a>Zapisywanie elementów  
 Można użyć następujących <xref:System.Xml.XmlWriter> metody zapisu węzłów elementów. Przykłady można znaleźć metody wymienione.  
  
|Zastosowanie|Do|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteElementString%2A>|Zapis węzła cały element, w tym wartość ciągu.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>|Aby zapisać wartości elementu przy użyciu wielu wywołań metody.  Na przykład można wywołać <xref:System.Xml.XmlWriter.WriteValue%2A> można zapisać typu wartości, <xref:System.Xml.XmlWriter.WriteCharEntity%2A> można zapisać do jednostki znaku <xref:System.Xml.XmlWriter.WriteAttributeString%2A> może zapisywać do zapisania atrybutu lub elementu podrzędnego. Jest to bardziej zaawansowanych wersji <xref:System.Xml.XmlWriter.WriteElementString%2A> metody.<br /><br /> Aby zamknąć element, należy wywołać <xref:System.Xml.XmlWriter.WriteEndElement%2A> lub <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> metody.|  
|<xref:System.Xml.XmlWriter.WriteNode%2A>|Aby skopiować węzeł elementu znaleziono bieżącego położenia <xref:System.Xml.XmlReader> lub <xref:System.Xml.XPath.XPathNavigator> obiektu. Po wywołaniu, kopiuje wszystkie elementy z obiektu źródłowego do <xref:System.Xml.XmlWriter> wystąpienia.|  
  
<a name="writing_attributes"></a>   
## <a name="writing-attributes"></a>Zapisywanie atrybutów  
 Można użyć następujących <xref:System.Xml.XmlWriter> metody zapisu atrybutów na węzłów elementów. Te metody mogą służyć do tworzenia deklaracji przestrzeni nazw w elemencie, zgodnie z opisem w następnej sekcji.  
  
|Zastosowanie|Do|  
|---------|--------|  
|<xref:System.Xml.XmlWriter.WriteAttributeString%2A>|Aby zapisać węzła atrybutu całego, łącznie z wartością ciągu.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>|Aby zapisać wartości atrybutu za pomocą wielu wywołań metody. Na przykład można wywołać <xref:System.Xml.XmlWriter.WriteValue%2A> można zapisać typu wartości. Jest to bardziej zaawansowanych wersji <xref:System.Xml.XmlWriter.WriteElementString%2A> metody.<br /><br /> Aby zamknąć element, należy wywołać <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> metody.|  
|<xref:System.Xml.XmlWriter.WriteAttributes%2A>|Aby skopiować wszystkie atrybuty znaleziono bieżącego położenia <xref:System.Xml.XmlReader> obiektu. Atrybuty, które są zapisywane są zależne od typu węzła, który czytnik aktualnie znajduje się na:<br /><br /> — Dla węzła atrybutu; zapisuje bieżący atrybut i pozostałe atrybuty do tagu zamykającego elementu.<br />— Dla węzła elementu zapisuje wszystkie atrybuty zawarte w elemencie.<br />— Dla węzła deklaracji XML zapisuje wszystkie atrybuty w deklaracji.<br />— Dla wszystkich innych typów węzła metoda zgłasza wyjątek.|  
  
<a name="handling_ns"></a>   
## <a name="handling-namespaces"></a>Obsługa przestrzenie nazw  
 Przestrzenie nazw są używane do kwalifikowania nazw elementów i atrybutów w dokumencie XML. Prefiksy Namespace skojarzyć elementy i atrybuty z przestrzeni nazw, który z kolei skojarzone z odwołaniami do identyfikatora URI. Przestrzenie nazw utworzyć unikatowość nazwy elementów i atrybutów w dokumencie XML.  
  
 <xref:System.Xml.XmlWriter> Przechowuje stosu przestrzeni nazw, która odnosi się do wszystkich obszarów nazw zdefiniowanych w bieżącym zakresie przestrzeni nazw. Podczas zapisywania elementów i atrybutów może korzystać z przestrzeni nazw, w następujący sposób:  
  
-   Deklarowanie przestrzeni nazw ręcznie za pomocą <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metody. Może to być przydatne, gdy wiesz, jak najlepiej zoptymalizować ilość deklaracji przestrzeni nazw. Na przykład zobacz <xref:System.Xml.XmlWriter.WriteAttributeString%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> metody.  
  
-   Zastąp bieżący deklaracja przestrzeni nazw z nowej przestrzeni nazw. W poniższym kodzie <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metoda zmienia identyfikator URI przestrzeni nazw dla `"x"` prefiksu z `"123"` do `"abc"`.  
  
     [!code-csharp[XmlWriter_v2#18](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#18)]
     [!code-vb[XmlWriter_v2#18](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#18)]  
  
     Kod generuje następujący ciąg XML:  
  
    ```xml  
    <x:root xmlns:x="123">  
      <item xmlns:x="abc" />  
    </x:root>  
    ```  
  
-   Określ prefiks przestrzeni nazw podczas zapisywania atrybutów ani elementów. Włączyć wiele metod używany do zapisywania elementów i atrybutów w tym celu. Na przykład <xref:System.Xml.XmlWriter.WriteStartElement%28System.String%2CSystem.String%2CSystem.String%29> metody zapisuje tagiem początkowym i kojarzy ją z określonego obszaru nazw i prefiksu.  
  
<a name="writing_types"></a>   
## <a name="writing-typed-data"></a>Zapisywanie typu danych  
 <xref:System.Xml.XmlWriter.WriteValue%2A> Metody akceptuje obiekt środowiska uruchomieniowego (języka wspólnego CLR) języka wspólnego, konwertuje wartość wejściowa do reprezentacji ciągu zgodnie z definicji schematu XML (XSD) języka reguły konwersji typów danych i zapisuje go w limit przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody. To jest łatwiejsze niż przy użyciu metod w <xref:System.Xml.XmlConvert> klasy w celu przekonwertowania wprowadzonych danych na ciąg przed jej zapisywania.  
  
 Podczas zapisywania tekstu, wartość jest serializowany na tekst za pomocą <xref:System.Xml.XmlConvert> reguł dla tego typu schematu.  
  
 Aby uzyskać domyślne typy danych XSD, odpowiadające typy CLR, zobacz <xref:System.Xml.XmlWriter.WriteValue%2A> metody.  
  
 <xref:System.Xml.XmlWriter> Można także zapisać w magazynie danych XML. Na przykład <xref:System.Xml.XPath.XPathNavigator> można utworzyć klasy <xref:System.Xml.XmlWriter> obiekt, aby utworzyć węzły <xref:System.Xml.XmlDocument> obiektu. Jeśli magazyn danych jest dostępne, informacje o schemacie <xref:System.Xml.XmlWriter.WriteValue%2A> metoda zgłasza wyjątek, jeśli można przekonwertować na typ, który nie jest dozwolone. Jeśli magazyn danych nie jest dostępne, informacje o schemacie <xref:System.Xml.XmlWriter.WriteValue%2A> metody traktuje wszystkie wartości jako `xsd:anySimpleType` typu.  
  
<a name="close"></a>   
## <a name="closing-the-xml-writer"></a>Zamykanie składnika zapisywania XML  
 Jeśli używasz <xref:System.Xml.XmlWriter> metod do wyjściowego XML, elementy i atrybuty nie są zapisywane do czasu wywołania <xref:System.Xml.XmlWriter.Close%2A> metody. Na przykład, jeśli używasz <xref:System.Xml.XmlWriter> do wypełnienia <xref:System.Xml.XmlDocument> obiektu, nie będzie można zobaczyć napisane elementów i atrybutów w dokumencie docelowym, do czasu zamknięcia <xref:System.Xml.XmlWriter> wystąpienia.  
  
<a name="async"></a>   
## <a name="asynchronous-programming"></a>Programowanie asynchroniczne  
 Większość <xref:System.Xml.XmlWriter> metody mają asynchroniczne odpowiedników, których "Async" na końcu nazwy metody. Na przykład asynchroniczne odpowiednikiem <xref:System.Xml.XmlWriter.WriteAttributeString%2A> jest <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
 Dla <xref:System.Xml.XmlWriter.WriteValue%2A> metodę, która nie ma odpowiednika asynchroniczne, wartość zwracana jest skonwertowana do ciągu i użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody zamiast tego.  
  
<a name="security"></a>   
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 Należy rozważyć podczas pracy z <xref:System.Xml.XmlWriter> klasy:  
  
-   Wyjątki generowane przez <xref:System.Xml.XmlWriter> może ujawnić informacje o ścieżce, który nie ma przepuszcza do aplikacji. Aplikacji należy przechwytywać wyjątki i odpowiednio je przetworzyć.  
  
-   <xref:System.Xml.XmlWriter> Nie można zweryfikować żadnych danych, który jest przekazywany do <xref:System.Xml.XmlWriter.WriteDocType%2A> lub <xref:System.Xml.XmlWriter.WriteRaw%2A> metody. Nie należy przekazać dowolne dane do tych metod.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób generowanie kodu XML za pomocą asynchronicznego interfejsu API.  
  
```csharp  
async Task TestWriter(Stream stream)   
{  
    XmlWriterSettings settings = new XmlWriterSettings();  
    settings.Async = true;  
  
    using (XmlWriter writer = XmlWriter.Create(stream, settings)) {  
        await writer.WriteStartElementAsync("pf", "root", "http://ns");  
        await writer.WriteStartElementAsync(null, "sub", null);  
        await writer.WriteAttributeStringAsync(null, "att", null, "val");  
        await writer.WriteStringAsync("text");  
        await writer.WriteEndElementAsync();  
        await writer.WriteProcessingInstructionAsync("pName", "pValue");  
        await writer.WriteCommentAsync("cValue");  
        await writer.WriteCDataAsync("cdata value");  
        await writer.WriteEndElementAsync();  
        await writer.FlushAsync();  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zamyka tego strumienia i podstawowego strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie elementy lub atrybuty otwarte automatycznie zamknięte.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> metod do wyjściowego XML, elementy i atrybuty nie będą zapisywane do czasu wywołania <xref:System.Xml.XmlWriter.Close%2A> metody. Na przykład, jeśli używasz Element XmlWriter, aby wypełnić <xref:System.Xml.XmlDocument>, do czasu zamknięcia <xref:System.Xml.XmlWriter>, nie można obserwować napisane elementów i atrybutów w dokumencie docelowym.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzła XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy nową <see cref="T:System.Xml.XmlWriter" /> wystąpienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre <xref:System.Xml.XmlWriter.Create%2A> obejmują przeciążenia `settings` parametr, który akceptuje <xref:System.Xml.XmlWriterSettings> obiektu. Można użyć tego obiektu w celu:  
  
-   Określ, które funkcje mają być obsługiwane na utworzony <xref:System.Xml.XmlWriter> obiektu.  
  
-   Ponowne użycie <xref:System.Xml.XmlWriterSettings> obiekt, aby utworzyć wiele obiektów modułu zapisującego. <xref:System.Xml.XmlWriterSettings> Obiekt jest kopiowany i oznaczony jako tylko do odczytu dla każdego utworzonego edytora. Zmiany w ustawieniach na <xref:System.Xml.XmlWriterSettings> wystąpienie nie ma wpływu na istniejące autorów z tymi samymi ustawieniami. W związku z tym można użyć tych samych ustawień, można utworzyć wiele składników zapisywania z tą samą funkcjonalnością. Lub zmodyfikować ustawienia na <xref:System.Xml.XmlWriterSettings> wystąpienia i Utwórz nowy składnik zapisywania z innym zestawem funkcji.  
  
-   Dodawanie funkcji do istniejącej edytora XML. <xref:System.Xml.XmlWriter.Create%2A> Metody może akceptować innego <xref:System.Xml.XmlWriter> obiektu. Podstawowa <xref:System.Xml.XmlWriter> obiekt nie ma być edytora XML utworzony przez statycznych <xref:System.Xml.XmlWriter.Create%2A> metody. Na przykład można określić Edytor XML zdefiniowane przez użytkownika można dodać dodatkowe funkcje.  
  
-   W pełni korzystać z funkcji, takich jak sprawdzanie lepszą zgodność oraz zgodność w celu [XML 1.0 zalecenie](https://www.w3.org/TR/2006/REC-xml-20060816/) które są dostępne tylko na <xref:System.Xml.XmlWriter> obiekty utworzone przez statycznych <xref:System.Xml.XmlWriter.Create%2A> metody.  
  
 Jeśli używasz <xref:System.Xml.XmlWriter.Create%2A> przeciążenia, które nie akceptują <xref:System.Xml.XmlWriterSettings> obiektu, stosowane są następujące domyślne ustawienia składnika zapisywania:  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
> [!NOTE]
>  Chociaż zawiera programu .NET Framework <xref:System.Xml.XmlTextWriter> klasy, która jest konkretną implementację z <xref:System.Xml.XmlWriter> klasy, zaleca się utworzenie <xref:System.Xml.XmlWriter> wystąpienia przy użyciu <xref:System.Xml.XmlWriter.Create%2A> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="output">Strumień, do której chcesz zapisać. <see cref="T:System.Xml.XmlWriter" /> Zapisuje składni tekstu XML 1.0 i dołącza go do określonego strumienia.</param>
        <summary>Tworzy nową <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonego strumienia.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiektu z następującymi ustawieniami domyślnymi służy do tworzenia edytora XML:  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić, które funkcje do obsługi na utworzony edytor, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z jego argumentów i podaj <xref:System.Xml.XmlWriterSettings> obiektu z ustawień użytkownika.  
  
 Ponadto XmlWriter zawsze zapisuje znacznik kolejności bajtów (BOM) do źródłowego strumienia danych; Jednak niektóre strumieni nie może mieć BOM. Aby pominąć BOM, Utwórz nową <xref:System.Xml.XmlWriterSettings> obiektu i ustaw właściwość kodowanie jako nowy <xref:System.Text.UTF8Encoding> obiektu o wartości logicznych w konstruktorze ma wartość false.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci. (Używa <xref:System.Xml.XmlWriter.Create%28System.IO.Stream%2CSystem.Xml.XmlWriterSettings%29> przeciążenia, które również konfiguruje ustawienia w nowym wystąpieniu składnika zapisywania XML.)  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> , Do którego mają zostać zapisane. <see cref="T:System.Xml.XmlWriter" /> Zapisuje składni tekstu XML 1.0 i dołącza go do określonego <see cref="T:System.IO.TextWriter" />.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonego <see cref="T:System.IO.TextWriter" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiektu z ustawieniami domyślnymi służy do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić, które funkcje do obsługi na utworzony edytor, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z jego argumentów i podaj <xref:System.Xml.XmlWriterSettings> obiektu z ustawień użytkownika.  
  
   
  
## Examples  
 Poniższy przykład tworzy moduł zapisujący dane wyjściowe konsoli.  
  
 [!code-csharp[XmlWriter_v2#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#3)]
 [!code-vb[XmlWriter_v2#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">Plik, do której chcesz zapisać. <see cref="T:System.Xml.XmlWriter" /> Tworzy plik w określonej ścieżce i zapisuje go w składni tekstu XML 1.0. <c>Nazwa_pliku_wyjściowego</c> musi być ścieżka systemu plików.</param>
        <summary>Tworzy nową <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonej nazwy pliku.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiektu z ustawieniami domyślnymi służy do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić, które funkcje do obsługi na utworzony Edytor XML, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z jego argumentów i podaj <xref:System.Xml.XmlWriterSettings> obiektu z ustawień użytkownika.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiektu i zapisuje książki węzła.  
  
 [!code-csharp[XmlWriter_v2#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#2)]
 [!code-vb[XmlWriter_v2#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.Text.StringBuilder" /> z którym chcesz zapisać. Zawartość zapisywana przez <see cref="T:System.Xml.XmlWriter" /> jest dołączany do <see cref="T:System.Text.StringBuilder" />.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonego <see cref="T:System.Text.StringBuilder" />.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiektu z ustawieniami domyślnymi służy do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić, które funkcje do obsługi na utworzony Edytor XML, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z jego argumentów i podaj <xref:System.Xml.XmlWriterSettings> obiektu z ustawień użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create output" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Obiekt, który ma być używany jako podstawowy składnik zapisywania.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonego <see cref="T:System.Xml.XmlWriter" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiekt otaczający określonego <see cref="T:System.Xml.XmlWriter" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodawanie funkcji do podstawowej <xref:System.Xml.XmlWriter> obiektu. Podstawowa <xref:System.Xml.XmlWriter> obiekt może być utworzony przez obiekt <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metoda lub obiekt, który został utworzony przy użyciu <xref:System.Xml.XmlTextWriter> implementacji.  
  
 Korzystając z tego przeciążenia <xref:System.Xml.XmlWriterSettings> obiektu z ustawieniami domyślnymi służy do tworzenia składnika zapisywania XML.  
  
|Ustawienie|Domyślny|  
|-------------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NamespaceHandling%2A>|<xref:System.Xml.NamespaceHandling.Default> (bez usuwania)|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (karetki zwracany, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OutputMethod%2A>|<xref:System.Xml.XmlOutputMethod.Xml?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`|  
  
 Jeśli chcesz określić, które funkcje do obsługi na utworzony Edytor XML, użyj przeciążenia, które przyjmuje <xref:System.Xml.XmlWriterSettings> obiekt jako jeden z jego argumentów i podaj <xref:System.Xml.XmlWriterSettings> obiektu z ustawień użytkownika.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.Stream output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As Stream, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::Stream ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output">Strumień, do której chcesz zapisać. <see cref="T:System.Xml.XmlWriter" /> Zapisuje składni tekstu XML 1.0 i dołącza go do określonego strumienia.</param>
        <param name="settings">
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. Jeśli jest to <see langword="null" />, <see cref="T:System.Xml.XmlWriterSettings" /> z domyślnymi ustawieniami jest używany.  Jeśli <see cref="T:System.Xml.XmlWriter" /> jest używany z <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> metody, należy użyć <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości w celu uzyskania <see cref="T:System.Xml.XmlWriterSettings" /> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma ustawienia poprawne dane wyjściowe.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu strumienia i <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element XmlWriter zawsze zapisuje znacznik kolejności bajtów (BOM) do źródłowego strumienia danych; Jednak niektóre strumieni nie może mieć BOM. Aby pominąć BOM, Utwórz nową <xref:System.Xml.XmlWriterSettings> obiektu i ustaw właściwość kodowanie jako nowy <xref:System.Text.UTF8Encoding> obiektu o wartości logicznych w konstruktorze ma wartość false.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.IO.TextWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As TextWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::IO::TextWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.IO.TextWriter" /> , Do którego mają zostać zapisane. <see cref="T:System.Xml.XmlWriter" /> Zapisuje składni tekstu XML 1.0 i dołącza go do określonego <see cref="T:System.IO.TextWriter" />.</param>
        <param name="settings">
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. Jeśli jest to <see langword="null" />, <see cref="T:System.Xml.XmlWriterSettings" /> z domyślnymi ustawieniami jest używany.  Jeśli <see cref="T:System.Xml.XmlWriter" /> jest używany z <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> metody, należy użyć <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości w celu uzyskania <see cref="T:System.Xml.XmlWriterSettings" /> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma ustawienia poprawne dane wyjściowe.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu <see cref="T:System.IO.TextWriter" /> i <see cref="T:System.Xml.XmlWriterSettings" /> obiektów.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład zapisuje limit ciągu XML.  
  
 [!code-csharp[XmlWriter_v2#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#4)]
 [!code-vb[XmlWriter_v2#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="text" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(string outputFileName, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outputFileName As String, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::String ^ outputFileName, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (outputFileName, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="outputFileName">Plik, do której chcesz zapisać. <see cref="T:System.Xml.XmlWriter" /> Tworzy plik w określonej ścieżce i zapisuje go w składni tekstu XML 1.0. <c>Nazwa_pliku_wyjściowego</c> musi być ścieżka systemu plików.</param>
        <param name="settings">
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. Jeśli jest to <see langword="null" />, <see cref="T:System.Xml.XmlWriterSettings" /> z domyślnymi ustawieniami jest używany.  Jeśli <see cref="T:System.Xml.XmlWriter" /> jest używany z <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> metody, należy użyć <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości w celu uzyskania <see cref="T:System.Xml.XmlWriterSettings" /> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma ustawienia poprawne dane wyjściowe.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu nazwy pliku i <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiektu z określonych ustawień.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="url" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Text.StringBuilder output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As StringBuilder, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Text::StringBuilder ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Text.StringBuilder * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Text.StringBuilder" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.Text.StringBuilder" /> z którym chcesz zapisać. Zawartość zapisywana przez <see cref="T:System.Xml.XmlWriter" /> jest dołączany do <see cref="T:System.Text.StringBuilder" />.</param>
        <param name="settings">
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. Jeśli jest to <see langword="null" />, <see cref="T:System.Xml.XmlWriterSettings" /> z domyślnymi ustawieniami jest używany.  Jeśli <see cref="T:System.Xml.XmlWriter" /> jest używany z <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> metody, należy użyć <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości w celu uzyskania <see cref="T:System.Xml.XmlWriterSettings" /> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma ustawienia poprawne dane wyjściowe.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu <see cref="T:System.Text.StringBuilder" /> i <see cref="T:System.Xml.XmlWriterSettings" /> obiektów.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="builder" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlWriter Create(class System.Xml.XmlWriter output, class System.Xml.XmlWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (output As XmlWriter, settings As XmlWriterSettings) As XmlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlWriter ^ Create(System::Xml::XmlWriter ^ output, System::Xml::XmlWriterSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlWriter * System.Xml.XmlWriterSettings -&gt; System.Xml.XmlWriter" Usage="System.Xml.XmlWriter.Create (output, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="settings" Type="System.Xml.XmlWriterSettings" />
      </Parameters>
      <Docs>
        <param name="output">
          <see cref="T:System.Xml.XmlWriter" /> Obiekt, który ma być używany jako podstawowy składnik zapisywania.</param>
        <param name="settings">
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do konfigurowania nowego <see cref="T:System.Xml.XmlWriter" /> wystąpienia. Jeśli jest to <see langword="null" />, <see cref="T:System.Xml.XmlWriterSettings" /> z domyślnymi ustawieniami jest używany.  Jeśli <see cref="T:System.Xml.XmlWriter" /> jest używany z <see cref="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)" /> metody, należy użyć <see cref="P:System.Xml.Xsl.XslCompiledTransform.OutputSettings" /> właściwości w celu uzyskania <see cref="T:System.Xml.XmlWriterSettings" /> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <see cref="T:System.Xml.XmlWriter" /> obiekt ma ustawienia poprawne dane wyjściowe.</param>
        <summary>Tworzy nowy <see cref="T:System.Xml.XmlWriter" /> wystąpienia przy użyciu określonego <see cref="T:System.Xml.XmlWriter" /> i <see cref="T:System.Xml.XmlWriterSettings" /> obiektów.</summary>
        <returns>
          <see cref="T:System.Xml.XmlWriter" /> Obiekt otaczający określonego <see cref="T:System.Xml.XmlWriter" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia dodawanie dodatkowych funkcji do podstawowej <xref:System.Xml.XmlWriter> obiektu. Podstawowa <xref:System.Xml.XmlWriter> obiekt może być utworzony przez obiekt <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> metoda lub obiekt, który został utworzony przy użyciu <xref:System.Xml.XmlTextWriter> implementacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> Wartość jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>Zwalnia zasoby używane przez <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Xml.XmlWriter" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="xmlWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, opróżnia znajduje się w buforze do podstawowej strumieni i opróżnia również odpowiedniego strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana zamiast <xref:System.Xml.XmlWriter.Close%2A> gdy chcesz zapisać więcej do źródłowego strumienia bez utraty, co to jest nadal w buforze.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.FlushAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje dwa fragmenty XML.  
  
 [!code-cpp[XmlWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Flush/CPP/write2docs_v2.cpp#1)]
 [!code-csharp[XmlWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Flush/CS/write2docs_v2.cs#1)]
 [!code-vb[XmlWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Flush/VB/write2docs_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="abstract member FlushAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia asynchronicznie znajduje się w buforze do podstawowej strumieni i opróżnia również odpowiedniego strumienia.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="Flush" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.Flush%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public abstract string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string" Usage="xmlWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">Prefiks, którego chcesz znaleźć identyfikator URI przestrzeni nazw.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca najbliższego prefiks zdefiniowany w bieżącym zakresie przestrzeni nazw dla identyfikatora URI przestrzeni nazw.</summary>
        <returns>Zgodny prefiks lub <see langword="null" /> Jeśli nie pasujących przestrzeni nazw URI znajduje się w bieżącym zakresie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Dokonuje książkę zapisu w poniższym przykładzie.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ns" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriterSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlWriterSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlWriterSettings ^ Settings { System::Xml::XmlWriterSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlWriterSettings" Usage="System.Xml.XmlWriter.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Xml.XmlWriterSettings" /> użytej do utworzenia tego obiektu <see cref="T:System.Xml.XmlWriter" /> wystąpienia.</summary>
        <value>
          <see cref="T:System.Xml.XmlWriterSettings" /> Obiekt używany do utworzenia tego wystąpienia składnika zapisywania. Jeśli ten moduł zapisujący nie został utworzony przy użyciu <see cref="Overload:System.Xml.XmlWriter.Create" /> , ta właściwość zwraca <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings> Klasa jest używana do określania zestaw funkcji do obsługi na wystąpieniu utworzony Edytor. <xref:System.Xml.XmlWriterSettings> Obiektu zwróconego przez <xref:System.Xml.XmlWriter.Settings%2A> nie można zmodyfikować właściwości. Próby zmiany wyniki poszczególnych ustawień w wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributes">
      <MemberSignature Language="C#" Value="public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttributes(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttributes (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttributes(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributes : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteAttributes : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteAttributes (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see langword="XmlReader" /> Do skopiowania atrybutów.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty z <see langword="XmlReader" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się wszystkie atrybuty odnaleźć w bieżącym położeniu w <see cref="T:System.Xml.XmlReader" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli czytnik jest ustawiony na `element` węzła `WriteAttributes` kopiuje wszystkie atrybuty zawartych w niej. Jeśli czytnik jest ustawiony na `attribute` węzła, ta metoda zapisuje bieżący atrybut, a następnie pozostałe atrybuty do tagu zamykającego elementu. Jeśli czytnik jest ustawiony na `XmlDeclaration` węzła, ta metoda zapisuje wszystkie atrybuty w deklaracji. Jeśli czytnik jest ustawiony na żadnym innym typem węzła ta metoda zgłasza <xref:System.Xml.XmlException>.  
  
 Jeśli ta metoda jest wywoływana przy użyciu <xref:System.Xml.XmlValidatingReader>, aby zapewnić zawartość (które zostały rozszerzone z jednostek), która może spowodować nieprawidłowy dokument zostanie zastąpiony, gdy zapisywane poprawnie sformułowany plik XML. Na przykład, jeśli zawiera atrybut `&gt;` jednostki, która została rozszerzona, zapewnienie poprawnie sformułowany dokument rozwinięte > zostanie zastąpiony, gdy zapisywane z `&gt;`.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteAttributesAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład kopiuje wszystkie elementy danych wyjściowych, zmiany nazwy tagów wielkimi literami i kopiuje wszystkie atrybuty bez zmian.  
  
 [!code-cpp[XmlWriter.WriteAttributes#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributes/CPP/writeattrs_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributes/CS/writeattrs_v2.cs#1)]
 [!code-vb[XmlWriter.WriteAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributes/VB/writeattrs_v2.vb#1)]  
  
 W przykładzie użyto pliku `test1.xml`, jak wejściowego.  
  
 [!code-xml[XmlWriter.WriteAttributes#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteAttributes/XML/test1.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">Czytnik nie jest ustawiony na <see langword="element" />, <see langword="attribute" /> lub <see langword="XmlDeclaration" /> węzła.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAttributesAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteAttributesAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteAttributesAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAttributesAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributesAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteAttributesAsync&gt;c__async2))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see langword="XmlReader" /> Do skopiowania atrybutów.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty z <see langword="XmlReader" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Zapisuje asynchronicznie limit wszystkie atrybuty odnaleźć w bieżącym położeniu w <see cref="T:System.Xml.XmlReader" />.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteAttributes" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteAttributes%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttributeString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje atrybut o określonej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się atrybut o określonej nazwie lokalne i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `WriteAttributeString` wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera pojedynczych lub podwójnych cudzysłowów, są zamieniane na `&quot;` i `&apos;` odpowiednio.  
  
-   Zapisuje `xml:space` atrybutu, moduł zapisujący sprawdza, czy wartość atrybutu jest nieprawidłowa. (Prawidłowe wartości to `preserve` lub `default`.)  
  
-   Zapisuje `xml:lang` atrybutu, moduł zapisujący nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1.0.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 Dokonuje książkę zapisu w poniższym przykładzie.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.ArgumentException">
          <see langword="xml:space" /> Lub <see langword="xml:lang" /> wartość atrybutu jest nieprawidłowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z atrybutem.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje atrybut o określonej nazwie lokalnego, identyfikator URI przestrzeni nazw i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje się atrybut z prefiksem zdefiniowanych nazw użytkownika i kojarzy ją z danej przestrzeni nazw. Jeśli `localName` jest "xmlns", a następnie ta metoda również traktuje tego jako deklaracja przestrzeni nazw. W takim przypadku `ns` argument może być `null`.  
  
 `WriteAttributeString` wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera pojedynczych lub podwójnych cudzysłowów, są zamieniane na `&quot;` i `&apos;` odpowiednio.  
  
-   Zapisuje `xml:space` atrybutu, moduł zapisujący sprawdza, czy wartość atrybutu jest nieprawidłowa. (Prawidłowe wartości to `preserve` lub `default`.)  
  
-   Zapisuje `xml:lang` atrybutu, moduł zapisujący nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1.0.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metody można zapisać deklaracji przestrzeni nazw.  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.ArgumentException">
          <see langword="xml:space" /> Lub <see langword="xml:lang" /> wartość atrybutu jest nieprawidłowa.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeString">
      <MemberSignature Language="C#" Value="public void WriteAttributeString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteAttributeString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteAttributeString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteAttributeString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteAttributeString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się atrybutu z określonego prefiksu, lokalna nazwa, identyfikator URI przestrzeni nazw i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje się atrybut z prefiksem zdefiniowanych nazw użytkownika i kojarzy ją z danej przestrzeni nazw. W przypadku prefiks "xmlns" następnie ta metoda również traktuje tego jako deklaracja przestrzeni nazw i kojarzy zadeklarowany prefiks przestrzeni nazw, podać identyfikator URI w wartości danego atrybutu. W takim przypadku `ns` argument może być `null`.  
  
 `WriteAttributeString` wykonuje następujące czynności:  
  
-   Jeśli wartość atrybutu zawiera pojedynczych lub podwójnych cudzysłowów, są zamieniane na `&quot;` i `&apos;` odpowiednio.  
  
-   Zapisuje `xml:space` atrybutu, moduł zapisujący sprawdza, czy wartość atrybutu jest nieprawidłowa. (Prawidłowe wartości to `preserve` lub `default`.)  
  
-   Zapisuje `xml:lang` atrybutu, moduł zapisujący nie sprawdza, czy wartość atrybutu jest prawidłowa zgodnie z zaleceniem W3C XML 1.0.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteAttributeStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metody można zapisać deklaracji przestrzeni nazw.  
  
 [!code-cpp[XmlWriter.WriteAttributeString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CPP/writeattrstring.cpp#1)]
 [!code-csharp[XmlWriter.WriteAttributeString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteAttributeString/CS/writeattrstring.cs#1)]
 [!code-vb[XmlWriter.WriteAttributeString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteAttributeString/VB/writeattrstring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.ArgumentException">
          <see langword="xml:space" /> Lub <see langword="xml:lang" /> wartość atrybutu jest nieprawidłowa.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="localName" /> Lub <paramref name="ns" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteAttributeStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAttributeStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteAttributeStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteAttributeStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteAttributeStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <param name="value">Wartość atrybutu.</param>
        <summary>Zapisuje asynchronicznie limit atrybutu z określonego prefiksu, lokalna nazwa, identyfikator URI przestrzeni nazw i wartości.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteAttributeString" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public abstract void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja buforu wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, koduje określonych bajtów binarne jako Base64 i zapisuje tekst wynikowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na przykład Bufor bajtów może zawierać binarne treści obrazu GIF. Wyraźnie nie jest prawidłowym kodem XML. `Base64` Kodowanie jest przeznaczona do reprezentowania sekwencji dowolnego typu byte w formie tekstowej obejmuje 65 znaków US-ASCII ([A-Za-z0-9 +/ =]) gdzie każdy znak koduje 6 bitów danych binarnych. Aby uzyskać więcej informacji, zobacz żądania for Comments (RFC) znajdujących się na 1521 [żądań dla witryny sieci Web komentarze](https://www.rfc-editor.org).  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteBase64Async%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteBase64%2A> metodę, aby zapisać `Base64` danych. `Base64` Danych jest osadzony w `<image>` elementu.  
  
 [!code-csharp[XmlReader_Read_Write_Binary#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#3)]
 [!code-vb[XmlReader_Read_Write_Binary#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  - lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja buforu wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Asynchronicznie koduje określonych bajtów binarne jako Base64 i zapisuje tekst wynikowy.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteBase64" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteBase64%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public virtual void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHex : byte[] * int * int -&gt; unit&#xA;override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja buforu wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, koduje określonych bajtów binarne jako <see langword="BinHex" /> i zapisuje tekst wynikowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteBinHexAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteBinHex%2A> metodę, aby zapisać `BinHex` danych. `BinHex` Danych jest osadzony w `<image>` elementu.  
  
 [!code-csharp[XmlReader_Read_Write_Binary#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#1)]
 [!code-vb[XmlReader_Read_Write_Binary#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  - lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica bajtów do kodowania.</param>
        <param name="index">Pozycja buforu wskazująca początek bajtów do zapisania.</param>
        <param name="count">Liczba bajtów do zapisania.</param>
        <summary>Asynchronicznie koduje określonych bajtów binarne jako <see langword="BinHex" /> i zapisuje tekst wynikowy.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteBinHex" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteBinHex%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public abstract void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCData : string -&gt; unit" Usage="xmlWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby umieścić wewnątrz bloku CDATA.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje &lt;![CDATA [...]]&gt; bloku zawierających określony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje pusty blok CDATA, na przykład \<! [[ CDATA]]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCDataAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCDataAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCDataAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCDataAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCDataAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCDataAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCDataAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby umieścić wewnątrz bloku CDATA.</param>
        <summary>Zapisuje asynchronicznie &lt;![CDATA [...]]&gt; bloku zawierających określony tekst.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteCData" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteCData%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntity : char -&gt; unit" Usage="xmlWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Znak Unicode, do których chcesz wygenerować jednostki znaku.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, wymusza Generowanie jednostki znaków dla określona wartość znaku Unicode.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zapisuje znaków Unicode w formacie odwołanie do jednostki znaków szesnastkowych.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteCharEntityAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteCharEntity%2A?displayProperty=nameWithType> na przykład za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Znak jest w zakresie znaków para zastępcza <see langword="0xd800" />  -  <see langword="0xdfff" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharEntityAsync(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharEntityAsync (ch As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharEntityAsync(char ch);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharEntityAsync : char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharEntityAsync ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Znak Unicode, do których chcesz wygenerować jednostki znaku.</param>
        <summary>Asynchronicznie wymusza Generowanie jednostki znaków dla określona wartość znaku Unicode.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteCharEntity" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteCharEntity%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public abstract void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteChars : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst można zapisać.</param>
        <param name="index">Pozycja buforu wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje bufor tekstowy jednym naraz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do zapisania dużych ilości buforu tekstu w czasie.  
  
 Specjalnej obsługi, należy wykonać w celu zapewnienia `WriteChars` — metoda nie dzieli znaków dwuskładnikowych pary przez wiele zapisy buforu. Specyfikacja XML definiuje prawidłowych zakresów dla Znaki dwuskładnikowe.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteCharsAsync%2A>.  
  
   
  
## Examples  
 [!code-csharp[XmlWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  - lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />; dzieleniu wyniki wywołania w znaki dwuskładnikowe pary lub zapisywana para zastępcza nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" /> Wartość parametru jest nieprawidłowa.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCharsAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCharsAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCharsAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCharsAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCharsAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst można zapisać.</param>
        <param name="index">Pozycja buforu wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Zapisuje asynchronicznie bufor tekstowy jednym naraz.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteChars" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteChars%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public abstract void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteComment : string -&gt; unit" Usage="xmlWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby umieścić wewnątrz komentarz.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się komentarz &lt;!--... -&gt; zawierających określony tekst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje komentarz z zawartości danych, na przykład \<!--->.  
  
 Jeśli `text` zawiera nieprawidłową sekwencję dwa łączniki "--" <xref:System.Xml.XmlWriter> można albo throw <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> obiektów) lub Wstaw spację między kresek "-" - tak, aby tekst był prawidłowy komentarz XML (<xref:System.Xml.XmlWriter> obiekty utworzone przez <xref:System.Xml.XmlWriter.Create%2A> metody).  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteCommentAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tekst spowoduje sformułowany także dokumentu XML.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteCommentAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteCommentAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteCommentAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteCommentAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteCommentAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteCommentAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, aby umieścić wewnątrz komentarz.</param>
        <summary>Zapisuje asynchronicznie limit komentarz &lt;!--... -&gt; zawierających określony tekst.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteComment" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteComment%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public abstract void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocType : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa typu dokumentu. Musi to być pusty.</param>
        <param name="pubid">Jeśli inne niż null również zapisuje publicznego "pubid" "sysid" gdzie <c>pubid</c> i <c>sysid</c> zostaną zastąpione danego argumentów.</param>
        <param name="sysid">Jeśli <c>pubid</c> jest <see langword="null" /> i <c>sysid</c> jest inne niż null jest zapisywany systemu "sysid" gdzie <c>sysid</c> zostanie zastąpiona wartością tego argumentu.</param>
        <param name="subset">Jeśli inne niż null jest zapisywany [podzestawu] gdzie podzbioru jest zamienione na wartość tego argumentu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje deklaracji typu dokumentu z określoną nazwą i opcjonalne atrybuty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda sprawdza nieprawidłowych znaków w `pubid`, `sysid` lub `subset`. On również nie sprawdza, czy podzestawu wewnętrznego jest poprawnie sformułowany.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlWriter> Nie można zweryfikować danych, który jest przekazywany do <xref:System.Xml.XmlWriter.WriteDocType%2A> metody. Nie należy przekazać dowolne dane do tej metody.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteDocTypeAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.ArgumentException">Wartość <paramref name="name" /> spowoduje nieprawidłowe dane XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocTypeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteDocTypeAsync(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteDocTypeAsync (name As String, pubid As String, sysid As String, subset As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteDocTypeAsync(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="abstract member WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteDocTypeAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteDocTypeAsync (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa typu dokumentu. Musi to być pusty.</param>
        <param name="pubid">Jeśli inne niż null również zapisuje publicznego "pubid" "sysid" gdzie <c>pubid</c> i <c>sysid</c> zostaną zastąpione danego argumentów.</param>
        <param name="sysid">Jeśli <c>pubid</c> jest <see langword="null" /> i <c>sysid</c> jest inne niż null jest zapisywany systemu "sysid" gdzie <c>sysid</c> zostanie zastąpiona wartością tego argumentu.</param>
        <param name="subset">Jeśli inne niż null jest zapisywany [podzestawu] gdzie podzbioru jest zamienione na wartość tego argumentu.</param>
        <summary>Zapisuje asynchronicznie deklaracji typu dokumentu z określoną nazwą i opcjonalne atrybuty.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteDocType" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteDocType%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>Zapisuje element zawierający wartość ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element z określoną nazwą lokalnych i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto kilka metod zapisywania, aby utworzyć XML fragment.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localName" /> Wartość jest <see langword="null" /> lub ciąg pusty.  - lub - wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element o określonej nazwie lokalnego, identyfikator URI przestrzeni nazw i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto kilka metod zapisywania, aby utworzyć XML fragment.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localName" /> Wartość jest <see langword="null" /> lub ciąg pusty.  - lub - wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementString">
      <MemberSignature Language="C#" Value="public void WriteElementString (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteElementString(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteElementString (prefix As String, localName As String, ns As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteElementString(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementString : string * string * string * string -&gt; unit" Usage="xmlWriter.WriteElementString (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks elementu.</param>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI elementu przestrzeni nazw.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Zapisuje element z określonego prefiksu, lokalna nazwa, identyfikator URI przestrzeni nazw i wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteElementStringAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localName" /> Wartość jest <see langword="null" /> lub ciąg pusty.  - lub - wartości parametrów są nieprawidłowe.</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteElementStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteElementStringAsync(string prefix, string localName, string ns, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteElementStringAsync (prefix As String, localName As String, ns As String, value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteElementStringAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteElementStringAsync : string * string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteElementStringAsync (prefix, localName, ns, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteElementStringAsync&gt;c__async6))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks elementu.</param>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI elementu przestrzeni nazw.</param>
        <param name="value">Wartość elementu.</param>
        <summary>Asynchronicznie zapisuje element z określonego prefiksu, lokalna nazwa, identyfikator URI przestrzeni nazw i wartości.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteElementString" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteElementString%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttribute : unit -&gt; unit" Usage="xmlWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zamyka poprzedniej <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> wywołania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli należy wywołać `WriteStartAttribute`, ten atrybut można zamknąć przy użyciu tej metody.  
  
 Możesz też zamknąć ten atrybut, wywołując `WriteStartAttribute` ponownie, wywoływania <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, lub wywoływania <xref:System.Xml.XmlWriter.WriteEndElement%2A>.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> metod do wyjściowego XML, elementy i atrybuty nie będą zapisywane do czasu wywołania <xref:System.Xml.XmlWriter.Close%2A> metody. Na przykład, jeśli używasz Element XmlWriter, aby wypełnić <xref:System.Xml.XmlDocument>, do czasu zamknięcia <xref:System.Xml.XmlWriter>, nie można obserwować napisane elementów i atrybutów w dokumencie docelowym.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteEndAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndAttributeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndAttributeAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteEndAttributeAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndAttributeAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndAttributeAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndAttributeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka poprzedniej <see cref="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" /> wywołania.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteEndAttribute" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocument : unit -&gt; unit" Usage="xmlWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zamyka wszystkie otwarte elementów lub atrybutów i naraża ponownie moduł zapisujący stan początkowy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> metod do wyjściowego XML, elementy i atrybuty nie będą zapisywane do czasu wywołania <xref:System.Xml.XmlWriter.Close%2A> metody. Na przykład, jeśli używasz Element XmlWriter, aby wypełnić <xref:System.Xml.XmlDocument>, do czasu zamknięcia <xref:System.Xml.XmlWriter>, nie można obserwować napisane elementów i atrybutów w dokumencie docelowym.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteEndDocumentAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Dokument XML jest nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka wszystkie otwarte elementów lub atrybutów i naraża ponownie moduł zapisujący stan początkowy.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteEndDocument" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteEndDocument%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElement : unit -&gt; unit" Usage="xmlWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element nie zawiera żadnej zawartości, krótki tagu końcowego "/ >" jest zapisywany; w przeciwnym razie wartość tagu końcowego Pełna są zapisywane.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> metod do wyjściowego XML, elementy i atrybuty nie będą zapisywane do czasu wywołania <xref:System.Xml.XmlWriter.Close%2A> metody. Na przykład, jeśli używasz XmlWwriter do wypełnienia <xref:System.Xml.XmlDocument>, do czasu zamknięcia <xref:System.Xml.XmlWriter>, nie można obserwować napisane elementów i atrybutów w dokumencie docelowym.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteEndElementAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteEndElement%2A> i <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> metody.  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteEndElement" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteEndElement%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public abstract void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRef : string -&gt; unit" Usage="xmlWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do jednostki.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się odwołania do jednostki jako <see langword="&amp;name;" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteEntityRefAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRefAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteEntityRefAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteEntityRefAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteEntityRefAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteEntityRefAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteEntityRefAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa odwołania do jednostki.</param>
        <summary>Zapisuje asynchronicznie się odwołania do jednostki jako <see langword="&amp;name;" />.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteEntityRef" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteEntityRef%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public abstract void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElement : unit -&gt; unit" Usage="xmlWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zawsze zapisuje do tagu końcowego pełna. Jest to przydatne podczas pracy z elementami, które musi zawierać znacznik pełnego zakończenia. Na przykład przeglądarek oczekiwać blokach skryptu HTML zostanie zamknięty z " \< /script >".  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteFullEndElementAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteEndElement%2A> i <xref:System.Xml.XmlWriter.WriteFullEndElement%2A> metody.  
  
 [!code-csharp[XmlWriter.WriteFullEndElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteFullEndElement/CS/writerfullend_v2.cs#1)]
 [!code-vb[XmlWriter.WriteFullEndElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteFullEndElement/VB/writerfullend_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteFullEndElementAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteFullEndElementAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteFullEndElementAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteFullEndElementAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteFullEndElementAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Asynchronicznie zamyka jeden element i POP odpowiedniego zakresie przestrzeni nazw.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteFullEndElement" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public virtual void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteName : string -&gt; unit&#xA;override this.WriteName : string -&gt; unit" Usage="xmlWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zapisy się określona nazwa zapewnienia ich jest prawidłową nazwą zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.XmlTextWriter.Namespaces%2A> ustawiono `true`, `WriteName` sprawdza również, czy nazwa również jest nieprawidłowa według przestrzeni nazw W3C w zalecenie XML.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteNameAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłową nazwą XML; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNameAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNameAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNameAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNameAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNameAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNameAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNameAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisu.</param>
        <summary>Zapisuje asynchronicznie poza określoną nazwą, zapewniając jest prawidłową nazwą zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteName" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteName%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public virtual void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmToken : string -&gt; unit&#xA;override this.WriteNmToken : string -&gt; unit" Usage="xmlWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zapisy się określona nazwa zapewnienia ich jest prawidłowy NmToken zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteNmTokenAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> nie jest prawidłową NmToken; lub <paramref name="name" /> jest <see langword="null" /> lub <see langword="String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmTokenAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNmTokenAsync(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNmTokenAsync (name As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNmTokenAsync(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNmTokenAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNmTokenAsync name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zapisu.</param>
        <summary>Zapisuje asynchronicznie poza określoną nazwą, zapewniając jest prawidłowy NmToken zgodnie z zaleceniem W3C XML 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteNmToken" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteNmToken%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNode">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>Kopiuje wszystkie elementy z obiektu źródłowego do bieżącego wystąpienia modułu zapisującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (reader As XmlReader, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XmlReader * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XmlReader * bool -&gt; unit" Usage="xmlWriter.WriteNode (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Do odczytu.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty z <see langword="XmlReader" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, kopiuje wszystkie elementy z czytnika w składniku zapisywania oraz czytnik do rozpoczęcia następnego elementu równorzędnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono obsługiwane typy węzłów dla tej metody.  
  
|Typ NodeType|Zachowanie WriteNode|  
|--------------|------------------------|  
|`None`|Zapisuje wszystkie węzły niezależnie od tego typu. Oznacza to, że moduł zapisujący zużywa <xref:System.Xml.XmlReader> i zapisy wszystkie węzły do odczytu w tym atrybuty przetwarzania instrukcje, komentarze i tak dalej.<br /><br /> Ta sytuacja występuje, gdy <xref:System.Xml.XmlReader> jest w stanie początkowym. ( <xref:System.Xml.XmlReader.ReadState%2A?displayProperty=nameWithType> Zwraca `ReaderState.Initial`).|  
|`Element`|Zapisuje węzeł elementu i węzły atrybutu.|  
|`Attribute`|Żadna operacja. Użyj <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> lub <xref:System.Xml.XmlWriter.WriteAttributeString%2A> zamiast tego.|  
|`Text`|Zapisuje się węzeł tekstowy.|  
|`CDATA`|Zapisuje się w węźle sekcji CDATA.|  
|`EntityReference`|Zapisuje się węzeł odwołanie do jednostki.|  
|`ProcessingInstruction`|Zapisuje się węzeł instrukcji przetwarzania.|  
|`Comment`|Zapisuje się węzeł komentarzy.|  
|`DocumentType`|Zapisuje się węzeł typu dokumentu.|  
|`SignificantWhitespace`|Zapisuje się węzeł znaczący biały znak.|  
|`Whitespace`|Zapisuje się węzeł biały znak.|  
|`EndElement`|Zapisuje się tagu końcowego.|  
|`EndEntity`|Żadna operacja.|  
|`XmlDeclaration`|Zapisuje się węzeł deklaracji XML.|  
  
 Jeśli czytnik jest w stanie początkowym, ta metoda przenosi czytnik na końcu pliku. Jeśli czytnik jest już na końcu pliku, lub w stanie zamkniętym, ta metoda jest nie działa.  
  
 Poniższy kod C# kopiuje cały dokument wejściowy XML do konsoli:  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
XmlWriter writer = XmlWriter.Create(Console.Out);  
writer.WriteNode(reader, false);  
```  
  
 Jeśli zostały przeniesione z węzła głównego i są umieszczone w innym miejscu w dokumencie w poniższym przykładzie C# poprawnie zapisuje węzły.  
  
```csharp  
XmlReader reader = XmlReader.Create(myfile);  
reader.Read(); // Read PI  
reader.Read(); // Read Comment  
reader.Read(); // Read DOCType  
XmlWriter writer = XmlWriter.Create(Console.Out);  
while (!reader.EOF){  
  writer.WriteNode(reader, false);  
 }  
```  
  
 Jeśli czytnik jest skonfigurowany do zwrócenia biały znak i ma składnik zapisywania jest skonfigurowana do wcięcie danych wyjściowych, `WriteNode` może wygenerować dziwne dane wyjściowe. Możesz będą zasadniczo występować dwa razy formatowania.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzłów książki imię i nazwisko do konsoli.  
  
 [!code-cpp[XmlWriter.WriteNode#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteNode/CPP/writenode.cpp#1)]
 [!code-csharp[XmlWriter.WriteNode#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteNode/CS/writenode.cs#1)]
 [!code-vb[XmlWriter.WriteNode#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteNode/VB/writenode.vb#1)]  
  
 W przykładzie użyto pliku `books.xml`, jak wejściowego.  
  
 [!code-xml[XmlWriter.WriteNode#2](~/samples/snippets/xml/VS_Snippets_Data/XmlWriter.WriteNode/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="reader" /> zawiera nieprawidłowe znaki.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNode">
      <MemberSignature Language="C#" Value="public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteNode(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteNode (navigator As XPathNavigator, defattr As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteNode(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit&#xA;override this.WriteNode : System.Xml.XPath.XPathNavigator * bool -&gt; unit" Usage="xmlWriter.WriteNode (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Do skopiowania.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty; w przeciwnym razie <see langword="false" />.</param>
        <summary>Kopiuje wszystkie elementy z <see cref="T:System.Xml.XPath.XPathNavigator" /> obiektu do usługi składnika zapisywania. Pozycja <see cref="T:System.Xml.XPath.XPathNavigator" /> pozostaje niezmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono obsługiwane `XPath` typy węzłów dla tej metody.  
  
|XPathNodeType|Zachowanie WriteNode|  
|-------------------|------------------------|  
|`Root`|Zapisuje wszystkie węzły niezależnie od tego typu. Oznacza to, że moduł zapisujący zużywa <xref:System.Xml.XPath.XPathNavigator> i zapisuje wszystkie węzły z węzła głównego (łącznie atrybuty przetwarzania instrukcje, komentarze i tak dalej).|  
|`Element`|Zapisuje węzeł elementu i węzły atrybutu.|  
|`Attribute`|Żadna operacja. Użyj <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> lub <xref:System.Xml.XmlWriter.WriteAttributeString%2A> zamiast tego.|  
|`Text`|Zapisuje się węzeł tekstowy.|  
|`Namespace`|Żadna operacja. Użyj <xref:System.Xml.XmlWriter.WriteStartAttribute%2A> lub <xref:System.Xml.XmlWriter.WriteAttributeString%2A> metody można zapisać deklaracji przestrzeni nazw.|  
|`ProcessingInstruction`|Zapisuje się węzeł instrukcji przetwarzania.|  
|`Comment`|Zapisuje się węzeł komentarzy.|  
|`SignificantWhitespace`|Zapisuje się węzeł znaczący biały znak.|  
|`Whitespace`|Zapisuje się węzeł biały znak.|  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteNodeAsync%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlWriter.WriteNode%2A> metodę, aby skopiować pierwszego węzła książki z dokumentu i zapisz je w konsoli.  
  
 [!code-csharp[XmlWriteNode_nav#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriteNode_nav/CS/XmlWriteNode_nav.cs#1)]
 [!code-vb[XmlWriteNode_nav#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriteNode_nav/VB/XmlWriteNode_nav.vb#1)]  
  
 W przykładzie użyto pliku books.xml jako dane wejściowe.  
  
 [!code-xml[XPathXMLExamples#1](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/books.xml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="navigator" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteNodeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
        <summary>Asynchronicznie kopiuje wszystkie elementy z obiektu źródłowego do bieżącego wystąpienia modułu zapisującego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteNode%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XmlReader reader, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (reader As XmlReader, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XmlReader ^ reader, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XmlReader * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (reader, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.Xml.XmlReader" /> Do odczytu.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty z <see langword="XmlReader" />; w przeciwnym razie <see langword="false" />.</param>
        <summary>Asynchronicznie kopiuje wszystkie elementy z czytnika w składniku zapisywania i przenosi czytnik do rozpoczęcia następnego elementu równorzędnego.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteNode" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteNode%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNodeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteNodeAsync(class System.Xml.XPath.XPathNavigator navigator, bool defattr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteNodeAsync (navigator As XPathNavigator, defattr As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteNodeAsync(System::Xml::XPath::XPathNavigator ^ navigator, bool defattr);" />
      <MemberSignature Language="F#" Value="abstract member WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteNodeAsync : System.Xml.XPath.XPathNavigator * bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteNodeAsync (navigator, defattr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteNodeAsync&gt;c__async5))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="defattr" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="navigator">
          <see cref="T:System.Xml.XPath.XPathNavigator" /> Do skopiowania.</param>
        <param name="defattr">
          <see langword="true" /> Aby skopiować domyślne atrybuty; w przeciwnym razie <see langword="false" />.</param>
        <summary>Asynchronicznie kopiuje wszystkie elementy z <see cref="T:System.Xml.XPath.XPathNavigator" /> obiektu do usługi składnika zapisywania. Pozycja <see cref="T:System.Xml.XPath.XPathNavigator" /> pozostaje niezmieniona.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteNode" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteNode%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public abstract void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa instrukcji przetwarzania.</param>
        <param name="text">Tekst do uwzględnienia w instrukcji przetwarzania.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się instrukcja przetwarzania ze spacją między nazwą i tekst w następujący sposób: &lt;? nazwa tekst?&gt;.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody można zapisać deklaracji XML (zamiast <xref:System.Xml.XmlWriter.WriteStartDocument%2A>). Może to spowodować, że atrybut kodowania, jest nieprawidłowo napisane. Na przykład następujący kod C# dadzą w wyniku nieprawidłowy dokument XML, ponieważ domyślnym kodowaniem jest UTF-8.  
  
```csharp  
XmlWriter writer = XmlWriter.Create("output.xml");  
writer.WriteProcessingInstruction("xml", "version='1.0' encoding='UTF-16'");  
writer.WriteStartElement("root");  
writer.Close();  
```  
  
 Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje `ProcessingInstruction` bez danych zawartości, na przykład \<? nazwy? >.  
  
 Jeśli tekst zawiera nieprawidłową sekwencję "? >", <xref:System.Xml.XmlWriter> można albo throw <xref:System.ArgumentException> (<xref:System.Xml.XmlTextWriter> obiektów) lub Wstaw odstęp "? > "Aby uniknąć zapisywania nieprawidłowy kod XML (<xref:System.Xml.XmlWriter> obiekty utworzone przez <xref:System.Xml.XmlWriter.Create%2A> metody).  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteProcessingInstructionAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje plik XML reprezentujący książkę.  
  
 [!code-csharp[XmlWriter.WriteStartDocument#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteStartDocument/CS/writerbook_v2.cs#1)]
 [!code-vb[XmlWriter.WriteStartDocument#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteStartDocument/VB/writerbook_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Tekst spowoduje także z systemem innym niż sformułowany dokument XML.  
  
 <paramref name="name" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.  Ta metoda jest używany do tworzenia deklaracji XML po <see cref="M:System.Xml.XmlWriter.WriteStartDocument" /> została już wywołana.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstructionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteProcessingInstructionAsync(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteProcessingInstructionAsync (name As String, text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteProcessingInstructionAsync(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteProcessingInstructionAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteProcessingInstructionAsync (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa instrukcji przetwarzania.</param>
        <param name="text">Tekst do uwzględnienia w instrukcji przetwarzania.</param>
        <summary>Asynchronicznie zapisuje się instrukcja przetwarzania ze spacją między nazwą i tekst: &lt;? nazwa tekst?&gt;.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteProcessingInstruction" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedName : string * string -&gt; unit&#xA;override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa do zapisu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla nazwy.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się nazwa kwalifikowana przestrzeni nazw. Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danej przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `ns` generowany jest mapowana na bieżącej domyślnej przestrzeni nazw, nie ma prefiksu.  
  
 Podczas zapisywania wartości atrybutów, ta metoda generuje prefiksu, jeśli `ns` nie znaleziono. Podczas zapisywania elementu zawartości, zgłasza wyjątek, jeśli `ns` nie znaleziono.  
  
> [!NOTE]
>  Jeśli klasą pochodną <xref:System.Xml.XmlWriter> nie należy przesłonić tę metodę `localName` zaznaczono nie jest prawidłową nazwą W3C XML. W takim przypadku przed wywołaniem tej metody ważności ciąg może być sprawdzona przez <xref:System.Xml.XmlReader.IsName%2A> metody.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteQualifiedNameAsync%2A>.  
  
   
  
## Examples  
 Przykład zapisuje następującego elementu:  
  
```xml  
<root xmlns:x="urn:abc">  
  <item href="#x:test"/>  
</root>  
```  
  
 [!code-csharp[XmlWriter_v2#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#5)]
 [!code-vb[XmlWriter_v2#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="localName" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.  
  
 <paramref name="localName" /> nie jest prawidłową nazwą.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedNameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteQualifiedNameAsync(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteQualifiedNameAsync (localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteQualifiedNameAsync(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteQualifiedNameAsync : string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteQualifiedNameAsync (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Xml.XmlWriter/&lt;WriteQualifiedNameAsync&gt;c__async1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa do zapisu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla nazwy.</param>
        <summary>Zapisuje asynchronicznie limit nazwa kwalifikowana przestrzeni nazw. Ta metoda wyszukuje prefiks, który znajduje się w zakresie dla danej przestrzeni nazw.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteQualifiedName" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje nieprzetworzone znaczników ręcznie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : string -&gt; unit" Usage="xmlWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">Ciąg zawierający tekst do zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, należy ręcznie zapisuje nieprzetworzone znaczników z ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie Usuń znaki specjalne.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlWriter> Nie można zweryfikować danych, który jest przekazywany do <xref:System.Xml.XmlWriter.WriteRaw%2A> metody. Nie należy przekazać dowolne dane do tej metody.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteRaw%2A?displayProperty=nameWithType> na przykład za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="data" /> jest ona <see langword="null" /> lub <see langword="String.Empty" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public abstract void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRaw : char[] * int * int -&gt; unit" Usage="xmlWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst można zapisać.</param>
        <param name="index">Pozycja buforu wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, należy ręcznie zapisuje nieprzetworzone znaczników z buforu znaków.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie Usuń znaki specjalne.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlWriter> Nie można zweryfikować danych, który jest przekazywany do <xref:System.Xml.XmlWriter.WriteRaw%2A> metody. Nie należy przekazać dowolne dane do tej metody.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteRawAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> lub <paramref name="count" /> jest mniejsza od zera.  - lub - długość buforu pomniejszona o <paramref name="index" /> jest mniejsza niż <paramref name="count" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRawAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczników ręcznie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteRaw%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (data As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">Ciąg zawierający tekst do zapisu.</param>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczników ręcznie z ciągu.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteRaw" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteRaw%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRawAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteRawAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteRawAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteRawAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&#xA;override this.WriteRawAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteRawAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">Tablica znaków zawierająca tekst można zapisać.</param>
        <param name="index">Pozycja buforu wskazująca początek tekstu do zapisu.</param>
        <param name="count">Liczba znaków, jaka ma zostać zapisana.</param>
        <summary>Asynchronicznie zapisuje nieprzetworzone znaczników ręcznie z buforu znaków.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteRaw" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteRaw%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje początku atrybutu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string -&gt; unit" Usage="xmlWriter.WriteStartAttribute localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <summary>Zapisuje początku atrybut o określonej nazwie lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia pisanie wartość przy użyciu różnych metod zapisu.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public void WriteStartAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartAttribute (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartAttribute : string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw atrybutu.</param>
        <summary>Zapisuje początku atrybut o określonej nazwie lokalnych i identyfikator URI przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to bardziej zaawansowanych wersji <xref:System.Xml.XmlWriter.WriteAttributeString%2A> umożliwiająca można zapisać wartości atrybutu przy użyciu wielu metod zapisywania, takich jak <xref:System.Xml.XmlWriter.WriteString%2A>, <xref:System.Xml.XmlWriter.WriteQualifiedName%2A>i tak dalej.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlTextWriter.WriteStartAttribute%2A?displayProperty=nameWithType> na przykład za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <altmember cref="M:System.Xml.XmlWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public abstract void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla atrybutu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje początku atrybutu z określonego prefiksu, lokalna nazwa i identyfikator URI przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda umożliwia pisanie wartość przy użyciu różnych metod zapisu.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartAttributeAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttributeAsync">
      <MemberSignature Language="C#" Value="protected internal virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartAttributeAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function WriteStartAttributeAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartAttributeAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartAttributeAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartAttributeAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw atrybutu.</param>
        <param name="localName">Lokalna nazwa atrybutu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw dla atrybutu.</param>
        <summary>Zapisuje asynchronicznie początku atrybutu z określonego prefiksu, lokalna nazwa i identyfikator URI przestrzeni nazw.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteStartAttribute" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteStartAttribute%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje deklaracji XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : unit -&gt; unit" Usage="xmlWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje deklaracja XML z wersji "1.0".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego. Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania. Ta metoda nie powoduje utworzenia autonomicznego atrybutu.  
  
 Gdy `WriteStartDocument` nosi nazwę modułu zapisującego sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML. Na przykład sprawdza deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej. Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.  
  
 Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, zostanie wygenerowany wyjątek.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public abstract void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocument : bool -&gt; unit" Usage="xmlWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">Jeśli <see langword="true" />, zapisuje "autonomiczny = yes"; w wypadku <see langword="false" />, zapisuje "autonomiczny = nie".</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje z wersji "1.0" i autonomicznego atrybutu deklaracji XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poziom kodowania dokumentu jest określana przez implementowania modułu zapisującego. Na przykład jeśli <xref:System.Text.Encoding> obiektu określonego w `XmlTextWriter` konstruktora, określa wartość atrybutu kodowania.  
  
 Gdy `WriteStartDocument` jest wywoływana, moduł zapisujący sprawdza, czy są zapisywania jest poprawnie sformułowany dokument XML. Na przykład sprawdza deklaracja XML jest pierwszy węzeł, że jeden i tylko jeden element poziomu głównego istnieje i tak dalej. Jeśli ta metoda nie jest wywoływana, moduł zapisujący zakłada fragmentu XML jest zapisywana i stosuje żadnych reguł poziomu głównego.  
  
 Jeśli `WriteStartDocument` została wywołana, a następnie <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> metoda służy do tworzenia innej deklaracji XML, zostanie wygenerowany wyjątek.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartDocumentAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocumentAsync">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
        <summary>Zapisuje asynchronicznie deklaracji XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync();" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapisuje asynchronicznie deklaracja XML z wersji "1.0".</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteStartDocument" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocumentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartDocumentAsync(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartDocumentAsync (standalone As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartDocumentAsync(bool standalone);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartDocumentAsync : bool -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartDocumentAsync standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">Jeśli <see langword="true" />, zapisuje "autonomiczny = yes"; w wypadku <see langword="false" />, zapisuje "autonomiczny = nie".</param>
        <summary>Zapisuje asynchronicznie z wersji "1.0" i autonomicznego atrybutu deklaracji XML.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteStartDocument" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteStartDocument%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje tagu początkowego określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string -&gt; unit" Usage="xmlWriter.WriteStartElement localName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa elementu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się tagu początkowego o określonej nazwie lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzła XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public void WriteStartElement (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartElement(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartElement (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartElement(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.WriteStartElement : string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem. Jeśli ten obszar nazw już jest w zakresie i skojarzona prefiksu, moduł zapisujący automatycznie zapisuje tego prefiksu również.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje określony tag początkowy i kojarzy ją z danej przestrzeni nazw.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wywołaniu tej metody można zapisywać atrybuty, lub utworzyć zawartości za pomocą <xref:System.Xml.XmlWriter.WriteComment%2A>, <xref:System.Xml.XmlWriter.WriteString%2A>, lub `WriteStartElement` elementów podrzędnych. Możesz zamknąć elementu w trybie <xref:System.Xml.XmlWriter.WriteEndElement%2A> lub <xref:System.Xml.XmlWriter.WriteFullEndElement%2A>. Na przykład następujący kod C#:  
  
```csharp  
writer.WriteStartElement("item",null);  
writer.WriteString("some text");  
writer.WriteEndElement();  
```  
  
 Generuje następujące dane wyjściowe:  
  
```xml  
<item>some text</item>  
```  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public abstract void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElement : string * string * string -&gt; unit" Usage="xmlWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw elementu.</param>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje tag datą początkową i kojarzy ją z danej przestrzeni nazw i prefiksu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStartElementAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje out fragmentu XML.  
  
 [!code-cpp[XmlWriter.WriteElementString#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteElementString/CPP/writeelemstring_v2.cpp#1)]
 [!code-csharp[XmlWriter.WriteElementString#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteElementString/CS/writeelemstring_v2.cs#1)]
 [!code-vb[XmlWriter.WriteElementString#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteElementString/VB/writeelemstring_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <exception cref="T:System.Text.EncoderFallbackException">Brak znaku w buforze, który jest prawidłowym znakiem XML, ale nie jest prawidłowa dla kodowania danych wyjściowych. Na przykład jeśli dane wyjściowe kodowanie ASCII, znaki z zakresu od 0 do 127 znaków należy używać tylko dla nazw elementów i atrybutów. Nieprawidłowy znak może być w argumencie tej metody lub w argumencie wcześniejszych metod, które zostały zapisywania w buforze. Znaki te są anulowane przez odwołania do jednostki znaków Jeśli to możliwe (na przykład w węzły tekstowe lub wartości atrybutów). Jednak odwołania do jednostki znaku nie jest dozwolone w nazwach elementów i atrybutów, komentarze, instrukcji przetwarzania lub sekcjach CDATA.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElementAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStartElementAsync(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStartElementAsync (prefix As String, localName As String, ns As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStartElementAsync(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStartElementAsync : string * string * string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStartElementAsync (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Prefiks przestrzeni nazw elementu.</param>
        <param name="localName">Lokalna nazwa elementu.</param>
        <param name="ns">Identyfikator URI przestrzeni nazw do skojarzenia z tym elementem.</param>
        <summary>Asynchronicznie zapisuje tag datą początkową i kojarzy ją z danej przestrzeni nazw i prefiksu.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteStartElement" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteStartElement%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera stan modułu zapisującego.</summary>
        <value>Jeden z <see cref="T:System.Xml.WriteState" /> wartości.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public abstract void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteString : string -&gt; unit" Usage="xmlWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do zapisu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje zawartość danego tekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `WriteString` wykonuje następujące czynności:  
  
-   Znaki `&`, `<`, i `>` są zastępowane `&amp;`, `&lt;`, i `&gt;`odpowiednio.  
  
-   Domyślne zachowanie <xref:System.Xml.XmlWriter> utworzone za pomocą <xref:System.Xml.XmlWriter.Create%2A> ma throw <xref:System.ArgumentException> podczas próby zapisu wartości znakowych w x-0x1F zakresu od 0 (z wyłączeniem białe znaki 0x9 0xA i 0xD). Nieprawidłowe znaki XML można napisać tak, tworząc <xref:System.Xml.XmlWriter> z <xref:System.Xml.XmlWriterSettings.CheckCharacters%2A> ustawioną właściwość `false`. W ten sposób spowoduje znaków zastępowane jednostki znaku numerycznego (&\#0; za pomocą & #0x1F). Ponadto <xref:System.Xml.XmlTextWriter> utworzone za pomocą `new` operator spowoduje zamianę nieprawidłowe znaki jednostki znaku numerycznego domyślnie.  
  
 **Uwaga** Microsoft nie zachęcać praktyki zapisywania nieprawidłowych znaków XML, ponieważ wiele aplikacji, które wykorzystują XML nie są przeznaczone do obsługi nieprawidłowe znaki.  
  
-   Jeśli `WriteString` jest wywoływana w kontekście wartość atrybutu są zastępowane cudzysłowy podwójne i jednego `&quot;` i `&apos;` odpowiednio.  
  
 Na przykład ciąg wejściowy `test<item>test` jest zapisywany jako  
  
```  
test&lt;item&gt;test  
```  
  
 Jeśli `text` jest `null` lub `String.Empty`, ta metoda zapisuje węzła tekst z zawartości danych.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteStringAsync%2A>.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzła XML.  
  
 [!code-cpp[XmlWriter.Close#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.Close/CPP/XmlWriter.Close.cpp#1)]
 [!code-csharp[XmlWriter.Close#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.Close/CS/writeelems.cs#1)]
 [!code-vb[XmlWriter.Close#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.Close/VB/writeelems.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ciąg tekstowy zawiera para zastępcza nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteStringAsync (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteStringAsync(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteStringAsync (text As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteStringAsync(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteStringAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteStringAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteStringAsync text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst do zapisu.</param>
        <summary>Zapisuje asynchronicznie podany tekst.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteString" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteString%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">Dwuskładnikowego. Musi to być wartość z zakresu od 0xDC00 do 0xDFFF.</param>
        <param name="highChar">Znakiem zastępczym wysokiego poziomu. Musi to być wartość z zakresu od 0xD800 do 0xDBFF.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej generuje i zapisuje surogatu znak jednostki dla Para dwuskładnikowa znaku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma zastosowanie tylko w systemach, które używają kodowania UTF-16.  
  
 Jednostki znaku dwuskładnikowego jest zapisywany w formacie szesnastkowym. Zakres znaków dwuskładnikowych jest #x 10000 do #x10FFFF. Następująca formuła służy do generowania jednostki znaku dwuskładnikowego: (`highChar` -0xD800) * 0x400 + (`lowChar` -0xDC00) + 0x10000  
  
 HTML i XML zestaw znaków dokumentu (i w związku z tym notacji znaku numerycznego odwołania) jest oparta na UCS [ISO-10646]. Odwołanie pojedynczego znaku numerycznego w dokumencie źródłowym może w związku z tym w niektórych przypadkach odpowiadają dwie jednostki 16-bitową w ciągu (zastępczym wysokiego poziomu i dwuskładnikowego). Te jednostki 16-bitowych są określane jako para zastępcza.  
  
 Aby uzyskać więcej informacji dotyczących surogatów lub znaków, znajdują się w sekcji 3.7 Unicode 3.0/Unicode 2.0 standardowe znajdujący się w http://www.unicode.org, lub sekcja 2.2 zaleceń 1.0 W3C XML znajduje się w http://www.w3.org/TR/REC-xml#charsets.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Przekazano parę Surogat nieprawidłowy znak.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteSurrogateCharEntityAsync(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteSurrogateCharEntityAsync (lowChar As Char, highChar As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteSurrogateCharEntityAsync(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="abstract member WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task&#xA;override this.WriteSurrogateCharEntityAsync : char * char -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteSurrogateCharEntityAsync (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">Dwuskładnikowego. Musi to być wartość z zakresu od 0xDC00 do 0xDFFF.</param>
        <param name="highChar">Znakiem zastępczym wysokiego poziomu. Musi to być wartość z zakresu od 0xD800 do 0xDBFF.</param>
        <summary>Asynchronicznie generuje i zapisuje surogatu znak jednostki dla Para dwuskładnikowa znaku.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteSurrogateCharEntity" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteSurrogateCharEntity%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteValue">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
        <summary>Zapisuje pojedynczą wartość typu prostego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter.WriteValue%2A> — Metoda akceptuje języka wspólnego (CLR) typu prostego wartości typowych konwertuje je na ich reprezentacji ciągu zgodnie z reguły konwersji typów XML schematu definition language (XSD) danych i out zapisuje je za pomocą <xref:System.Xml.XmlWriter.WriteString%2A> Metoda. Dzięki temu można w potoku wartości typu prostego z minimalnym ponownej analizy obciążenie podczas przekazywania danych między <xref:System.Xml.XPath.XPathDocument>, <xref:System.Xml.XmlReader>, i <xref:System.Xml.XmlWriter> obiektów. Ta możliwość jest również przydatne podczas pracy nad proste typy CLR i <xref:System.Xml.XmlWriter> wystąpienia. Możesz wywołać <xref:System.Xml.XmlWriter.WriteValue%2A> metody do zapisu wartości typu zamiast metod w <xref:System.Xml.XmlConvert> klasy w celu przekonwertowania wprowadzonych danych na ciąg przed jej zapisywania.  
  
 Dla asynchronicznych operacji, należy przekonwertować wartość zwracaną <xref:System.Xml.XmlWriter.WriteValue%2A> ciągu i użyj <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 W poniższej tabeli przedstawiono domyślne typy danych XSD, które odpowiadają typów CLR.  
  
 Jeśli obiekt CLR jest typu listy, takich jak <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, lub <xref:System.Collections.ICollection>, jest ona traktowana jako tablica typu wartości.  
  
|Typ CLR|Domyślny typ danych XSD|  
|--------------|---------------------------|  
|<xref:System.Boolean?displayProperty=nameWithType>|XSD:Boolean|  
|<xref:System.Byte?displayProperty=nameWithType>**|XSD:Integer|  
|<xref:System.Byte?displayProperty=nameWithType> Tablica|XSD: base64Binary|  
|<xref:System.Char?displayProperty=nameWithType>**|element xsd: String|  
|<xref:System.DateTime?displayProperty=nameWithType>|xsd:dateTime|  
|<xref:System.Decimal?displayProperty=nameWithType>|XSD:decimal|  
|<xref:System.Double?displayProperty=nameWithType>|XSD:Double|  
|<xref:System.Int16?displayProperty=nameWithType>**|XSD:Integer|  
|<xref:System.Int32?displayProperty=nameWithType>|XSD:Integer|  
|<xref:System.Int64?displayProperty=nameWithType>|XSD:Integer|  
|<xref:System.Single?displayProperty=nameWithType>|XSD:float|  
|<xref:System.String?displayProperty=nameWithType>|element xsd: String|  
|<xref:System.IO.TextReader?displayProperty=nameWithType>|element xsd: String|  
|<xref:System.IO.BinaryReader?displayProperty=nameWithType>|XSD: base64Binary|  
  
 ** Te typy nie są zgodne ze specyfikacją CLS. Nie mają odpowiadającego <xref:System.Xml.XmlWriter.WriteValue%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : bool -&gt; unit&#xA;override this.WriteValue : bool -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Boolean" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.Boolean" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTime -&gt; unit&#xA;override this.WriteValue : DateTime -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.DateTime" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.DateTime" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzła książki przy użyciu typu danych.  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : DateTimeOffset -&gt; unit&#xA;override this.WriteValue : DateTimeOffset -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.DateTimeOffset" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.DateTimeOffset" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : decimal -&gt; unit&#xA;override this.WriteValue : decimal -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Decimal" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.Decimal" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : double -&gt; unit&#xA;override this.WriteValue : double -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Double" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.Double" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
   
  
## Examples  
 Poniższy przykład zapisuje węzła książki przy użyciu typu danych.  
  
 [!code-csharp[XmlWriter_v2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter_v2/CS/writer_v2.cs#1)]
 [!code-vb[XmlWriter_v2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter_v2/VB/writer_v2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int -&gt; unit&#xA;override this.WriteValue : int -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Int32" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.Int32" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : int64 -&gt; unit&#xA;override this.WriteValue : int64 -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Int64" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.Int64" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : obj -&gt; unit&#xA;override this.WriteValue : obj -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Wartość obiektu do zapisania.  ** Uwaga ** wraz z wydaniem programu .NET Framework 3.5, ta metoda przyjmuje <see cref="T:System.DateTimeOffset" /> jako parametr.</param>
        <summary>Zapisuje wartość obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje wspólne obiektu języka środowiska uruchomieniowego (języka wspólnego CLR) i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Jeśli obiekt CLR jest typu listy takich jak <xref:System.Collections.IEnumerable>, <xref:System.Collections.IList>, lub <xref:System.Collections.ICollection>, jest ona traktowana jako tablica typu wartości. <xref:System.Xml.XmlWriter> Konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : single -&gt; unit&#xA;override this.WriteValue : single -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">Liczba zmiennoprzecinkowych pojedynczej precyzji do zapisu.</param>
        <summary>Zapisuje liczbie zmiennoprzecinkowej pojedynczej precyzji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Gdy <xref:System.Xml.XmlWriter.WriteValue%2A> metoda jest wywoływana, <xref:System.Xml.XmlWriter> konwertuje wartość na ciąg oświadczeń zgodnie z typem danych schematu XML (XSD) zasady i zapisuje go się przy użyciu <xref:System.Xml.XmlWriter.WriteString%2A> metody.  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, zwracana wartość ta metoda jest skonwertowana do ciągu i używać <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteValue">
      <MemberSignature Language="C#" Value="public virtual void WriteValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteValue : string -&gt; unit&#xA;override this.WriteValue : string -&gt; unit" Usage="xmlWriter.WriteValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.String" /> Wartość do zapisania.</param>
        <summary>Zapisuje <see cref="T:System.String" /> wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda przyjmuje obiektu środowiska uruchomieniowego języka wspólnego i konwertuje wartość wejściowa typu żądanego wyniku, przy użyciu reguły konwersji typów danych schematu XML definition language (XSD).  
  
 Jeśli <xref:System.Xml.XmlWriter.WriteValue%2A> jest wywołana wiele razy pod rząd, wartości nie są rozdzielane spacją. Należy wywołać <xref:System.Xml.XmlWriter.WriteWhitespace%2A> między wywołań <xref:System.Xml.XmlWriter.WriteValue%2A> do wstawienia biały znak. Typ tablicowy do przekazania <xref:System.Xml.XmlWriter.WriteValue%28System.Object%29?displayProperty=nameWithType> przeciążenia zapisać tablicy unikatowe wartości.  
  
 Jeśli ta metoda jest wywoływana na <xref:System.Xml.XmlWriter> wystąpienie tego wyjść tekstowy, wartość jest serializowany na tekst.  
  
 Operacje asynchroniczne, można użyć <xref:System.Xml.XmlWriter.WriteStringAsync%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określono nieprawidłową wartość.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public abstract void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespace : string -&gt; unit" Usage="xmlWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">Ciąg znaków odstępu.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, zapisuje się danego biały znak.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do formatowania ręcznie dokumentu.  
  
 Asynchroniczne wersja tej metody dla <xref:System.Xml.XmlWriter.WriteWhitespaceAsync%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ciąg zawiera znaki z systemem innym niż biały znak.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespaceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteWhitespaceAsync(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WriteWhitespaceAsync (ws As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ WriteWhitespaceAsync(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="abstract member WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.WriteWhitespaceAsync : string -&gt; System.Threading.Tasks.Task" Usage="xmlWriter.WriteWhitespaceAsync ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">Ciąg znaków odstępu.</param>
        <summary>Zapisuje asynchronicznie limit danego biały znak.</summary>
        <returns>Zadanie reprezentujące asynchroniczną <see langword="WriteWhitespace" /> operacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to wersja asynchroniczna elementu <xref:System.Xml.XmlWriter.WriteWhitespace%2A>, z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlWriterSettings.Async%2A> flaga `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Wywołano asynchroniczną metodę bez ustawienia <see cref="P:System.Xml.XmlWriterSettings.Async" /> flaga <see langword="true" />. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest zgłaszany z komunikatem "Ustaw właściwość XmlWriterSettings.Async na wartość true, jeśli chcesz używać metod asynchronicznych".</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera bieżącą <see langword="xml:lang" /> zakresu.</summary>
        <value>Bieżący <see langword="xml:lang" /> zakresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia jeden składnik dowiedzieć się, w co stanie się, że inny składnik opuścił modułu zapisującego. Na przykład prawdopodobnie jeden składnik chce Poinformuj inny język tekstu pomocy do wygenerowania. Informacje o języku są przekazywane przez napisanie `xml:lang` atrybutu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej pobiera <see cref="T:System.Xml.XmlSpace" /> reprezentujący bieżącą <see langword="xml:space" /> zakresu.</summary>
        <value>
          <see langword="XmlSpace" /> Reprezentujący bieżącą <see langword="xml:space" /> zakresu.  
  
 <list type="table"><listheader><term> Wartość </term><description> znaczenie </description></listheader><item><term><see langword="None" /></term><description> jest wartością domyślną, jeśli nie <see langword="xml:space" /> istnieje zakres.  </description></item><item><term><see langword="Default" /></term><description> Bieżący zakres jest <see langword="xml:space" />= "default".  </description></item><item><term><see langword="Preserve" /></term><description> Bieżący zakres jest <see langword="xml:space" />= "preserve".  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dzięki temu jeden składnik dowiedzieć się, jakie stanu inny składnik opuścił zapisywania w.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xml.XmlWriter" /> Metoda została wywołana przed ukończeniem poprzedniej operacji asynchronicznej. W takim przypadku <see cref="T:System.InvalidOperationException" /> jest generowany komunikat "Operacja asynchroniczna jest już w toku."</exception>
      </Docs>
    </Member>
  </Members>
</Type>