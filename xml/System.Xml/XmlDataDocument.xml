<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDataDocument.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b857fe3" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2eccf4de-4b1c-4706-8cb3-f46682ccfb721181646fe94f3981c0077c75187bb9b5fe5b32fb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1181646fe94f3981c0077c75187bb9b5fe5b32fb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b15b8cf0f6dbc1504057c88969d9ef4b790891fe</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/11/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Allows structured data to be stored, retrieved, and manipulated through a relational <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Umożliwia danych strukturalnych przechowywane, pobieranie i manipulowanie za pośrednictwem relacyjne <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This class extends <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</source>
          <target state="translated">Ta klasa rozszerza <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</source>
          <target state="translated">Dzięki temu można załadować danych relacyjnych lub danych XML i manipulowania danych przy użyciu sieci World Wide Web konsorcjum W3C modelu DOM (Document Object).</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The DOM presents data as a hierarchy of node objects.</source>
          <target state="translated">Modelu DOM przedstawia dane jako hierarchię obiektów węzła.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Because <ph id="ph1">`XmlDataDocument`</ph> implements the <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface, it can also be used as the source document for the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
          <target state="translated">Ponieważ <ph id="ph1">`XmlDataDocument`</ph> implementuje <ph id="ph2">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interfejsu, może również służyć jako dokument źródłowy dla <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> has a close affiliation with the <ph id="ph2">`DataSet`</ph> class, which provides a relational view of the loaded XML data.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> Zamknij przynależności ma <ph id="ph2">`DataSet`</ph> klasy, która dostarcza relacyjny widok danych XML.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>Any changes made to the <ph id="ph1">`XmlDataDocument`</ph> are reflected in the <ph id="ph2">`DataSet`</ph> and vice versa.</source>
          <target state="translated">Wszelkie zmiany wprowadzone do <ph id="ph1">`XmlDataDocument`</ph> są uwzględniane w <ph id="ph2">`DataSet`</ph> i na odwrót.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load a <ph id="ph1">`DataSet`</ph> with XML data, use <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> to build a relational mapping.</source>
          <target state="translated">Aby załadować <ph id="ph1">`DataSet`</ph> danych XML za pomocą <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> do tworzenia mapowania relacyjnego.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>The XML data can then be loaded using <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</source>
          <target state="translated">Dane XML mogą następnie ładowane przy użyciu <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument.Load%2A&gt;</ph> lub <ph id="ph2">&lt;xref:System.Xml.XmlDocument.LoadXml%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>To load relational data, specify the <ph id="ph1">`DataSet`</ph> containing the relational data as the parameter in the <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">Aby załadować relacyjnej bazie danych, określ <ph id="ph1">`DataSet`</ph> zawierającego dane relacyjne jako parametr w <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument.%23ctor%2A&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor">
          <source>An empty <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and associated with the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Pusta <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> jest utworzona i skojarzona z <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> to load into <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> Załadować do <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The <ph id="ph1">`XmlDataDocument`</ph> is synchronized with the specified <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> Jest zsynchronizowany z określonym <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any data in the <ph id="ph1">`DataSet`</ph> is immediately available through the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Wszystkie dane w <ph id="ph1">`DataSet`</ph> jest natychmiast dostępna za pośrednictwem <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes in the <ph id="ph1">`DataSet`</ph> are propagated in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Zmiany wprowadzone w <ph id="ph1">`DataSet`</ph> są propagowane w <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>Any changes made in the <ph id="ph1">`XmlDataDocument`</ph>, provided they match the <ph id="ph2">`DataSet`</ph> schema, are propagated in the <ph id="ph3">`DataSet`</ph>.</source>
          <target state="translated">Wszystkie zmiany dokonane w <ph id="ph1">`XmlDataDocument`</ph>, o ile są one zgodne <ph id="ph2">`DataSet`</ph> schematu, są propagowane w <ph id="ph3">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The following example loads a customer table into an <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">Poniższy przykład ładuje tabelę klienta do <ph id="ph1">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to recursively clone the subtree under the specified node; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to clone only the node itself.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby rekursywnie sklonować poddrzewo w określonym węźle; <ph id="ph2">&lt;see langword="false" /&gt;</ph> sklonować tylko węzeł.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Creates a duplicate of the current node.</source>
          <target state="translated">Tworzy kopię bieżącego węzła.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The cloned node.</source>
          <target state="translated">Sklonowany węzła.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>Cloning the <ph id="ph1">`XmlDataDocument`</ph> also clones the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schema.</source>
          <target state="translated">Klonowanie <ph id="ph1">`XmlDataDocument`</ph> również klonów <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> schematu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`false`</ph>, the cloned <ph id="ph3">`DataSet`</ph> has no data; that is, no rows.</source>
          <target state="translated">Jeśli <ph id="ph1">`deep`</ph> ustawiono <ph id="ph2">`false`</ph>, sklonowany <ph id="ph3">`DataSet`</ph> ma nie dane; żadne wiersze.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>If <ph id="ph1">`deep`</ph> is set to <ph id="ph2">`true`</ph>, the cloned <ph id="ph3">`DataSet`</ph> is set with the schema and then populated with the data.</source>
          <target state="translated">Jeśli <ph id="ph1">`deep`</ph> ustawiono <ph id="ph2">`true`</ph>, sklonowany <ph id="ph3">`DataSet`</ph> ustawieniu ze schematem i następnie wypełniony danymi.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>See <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> in the <ph id="ph2">`XmlNode`</ph> class to see a table describing how this method behaves with each of the different node types.</source>
          <target state="translated">Zobacz <ph id="ph1">&lt;xref:System.Xml.XmlNode.CloneNode%2A&gt;</ph> w <ph id="ph2">`XmlNode`</ph> klasy, aby wyświetlić tabelę opisujące, jak ta metoda ma zachowywać się z poszczególnych typów innego węzła.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates a shallow clone of the <ph id="ph3">`XmlDataDocument`</ph>.</source>
          <target state="translated">Poniższy przykład załaduje <ph id="ph1">`DataSet`</ph> do <ph id="ph2">`XmlDataDocument`</ph> , a następnie tworzy pobieżnego klonu <ph id="ph3">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The prefix of the new element.</source>
          <target state="translated">Prefiks nowego elementu.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no prefix.</source>
          <target state="translated">Jeśli String.Empty lub <ph id="ph1">&lt;see langword="null" /&gt;</ph>, brak nie ma prefiksu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The local name of the new element.</source>
          <target state="translated">Lokalna nazwa nowego elementu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>The namespace Uniform Resource Identifier (URI) of the new element.</source>
          <target state="translated">Przestrzeń nazw zasobów identyfikator URI (Uniform) nowego elementu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>If String.Empty or <ph id="ph1">&lt;see langword="null" /&gt;</ph>, there is no namespaceURI.</source>
          <target state="translated">Jeśli String.Empty lub <ph id="ph1">&lt;see langword="null" /&gt;</ph>, nie namespaceURI nie istnieje.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Creates an element with the specified <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> , and <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</source>
          <target state="translated">Tworzy element z określonym <ph id="ph1">&lt;see cref="P:System.Xml.XmlNode.Prefix" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.LocalName" /&gt;</ph> , i <ph id="ph3">&lt;see cref="P:System.Xml.XmlNode.NamespaceURI" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Nowy <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source><ph id="ph1">`Note to Inheritors`</ph> If you overload this function, it cannot be used for extensibility.</source>
          <target state="translated"><ph id="ph1">`Note to Inheritors`</ph> Przeciążenie tej funkcji, nie może służyć do rozszerzalności.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>Instead, you can return an element created by the base class, in this case, <ph id="ph1">`XmlDataDocument`</ph>.</source>
          <target state="translated">Zamiast tego można zwrócić elementu utworzone przez klasę podstawową, ale w takim przypadku <ph id="ph1">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)">
          <source>See the following example.</source>
          <target state="translated">Zobacz poniższy przykład.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>The name of the entity reference.</source>
          <target state="translated">Nazwa odwołania do jednostki.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> o określonej nazwie.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> with the specified name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlEntityReference" /&gt;</ph> o określonej nazwie.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> nodes cannot be created for <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlEntityReference&gt;</ph> Nie można utworzyć węzłów <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> obiektów.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">Wywołanie tej metody zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)">
          <source>Calling this method.</source>
          <target state="translated">Wywołanie tej metody.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> you want the navigator initially positioned on.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNode" /&gt;</ph> Ma Nawigatora wstępnie ustawiony na.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> object for navigating this document.</source>
          <target state="translated">Tworzy nową <ph id="ph1">&lt;see cref="T:System.Xml.XPath.XPathNavigator" /&gt;</ph> obiektu do nawigowania tego dokumentu.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> is positioned on the node specified in the <ph id="ph2">&lt;paramref name="node" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> Znajduje się w węźle określony w <ph id="ph2">&lt;paramref name="node" /&gt;</ph> parametru.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>An <ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> used to navigate the document.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XPathNavigator" /&gt;</ph> Służące do nawigacji dokumentu.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
          <target state="translated"><ph id="ph1">`XPathNavigator`</ph> Zapewnia tylko do odczytu, losowy dostęp do danych.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">Ponieważ jest zoptymalizowany do przekształcenia XSLT, zapewnia korzyści wydajności, gdy jest używany jako mechanizmu wejściowych do <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)">
          <source>To see an XSLT transformation using <ph id="ph1">`XmlDataDocument`</ph> and an <ph id="ph2">`XPathNavigator`</ph>, see the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Aby wyświetlić przekształcenie XSLT przy użyciu <ph id="ph1">`XmlDataDocument`</ph> i <ph id="ph2">`XPathNavigator`</ph>, zobacz <ph id="ph3">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that provides a relational representation of the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zapewnia relacyjne reprezentację danych w <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>A <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> that can be used to access the data in the <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> using a relational model.</source>
          <target state="translated">A <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> można uzyskać dostęp do danych <ph id="ph2">&lt;see langword="XmlDataDocument" /&gt;</ph> przy użyciu modelu relacyjne.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> enables you to access the data in the <ph id="ph2">`XmlDataDocument`</ph> using a relational model.</source>
          <target state="translated"><ph id="ph1">`DataSet`</ph> Umożliwia dostęp do danych w <ph id="ph2">`XmlDataDocument`</ph> przy użyciu modelu relacyjne.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>This means that you can handle the data as tables and views, rows and columns, relations, and so on.</source>
          <target state="translated">Oznacza to, że można danych należy traktować jak tabele i widoki, wiersze i kolumny, relacji i tak dalej.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>Changes made in the <ph id="ph1">`DataSet`</ph> are immediately visible in the <ph id="ph2">`XmlDataDocument`</ph>.</source>
          <target state="translated">Zmiany wprowadzone w <ph id="ph1">`DataSet`</ph> są od razu widoczne w <ph id="ph2">`XmlDataDocument`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">Poniższy przykład modyfikuje cen przy użyciu książki <ph id="ph1">`DataSet`</ph> metody.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.XmlDataDocument.DataSet">
          <source>The example uses the following two files as input.</source>
          <target state="translated">W przykładzie użyto następujące dwa pliki jako dane wejściowe.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>The attribute ID to match.</source>
          <target state="translated">Identyfikator atrybutu do dopasowania.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> o określonym identyfikatorze.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> class.</source>
          <target state="translated">Ta metoda nie jest obsługiwana przez <ph id="ph1">&lt;see cref="T:System.Xml.XmlDataDocument" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method throws an exception.</source>
          <target state="translated">Wywołanie tej metody zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> with the specified ID.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> o określonym identyfikatorze.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>This method is not supported by the <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> class.</source>
          <target state="translated">Ta metoda nie jest obsługiwana przez <ph id="ph1">&lt;xref:System.Xml.XmlDataDocument&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementById(System.String)">
          <source>Calling this method.</source>
          <target state="translated">Wywołanie tej metody.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> you want to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> Których skojarzone <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph> do pobrania.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph> skojarzonego z określonym <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> containing a representation of the specified <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> Zawierający reprezentację określonego <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The following example loads a <ph id="ph1">`DataSet`</ph> into an <ph id="ph2">`XmlDataDocument`</ph> and then creates an <ph id="ph3">`XmlElement`</ph> representing the first customer record.</source>
          <target state="translated">Poniższy przykład załaduje <ph id="ph1">`DataSet`</ph> do <ph id="ph2">`XmlDataDocument`</ph> , a następnie tworzy <ph id="ph3">`XmlElement`</ph> reprezentujący pierwszy rekord klienta.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)">
          <source>The example uses the SQL Server 2000 Northwind database.</source>
          <target state="translated">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The qualified name to match.</source>
          <target state="translated">Kwalifikowana nazwa do dopasowania.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is matched against the <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> property of the matching node.</source>
          <target state="translated">Jest dopasowywana <ph id="ph1">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph> właściwości pasujących węzła.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>The special value "*" matches all tags.</source>
          <target state="translated">Specjalna wartość "*" dopasowuje wszystkie tagi.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all descendant elements that match the specified <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph>.</source>
          <target state="translated">Zwraca <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> zawierający listę wszystkich elementów podrzędnych, które pasują do określonego <ph id="ph2">&lt;see cref="P:System.Xml.XmlDocument.Name" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> containing a list of all matching nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> Zawierający listę wszystkich zgodne węzły.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)">
          <source>It is recommended that you use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> method instead of the <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> method.</source>
          <target state="translated">Zaleca się, że używasz <ph id="ph1">&lt;xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph2">&lt;xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType&gt;</ph> zamiast metody <ph id="ph3">&lt;xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> whose associated <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> you want to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlElement" /&gt;</ph> Których skojarzone <ph id="ph2">&lt;see langword="DataRow" /&gt;</ph> do pobrania.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>Retrieves the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> associated with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</source>
          <target state="translated">Pobiera <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> skojarzonego z określonym <ph id="ph2">&lt;see cref="T:System.Xml.XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> containing a representation of the <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> if there is no <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> associated with the <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> Zawierający reprezentację <ph id="ph2">&lt;see langword="XmlElement" /&gt;</ph>; <ph id="ph3">&lt;see langword="null" /&gt;</ph> w przypadku nie <ph id="ph4">&lt;see langword="DataRow" /&gt;</ph> skojarzone z <ph id="ph5">&lt;see langword="XmlElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The following example modifies the price of the first book.</source>
          <target state="translated">Poniższy przykład modyfikuje ceny pierwszej książki.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)">
          <source>The example uses the following input files:</source>
          <target state="translated">W przykładzie użyto następujących plików wejściowych:</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.Xml.XmlDataDocument">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified data source and synchronizes the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the loaded data.</source>
          <target state="translated">Ładunki <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> przy użyciu określonego źródła danych i synchronizuje <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> z ładowanych danych.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Można to zrobić przez wywołanie <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> metody lub przez tworzenie tabel i kolumn w <ph id="ph2">`DataSet`</ph> ręcznie.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Ten krok należy wykonać przed wywołaniem <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> nie obsługuje tworzenia odwołań do jednostek.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Jeśli dane zawierają odwołania do jednostki, <ph id="ph1">`Load`</ph> metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.XmlDataDocument">
          <source>However, if you are using the <ph id="ph1">`Load`</ph> overload that takes a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> as an argument, you must specify an <ph id="ph3">`XmlReader`</ph> that can resolve entities.</source>
          <target state="translated">Jednak jeśli używasz <ph id="ph1">`Load`</ph> przeciążenia, które przyjmuje <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> jako argument, należy określić <ph id="ph3">`XmlReader`</ph> to rozwiąże jednostek.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>The stream containing the XML document to load.</source>
          <target state="translated">Strumień, zawierający można załadować dokumentu XML.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified stream.</source>
          <target state="translated">Ładunki <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> z określonego strumienia.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> nie obsługuje tworzenia odwołań do jednostek.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Jeśli dane zawierają odwołania do jednostki, <ph id="ph1">`Load`</ph> metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Można to zrobić przez wywołanie <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> metody lub przez tworzenie tabel i kolumn w <ph id="ph2">`DataSet`</ph> ręcznie.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Ten krok należy wykonać przed wywołaniem <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> used to feed the XML data into the document.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> Używane do strumieniowego źródła danych XML do dokumentu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Ładunki <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> z określonego <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> nie obsługuje tworzenia odwołań do jednostek.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Jeśli dane zawierają odwołania do jednostki, <ph id="ph1">`Load`</ph> metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Można to zrobić przez wywołanie <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> metody lub przez tworzenie tabel i kolumn w <ph id="ph2">`DataSet`</ph> ręcznie.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Ten krok należy wykonać przed wywołaniem <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>The URL of the file containing the XML document to load.</source>
          <target state="translated">Adres URL pliku zawierającego dokument XML do załadowania.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> using the specified URL.</source>
          <target state="translated">Ładunki <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> przy użyciu określonego adresu URL.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> nie obsługuje tworzenia odwołań do jednostek.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>If the data includes entity references, the <ph id="ph1">`Load`</ph> method resolves and expands any entity references.</source>
          <target state="translated">Jeśli dane zawierają odwołania do jednostki, <ph id="ph1">`Load`</ph> metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>In order to view the XML data relationally, you must first specify a schema to use for data mapping.</source>
          <target state="translated">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This can be done either by calling the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method or by creating the tables and columns within the <ph id="ph2">`DataSet`</ph> manually.</source>
          <target state="translated">Można to zrobić przez wywołanie <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> metody lub przez tworzenie tabel i kolumn w <ph id="ph2">`DataSet`</ph> ręcznie.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.String)">
          <source>This step must be done before calling <ph id="ph1">`Load`</ph>.</source>
          <target state="translated">Ten krok należy wykonać przed wywołaniem <ph id="ph1">`Load`</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> containing the XML document to load.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlReader" /&gt;</ph> Zawierający można załadować dokumentu XML.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>Loads the <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Ładunki <ph id="ph1">&lt;see langword="XmlDataDocument" /&gt;</ph> z określonego <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`XmlDataDocument`</ph> does not support creating entity references.</source>
          <target state="translated"><ph id="ph1">`XmlDataDocument`</ph> nie obsługuje tworzenia odwołań do jednostek.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the data source contains entity references, you must create an <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the <ph id="ph3">`XmlValidatingReader`</ph> to the <ph id="ph4">`Load`</ph> method.</source>
          <target state="translated">Jeśli źródło danych zawiera odwołania do jednostki, należy utworzyć <ph id="ph1">&lt;xref:System.Xml.XmlValidatingReader&gt;</ph> z <ph id="ph2">&lt;xref:System.Xml.XmlValidatingReader.EntityHandling%2A&gt;</ph> właściwości wartość elementu EntityHandling.ExpandEntities (jest to domyślne zachowanie) i przekaż <ph id="ph3">`XmlValidatingReader`</ph> do <ph id="ph4">`Load`</ph> metody.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If you do not use an <ph id="ph1">`XmlValidatingReader`</ph>, the <ph id="ph2">`Load`</ph> method throws an exception.</source>
          <target state="translated">Jeśli nie używasz <ph id="ph1">`XmlValidatingReader`</ph>, <ph id="ph2">`Load`</ph> metoda zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`Load`</ph> method always preserves significant white space.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> Metody zawsze zachowuje znaczący biały znak.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> property determines whether or not white space is preserved.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlDocument.PreserveWhitespace%2A&gt;</ph> Właściwość określa, czy biały znak są zachowywane.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The default is <ph id="ph1">`false`</ph>, white space is not preserved.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">`false`</ph>, biały znak nie są zachowywane.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is in the initial state (that is, ReadState=ReadState.Initial), <ph id="ph1">`Load`</ph> consumes the entire contents of the reader and builds the DOM from what it finds.</source>
          <target state="translated">Jeśli czytnik jest w stanie początkowym (czyli ReadState=ReadState.Initial) <ph id="ph1">`Load`</ph> zużywa całą zawartość czytnika danych i tworzy DOM z ich znalezienia.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</source>
          <target state="translated">Jeśli czytnik jest już ustawiony na jednego z węzłów przy głębokości "n", ta metoda ładuje ten węzeł i wszystkie kolejne elementy równorzędne do tagu końcowego, który zamyka głębokość "n".</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>This has the following results.</source>
          <target state="translated">Ma to następujące wyniki.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">Jeśli bieżącego węzła i jego następujące elementy równorzędne wyglądać podobnie do następującego:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> throws an exception, because a document cannot have two root-level elements.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> zgłasza wyjątek, ponieważ dokument nie może mieć dwóch elementów głównego poziomu.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the current node and its following siblings look similar to the following:</source>
          <target state="translated">Jeśli bieżącego węzła i jego następujące elementy równorzędne wyglądać podobnie do następującego:</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source><ph id="ph1">`Load`</ph> will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</source>
          <target state="translated"><ph id="ph1">`Load`</ph> się pomyślnie; jednak należy niekompletne drzewa modelu DOM, ponieważ nie istnieje żaden element głównego poziomu.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>You have to add a root-level element before you save the document; otherwise, the <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> method throws an exception.</source>
          <target state="translated">Należy dodać element poziomu głównego przed zapisaniem dokumentu. w przeciwnym razie <ph id="ph1">&lt;xref:System.Xml.XmlDocument.Save%2A&gt;</ph> metoda zgłasza wyjątek.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</source>
          <target state="translated">Jeśli czytnik jest ustawiony na węzeł liścia, który jest nieprawidłowy dla poziomu głównego dokumentu (na przykład białe miejsca lub atrybut węzłem), czytnik będzie kontynuowane do odczytu, dopóki nie zostanie on ustawiony na węźle, który może służyć do katalogu głównego.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The document begins loading at this point.</source>
          <target state="translated">Dokument rozpoczyna się w tym momencie ładowania.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The following example modifies the price of a book using the <ph id="ph1">`DataSet`</ph> methods.</source>
          <target state="translated">Poniższy przykład modyfikuje cen przy użyciu książki <ph id="ph1">`DataSet`</ph> metody.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The example uses the following two input files.</source>
          <target state="translated">W przykładzie użyto następujących dwóch plików wejściowych.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)">
          <source>The XML being loaded contains entity references, and the reader cannot resolve entities.</source>
          <target state="translated">Trwa ładowanie pliku XML zawiera odwołania do jednostek i czytnik nie może rozpoznać jednostki.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>