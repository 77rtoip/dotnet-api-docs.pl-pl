<Type Name="XmlDataDocument" FullName="System.Xml.XmlDataDocument">
  <TypeSignature Language="C#" Value="public class XmlDataDocument : System.Xml.XmlDocument" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataDocument extends System.Xml.XmlDocument" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlDataDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataDocument&#xA;Inherits XmlDocument" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataDocument : System::Xml::XmlDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlDocument</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("XmlDataDocument class will be removed in a future release.")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="480b5-101">Umożliwia danych strukturalnych przechowywane, pobieranie i manipulowanie za pośrednictwem relacyjne <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-101">Allows structured data to be stored, retrieved, and manipulated through a relational <see cref="T:System.Data.DataSet" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-102">Ta klasa rozszerza <xref:System.Xml.XmlDocument>.</span><span class="sxs-lookup"><span data-stu-id="480b5-102">This class extends <xref:System.Xml.XmlDocument>.</span></span> <span data-ttu-id="480b5-103">Dzięki temu można załadować danych relacyjnych lub danych XML i manipulowania danych przy użyciu sieci World Wide Web konsorcjum W3C modelu DOM (Document Object).</span><span class="sxs-lookup"><span data-stu-id="480b5-103">It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM).</span></span> <span data-ttu-id="480b5-104">Modelu DOM przedstawia dane jako hierarchię obiektów węzła.</span><span class="sxs-lookup"><span data-stu-id="480b5-104">The DOM presents data as a hierarchy of node objects.</span></span> <span data-ttu-id="480b5-105">Ponieważ `XmlDataDocument` implementuje <xref:System.Xml.XPath.IXPathNavigable> interfejsu, może również służyć jako dokument źródłowy dla <xref:System.Xml.Xsl.XslTransform> klasy.</span><span class="sxs-lookup"><span data-stu-id="480b5-105">Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="480b5-106">`XmlDataDocument` Zamknij przynależności ma `DataSet` klasy, która dostarcza relacyjny widok danych XML.</span><span class="sxs-lookup"><span data-stu-id="480b5-106">`XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data.</span></span> <span data-ttu-id="480b5-107">Wszelkie zmiany wprowadzone do `XmlDataDocument` są uwzględniane w `DataSet` i na odwrót.</span><span class="sxs-lookup"><span data-stu-id="480b5-107">Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.</span></span>  
  
 <span data-ttu-id="480b5-108">Aby załadować `DataSet` danych XML za pomocą <xref:System.Data.DataSet.ReadXmlSchema%2A> do tworzenia mapowania relacyjnego.</span><span class="sxs-lookup"><span data-stu-id="480b5-108">To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping.</span></span> <span data-ttu-id="480b5-109">Dane XML mogą następnie ładowane przy użyciu <xref:System.Xml.XmlDataDocument.Load%2A> lub <xref:System.Xml.XmlDocument.LoadXml%2A>.</span><span class="sxs-lookup"><span data-stu-id="480b5-109">The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.</span></span>  
  
 <span data-ttu-id="480b5-110">Aby załadować relacyjnej bazie danych, określ `DataSet` zawierającego dane relacyjne jako parametr w <xref:System.Xml.XmlDataDocument.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="480b5-110">To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="480b5-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlDataDocument" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="480b5-111">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="480b5-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlDataDocument" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="480b5-112">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-113">Pusta <xref:System.Data.DataSet> jest utworzona i skojarzona z `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-113">An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataDocument (System.Data.DataSet dataset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.DataSet dataset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataDocument(System::Data::DataSet ^ dataset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataset" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataset"><span data-ttu-id="480b5-114"><see langword="DataSet" /> Załadować do <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-114">The <see langword="DataSet" /> to load into <see langword="XmlDataDocument" />.</span></span></param>
        <summary><span data-ttu-id="480b5-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlDataDocument" /> klasy z określonym <see cref="T:System.Data.DataSet" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-115">Initializes a new instance of the <see cref="T:System.Xml.XmlDataDocument" /> class with the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-116">`XmlDataDocument` Jest zsynchronizowany z określonym `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="480b5-116">The `XmlDataDocument` is synchronized with the specified `DataSet`.</span></span> <span data-ttu-id="480b5-117">Wszystkie dane w `DataSet` jest natychmiast dostępna za pośrednictwem `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-117">Any data in the `DataSet` is immediately available through the `XmlDataDocument`.</span></span> <span data-ttu-id="480b5-118">Zmiany wprowadzone w `DataSet` są propagowane w `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-118">Any changes in the `DataSet` are propagated in the `XmlDataDocument`.</span></span> <span data-ttu-id="480b5-119">Wszystkie zmiany dokonane w `XmlDataDocument`, o ile są one zgodne `DataSet` schematu, są propagowane w `DataSet`.</span><span class="sxs-lookup"><span data-stu-id="480b5-119">Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="480b5-120">Poniższy przykład ładuje tabelę klienta do `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-120">The following example loads a customer table into an `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="480b5-121">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="480b5-121">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlConnection" />
        <altmember cref="T:System.Data.SqlClient.SqlDataAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CloneNode (deep As Boolean) As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNode ^ CloneNode(bool deep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deep">
          <span data-ttu-id="480b5-122"><see langword="true" /> Aby rekursywnie sklonować poddrzewo w określonym węźle; <see langword="false" /> sklonować tylko węzeł.</span><span class="sxs-lookup"><span data-stu-id="480b5-122"><see langword="true" /> to recursively clone the subtree under the specified node; <see langword="false" /> to clone only the node itself.</span></span></param>
        <summary><span data-ttu-id="480b5-123">Tworzy kopię bieżącego węzła.</span><span class="sxs-lookup"><span data-stu-id="480b5-123">Creates a duplicate of the current node.</span></span></summary>
        <returns><span data-ttu-id="480b5-124">Sklonowany węzła.</span><span class="sxs-lookup"><span data-stu-id="480b5-124">The cloned node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-125">Klonowanie `XmlDataDocument` również klonów <xref:System.Data.DataSet> schematu.</span><span class="sxs-lookup"><span data-stu-id="480b5-125">Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.</span></span>  
  
 <span data-ttu-id="480b5-126">Jeśli `deep` ustawiono `false`, sklonowany `DataSet` ma nie dane; żadne wiersze.</span><span class="sxs-lookup"><span data-stu-id="480b5-126">If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.</span></span>  
  
 <span data-ttu-id="480b5-127">Jeśli `deep` ustawiono `true`, sklonowany `DataSet` ustawieniu ze schematem i następnie wypełniony danymi.</span><span class="sxs-lookup"><span data-stu-id="480b5-127">If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.</span></span>  
  
 <span data-ttu-id="480b5-128">Zobacz <xref:System.Xml.XmlNode.CloneNode%2A> w `XmlNode` klasy, aby wyświetlić tabelę opisujące, jak ta metoda ma zachowywać się z poszczególnych typów innego węzła.</span><span class="sxs-lookup"><span data-stu-id="480b5-128">See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="480b5-129">Poniższy przykład załaduje `DataSet` do `XmlDataDocument` , a następnie tworzy pobieżnego klonu `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-129">The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.</span></span>  
  
 <span data-ttu-id="480b5-130">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="480b5-130">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement CreateElement(string prefix, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateElement (prefix As String, localName As String, namespaceURI As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ CreateElement(System::String ^ prefix, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="480b5-131">Prefiks nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="480b5-131">The prefix of the new element.</span></span> <span data-ttu-id="480b5-132">Jeśli String.Empty lub <see langword="null" />, brak nie ma prefiksu.</span><span class="sxs-lookup"><span data-stu-id="480b5-132">If String.Empty or <see langword="null" />, there is no prefix.</span></span></param>
        <param name="localName"><span data-ttu-id="480b5-133">Lokalna nazwa nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="480b5-133">The local name of the new element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="480b5-134">Przestrzeń nazw zasobów identyfikator URI (Uniform) nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="480b5-134">The namespace Uniform Resource Identifier (URI) of the new element.</span></span> <span data-ttu-id="480b5-135">Jeśli String.Empty lub <see langword="null" />, nie namespaceURI nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="480b5-135">If String.Empty or <see langword="null" />, there is no namespaceURI.</span></span></param>
        <summary><span data-ttu-id="480b5-136">Tworzy element z określonym <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , i <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-136">Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix" />, <see cref="P:System.Xml.XmlDocument.LocalName" /> , and <see cref="P:System.Xml.XmlNode.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="480b5-137">Nowy <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-137">A new <see cref="T:System.Xml.XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-138">`Note to Inheritors` Przeciążenie tej funkcji, nie może służyć do rozszerzalności.</span><span class="sxs-lookup"><span data-stu-id="480b5-138">`Note to Inheritors` If you overload this function, it cannot be used for extensibility.</span></span> <span data-ttu-id="480b5-139">Zamiast tego można zwrócić elementu utworzone przez klasę podstawową, ale w takim przypadku `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-139">Instead, you can return an element created by the base class, in this case, `XmlDataDocument`.</span></span> <span data-ttu-id="480b5-140">Zobacz poniższy przykład.</span><span class="sxs-lookup"><span data-stu-id="480b5-140">See the following example.</span></span>  
  
```csharp  
class MyXmlDataDocument : XmlDataDocument {  
 public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  
   //Ensure we are returning the base class implementation of element.  
   XmlElement e = base.CreateElement(prefix, localName, nsURI);  
   //Add additional code here.  
   return e;    //Return the element created by XmlDataDocument.  
 }      
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlEntityReference CreateEntityReference (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEntityReference (name As String) As XmlEntityReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlEntityReference ^ CreateEntityReference(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="480b5-141">Nazwa odwołania do jednostki.</span><span class="sxs-lookup"><span data-stu-id="480b5-141">The name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="480b5-142">Tworzy <see cref="T:System.Xml.XmlEntityReference" /> o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="480b5-142">Creates an <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></summary>
        <returns><span data-ttu-id="480b5-143"><see cref="T:System.Xml.XmlEntityReference" /> o określonej nazwie.</span><span class="sxs-lookup"><span data-stu-id="480b5-143">An <see cref="T:System.Xml.XmlEntityReference" /> with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-144"><xref:System.Xml.XmlEntityReference> Nie można utworzyć węzłów <xref:System.Xml.XmlDataDocument> obiektów.</span><span class="sxs-lookup"><span data-stu-id="480b5-144"><xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects.</span></span> <span data-ttu-id="480b5-145">Wywołanie tej metody zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="480b5-145">Calling this method throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="480b5-146">Wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-146">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateNavigator (node As XmlNode) As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Xml::XPath::XPathNavigator ^ CreateNavigator(System::Xml::XmlNode ^ node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="480b5-147"><see cref="T:System.Xml.XmlNode" /> Ma Nawigatora wstępnie ustawiony na.</span><span class="sxs-lookup"><span data-stu-id="480b5-147">The <see cref="T:System.Xml.XmlNode" /> you want the navigator initially positioned on.</span></span></param>
        <summary><span data-ttu-id="480b5-148">Tworzy nową <see cref="T:System.Xml.XPath.XPathNavigator" /> obiektu do nawigowania tego dokumentu.</span><span class="sxs-lookup"><span data-stu-id="480b5-148">Creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> object for navigating this document.</span></span> <span data-ttu-id="480b5-149"><see langword="XPathNavigator" /> Znajduje się w węźle określony w <paramref name="node" /> parametru.</span><span class="sxs-lookup"><span data-stu-id="480b5-149">The <see langword="XPathNavigator" /> is positioned on the node specified in the <paramref name="node" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="480b5-150"><see langword="XPathNavigator" /> Służące do nawigacji dokumentu.</span><span class="sxs-lookup"><span data-stu-id="480b5-150">An <see langword="XPathNavigator" /> used to navigate the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-151">`XPathNavigator` Zapewnia tylko do odczytu, losowy dostęp do danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-151">The `XPathNavigator` provides read-only, random access to data.</span></span> <span data-ttu-id="480b5-152">Ponieważ jest zoptymalizowany do przekształcenia XSLT, zapewnia korzyści wydajności, gdy jest używany jako mechanizmu wejściowych do <xref:System.Xml.Xsl.XslTransform.Transform%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-152">Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="480b5-153">Aby wyświetlić przekształcenie XSLT przy użyciu `XmlDataDocument` i `XPathNavigator`, zobacz <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-153">To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlDataDocument.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="480b5-154">Pobiera <see cref="T:System.Data.DataSet" /> zapewnia relacyjne reprezentację danych w <see langword="XmlDataDocument" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-154">Gets a <see cref="T:System.Data.DataSet" /> that provides a relational representation of the data in the <see langword="XmlDataDocument" />.</span></span></summary>
        <value><span data-ttu-id="480b5-155">A <see langword="DataSet" /> można uzyskać dostęp do danych <see langword="XmlDataDocument" /> przy użyciu modelu relacyjne.</span><span class="sxs-lookup"><span data-stu-id="480b5-155">A <see langword="DataSet" /> that can be used to access the data in the <see langword="XmlDataDocument" /> using a relational model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-156">`DataSet` Umożliwia dostęp do danych w `XmlDataDocument` przy użyciu modelu relacyjne.</span><span class="sxs-lookup"><span data-stu-id="480b5-156">The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model.</span></span> <span data-ttu-id="480b5-157">Oznacza to, że można danych należy traktować jak tabele i widoki, wiersze i kolumny, relacji i tak dalej.</span><span class="sxs-lookup"><span data-stu-id="480b5-157">This means that you can handle the data as tables and views, rows and columns, relations, and so on.</span></span> <span data-ttu-id="480b5-158">Zmiany wprowadzone w `DataSet` są od razu widoczne w `XmlDataDocument`.</span><span class="sxs-lookup"><span data-stu-id="480b5-158">Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="480b5-159">Poniższy przykład modyfikuje cen przy użyciu książki `DataSet` metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-159">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  
  
 <span data-ttu-id="480b5-160">W przykładzie użyto następujące dwa pliki jako dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="480b5-160">The example uses the following two files as input.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlElement GetElementById (string elemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlElement GetElementById(string elemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementById(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementById (elemId As String) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlElement ^ GetElementById(System::String ^ elemId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elemId"><span data-ttu-id="480b5-161">Identyfikator atrybutu do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="480b5-161">The attribute ID to match.</span></span></param>
        <summary><span data-ttu-id="480b5-162">Pobiera <see cref="T:System.Xml.XmlElement" /> o określonym identyfikatorze.</span><span class="sxs-lookup"><span data-stu-id="480b5-162">Gets the <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span> <span data-ttu-id="480b5-163">Ta metoda nie jest obsługiwana przez <see cref="T:System.Xml.XmlDataDocument" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="480b5-163">This method is not supported by the <see cref="T:System.Xml.XmlDataDocument" /> class.</span></span> <span data-ttu-id="480b5-164">Wywołanie tej metody zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="480b5-164">Calling this method throws an exception.</span></span></summary>
        <returns><span data-ttu-id="480b5-165"><see cref="T:System.Xml.XmlElement" /> o określonym identyfikatorze.</span><span class="sxs-lookup"><span data-stu-id="480b5-165">An <see cref="T:System.Xml.XmlElement" /> with the specified ID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-166">Ta metoda nie jest obsługiwana przez <xref:System.Xml.XmlDataDocument> klasy.</span><span class="sxs-lookup"><span data-stu-id="480b5-166">This method is not supported by the <xref:System.Xml.XmlDataDocument> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="480b5-167">Wywołanie tej metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-167">Calling this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetElementFromRow">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetElementFromRow(class System.Data.DataRow r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetElementFromRow (r As DataRow) As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetElementFromRow(System::Data::DataRow ^ r);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="480b5-168"><see langword="DataRow" /> Których skojarzone <see langword="XmlElement" /> do pobrania.</span><span class="sxs-lookup"><span data-stu-id="480b5-168">The <see langword="DataRow" /> whose associated <see langword="XmlElement" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="480b5-169">Pobiera <see cref="T:System.Xml.XmlElement" /> skojarzonego z określonym <see cref="T:System.Data.DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-169">Retrieves the <see cref="T:System.Xml.XmlElement" /> associated with the specified <see cref="T:System.Data.DataRow" />.</span></span></summary>
        <returns><span data-ttu-id="480b5-170"><see langword="XmlElement" /> Zawierający reprezentację określonego <see langword="DataRow" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-170">The <see langword="XmlElement" /> containing a representation of the specified <see langword="DataRow" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="480b5-171">Poniższy przykład załaduje `DataSet` do `XmlDataDocument` , a następnie tworzy `XmlElement` reprezentujący pierwszy rekord klienta.</span><span class="sxs-lookup"><span data-stu-id="480b5-171">The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.</span></span>  
  
 <span data-ttu-id="480b5-172">W przykładzie użyto bazy danych Northwind programu SQL Server 2000.</span><span class="sxs-lookup"><span data-stu-id="480b5-172">The example uses the SQL Server 2000 Northwind database.</span></span>  
  
 [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeList GetElementsByTagName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNodeList GetElementsByTagName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetElementsByTagName (name As String) As XmlNodeList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Xml::XmlNodeList ^ GetElementsByTagName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="480b5-173">Kwalifikowana nazwa do dopasowania.</span><span class="sxs-lookup"><span data-stu-id="480b5-173">The qualified name to match.</span></span> <span data-ttu-id="480b5-174">Jest dopasowywana <see cref="P:System.Xml.XmlDocument.Name" /> właściwości pasujących węzła.</span><span class="sxs-lookup"><span data-stu-id="480b5-174">It is matched against the <see cref="P:System.Xml.XmlDocument.Name" /> property of the matching node.</span></span> <span data-ttu-id="480b5-175">Specjalna wartość "\*" dopasowuje wszystkie tagi.</span><span class="sxs-lookup"><span data-stu-id="480b5-175">The special value "\*" matches all tags.</span></span></param>
        <summary><span data-ttu-id="480b5-176">Zwraca <see cref="T:System.Xml.XmlNodeList" /> zawierający listę wszystkich elementów podrzędnych, które pasują do określonego <see cref="P:System.Xml.XmlDocument.Name" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-176">Returns an <see cref="T:System.Xml.XmlNodeList" /> containing a list of all descendant elements that match the specified <see cref="P:System.Xml.XmlDocument.Name" />.</span></span></summary>
        <returns><span data-ttu-id="480b5-177"><see cref="T:System.Xml.XmlNodeList" /> Zawierający listę wszystkich zgodne węzły.</span><span class="sxs-lookup"><span data-stu-id="480b5-177">An <see cref="T:System.Xml.XmlNodeList" /> containing a list of all matching nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="480b5-178">Zaleca się, że używasz <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> lub <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> zamiast metody <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-178">It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=nameWithType> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRowFromElement">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetRowFromElement(class System.Xml.XmlElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRowFromElement (e As XmlElement) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetRowFromElement(System::Xml::XmlElement ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="480b5-179"><see langword="XmlElement" /> Których skojarzone <see langword="DataRow" /> do pobrania.</span><span class="sxs-lookup"><span data-stu-id="480b5-179">The <see langword="XmlElement" /> whose associated <see langword="DataRow" /> you want to retrieve.</span></span></param>
        <summary><span data-ttu-id="480b5-180">Pobiera <see cref="T:System.Data.DataRow" /> skojarzonego z określonym <see cref="T:System.Xml.XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-180">Retrieves the <see cref="T:System.Data.DataRow" /> associated with the specified <see cref="T:System.Xml.XmlElement" />.</span></span></summary>
        <returns><span data-ttu-id="480b5-181"><see langword="DataRow" /> Zawierający reprezentację <see langword="XmlElement" />; <see langword="null" /> w przypadku nie <see langword="DataRow" /> skojarzone z <see langword="XmlElement" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-181">The <see langword="DataRow" /> containing a representation of the <see langword="XmlElement" />; <see langword="null" /> if there is no <see langword="DataRow" /> associated with the <see langword="XmlElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="480b5-182">Poniższy przykład modyfikuje ceny pierwszej książki.</span><span class="sxs-lookup"><span data-stu-id="480b5-182">The following example modifies the price of the first book.</span></span>  
  
 [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]
 [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]
 [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  
  
 <span data-ttu-id="480b5-183">W przykładzie użyto następujących plików wejściowych:</span><span class="sxs-lookup"><span data-stu-id="480b5-183">The example uses the following input files:</span></span>  
  
 `2books.xml`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="480b5-184">Ładunki <see langword="XmlDataDocument" /> przy użyciu określonego źródła danych i synchronizuje <see cref="T:System.Data.DataSet" /> z ładowanych danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-184">Loads the <see langword="XmlDataDocument" /> using the specified data source and synchronizes the <see cref="T:System.Data.DataSet" /> with the loaded data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="480b5-185">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-185">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="480b5-186">Można to zrobić przez wywołanie <xref:System.Data.DataSet.ReadXmlSchema%2A> metody lub przez tworzenie tabel i kolumn w `DataSet` ręcznie.</span><span class="sxs-lookup"><span data-stu-id="480b5-186">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="480b5-187">Ten krok należy wykonać przed wywołaniem `Load`.</span><span class="sxs-lookup"><span data-stu-id="480b5-187">This step must be done before calling `Load`.</span></span>  
  
 <span data-ttu-id="480b5-188">`XmlDataDocument` nie obsługuje tworzenia odwołań do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-188">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="480b5-189">Jeśli dane zawierają odwołania do jednostki, `Load` metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-189">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span> <span data-ttu-id="480b5-190">Jednak jeśli używasz `Load` przeciążenia, które przyjmuje <xref:System.Xml.XmlReader> jako argument, należy określić `XmlReader` to rozwiąże jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-190">However, if you are using the `Load` overload that takes a <xref:System.Xml.XmlReader> as an argument, you must specify an `XmlReader` that can resolve entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.Stream inStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.Stream inStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (inStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::Stream ^ inStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inStream"><span data-ttu-id="480b5-191">Strumień, zawierający można załadować dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="480b5-191">The stream containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="480b5-192">Ładunki <see langword="XmlDataDocument" /> z określonego strumienia.</span><span class="sxs-lookup"><span data-stu-id="480b5-192">Loads the <see langword="XmlDataDocument" /> from the specified stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-193">`XmlDataDocument` nie obsługuje tworzenia odwołań do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-193">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="480b5-194">Jeśli dane zawierają odwołania do jednostki, `Load` metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-194">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="480b5-195">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-195">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="480b5-196">Można to zrobić przez wywołanie <xref:System.Data.DataSet.ReadXmlSchema%2A> metody lub przez tworzenie tabel i kolumn w `DataSet` ręcznie.</span><span class="sxs-lookup"><span data-stu-id="480b5-196">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="480b5-197">Ten krok należy wykonać przed wywołaniem `Load`.</span><span class="sxs-lookup"><span data-stu-id="480b5-197">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.IO.TextReader txtReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.IO.TextReader txtReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (txtReader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::IO::TextReader ^ txtReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="txtReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="txtReader"><span data-ttu-id="480b5-198"><see langword="TextReader" /> Używane do strumieniowego źródła danych XML do dokumentu.</span><span class="sxs-lookup"><span data-stu-id="480b5-198">The <see langword="TextReader" /> used to feed the XML data into the document.</span></span></param>
        <summary><span data-ttu-id="480b5-199">Ładunki <see langword="XmlDataDocument" /> z określonego <see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-199">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.IO.TextReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-200">`XmlDataDocument` nie obsługuje tworzenia odwołań do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-200">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="480b5-201">Jeśli dane zawierają odwołania do jednostki, `Load` metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-201">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="480b5-202">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-202">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="480b5-203">Można to zrobić przez wywołanie <xref:System.Data.DataSet.ReadXmlSchema%2A> metody lub przez tworzenie tabel i kolumn w `DataSet` ręcznie.</span><span class="sxs-lookup"><span data-stu-id="480b5-203">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="480b5-204">Ten krok należy wykonać przed wywołaniem `Load`.</span><span class="sxs-lookup"><span data-stu-id="480b5-204">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="480b5-205">Adres URL pliku zawierającego dokument XML do załadowania.</span><span class="sxs-lookup"><span data-stu-id="480b5-205">The URL of the file containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="480b5-206">Ładunki <see langword="XmlDataDocument" /> przy użyciu określonego adresu URL.</span><span class="sxs-lookup"><span data-stu-id="480b5-206">Loads the <see langword="XmlDataDocument" /> using the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-207">`XmlDataDocument` nie obsługuje tworzenia odwołań do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-207">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="480b5-208">Jeśli dane zawierają odwołania do jednostki, `Load` metoda rozpoznaje i rozwija wszystkie odwołania do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-208">If the data includes entity references, the `Load` method resolves and expands any entity references.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="480b5-209">Aby wyświetlić dane XML relationally, należy określić schematu na potrzeby mapowania danych.</span><span class="sxs-lookup"><span data-stu-id="480b5-209">In order to view the XML data relationally, you must first specify a schema to use for data mapping.</span></span> <span data-ttu-id="480b5-210">Można to zrobić przez wywołanie <xref:System.Data.DataSet.ReadXmlSchema%2A> metody lub przez tworzenie tabel i kolumn w `DataSet` ręcznie.</span><span class="sxs-lookup"><span data-stu-id="480b5-210">This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually.</span></span> <span data-ttu-id="480b5-211">Ten krok należy wykonać przed wywołaniem `Load`.</span><span class="sxs-lookup"><span data-stu-id="480b5-211">This step must be done before calling `Load`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="480b5-212"><see langword="XmlReader" /> Zawierający można załadować dokumentu XML.</span><span class="sxs-lookup"><span data-stu-id="480b5-212">The <see langword="XmlReader" /> containing the XML document to load.</span></span></param>
        <summary><span data-ttu-id="480b5-213">Ładunki <see langword="XmlDataDocument" /> z określonego <see cref="T:System.Xml.XmlReader" />.</span><span class="sxs-lookup"><span data-stu-id="480b5-213">Loads the <see langword="XmlDataDocument" /> from the specified <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="480b5-214">`XmlDataDocument` nie obsługuje tworzenia odwołań do jednostek.</span><span class="sxs-lookup"><span data-stu-id="480b5-214">`XmlDataDocument` does not support creating entity references.</span></span> <span data-ttu-id="480b5-215">Jeśli źródło danych zawiera odwołania do jednostki, należy utworzyć <xref:System.Xml.XmlValidatingReader> z <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> właściwości wartość elementu EntityHandling.ExpandEntities (jest to domyślne zachowanie) i przekaż `XmlValidatingReader` do `Load` metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-215">If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method.</span></span> <span data-ttu-id="480b5-216">Jeśli nie używasz `XmlValidatingReader`, `Load` metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="480b5-216">If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.</span></span>  
  
 <span data-ttu-id="480b5-217">`Load` Metody zawsze zachowuje znaczący biały znak.</span><span class="sxs-lookup"><span data-stu-id="480b5-217">The `Load` method always preserves significant white space.</span></span> <span data-ttu-id="480b5-218"><xref:System.Xml.XmlDocument.PreserveWhitespace%2A> Właściwość określa, czy biały znak są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="480b5-218">The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved.</span></span> <span data-ttu-id="480b5-219">Wartość domyślna to `false`, biały znak nie są zachowywane.</span><span class="sxs-lookup"><span data-stu-id="480b5-219">The default is `false`, white space is not preserved.</span></span>  
  
 <span data-ttu-id="480b5-220">Jeśli czytnik jest w stanie początkowym (czyli ReadState=ReadState.Initial) `Load` zużywa całą zawartość czytnika danych i tworzy DOM z ich znalezienia.</span><span class="sxs-lookup"><span data-stu-id="480b5-220">If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.</span></span>  
  
 <span data-ttu-id="480b5-221">Jeśli czytnik jest już ustawiony na jednego z węzłów przy głębokości "n", ta metoda ładuje ten węzeł i wszystkie kolejne elementy równorzędne do tagu końcowego, który zamyka głębokość "n".</span><span class="sxs-lookup"><span data-stu-id="480b5-221">If the reader is already positioned on some node at depth "n", then this method loads that node and all subsequent siblings up to the end tag that closes depth "n".</span></span> <span data-ttu-id="480b5-222">Ma to następujące wyniki.</span><span class="sxs-lookup"><span data-stu-id="480b5-222">This has the following results.</span></span>  
  
 <span data-ttu-id="480b5-223">Jeśli bieżącego węzła i jego następujące elementy równorzędne wyglądać podobnie do następującego:</span><span class="sxs-lookup"><span data-stu-id="480b5-223">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><element1>one</element1><element2>two</element2>  
```  
  
 <span data-ttu-id="480b5-224">`Load` zgłasza wyjątek, ponieważ dokument nie może mieć dwóch elementów głównego poziomu.</span><span class="sxs-lookup"><span data-stu-id="480b5-224">`Load` throws an exception, because a document cannot have two root-level elements.</span></span> <span data-ttu-id="480b5-225">Jeśli bieżącego węzła i jego następujące elementy równorzędne wyglądać podobnie do następującego:</span><span class="sxs-lookup"><span data-stu-id="480b5-225">If the current node and its following siblings look similar to the following:</span></span>  
  
```xml  
<!--comment--><?process  
    instruction?><!--comment--></endtag>  
```  
  
 <span data-ttu-id="480b5-226">`Load` się pomyślnie; jednak należy niekompletne drzewa modelu DOM, ponieważ nie istnieje żaden element głównego poziomu.</span><span class="sxs-lookup"><span data-stu-id="480b5-226">`Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element.</span></span> <span data-ttu-id="480b5-227">Należy dodać element poziomu głównego przed zapisaniem dokumentu. w przeciwnym razie <xref:System.Xml.XmlDocument.Save%2A> metoda zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="480b5-227">You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.</span></span>  
  
 <span data-ttu-id="480b5-228">Jeśli czytnik jest ustawiony na węzeł liścia, który jest nieprawidłowy dla poziomu głównego dokumentu (na przykład białe miejsca lub atrybut węzłem), czytnik będzie kontynuowane do odczytu, dopóki nie zostanie on ustawiony na węźle, który może służyć do katalogu głównego.</span><span class="sxs-lookup"><span data-stu-id="480b5-228">If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root.</span></span> <span data-ttu-id="480b5-229">Dokument rozpoczyna się w tym momencie ładowania.</span><span class="sxs-lookup"><span data-stu-id="480b5-229">The document begins loading at this point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="480b5-230">Poniższy przykład modyfikuje cen przy użyciu książki `DataSet` metody.</span><span class="sxs-lookup"><span data-stu-id="480b5-230">The following example modifies the price of a book using the `DataSet` methods.</span></span>  
  
 [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]
 [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]
 [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  
  
 <span data-ttu-id="480b5-231">W przykładzie użyto następujących dwóch plików wejściowych.</span><span class="sxs-lookup"><span data-stu-id="480b5-231">The example uses the following two input files.</span></span>  
  
 `2books.xml`  
  
 [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  
  
 `store.xsd`  
  
 [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="480b5-232">Trwa ładowanie pliku XML zawiera odwołania do jednostek i czytnik nie może rozpoznać jednostki.</span><span class="sxs-lookup"><span data-stu-id="480b5-232">The XML being loaded contains entity references, and the reader cannot resolve entities.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>