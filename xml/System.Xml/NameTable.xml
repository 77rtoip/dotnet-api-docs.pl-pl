<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameTable.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54c104192f352bbcc228a802abf4b54ecbcc1bfda.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4c104192f352bbcc228a802abf4b54ecbcc1bfda</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.NameTable">
          <source>Implements a single-threaded <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">Implementuje pojedynczym wątku <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>Several classes, such as <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, use the <ph id="ph3">`NameTable`</ph> class internally to store attribute and element names.</source>
          <target state="translated">Kilka klas, takich jak <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> i <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>, użyj <ph id="ph3">`NameTable`</ph> klasy wewnętrznie w celu przechowywania nazw atrybutów i elementów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>When an element or attribute name occurs multiple times in an XML document, it is stored only once in the <ph id="ph1">`NameTable`</ph>.</source>
          <target state="translated">Nazwa elementu lub atrybutu powtarza się wielokrotnie w dokumencie XML, jest przechowywany tylko raz w <ph id="ph1">`NameTable`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>The names are stored as common language runtime (CLR) object types.</source>
          <target state="translated">Nazwy są przechowywane jako typowych języka wspólnego (CLR) obiektu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>This enables you to do object comparisons on these strings rather than a more expensive string comparison.</source>
          <target state="translated">Dzięki temu obiekt porównania na te ciągi, a nie droższe porównania ciągów.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>These string objects are referred to as atomized strings.</source>
          <target state="translated">Obiekty te parametry są określane jako atomized ciągów.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>The following example compares two element names.</source>
          <target state="translated">Poniższy przykład porównuje dwie nazwy elementu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.NameTable.#ctor">
          <source>Constructs an empty NameTable.</source>
          <target state="translated">Tworzy pusty tabeli nazw.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Xml.NameTable">
          <source>Atomizes the specified string and adds it to the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</source>
          <target state="translated">Określony ciąg atomizes i dodaje go do <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.String)">
          <source>The string to add.</source>
          <target state="translated">Ciąg do dodania.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.String)">
          <source>Atomizes the specified string and adds it to the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</source>
          <target state="translated">Określony ciąg atomizes i dodaje go do <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.String)">
          <source>The atomized string or the existing string if it already exists in the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</source>
          <target state="translated">Atomized ciągu lub ciągu istniejących, jeśli już istnieje w <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.NameTable.Add(System.String)">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the string to add.</source>
          <target state="translated">Tablica znaków zawierających ciąg do dodania.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>The zero-based index into the array specifying the first character of the string.</source>
          <target state="translated">Liczony od zera indeks w tablicy określającym pierwszego znaku ciągu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the string.</source>
          <target state="translated">Liczba znaków w ciągu.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>Atomizes the specified string and adds it to the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</source>
          <target state="translated">Określony ciąg atomizes i dodaje go do <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>The atomized string or the existing string if one already exists in the <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</source>
          <target state="translated">Ciąg atomized lub istniejących parametrów, jeśli istnieje już w <ph id="ph1">&lt;see langword="NameTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="len" /&gt;</ph> is zero, String.Empty is returned.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="len" /&gt;</ph> wynosi zero, zwracany jest String.Empty.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>0 <ph id="ph1">&amp;gt;</ph> <ph id="ph2">&lt;paramref name="start" /&gt;</ph></source>
          <target state="translated">0 <ph id="ph1">&amp;gt;</ph> <ph id="ph2">&lt;paramref name="start" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>.Length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>. Długość</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>.Length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>. Długość</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source>The above conditions do not cause an exception to be thrown if <ph id="ph1">&lt;paramref name="len" /&gt;</ph> =0.</source>
          <target state="translated">Powyższych warunków nie powodują wyjątek zostanie wygenerowany, jeśli <ph id="ph1">&lt;paramref name="len" /&gt;</ph> = 0.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Xml.NameTable">
          <source>Gets the atomized string.</source>
          <target state="translated">Pobiera ciąg atomized.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.NameTable">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.String)">
          <source>The name to find.</source>
          <target state="translated">Nazwę można znaleźć.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.String)">
          <source>Gets the atomized string with the specified value.</source>
          <target state="translated">Pobiera ciąg atomized o określonej wartości.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.String)">
          <source>The atomized string object or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the string has not already been atomized.</source>
          <target state="translated">Z obiektem ciągu atomized lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli ciąg nie ma już atomized.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.NameTable.Get(System.String)">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>The character array containing the name to find.</source>
          <target state="translated">Tablica znaków zawierający nazwę można znaleźć.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>The zero-based index into the array specifying the first character of the name.</source>
          <target state="translated">Liczony od zera indeks w tablicy określającym pierwszy znak nazwy.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the name.</source>
          <target state="translated">Liczba znaków w nazwie.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>Gets the atomized string containing the same characters as the specified range of characters in the given array.</source>
          <target state="translated">Pobiera ciąg atomized zawierający znaków określony zakres znaków w podanej tablicy.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>The atomized string or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the string has not already been atomized.</source>
          <target state="translated">Ciąg atomized lub <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli ciąg nie ma już atomized.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="len" /&gt;</ph> is zero, String.Empty is returned.</source>
          <target state="translated">Jeśli <ph id="ph1">&lt;paramref name="len" /&gt;</ph> wynosi zero, zwracany jest String.Empty.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>For more information on atomized strings, see <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</source>
          <target state="translated">Aby uzyskać więcej informacji na atomized ciągów, zobacz <ph id="ph1">&lt;xref:System.Xml.NameTable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>0 <ph id="ph1">&amp;gt;</ph> <ph id="ph2">&lt;paramref name="start" /&gt;</ph></source>
          <target state="translated">0 <ph id="ph1">&amp;gt;</ph> <ph id="ph2">&lt;paramref name="start" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>.Length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="start" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>. Długość</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>.Length</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;gt;</ph><ph id="ph3">= </ph><ph id="ph4">&lt;paramref name="key" /&gt;</ph>. Długość</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source>The above conditions do not cause an exception to be thrown if <ph id="ph1">&lt;paramref name="len" /&gt;</ph> =0.</source>
          <target state="translated">Powyższych warunków nie powodują wyjątek zostanie wygenerowany, jeśli <ph id="ph1">&lt;paramref name="len" /&gt;</ph> = 0.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="len" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>