<Type Name="XmlSecureResolver" FullName="System.Xml.XmlSecureResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c04793a28d1db5b342b4108181cd0e46777358a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30744029" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSecureResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSecureResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlSecureResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSecureResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSecureResolver : System::Xml::XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Pomaga zabezpieczyć inną implementację <see cref="T:System.Xml.XmlResolver" /> zawijania <see cref="T:System.Xml.XmlResolver" /> obiektu i ograniczania zasobów który odpowiadającego <see cref="T:System.Xml.XmlResolver" /> ma dostęp do.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlUrlResolver> Klasy jest domyślny program rozpoznawania nazw dla wszystkich klas w <xref:System.Xml> przestrzeni nazw. Służy do ładowanie dokumentów XML oraz do zasobów zewnętrznych, takich jak jednostki, definicje DTD i schematy, rozwiąż i zaimportować lub zawiera dyrektywy, które.  
  
 Można zastąpić to ustawienie domyślne, określając <xref:System.Xml.XmlResolver> obiekt ma być używany. Na przykład, jeśli chcesz ograniczyć zasoby, do który odpowiadającego <xref:System.Xml.XmlResolver> może uzyskać dostęp, możesz użyć <xref:System.Xml.XmlSecureResolver> obiektu.  
  
 <xref:System.Xml.XmlSecureResolver> zawija się wokół konkretną implementację <xref:System.Xml.XmlResolver> i ogranicza zasoby który odpowiadającego <xref:System.Xml.XmlResolver> ma dostęp. Na przykład <xref:System.Xml.XmlSecureResolver> umożliwia zakazać przekierowania między domenami, co następuje z osadzonego odwołania jednolity identyfikator zasobów (URI).  
  
 Podczas konstruowania <xref:System.Xml.XmlSecureResolver> obiektu, należy podać prawidłowy <xref:System.Xml.XmlResolver> implementacji wraz z adresu URL, wystąpienia obiektu dowód lub zestaw uprawnień, który jest używany przez <xref:System.Xml.XmlSecureResolver> ustalenie zabezpieczeń. Albo <xref:System.Security.PermissionSet?displayProperty=nameWithType> wygenerowaniu lub używany jest istniejący i <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType> jest wywoływana w celu zabezpieczania odpowiadającego <xref:System.Xml.XmlResolver>.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlSecureResolver> obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlSecureResolver> obiektów i nie należy przekazywać <xref:System.Xml.XmlSecureResolver> obiektu niezaufany składnik.  
  
> [!IMPORTANT]
>  Istnieją różnice w infrastrukturze zabezpieczeń dla kodu uruchomionego na .NET Framework środowisko uruchomieniowe języka wspólnego (CLR) i kod działający na CLR, która jest zintegrowana w ramach programu Microsoft SQL Server 2005. Może to prowadzić do przypadków, gdy kod opracowanych dla środowiska CLR platformy .NET Framework działa inaczej w przypadku użycia programu SQL Server zintegrowane CLR. Jeden z tych różnic wpływa na <xref:System.Xml.XmlSecureResolver> klasy, jeśli masz dowód, który jest oparty na adres URL (to znaczy, jeśli używasz <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> — metoda lub <xref:System.Xml.XmlSecureResolver.%23ctor%2A> konstruktora). Zasady rozwiązania CLR zintegrowane mechanizmu programu SQL Server nie używa <xref:System.Security.Policy.Url> lub <xref:System.Security.Policy.Zone> informacji. Zamiast tego przyznaje ona uprawnienia oparte na identyfikator GUID, który serwer dodaje podczas zestawy zostały załadowane. Jeśli używasz <xref:System.Xml.XmlSecureResolver> w CLR zintegrowane programu SQL Server, wymagane udowodnić bezpośrednio za pomocą określonej <xref:System.Security.PermissionSet>.  
  
## <a name="to-use-a-secure-resolver"></a>Aby użyć bezpieczny program rozpoznawania nazw  
  
1.  Utwórz <xref:System.Xml.XmlSecureResolver> ustawienie odpowiednie uprawnienia.  
  
2.  Utwórz <xref:System.Xml.XmlReaderSettings> obiekt, który używa <xref:System.Xml.XmlSecureResolver> obiektu.  
  
     [!code-csharp[XmlSecureResolver_Samples#5a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)]
     [!code-vb[XmlSecureResolver_Samples#5a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)]  
  
3.  Przekaż <xref:System.Xml.XmlReaderSettings> do obiektu <xref:System.Xml.XmlReader.Create%2A> metody podczas tworzenia <xref:System.Xml.XmlReader> obiektu.  
  
     [!code-csharp[XmlSecureResolver_Samples#5b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)]
     [!code-vb[XmlSecureResolver_Samples#5b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)]  
  
## <a name="to-restrict-access-by-using-a-url"></a>Aby ograniczyć dostęp za pomocą adresu URL  
 Użyj <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> konstruktora w celu utworzenia <xref:System.Xml.XmlSecureResolver> obiektu, który może uzyskiwać dostęp do witryny lokalny intranet.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
## <a name="to-restrict-access-by-using-a-permission-set"></a>Aby ograniczyć dostęp za pomocą zestawu uprawnień  
  
1.  Utwórz <xref:System.Net.WebPermission> obiektu.  
  
     [!code-csharp[XmlSecureResolver_Samples#4a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)]
     [!code-vb[XmlSecureResolver_Samples#4a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)]  
  
2.  Określ adresy URL, które chcesz zezwolić na dostęp do.  
  
     [!code-csharp[XmlSecureResolver_Samples#4b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)]
     [!code-vb[XmlSecureResolver_Samples#4b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)]  
  
3.  Dodaj uprawnienia sieci web do <xref:System.Security.PermissionSet> obiektu.  
  
     [!code-csharp[XmlSecureResolver_Samples#4c](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)]
     [!code-vb[XmlSecureResolver_Samples#4c](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)]  
  
4.  Użyj <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> konstruktora w celu utworzenia <xref:System.Xml.XmlSecureResolver> obiektu przy użyciu zestawu uprawnień.  
  
     [!code-csharp[XmlSecureResolver_Samples#4d](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)]
     [!code-vb[XmlSecureResolver_Samples#4d](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)]  
  
     Zobacz <xref:System.Xml.XmlSecureResolver.%23ctor%2A> strona referencyjna innym przykładem.  
  
## <a name="to-restrict-access-by-using-evidence"></a>Aby ograniczyć dostęp za pomocą dowód  
 Możesz ograniczyć dostęp za pomocą <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Konstruktor i określanie <xref:System.Security.Policy.Evidence>. <xref:System.Security.Policy.Evidence> Służy do tworzenia <xref:System.Security.PermissionSet> do odpowiadającego zastosowano <xref:System.Xml.XmlResolver>. <xref:System.Xml.XmlSecureResolver> Wywołania <xref:System.Security.PermissionSet.PermitOnly%2A> na utworzony <xref:System.Security.PermissionSet> przed otwarciem żadnych zasobów.  
  
 Poniżej przedstawiono kilka typowych scenariuszy i typ dowodu zapewnienie dla każdego:  
  
-   Jeśli pracujesz w pełni zaufanym środowisku, umożliwiają utworzenie dowody używanego zestawu:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Jeśli pracujesz w środowisku częściowo zaufanym, masz kod lub dane pochodzące ze źródła zewnętrznego i znać pochodzenie źródła zewnętrznego i mieć weryfikowalny identyfikatora URI, umożliwiają utworzenie dowody identyfikator URI:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Jeśli pracujesz częściowo zaufanym środowisku i że masz kod lub dane pochodzące ze źródła zewnętrznego, ale nie znasz albo pochodzenie źródła zewnętrznego:  
  
     Ustaw `evidence` parametr `null`. Dzięki temu Brak dostępu do zasobów.  
  
     —lub—  
  
     Jeśli aplikacja wymaga dostęp do zasobów, należy zażądać dowód wywołujący.  
  
## <a name="to-use-the-secure-resolver-to-load-an-xslt-style-sheet"></a>Na potrzeby bezpiecznego rozpoznawania załaduj arkusz stylów XSLT  
  
1.  Utwórz <xref:System.Xml.XmlSecureResolver> ustawienie odpowiednie uprawnienia.  
  
2.  Przekaż <xref:System.Xml.XmlSecureResolver> do <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A> metody.  
  
     [!code-csharp[XmlSecureResolver_Samples#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)]
     [!code-vb[XmlSecureResolver_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Ta klasa ma żądanie dziedziczenia. Pełne zaufanie musi dziedziczyć <see cref="T:System.Xml.XmlSecureResolver" /> klasy.</para>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlSecureResolver" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Konstruktory trzy zawierają trzy rodzaje ograniczenia dostępu:  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor ogranicza dostęp przy użyciu adresu URL.  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> Konstruktor ogranicza dostęp przy użyciu zestawu uprawnień.  
  
-   <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Konstruktor ogranicza dostęp przy użyciu dowód.  
  
 Zobacz Tematy odwołanie konstruktora przykłady tego typu ograniczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::PermissionSet ^ permissionSet);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="resolver">Program rozpoznawania nazw XML, który jest opakowany przez <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="permissionSet">Ustaw uprawnienia, aby zastosować do odpowiadającego <see cref="T:System.Xml.XmlResolver" />. <see cref="T:System.Xml.XmlSecureResolver" /> Wywołania <see cref="M:System.Security.PermissionSet.PermitOnly" /> metody uprawnienie ustawić przed wywołaniem <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> metoda podstawowego rozpoznawania nazw XML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlSecureResolver" /> klasy z <see cref="T:System.Xml.XmlResolver" /> i <see cref="T:System.Security.PermissionSet" /> określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlSecureResolver> obiektu przy użyciu zestawu uprawnień niestandardowych.  
  
 [!code-cpp[XmlSecureResolver.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.cctor/CPP/secresolver.cpp#1)]
 [!code-csharp[XmlSecureResolver.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.cctor/CS/secresolver.cs#1)]
 [!code-vb[XmlSecureResolver.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.cctor/VB/secresolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
        <altmember cref="T:System.Security.Policy.Evidence" />
        <altmember cref="T:System.Net.WebPermission" />
        <altmember cref="T:System.Security.SecurityManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="resolver">Program rozpoznawania nazw XML, który jest opakowany przez <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="evidence">Dowód używany do tworzenia <see cref="T:System.Security.PermissionSet" /> zastosowanych do odpowiadającego <see cref="T:System.Xml.XmlResolver" />. <see cref="T:System.Xml.XmlSecureResolver" /> Wywołania <see cref="M:System.Security.PermissionSet.PermitOnly" /> metoda utworzony <see cref="T:System.Security.PermissionSet" /> przed wywołaniem <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlSecureResolver" /> klasy z <see cref="T:System.Xml.XmlResolver" /> i <see cref="T:System.Security.Policy.Evidence" /> określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniżej przedstawiono kilka możliwych scenariuszy i typ dowodu zapewnienie dla każdego scenariusza:  
  
-   Jeśli pracujesz w pełni zaufanym środowisku, umożliwiają utworzenie dowody używanego zestawu:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Jeśli pracujesz w środowisku częściowo zaufanym, masz kod lub dane pochodzące ze źródła zewnętrznego i znać pochodzenie źródła zewnętrznego i mieć weryfikowalny identyfikatora URI, umożliwiają utworzenie dowody identyfikator URI:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Jeśli pracujesz częściowo zaufanym środowisku i że masz kod lub dane pochodzące ze źródła zewnętrznego, ale nie znasz albo pochodzenie źródła zewnętrznego:  
  
     Ustaw `evidence` parametr `null`. Dzięki temu Brak dostępu do zasobów.  
  
     —lub—  
  
     Jeśli aplikacja wymaga dostęp do zasobów, należy zażądać dowód wywołujący.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver, securityUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::String ^ securityUrl);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">Program rozpoznawania nazw XML, który jest opakowany przez <see cref="T:System.Xml.XmlSecureResolver" />.</param>
        <param name="securityUrl">Adres URL używany do tworzenia <see cref="T:System.Security.PermissionSet" /> zastosowanych do odpowiadającego <see cref="T:System.Xml.XmlResolver" />. <see cref="T:System.Xml.XmlSecureResolver" /> Wywołania <see cref="M:System.Security.PermissionSet.PermitOnly" /> na utworzony <see cref="T:System.Security.PermissionSet" /> przed wywołaniem <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlSecureResolver" /> klasy z <see cref="T:System.Xml.XmlResolver" /> i podanego adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Istnieją różnice w infrastrukturze zabezpieczeń dla kodu uruchomionego na .NET Framework środowisko uruchomieniowe języka wspólnego (CLR) i kod działający na CLR, która jest zintegrowana w ramach programu Microsoft SQL Server 2005. Może to prowadzić do przypadków, gdy kod opracowanych dla środowiska CLR platformy .NET Framework działa inaczej w przypadku użycia programu SQL Server zintegrowane CLR. Jeden z tych różnic wpływa na <xref:System.Xml.XmlSecureResolver> klasy, jeśli masz dowód, który jest oparty na adres URL (to znaczy, jeśli używasz <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> — metoda lub <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> konstruktora). Zasady rozwiązania CLR zintegrowane mechanizmu programu SQL Server nie używa <xref:System.Security.Policy.Url> lub <xref:System.Security.Policy.Zone> informacji. Zamiast tego przyznaje ona uprawnienia oparte na identyfikator GUID, który serwer dodaje podczas zestawy zostały załadowane. Jeśli używasz <xref:System.Xml.XmlSecureResolver> w CLR zintegrowane programu SQL Server, wymagane udowodnić bezpośrednio za pomocą określonej <xref:System.Security.PermissionSet>.  
  
   
  
## Examples  
 W tym przykładzie użyto <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> konstruktora w celu utworzenia <xref:System.Xml.XmlSecureResolver> obiektu, który może uzyskiwać dostęp do witryny lokalny intranet.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvidenceForUrl">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Evidence CreateEvidenceForUrl(string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvidenceForUrl (securityUrl As String) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Evidence ^ CreateEvidenceForUrl(System::String ^ securityUrl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="securityUrl">Adres URL używany do tworzenia dowody.</param>
        <summary>Tworzy dowód przy użyciu podanego adresu URL.</summary>
        <returns>Dowody wygenerowane z podanego adresu URL, zgodnie z definicją w domyślnych zasad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Istnieją różnice w infrastrukturze zabezpieczeń dla kodu uruchomionego na .NET Framework środowisko uruchomieniowe języka wspólnego (CLR) i kod działający na CLR, która jest zintegrowana w ramach programu Microsoft SQL Server 2005. Może to prowadzić do przypadków, gdy kod opracowanych dla środowiska CLR platformy .NET Framework działa inaczej w przypadku użycia programu SQL Server zintegrowane CLR. Jeden z tych różnic wpływa na <xref:System.Xml.XmlSecureResolver> klasy, jeśli masz dowód, który jest oparty na adres URL (to znaczy, jeśli używasz <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> — metoda lub <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> konstruktora). Zasady rozwiązania CLR zintegrowane mechanizmu programu SQL Server nie używa <xref:System.Security.Policy.Url> lub <xref:System.Security.Policy.Zone> informacji. Zamiast tego przyznaje ona uprawnienia oparte na identyfikator GUID, który serwer dodaje podczas zestawy zostały załadowane. Jeśli używasz <xref:System.Xml.XmlSecureResolver> w CLR zintegrowane programu SQL Server, wymagane udowodnić bezpośrednio za pomocą określonej <xref:System.Security.PermissionSet>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlSecureResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ustawia poświadczenia używane do uwierzytelniania żądań sieci web.</summary>
        <value>Poświadczenia, które ma być używany do uwierzytelniania żądań sieci web. <see cref="T:System.Xml.XmlSecureResolver" /> Ustawia poświadczenia na podstawowych <see cref="T:System.Xml.XmlResolver" />. Jeśli ta właściwość nie jest ustawiona, domyślnie przyjmowana jest wartość <see langword="null" />, <see cref="T:System.Xml.XmlSecureResolver" /> ma żadnych poświadczeń użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie użyto <xref:System.Xml.XmlSecureResolver> z poświadczeń domyślnych w celu rozwiązania i otwórz zasobów sieciowych wymaganych przez <xref:System.Xml.XmlTextReader>.  
  
 [!code-cpp[XmlSecureResolver.Credentials#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.Credentials/CPP/secresolver2.cpp#1)]
 [!code-csharp[XmlSecureResolver.Credentials#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.Credentials/CS/secresolver2.cs#1)]
 [!code-vb[XmlSecureResolver.Credentials#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.Credentials/VB/secresolver2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.CredentialCache.DefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identyfikator URI, który jest zwracany z <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Obecnie nieużywane.</param>
        <param name="ofObjectToReturn">Typ obiektu, który będzie zwracany. Zwraca tylko bieżącą wersję <see cref="T:System.IO.Stream" /> obiektów.</param>
        <summary>Identyfikator URI jest mapowany na obiekt, który zawiera zasobów. Ta metoda tymczasowo ustawia <see cref="T:System.Security.PermissionSet" /> utworzone w Konstruktorze przez wywołanie <see cref="M:System.Security.PermissionSet.PermitOnly" /> przed wywołaniem <see langword="GetEntity" /> na podstawowych <see cref="T:System.Xml.XmlResolver" /> można otworzyć zasobu.</summary>
        <returns>Strumień zwrócony przez wywołanie metody <see langword="GetEntity" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />. Jeśli typ innych niż <see cref="T:System.IO.Stream" /> jest określony, metoda zwraca <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Aplikacji można ograniczyć pamięci odmowa usługi zagrożeń <xref:System.Xml.XmlSecureResolver.GetEntity%2A> metody zaimplementowanie <xref:System.Runtime.InteropServices.ComTypes.IStream> , która ogranicza liczbę bajtów do odczytu. Dzięki temu, chronią przed sytuacji, gdy próbuje nieskończone strumień bajtów do przekazania złośliwego kodu <xref:System.Xml.XmlSecureResolver.GetEntity%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="ofObjectToReturn" /> nie jest ani <see langword="null" /> ani <see cref="T:System.IO.Stream" /> typu.</exception>
        <exception cref="T:System.UriFormatException">Określony identyfikator URI nie jest bezwzględnym identyfikatorem URI.</exception>
        <exception cref="T:System.NullReferenceException">
          <paramref name="absoluteUri" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Istnieje błąd w czasie wykonywania (na przykład połączenie serwera przerwania).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identyfikator URI zwrócony z <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Obecnie nieużywane.</param>
        <param name="ofObjectToReturn">Typ obiektu, który będzie zwracany. Zwraca tylko bieżącą wersję <see cref="T:System.IO.Stream" /> obiektów.</param>
        <summary>Asynchronicznie identyfikatora URI jest mapowany na obiekt, który zawiera zasobów.</summary>
        <returns>Strumień zwrócony przez wywołanie metody <see langword="GetEntity" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />. Jeśli typ innych niż <see cref="T:System.IO.Stream" /> jest określony, metoda zwraca <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Podstawowy identyfikator URI używany do rozpoznania względnym identyfikatorem URI.</param>
        <param name="relativeUri">Identyfikator URI do rozpoznania. Identyfikator URI może być bezwzględny lub względny. Jeśli bezwzględne, ta wartość skutecznie zastępuje <c>baseUri</c> wartości. Jeśli względną, składa się z <c>baseUri</c> być bezwzględnym identyfikatorem URI.</param>
        <summary>Jest rozpoznawany jako bezwzględny identyfikator URI z podstawową i względne identyfikatory URI, wywołując <see langword="ResolveUri" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />.</summary>
        <returns>Bezwzględny identyfikator URI lub <see langword="null" /> Jeśli względny identyfikator URI nie można rozpoznać (zwrócony przez wywołanie metody <see langword="ResolveUri" /> na podstawowych <see cref="T:System.Xml.XmlResolver" />).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="relativeUri" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>