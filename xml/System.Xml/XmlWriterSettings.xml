<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5aa9e60ee55b7f5c4a9a753c267c11fae72ce0e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69422075" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zestaw funkcji do obsługi dla <see cref="T:System.Xml.XmlWriter" /> obiektu utworzonego <see cref="Overload:System.Xml.XmlWriter.Create" /> przez metodę.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda jest preferowanym mechanizmem uzyskiwania <xref:System.Xml.XmlWriter> wystąpień. <xref:System.Xml.XmlWriter.Create%2A> Metoda używa klasy, aby określić, które <xref:System.Xml.XmlWriter> funkcje zaimplementować w utworzonym obiekcie. <xref:System.Xml.XmlWriterSettings> <xref:System.Xml.XmlWriter.Create%2A>  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> obiektu <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> z metodą <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> , należy użyć właściwości, aby uzyskać <xref:System.Xml.XmlWriterSettings> obiekt z prawidłowymi ustawieniami. Dzięki temu utworzony <xref:System.Xml.XmlWriter> obiekt ma poprawne ustawienia danych wyjściowych.  
  
 <xref:System.Xml.XmlWriterSettings> Klasa zawiera właściwości, które kontrolują zgodność danych i format danych wyjściowych.  
  
 Aby sprawdzić zgodność danych i skorygować ich korekty, użyj następujących właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Określa, czy znaki znajdują się w dozwolonym zestawie znaków XML zgodnie z definicją W3C.|`true` lub `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Czy należy sprawdzić, czy dane wyjściowe są poprawnie sformułowanym dokumentem lub fragmentem XML 1,0.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>(poziom dokumentu), <xref:System.Xml.ConformanceLevel.Fragment> (poziom fragmentu) lub <xref:System.Xml.ConformanceLevel.Auto> (Autowykrywanie)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>(zgodność na poziomie dokumentu)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Czy dodać tagi zamykające do wszystkich niezamkniętych elementów, <xref:System.Xml.XmlWriter.Close%2A> gdy wywoływana jest metoda.|`true` lub `false`|`true`|  
  
 Aby określić format danych wyjściowych, użyj następujących właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Kodowanie tekstu do użycia.|<xref:System.Text.Encoding?displayProperty=nameWithType>wartościami|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Określa, czy mają być Wcięte elementy|`true` lub `false`|`false`(bez wcięć)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Ciąg znaków, który ma być używany podczas tworzenia wcięć <xref:System.Xml.XmlWriterSettings.Indent%2A> (używany, `true`gdy jest ustawiony na).|String|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Ciąg znaków, który ma być używany przez podziały wiersza.|String|`\r\n`(znak powrotu karetki, wiersz wysuwu wiersza)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Jak obsłużyć znaki nowego wiersza.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType>wartość: <xref:System.Xml.NewLineHandling.Entitize> (normalizowanie), <xref:System.Xml.NewLineHandling.Replace> (Zastąp) lub <xref:System.Xml.NewLineHandling.None> (pozostaw bez zmian)|<xref:System.Xml.NewLineHandling.Replace>(Zamień na znaki określone przez <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Określa, czy mają być zapisywane atrybuty w poszczególnych wierszach ( <xref:System.Xml.XmlWriterSettings.Indent%2A> nie `false`ma znaczenia, gdy jest).|`true` lub `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Określa, czy należy napisać deklarację XML.|`true` lub `false`|`false`|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> zapis w pliku XML i zapisuje każdy atrybut w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład generuje następujące dane wyjściowe:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlWriterSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`(znak powrotu karetki, nowy wiersz).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa znaku tabulacji do wcięcia.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy w konkretnym <see cref="T:System.Xml.XmlWriter" /> <see cref="T:System.Xml.XmlWriter" /> wystąpieniu można używać metod asynchronicznych.</summary>
        <value><see langword="true" />Jeśli można użyć metod asynchronicznych; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić tę wartość na `true` podczas tworzenia nowego <xref:System.Xml.XmlWriter> wystąpienia, jeśli chcesz użyć metod asynchronicznych <xref:System.Xml.XmlWriter> dla tego wystąpienia. Po utworzeniu <xref:System.Xml.XmlWriter> <xref:System.Xml.XmlWriterSettings.Async%2A> wystąpienia właściwość jest tylko do odczytu. Wartość domyślna tej właściwości to `false`.  
  
 Ta flaga jest ignorowana przez <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Przeciążenie. Oznacza to, <xref:System.Xml.XmlWriter> że jeśli tworzysz nowy oparty na istniejącym <xref:System.Xml.XmlWriter>, zachowanie asynchroniczne jest zależne od danych wejściowych <xref:System.Xml.XmlWriter>i nie można użyć <xref:System.Xml.XmlWriterSettings.Async%2A> flagi, aby zmienić zachowanie asynchroniczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy składnik zapisywania XML powinien sprawdzać, czy wszystkie znaki w dokumencie są zgodne z sekcją "2,2 znaków" w zaleceniu W3C [XML 1,0](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value><see langword="true" />Aby przeprowadzić Sprawdzanie znaków; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli obiekt obsługuje sprawdzanie znaków, zgłasza wyjątek, jeśli wszystkie znaki są spoza zakresu dozwolonych znaków XML określonych przez sekcję "2,2 znaków" zalecenia dotyczącego W3C [XML 1,0.](https://www.w3.org/TR/REC-xml/#charsets) <xref:System.Xml.XmlWriter>  
  
 Sprawdzanie znaków nie obejmuje sprawdzania niedozwolonych znaków w nazwach XML lub sprawdzanie, czy wszystkie nazwy XML są prawidłowe. Testy są częścią kontroli zgodności i są zawsze wykonywane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Xml.XmlWriterSettings" /> wystąpienia.</summary>
        <returns>Sklonowany <see cref="T:System.Xml.XmlWriterSettings" /> obiekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.Xml.XmlWriterSettings> obiekt można modyfikować bez wpływu na ustawienia oryginalnego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> powinien również zamykać źródłowy strumień lub <see cref="T:System.IO.TextWriter" /> Kiedy <see cref="M:System.Xml.XmlWriter.Close" /> Metoda jest wywoływana.</summary>
        <value><see langword="true" />Aby zamknąć również strumień źródłowy lub <see cref="T:System.IO.TextWriter" />; w przeciwnym razie,. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest przydatne, gdy chcesz napisać XML do strumienia, a następnie dodać dodatkowe informacje na końcu strumienia po <xref:System.Xml.XmlWriter> zakończeniu zapisywania.  
  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość XML do <xref:System.IO.TextWriter>strumienia lub; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom zgodności, przez który składnik zapisywania XML sprawdza dane wyjściowe XML dla.</summary>
        <value>Jedna z wartości wyliczenia, która określa poziom zgodności (dokument, fragment lub wykrycie automatyczne). Wartość domyślna to <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Właściwość konfiguruje składnik zapisywania XML w celu sprawdzenia i zagwarantowania, że zapisywany strumień jest zgodny z określonym zestawem reguł. Dane XML mogą być sprawdzane, aby zobaczyć, że są zgodne z regułami dla poprawnie sformułowanego dokumentu XML 1,0 lub fragment dokumentu. W poniższej tabeli opisano trzy ustawienia. Wartość domyślna to zgodność na poziomie dokumentu.  
  
|Ustawienie|Opis|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Zapewnia, że dane wyjściowe XML są zgodne z [regułami dla poprawnie sformułowanego dokumentu XML 1,0](https://www.w3.org/TR/REC-xml/#sec-well-formed) i mogą być przetwarzane przez dowolny Procesor zgodny.<br /><br /> Kontrole zgodności dokumentów obejmują większość kontroli na poziomie fragmentów i zapewniają również następujące czynności:<br /><br /> -Element najwyższego poziomu nie ma żadnych węzłów innych niż deklaracja XML, DTD, element, komentarz, biały znak lub przetwarzanie instrukcji.<br />-Dane XML mają jeden i tylko jeden węzeł elementu najwyższego poziomu.<br /><br /> Składnik zapisywania XML nie analizuje zapisanych informacji DTD. Użytkownik jest odpowiedzialny za upewnienie się, że DTD jest poprawnie sformułowany.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Zapewnia, że dane wyjściowe XML są zgodne z [regułami dla poprawnie sformułowanego fragmentu dokumentu xml 1,0](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> To ustawienie akceptuje dane XML, które mają wiele elementów głównych lub węzłów tekstowych na najwyższego poziomu. Ten poziom sprawdzania zapewnia, że każdy procesor może zużywać strumień odczytywany jako zewnętrzną przeanalizowane jednostki XML 1,0.<br /><br /> Informacje DTD nie są dozwolone w fragmentach dokumentu.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Określa, że składnik zapisywania XML powinien określić poziom sprawdzania zgodności na podstawie danych przychodzących. To ustawienie może być przydatne, gdy nie wiadomo, czy wygenerowany kod XML będzie poprawnie sformułowanym dokumentem XML czy fragmentem.<br /><br /> Sprawdzanie zgodności dokumentów jest stosowane w następujących przypadkach:<br /><br /> — Jeśli <xref:System.Xml.XmlWriter.WriteStartDocument%2A> Metoda jest wywoływana.<br />— Jeśli Zapisano informacje DTD.<br /><br /> Sprawdzanie zgodności fragmentu jest stosowane, jeśli dane XML zawierają jedną z następujących wartości:<br /><br /> -Text, CDATA lub EntityReference węzeł na poziomie głównym.<br />-Więcej niż jeden element na poziomie głównym.<br />-Brak elementu na poziomie głównym.<br /><br /> <xref:System.Xml.XmlException> Jest zgłaszany w przypadku konfliktu, na przykład podczas próby zapisania węzła tekstowego i DTD na poziomie głównym.<br /><br /> Jeśli zawijasz inny <xref:System.Xml.XmlWriter> obiekt, obiekt zewnętrzny nie wykonuje żadnej dodatkowej kontroli zgodności; jest to pozostawione do obiektu źródłowego.|  
  
 Jeśli składnik zapisywania XML wykryje wszelkie informacje, które mogłyby naruszyć określony poziom zgodności, zgłosi wyjątek. W niektórych przypadkach składnik zapisywania XML automatycznie koryguje błąd zgodności. Na przykład moduł zapisujący zamyka niezamknięty atrybut bez zgłaszania wyjątku. W poniższej tabeli przedstawiono, w jaki sposób różne naruszenia zgodności są obsługiwane w każdym ustawieniu.  
  
|Warunek|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Znaleziono informacje DTD.|Brak naruszenia dla tego ustawienia. Jednak składnik zapisywania XML nie sprawdza DTD. Użytkownik musi upewnić się, że DTD jest poprawnie sformułowany.|<xref:System.Xml.XmlException>jest zgłaszany.|Zastosowana jest kontrola zgodności dokumentów.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A>jest wywoływana.|Nie jest uważany za naruszenie tego ustawienia.|<xref:System.Xml.XmlException>jest zgłaszany.|Zastosowana jest kontrola zgodności dokumentów.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A>jest wywoływana wiele razy.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Wartość tekstowa pojawia się na najwyższego poziomu (nie poniżej węzła elementu lub atrybutu).|<xref:System.Xml.XmlException>jest zgłaszany.|Nie jest traktowany jako naruszenie.|Zastosowana jest kontrola zgodności fragmentów.|  
|Na najwyższego poziomu nie pojawiają się wiele elementów ani elementów.|<xref:System.Xml.XmlException>jest zgłaszany.|Nie jest traktowany jako naruszenie.|Zastosowana jest kontrola zgodności fragmentów.|  
|Element najwyższego poziomu jest białym znakiem.|Nie jest traktowany jako naruszenie.|Nie jest traktowany jako naruszenie.|Nie jest traktowany jako naruszenie.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A>nie jest wywoływana, aby zakończyć węzeł atrybutu.|Naprawione przez składnik zapisywania XML.|Naprawione przez składnik zapisywania XML.|Naprawione przez składnik zapisywania XML.|  
|Składnik zapisywania XML znajduje się w nieprawidłowym stanie zagnieżdżenia (na przykład <xref:System.Xml.XmlWriter.WriteStartElement%2A> po <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>wywołaniu a).|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Element najwyższego poziomu jest atrybutem.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Znaleziono wiele węzłów ciągłego tekstu.|Nie jest uważany za naruszenie, ale jest odpowiedzialny za łączenie się węzłów tekstowych.|Nie jest uważany za naruszenie, ale jest odpowiedzialny za łączenie się węzłów tekstowych.|Nie jest uważany za naruszenie, ale jest odpowiedzialny za łączenie się węzłów tekstowych.|  
|Ten sam prefiks przestrzeni nazw jest zadeklarowany dwukrotnie w elemencie.|Składnik zapisywania XML generuje nowy prefiks dla drugiej przestrzeni nazw.|Składnik zapisywania XML generuje nowy prefiks dla drugiej przestrzeni nazw.|Składnik zapisywania XML generuje nowy prefiks dla drugiej przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A>Określa prefiks i przestrzeń nazw, które nie są zadeklarowane w tym zakresie, lub prefiks jest skojarzony z inną przestrzenią nazw.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>Określa prefiks i przestrzeń nazw, które nie są zadeklarowane w tym zakresie.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|Składnik zapisywania XML zapisuje wymagany węzeł przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A>Określa prefiks i przestrzeń nazw, ale prefiks jest skojarzony z inną przestrzenią nazw w zakresie.|Składnik zapisywania XML ignoruje określony prefiks i wyszukuje poprawny prefiks lub generuje nowy prefiks.|Składnik zapisywania XML ignoruje określony prefiks i wyszukuje poprawny prefiks lub generuje nowy prefiks.|Składnik zapisywania XML ignoruje określony prefiks i wyszukuje poprawny prefiks lub generuje nowy prefiks.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>służy do zapisywania zawartości elementu przy użyciu przestrzeni nazw, która nie istnieje w zakresie.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A>służy do zapisywania zawartości atrybutu przy użyciu przestrzeni nazw, która nie istnieje w zakresie.|Składnik zapisywania XML zapisuje niezbędną deklarację przestrzeni nazw.|Składnik zapisywania XML zapisuje niezbędną deklarację przestrzeni nazw.|Składnik zapisywania XML zapisuje niezbędną deklarację przestrzeni nazw.|  
|`xml:space` Atrybut nie zawiera prawidłowej wartości.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|Napotkano nieprawidłową nazwę.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|`xml` Prefiks nie jest zgodny z identyfikatorem URI.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|  
|Prefiks nie jest zgodny http://www.w3.org/XML/1998/namespace z identyfikatorem URI. `xml`|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
|`xmlns` Prefiks lub nazwa lokalna nie są zgodne z identyfikatorem URI.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|Składnik zapisywania XML nie sprawdza tego typu naruszenia.|  
|Prefiks lub nazwa lokalna nie są zgodne http://www.w3.org/2000/xmlns z identyfikatorem URI. `xmlns`|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|<xref:System.Xml.XmlException>jest zgłaszany.|  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> atrybuty identyfikatora URI nie są wyprowadzane.</summary>
        <value><see langword="true" />Jeśli atrybuty identyfikatora URI nie ucieczki; w przeciwnym <see langword="false" />razie,. <see cref="T:System.Xml.XmlWriter" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kodowania tekstu, który ma być używany.</summary>
        <value>Kodowanie tekstu, które ma być używane. Wartość domyślna to <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Koduje bufor wszystkich znaków jednocześnie, a nie znak po znaku. Wyjątek jest zgłaszany, gdy <xref:System.Xml.XmlWriter.Flush%2A> wywoływana jest metoda w przypadku napotkania błędów kodowania.  
  
 Właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień utworzonych przy użyciu określonego <xref:System.IO.Stream> lub z określoną nazwą pliku. <xref:System.Xml.XmlWriterSettings.Encoding%2A> Jeśli wystąpienie jest tworzone z określonym <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> właściwość zostanie zastąpiona przez kodowanie bazowe <xref:System.IO.TextWriter>. <xref:System.Xml.XmlWriter> Na przykład, jeśli ta właściwość jest ustawiona na Unicode (UTF-16) dla danego <xref:System.Xml.XmlWriter>elementu, ale źródłowy moduł zapisujący <xref:System.IO.StreamWriter> jest (który pochodzi z <xref:System.IO.TextWriter>) z kodowaniem ustawionym na UTF8, dane wyjściowe będą kodowane w formacie UTF-8.  
  
 Jeśli wystąpienie jest tworzone z innymi parametrami wyjściowymi <xref:System.Xml.XmlWriterSettings.Encoding%2A> , właściwość jest ignorowana. <xref:System.Xml.XmlWriter>  
  
 W poniższym przykładzie:  
  
-   Wartość <xref:System.Xml.XmlWriterSettings.Encoding%2A> domyślna to `Encoding.UTF8`.  
  
-   Opcja jest ustawiona na `Encoding.Unicode` , a <xref:System.IO.StreamWriter>kodowanie zastępuje <xref:System.Xml.XmlWriterSettings.Encoding%2A> ustawienie. <xref:System.IO.StreamWriter>  
  
-   Dane wyjściowe będą `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Nie Akceptuj <xref:System.Text.Encoding> obiektu z niezaufanego źródła.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy mają być Wcięte elementy.</summary>
        <value><see langword="true" />Aby napisać poszczególne elementy w nowych wierszach i wcięcie; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość tekstową; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Elementy są wcięte, o ile element nie zawiera zawartości mieszanej. Gdy metoda <xref:System.Xml.XmlWriter.WriteWhitespace%2A> <xref:System.Xml.XmlWriter> lub zostanie wywołana w celu zapisania zawartości mieszanej, spowoduje to zatrzymanie wcięcia. <xref:System.Xml.XmlWriter.WriteString%2A> Wcięcie zostanie wznowione po zamknięciu elementu zawartości mieszanej.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa znaku tabulacji do wcięcia.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków, który będzie używany podczas tworzenia wcięcia. To ustawienie jest używane, <see cref="P:System.Xml.XmlWriterSettings.Indent" /> gdy właściwość jest ustawiona na. <see langword="true" /></summary>
        <value>Ciąg znaków, który ma być używany podczas tworzenia wcięcia. Można ustawić dowolną wartość ciągu. Aby jednak zapewnić prawidłowy kod XML, należy określić tylko poprawne znaki odstępu, takie jak spacje, tabulatory, znaki powrotu karetki lub wysuwu wiersza. Wartość domyślna to dwie spacje.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość tekstową; w przeciwnym razie to ustawienie jest ignorowane. Zgłasza <xref:System.Xml.XmlWriter> wyjątek, jeśli wcięcie znaków spowoduje nieprawidłowy kod XML.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa znaku tabulacji do wcięcia.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.IndentChars" />. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> należy usunąć zduplikowane deklaracje przestrzeni nazw podczas zapisywania zawartości XML. Domyślne zachowanie polega na wykorzystaniu przez składnik zapisywania danych wyjściowych wszystkich deklaracji przestrzeni nazw, które znajdują się w programie rozpoznawania nazw dla obszaru zapisywania.</summary>
        <value>Wyliczenie używane do określenia, czy należy usunąć zduplikowane deklaracje przestrzeni <see cref="T:System.Xml.XmlWriter" />nazw w elemencie. <see cref="T:System.Xml.NamespaceHandling" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków, który ma być używany przez podziały wiersza.</summary>
        <value>Ciąg znaków, który ma być używany dla podziałów wierszy. Można ustawić dowolną wartość ciągu. Aby jednak zapewnić prawidłowy kod XML, należy określić tylko poprawne znaki odstępu, takie jak spacje, tabulatory, znaki powrotu karetki lub wysuwu wiersza. Wartość domyślna to <c>\r\n</c> (znak powrotu karetki, nowy wiersz).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość tekstową; w przeciwnym razie to ustawienie jest ignorowane. Zgłasza <xref:System.Xml.XmlWriter> wyjątek, jeśli znaki podziału wiersza spowodują nieprawidłowe XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" />. <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy znormalizować podziały wierszy w danych wyjściowych.</summary>
        <value>Jedna z <see cref="T:System.Xml.NewLineHandling" /> wartości. Wartość domyślna to <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest stosowane podczas pisania wartości tekstowych lub atrybutów. Każda z <xref:System.Xml.NewLineHandling> tych wartości została opisana poniżej:  
  
-   Ustawienie mówi, <xref:System.Xml.XmlWriter> aby zastąpić nowe znaki wiersza, które nie byłyby w inny sposób <xref:System.Xml.XmlReader> zachowane przez normalizację z jednostkami znaków. <xref:System.Xml.NewLineHandling.Entitize> Jest to przydatne w scenariuszach rundy, w których dane wyjściowe są odczytywane przez normalizację <xref:System.Xml.XmlReader>. Dodatkowe reguły normalizacji mają zastosowanie do wartości atrybutów w przypadku zaokrąglania `\t`od `\n` czasu `\r` do i są zastępowane spacją <xref:System.Xml.XmlReader>w wartości atrybutów, gdy są znormalizowane w.  
  
-   <xref:System.Xml.NewLineHandling.Replace> Ustawienie nakazuje`\r\n`zamianę znaków nowego wiersza na, który jest nowym formatem wiersza używanym przez system operacyjny Microsoft Windows. <xref:System.Xml.XmlWriter> Pozwala to zagwarantować, że plik może być poprawnie wyświetlany przez Notatnik lub aplikacje programu Microsoft Word. To ustawienie powoduje także zastąpienie nowych wierszy w atrybutach jednostkami znaku, aby zachować znaki. Jest to wartość domyślna.  
  
-   Ustawienie informuje, <xref:System.Xml.XmlWriter> aby pozostawić dane wejściowe bez zmian. <xref:System.Xml.NewLineHandling.None> To ustawienie jest używane, jeśli nie chcesz, aby żadne nowe wiersze były przetwarzane. Jest to przydatne, gdy dane wyjściowe są odczytywane <xref:System.Xml.XmlReader> przez program, który nie wykonuje żadnej normalizacji (na przykład <xref:System.Xml.XmlTextReader> z ustawieniami domyślnymi).  
  
 W poniższych tabelach przedstawiono dane wyjściowe <xref:System.Xml.XmlWriter.WriteString%2A> metody, gdy jest ona dostarczana z wartością wejściową <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> w zależności od ustawienia właściwości. W tabelach są wyświetlane dane wyjściowe podczas pisania zawartości tekstowej, a także podczas pisania wartości atrybutu.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;\n|\n|&#D;|\t|  
|Replace|\r\n|\r\n|\r\n|\t|  
|Brak|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Replace|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Brak|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  <xref:System.Xml.XmlWriter> Ma następujące zachowanie podczas pisania zawartości w sekcji CDATA, komentarzu lub instrukcji przetwarzania. Nowe wiersze nigdy nie są zastępowane jednostkami znaku, nawet gdy <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.Entitize>. Wynika to z faktu, że jednostki znaków nie są rozpoznawane w sekcjach CDATA, komentarzach lub instrukcjach przetwarzania. Jeśli właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.None> lub <xref:System.Xml.NewLineHandling.Replace>, zachowanie jest takie samo jak podczas pisania wartości węzła tekstu. <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>  
  
 W poniższej tabeli opisano, co jest <xref:System.Xml.XmlReader> wynikiem normalizacji dla każdego białego odstępu. Aby uzyskać więcej informacji, zobacz sekcje 2,11 i 3.3.3 [zalecenia XML 1,0](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Normalizing Reader to każdy <xref:System.Xml.XmlReader> obiekt utworzony <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> przez metodę. Te obiekty zawsze wykonują normalizację podziału wiersza i pełną normalizację atrybutów. Obiekt może być również w przypadku, gdy <xref:System.Xml.XmlTextReader.Normalization%2A> właściwość jest ustawiona na `true`. <xref:System.Xml.XmlTextReader>  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Wartość węzła tekstowego|\n|\n|\n|\t|  
|Wartość atrybutu|pojedyncze miejsce|pojedyncze miejsce|pojedyncze miejsce|pojedyncze miejsce|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy mają być zapisane atrybuty w nowym wierszu.</summary>
        <value><see langword="true" />Aby pisać atrybuty w poszczególnych wierszach; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 To ustawienie nie ma wpływu, <see cref="P:System.Xml.XmlWriterSettings.Indent" /> gdy wartość właściwości to. <see langword="false" />  
  
</para></block>  
  
 Gdy <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> jest ustawiona na <see langword="true" />, każdy atrybut jest wstępnie zamiarowy z nowym wierszem i jednym dodatkowym poziomem wcięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość tekstową; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> zapis w pliku XML i zapisuje każdy atrybut w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład generuje następujące dane wyjściowe:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pominąć deklarację XML.</summary>
        <value><see langword="true" />Aby pominąć deklarację XML; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />, deklaracja XML jest zapisywana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko <xref:System.Xml.XmlWriter> do wystąpień, które wyprowadzają zawartość tekstową; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Jeśli <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> jest ustawiona na `false`, deklaracja XML jest zapisywana automatycznie  
  
 Deklaracja XML jest zawsze zapisywana, <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> jeśli jest ustawiona <xref:System.Xml.ConformanceLevel.Document>na, nawet <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> jeśli jest ustawiona `true`na.  
  
 Deklaracja XML nigdy nie jest zapisywana <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> , jeśli jest <xref:System.Xml.ConformanceLevel.Fragment>ustawiona na. Możesz wywołać <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> , aby jawnie napisać deklarację XML.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragment XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metodę używaną do serializacji <see cref="T:System.Xml.XmlWriter" /> danych wyjściowych.</summary>
        <value>Jedna z <see cref="T:System.Xml.XmlOutputMethod" /> wartości. Wartość domyślna to <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa metodę używaną do serializacji danych wyjściowych. Dane wyjściowe można serializować przy użyciu reguł HTML, reguł XML 1,0 i tak dalej. To ustawienie jest ustawiane przez procesor XSLT i używane wewnętrznie przez program Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje elementy członkowskie klasy Settings do ich wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono domyślne wartości właściwości wystąpienia elementu <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> program będzie dodawać tagi zamykające do wszystkich niezamkniętych tagów elementów, <see cref="M:System.Xml.XmlWriter.Close" /> gdy wywoływana jest metoda.</summary>
        <value><see langword="true" />Jeśli wszystkie niezamknięte Tagi elementu zostaną zamknięte; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ustawisz tę flagę `false`na, wyjściowy plik XML może nie być poprawnie sformułowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
