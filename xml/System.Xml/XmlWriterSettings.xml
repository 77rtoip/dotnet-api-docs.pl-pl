<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3708673d1f08f8830ae66ec198637d8f7a756e30" />
    <Meta Name="ms.sourcegitcommit" Value="b15b8cf0f6dbc1504057c88969d9ef4b790891fe" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/11/2018" />
    <Meta Name="ms.locfileid" Value="34061576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zestaw funkcji do obsługi na <see cref="T:System.Xml.XmlWriter" /> obiekt utworzony przez <see cref="Overload:System.Xml.XmlWriter.Create" /> metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter.Create%2A> Metoda jest to preferowany sposób uzyskiwania <xref:System.Xml.XmlWriter> wystąpień. <xref:System.Xml.XmlWriter.Create%2A> Używa metody <xref:System.Xml.XmlWriterSettings> klasę, aby określić, które funkcje do zaimplementowania w <xref:System.Xml.XmlWriter> obiektu, który jest tworzony.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> obiekt z <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody, należy użyć <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> właściwości w celu uzyskania <xref:System.Xml.XmlWriterSettings> obiektu z prawidłowymi ustawieniami. Gwarantuje to, że utworzony <xref:System.Xml.XmlWriter> obiekt ma ustawienia poprawne dane wyjściowe.  
  
 <xref:System.Xml.XmlWriterSettings> Klasy zawiera właściwości tego formantu danych zgodności i dane wyjściowe formatu.  
  
 Sprawdza zgodność danych i automatycznie poprawek Użyj tych właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Zestaw, sprawdź, czy znaki w kodzie XML prawne czy znaków zgodnie z definicją W3C.|`true` lub `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Określa, czy Sprawdź, czy dane wyjściowe jest poprawnie sformułowany dokument XML 1.0 lub fragmentu.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (poziomie dokumentu), <xref:System.Xml.ConformanceLevel.Fragment> (poziomie fragmentu), lub <xref:System.Xml.ConformanceLevel.Auto> (Autowykrywanie)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (zgodność na poziomie dokumentu)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Czy chcesz dodać do wszystkich elementów niezamknięty zamykającym tagiem podczas <xref:System.Xml.XmlWriter.Close%2A> metoda jest wywoływana.|`true` lub `false`|`true`|  
  
 Aby określić format danych wyjściowych, należy użyć tych właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Kodowanie tekstu.|<xref:System.Text.Encoding?displayProperty=nameWithType> Wartość|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Czy stosować wcięcia elementów|`true` lub `false`|`false` (nie wcięcia)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Ciąg do użycia podczas tworzenia wcięć znaków (używane podczas <xref:System.Xml.XmlWriterSettings.Indent%2A> ma ustawioną wartość `true`).|String|Dwóch spacji|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Ciąg znaków na potrzeby podziały wiersza.|String|`\r\n` (znaków powrotu karetki, wysuwu wiersza)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Sposób obsługi znaków nowego wiersza.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> wartość: <xref:System.Xml.NewLineHandling.Entitize> (normalizacji) <xref:System.Xml.NewLineHandling.Replace> (Zastąp) lub <xref:System.Xml.NewLineHandling.None> (Pozostaw bez zmian)|<xref:System.Xml.NewLineHandling.Replace> (zastąp znaki określone w <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Czy zapisać atrybutów w poszczególnych wierszach (nie ma efektu, jeśli <xref:System.Xml.XmlWriterSettings.Indent%2A> jest `false`).|`true` lub `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Określa, czy można zapisać deklaracji XML.|`true` lub `false`|`false`|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> zapisuje do pliku XML i zapisuje każdego atrybutu w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład tworzy następujące dane wyjściowe:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlWriterSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości dla wystąpienia <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (powrotu karetki, nowy wiersz).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa dla wcięć znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy asynchroniczne <see cref="T:System.Xml.XmlWriter" /> metody mogą być używane w przypadku określonego <see cref="T:System.Xml.XmlWriter" /> wystąpienia.</summary>
        <value>
          <see langword="true" /> Jeśli asynchronicznej metody mogą być używane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musisz ustawić tę wartość na `true` podczas tworzenia nowego <xref:System.Xml.XmlWriter> wystąpienia, jeśli chcesz użyć asynchroniczne <xref:System.Xml.XmlWriter> metody w tym wystąpieniu. Po <xref:System.Xml.XmlWriter> jest tworzone wystąpienie, <xref:System.Xml.XmlWriterSettings.Async%2A> właściwość jest tylko do odczytu. Wartość domyślna tej właściwości to `false`.  
  
 Ta flaga jest ignorowana przez <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> przeciążenia. Oznacza to, że w przypadku utworzenia nowego <xref:System.Xml.XmlWriter> oparte na istniejącym <xref:System.Xml.XmlWriter>, zachowanie async zależy od danych wejściowych <xref:System.Xml.XmlWriter>, i nie można użyć <xref:System.Xml.XmlWriterSettings.Async%2A> flagę w celu zmiany zachowania asynchronicznego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy sprawdzić edytora XML, upewnij się, czy wszystkie znaki w dokumencie są zgodne z sekcji "2,2 znaków" W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value>
          <see langword="true" /> Aby znak sprawdzanie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.XmlWriter> obiekt obsługuje sprawdzanie znak, zgłasza wyjątek, jeśli wszystkie znaki są poza zakresem dozwolonych znaków XML określone przez sekcję "2,2 znaków" W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Sprawdzanie znak nie obejmuje sprawdzanie niedozwolone znaki w nazwach XML lub Sprawdzanie, czy wszystkie nazwy XML są prawidłowe. Te testy są częścią sprawdzanie zgodności i są zawsze wykonywane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Xml.XmlWriterSettings" /> wystąpienia.</summary>
        <returns>Sklonowany <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.Xml.XmlWriterSettings> obiektu może być modyfikowana bez wpływu na ustawienia do oryginalnego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Xml.XmlWriter" /> powinna zamykać również odpowiedniego strumienia lub <see cref="T:System.IO.TextWriter" /> podczas <see cref="M:System.Xml.XmlWriter.Close" /> metoda jest wywoływana.</summary>
        <value>
          <see langword="true" /> Aby zamknąć również odpowiedniego strumienia lub <see cref="T:System.IO.TextWriter" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest przydatne, gdy chcesz zapisać w strumieniu XML, a następnie dodaj dodatkowe informacje na koniec strumienia po <xref:System.Xml.XmlWriter> zakończył zapisywanie.  
  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, które udostępniają XML zawartości do strumienia lub <xref:System.IO.TextWriter>; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom zgodności, która edytora XML sprawdza dane wyjściowe XML.</summary>
        <value>Jedna z wartości wyliczenia, które określa poziom zgodności (dokument, fragment lub automatyczne wykrywanie). Wartość domyślna to <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Właściwość konfiguruje edytora XML do sprawdzenia i gwarantuje, że strumienia zapisywana jest zgodny z zestawem reguł. Dane XML można sprawdzić, aby zobaczyć, że są one zgodne z regułami dotyczącymi poprawnie sformułowany dokument XML 1.0 lub fragment dokumentu. W poniższej tabeli opisano trzy ustawienia. Wartość domyślna to zgodność na poziomie dokumentu.  
  
|Ustawienie|Opis|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Zapewnia, że dane wyjściowe XML odpowiada [zasady poprawnie sformułowany dokument XML 1.0](https://www.w3.org/TR/REC-xml/#sec-well-formed) i mogą być przetwarzane przez dowolnego zgodnych procesora.<br /><br /> Sprawdzanie zgodności dokumentu uwzględnić większość kontroli poziomie fragmentu i upewnij się również następujące:<br /><br /> -Element najwyższego poziomu nie ma żadnych węzłów innych niż deklaracja XML, DTD, element, komentarza, biały znak lub instrukcji przetwarzania.<br />-Dane XML ma jeden i tylko jeden węzeł element najwyższego poziomu.<br /><br /> Edytora XML nie przeanalizować DTD informacje, które są zapisywane. Użytkownik jest odpowiedzialny za zapewnienie, że element DTD jest poprawnie sformułowany.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Zapewnia, że dane wyjściowe XML odpowiada [zasady poprawnie sformułowanym fragmentem dokumentu XML 1.0](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> To ustawienie akceptuje dane XML, który ma wiele elementów głównych i węzły tekstowe na najwyższym poziomie. Ten poziom kontroli gwarantuje, że dowolnego procesora, jaką może wykorzystać strumień odczytu jako przeanalizowanej jednostki zewnętrznej XML 1.0.<br /><br /> Informacje o definicji DTD nie jest dozwolona w fragmenty dokumentu.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Określa, że edytora XML należy określić poziom sprawdzanie zgodności na podstawie przychodzących danych. To ustawienie może być przydatne, jeśli nie wiesz, czy wygenerowane XML będzie poprawnie sformułowany dokument XML lub fragmentu.<br /><br /> Sprawdzanie zgodności dokumentu jest stosowane w następujących przypadkach:<br /><br /> -Jeśli <xref:System.Xml.XmlWriter.WriteStartDocument%2A> metoda jest wywoływana.<br />— Jeśli DTD informacje są zapisywane.<br /><br /> Sprawdzanie zgodności fragment jest stosowany, gdy dane XML zawiera jeden z nich:<br /><br /> — Tekst, CDATA lub EntityReference węzeł na poziomie głównym.<br />-Więcej niż jeden element na poziomie głównym.<br />-Brak elementu na poziomie głównym.<br /><br /> <xref:System.Xml.XmlException> Jest generowany, jeśli występuje konflikt, na przykład przy próbie zapisu węzłem tekstowym i DTD na poziomie głównym.<br /><br /> Jeśli są opakowującego aplikacje innej <xref:System.Xml.XmlWriter> obiektu, obiekt zewnętrzne nie wykonuje żadnych dodatkowych zgodność sprawdzanie; to pole pozostanie do obiektu źródłowego.|  
  
 Jeśli edytora XML wykryje żadnych informacji, który mógłby naruszyć określony poziom zgodności, zgłasza wyjątek. W niektórych przypadkach edytora XML automatycznie skoryguje błąd zgodności. Na przykład moduł zapisujący zamyka niezamknięty atrybutu bez generowania wyjątku. W poniższej tabeli przedstawiono różne naruszeń zgodności są obsługiwane w przypadku każdego ustawienia.  
  
|Warunek|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Znaleziono informacji o DTD.|Nie naruszenie dla tego ustawienia. Jednak edytora XML nie sprawdza DTD; użytkownik musi upewnić się, że element DTD jest poprawnie sformułowany.|<xref:System.Xml.XmlException> jest generowany.|Sprawdzanie zgodności dokumentu została zastosowana.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> jest wywoływana.|Nie uznawane za naruszenia dla tego ustawienia.|<xref:System.Xml.XmlException> jest generowany.|Sprawdzanie zgodności dokumentu została zastosowana.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> jest wywołana wiele razy.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|Wartość tekstu pojawi się na najwyższym poziomie (nie poniżej elementu lub atrybutu węzeł).|<xref:System.Xml.XmlException> jest generowany.|Nie uznany za naruszenie.|Sprawdzanie zgodności fragmentu została zastosowana.|  
|Wiele elementów lub elementy nie zostaną wyświetlone na najwyższym poziomie.|<xref:System.Xml.XmlException> jest generowany.|Nie uznany za naruszenie.|Sprawdzanie zgodności fragmentu została zastosowana.|  
|Element najwyższego poziomu jest biały znak.|Nie uznany za naruszenie.|Nie uznany za naruszenie.|Nie uznany za naruszenie.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> nie jest wywoływana w celu zakończenia węzła atrybutu.|Rozwiązany przez Edytor XML.|Rozwiązany przez Edytor XML.|Rozwiązany przez Edytor XML.|  
|Edytora XML jest w stanie nieprawidłowo zagnieżdżonych (na przykład <xref:System.Xml.XmlWriter.WriteStartElement%2A> następuje wywołanie <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|Element najwyższego poziomu jest atrybutem.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|Wiele, ciągłe tekstu znajdują się węzły.|Nie uznawane za naruszenia, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|Nie uznawane za naruszenia, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|Nie uznawane za naruszenia, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|  
|Tego samego prefiksu przestrzeni nazw jest zadeklarowany jako dwa razy w elemencie.|Edytora XML generuje nowy prefiks dla drugiego przestrzeni nazw.|Edytora XML generuje nowy prefiks dla drugiego przestrzeni nazw.|Edytora XML generuje nowy prefiks dla drugiego przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Określa prefiks i przestrzeń nazw, który nie jest zadeklarowany w tym zakresie lub prefiks jest skojarzona z inną przestrzeń nazw.|Edytora XML zapisuje niezbędne przestrzeń nazw.|Edytora XML zapisuje niezbędne przestrzeń nazw.|Edytora XML zapisuje niezbędne przestrzeń nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Określa prefiks i przestrzeń nazw, który nie jest zadeklarowany w tym zakresie.|Edytora XML zapisuje niezbędne przestrzeń nazw.|Edytora XML zapisuje niezbędne przestrzeń nazw.|Edytora XML zapisuje niezbędne przestrzeń nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Określa prefiks i przestrzeń nazw, ale prefiks jest skojarzona z inną przestrzeń nazw w zakresie.|Określony prefiks ignoruje edytora XML i wyszukuje poprawny prefiks lub generuje nowy prefiks.|Określony prefiks ignoruje edytora XML i wyszukuje poprawny prefiks lub generuje nowy prefiks.|Określony prefiks ignoruje edytora XML i wyszukuje poprawny prefiks lub generuje nowy prefiks.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> Służy do zapisywania zawartości elementu za pomocą przestrzeni nazw, która nie istnieje w zakresie.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> Służy do zapisywania zawartości atrybutu za pomocą przestrzeni nazw, która nie istnieje w zakresie.|Edytora XML zapisuje deklaracja niezbędne przestrzeni nazw.|Edytora XML zapisuje deklaracja niezbędne przestrzeni nazw.|Edytora XML zapisuje deklaracja niezbędne przestrzeni nazw.|  
|`xml:space` Atrybut nie zawiera prawidłowej wartości.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|Napotkano nieprawidłową nazwę.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|`xml` Prefiks nie jest dopasowany do identyfikatora URI.|Edytora XML nie sprawdza dla tego typu naruszenia.|Edytora XML nie sprawdza dla tego typu naruszenia.|Edytora XML nie sprawdza dla tego typu naruszenia.|  
|`xml` Prefiks nie jest dopasowany do http://www.w3.org/XML/1998/namespace identyfikatora URI.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
|`xmlns` Prefiks lub nazwa lokalna nie jest dopasowany do identyfikatora URI.|Edytora XML nie sprawdza dla tego typu naruszenia.|Edytora XML nie sprawdza dla tego typu naruszenia.|Edytora XML nie sprawdza dla tego typu naruszenia.|  
|`xmlns` Prefiks lub nazwa lokalna nie jest dopasowany do http://www.w3.org/2000/xmlns identyfikatora URI.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|<xref:System.Xml.XmlException> jest generowany.|  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> nie escape atrybutów identyfikatora URI.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.XmlWriter" /> nie escape atrybutów identyfikatora URI; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kodowanie tekstu.</summary>
        <value>Tekst kodowanie do użycia. Wartość domyślna to <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Koduje buforu znaków jednocześnie, a nie znak po znaku. Zgłoszono wyjątek podczas <xref:System.Xml.XmlWriter.Flush%2A> metoda jest wywoływana, gdy zostaną napotkane błędy kodowania.  
  
 <xref:System.Xml.XmlWriterSettings.Encoding%2A> Właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, które są tworzone za pomocą określonego <xref:System.IO.Stream> lub za pomocą określonej nazwy pliku. Jeśli <xref:System.Xml.XmlWriter> jest tworzone wystąpienie z określonym <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> właściwość nie zostanie zastąpiona przez kodowanie podstawowych <xref:System.IO.TextWriter>. Na przykład, jeśli ta właściwość jest ustawiona na Unicode (UTF-16) dla określonego <xref:System.Xml.XmlWriter>, ale podstawowy moduł zapisujący jest <xref:System.IO.StreamWriter> (pochodzący od <xref:System.IO.TextWriter>) z jego kodowaniem ustawioną UTF8, dane wyjściowe będą zakodowane w formacie UTF-8.  
  
 Jeśli <xref:System.Xml.XmlWriter> jest tworzone wystąpienie o innych parametrów wyjściowych <xref:System.Xml.XmlWriterSettings.Encoding%2A> właściwość jest ignorowana.  
  
 W poniższym przykładzie:  
  
-   Wartość domyślna <xref:System.Xml.XmlWriterSettings.Encoding%2A> jest `Encoding.UTF8`.  
  
-   <xref:System.IO.StreamWriter> Ustawiono `Encoding.Unicode` i <xref:System.IO.StreamWriter>kodowania zastąpienia <xref:System.Xml.XmlWriterSettings.Encoding%2A> ustawienie.  
  
-   Dane wyjściowe będą `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Nie akceptuj <xref:System.Text.Encoding> obiektu z niezaufanego źródła.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy stosować wcięcia elementów.</summary>
        <value>
          <see langword="true" /> pisanie poszczególne elementy na nowych wierszy oraz wcięcie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień który output zawartości tekstowej; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Tworzone jest wcięcie elementy, jak długo element nie zawiera zawartości mieszanej. Raz <xref:System.Xml.XmlWriter.WriteString%2A> lub <xref:System.Xml.XmlWriter.WriteWhitespace%2A> zapisać zawartości elementu mieszany, wywoływana jest metoda <xref:System.Xml.XmlWriter> zatrzymuje wcięcia. Wcięcia wznawia działanie po zamknięciu mieszanych elementu zawartości.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa dla wcięć znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków do użycia podczas tworzenia wcięć. To ustawienie jest używane podczas <see cref="P:System.Xml.XmlWriterSettings.Indent" /> właściwość jest ustawiona na <see langword="true" />.</summary>
        <value>Ciąg znaków do użycia podczas tworzenia wcięć. Może być równa dowolną wartością ciągu. Jednak aby zapewnić prawidłowy kod XML, należy określić tylko prawidłowe białe znaki, takie jak znaki spacji, tabulatory, karetki lub znaki wysuwu wiersza. Wartość domyślna to dwóch spacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień który output zawartości tekstowej; w przeciwnym razie to ustawienie jest ignorowane. <xref:System.Xml.XmlWriter> Zgłasza wyjątek, jeśli znaki wcięcie spowodowałoby nieprawidłowy kod XML.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa dla wcięć znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> należy usunąć deklaracji zduplikowanych nazw podczas zapisywania zawartości XML. Domyślnym zachowaniem jest moduł zapisujący dane wyjściowe wszystkie deklaracje przestrzeni nazw, które znajdują się w przestrzeni nazw moduł zapisujący programu rozpoznawania nazw.</summary>
        <value>
          <see cref="T:System.Xml.NamespaceHandling" /> Wyliczenie używany do określenia, czy chcesz usunąć deklaracji zduplikowanych nazw w <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków na potrzeby podziały wiersza.</summary>
        <value>Ciąg znaków na potrzeby podziały wiersza. Może być równa dowolną wartością ciągu. Jednak aby zapewnić prawidłowy kod XML, należy określić tylko prawidłowe białe znaki, takie jak znaki spacji, tabulatory, karetki lub znaki wysuwu wiersza. Wartość domyślna to <c>\r\n</c> (powrotu karetki, nowy wiersz).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień który output zawartości tekstowej; w przeciwnym razie to ustawienie jest ignorowane. <xref:System.Xml.XmlWriter> Zgłasza wyjątek, jeśli znaki podziału wiersza spowodowałoby nieprawidłowy kod XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy do normalizacji podziały wierszy w danych wyjściowych.</summary>
        <value>Jeden z <see cref="T:System.Xml.NewLineHandling" /> wartości. Wartość domyślna to <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest stosowane podczas pisania tekstu wartości zawartości lub atrybutów. Każdy z <xref:System.Xml.NewLineHandling> wartości jest opisane poniżej:  
  
-   <xref:System.Xml.NewLineHandling.Entitize> Ustawienie informuje <xref:System.Xml.XmlWriter> zastąpić znaki nowego wiersza, które mogłyby w przeciwnym razie zachować przy normalizacji <xref:System.Xml.XmlReader> z encje znaków. Jest to przydatne w scenariuszach obustronne, gdzie dane wyjściowe jest odczytywany przez normalizacji <xref:System.Xml.XmlReader>. Normalizacji dodatkowe reguły są stosowane do wartości atrybutów podczas round uruchomienie od `\t`, `\n` i `\r` są zamieniane na miejsce, w wartości atrybutu, gdy z znormalizowanych w <xref:System.Xml.XmlReader>.  
  
-   <xref:System.Xml.NewLineHandling.Replace> Ustawienie informuje <xref:System.Xml.XmlWriter> zastąpić znaki nowego wiersza z `\r\n`, który jest nowy format wiersza używane przez system operacyjny Microsoft Windows. Pomaga to zapewnić pliku mogą być niepoprawnie wyświetlane przez aplikacje Notatnik lub Microsoft Word. To ustawienie zastępuje również nowe wiersze w atrybutach jednostki znaków do zachowania znaki. Jest to wartość domyślna.  
  
-   <xref:System.Xml.NewLineHandling.None> Ustawienie informuje <xref:System.Xml.XmlWriter> pozostawić bez zmian danych wejściowych. To ustawienie jest używane, gdy nie ma żadnych przetwarzania nowego wiersza. Jest to przydatne, gdy dane wyjściowe jest odczytywany przez <xref:System.Xml.XmlReader> nie wykonuje żadnych normalizacji (na przykład <xref:System.Xml.XmlTextReader> przy użyciu ustawień domyślnych.)  
  
 W poniższych tabelach przedstawiono dane wyjściowe <xref:System.Xml.XmlWriter.WriteString%2A> metody, gdy jest używany z wartości wejściowej, w zależności od <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> ustawienie właściwości. W tabelach przedstawiono dane wyjściowe podczas zapisywania zawartości tekstowej, a także podczas zapisywania wartości atrybutu.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;\n|\n|&#D;|\t|  
|Zamień|\r\n|\r\n|\r\n|\t|  
|Brak|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Zamień|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Brak|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  <xref:System.Xml.XmlWriter> Ma następujące zachowanie podczas zapisywania zawartości w ramach sekcji CDATA, komentarza lub instrukcji przetwarzania. Nowe wiersze nigdy nie zostaną zastąpione ich jednostki znaków, nawet wtedy, gdy <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.Entitize>. Jest to spowodowane jednostki znaków nie są rozpoznawane w sekcjach CDATA, komentarzy ani instrukcji przetwarzania. Jeśli <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.None> lub <xref:System.Xml.NewLineHandling.Replace>, zachowanie jest taka sama jak podczas zapisywania węzła wartości tekstowej.  
  
 W poniższej tabeli opisano, jakie normalizacji <xref:System.Xml.XmlReader> zwraca dla każdego biały znak wejściowy. Aby uzyskać więcej informacji, zobacz sekcje 2.11 i 3.3.3 W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Czytnik normalizing jest dowolne <xref:System.Xml.XmlReader> obiekt utworzony przez <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metody. Te obiekty zawsze wykonywać normalizacji podział wiersza i pełne normalizacją atrybutów. <xref:System.Xml.XmlTextReader> Obiekt może być również czytnik normalizing, jeśli jest <xref:System.Xml.XmlTextReader.Normalization%2A> właściwość jest ustawiona na `true`.  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Wartość węzła tekstu|\n|\n|\n|\t|  
|Wartość atrybutu|odstęp|odstęp|odstęp|odstęp|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy do zapisywania atrybutów w nowym wierszu.</summary>
        <value>
          <see langword="true" /> Aby zapisywać atrybuty w poszczególnych wierszach; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 To ustawienie nie ma efektu, jeśli <see cref="P:System.Xml.XmlWriterSettings.Indent" /> wartość właściwości jest <see langword="false" />.  
  
</para></block>  
  
 Gdy <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> ma ustawioną wartość <see langword="true" />, każdy atrybut jest pre oczekującego z nowego wiersza i jeden dodatkowy poziom wcięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień który output zawartości tekstowej; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> zapisuje do pliku XML i zapisuje każdego atrybutu w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład tworzy następujące dane wyjściowe:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pominąć deklaracji XML.</summary>
        <value>
          <see langword="true" /> Aby pominąć deklaracja XML; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />, są zapisywane w deklaracji XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień który output zawartości tekstowej; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Jeśli <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> ma ustawioną wartość `false`, deklaracja XML jest automatycznie zapisywany.  
  
 Deklaracja XML jest zapisywany zawsze, gdy <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> ustawiono <xref:System.Xml.ConformanceLevel.Document>, nawet jeśli <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> ma ustawioną wartość `true`.  
  
 Deklaracja XML nie są zapisywane, jeśli <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> ma ustawioną wartość <xref:System.Xml.ConformanceLevel.Fragment>. Możesz wywołać <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> jawnie zapisać deklaracji XML.  
  
   
  
## Examples  
 Poniższy przykład zapisuje fragmentu XML do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metodę używaną do serializacji <see cref="T:System.Xml.XmlWriter" /> danych wyjściowych.</summary>
        <value>Jeden z <see cref="T:System.Xml.XmlOutputMethod" /> wartości. Wartość domyślna to <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa metodę używaną do serializacji danych wyjściowych. Dane wyjściowe można zserializować przy użyciu reguły HTML, XML 1.0 reguł i tak dalej. To ustawienie jest ustawiana przez procesorze XSLT i jest używana wewnętrznie przez program Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje elementy członkowskie klasy ustawienia do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono domyślne wartości właściwości dla wystąpienia <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwóch spacji.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> doda zamknięcia tagów do elementu niezamknięty wszystkie tagi kiedy <see cref="M:System.Xml.XmlWriter.Close" /> metoda jest wywoływana.</summary>
        <value>
          <see langword="true" /> Jeśli wszystkie tagi niezamknięty element zostanie zamknięte. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta flaga jest ustawiona `false`, wyjściowego pliku XML nie może być poprawnie sformułowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>