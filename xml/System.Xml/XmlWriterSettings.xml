<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92978dd76542db9d298fbf1527c4356d3c0ebbaa" />
    <Meta Name="ms.sourcegitcommit" Value="840fd2a3bbdce4224fcbae5a3cea9a7a89e685f5" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/24/2018" />
    <Meta Name="ms.locfileid" Value="49962170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa zbiór funkcji do obsługi na <see cref="T:System.Xml.XmlWriter" /> obiekt utworzony przez <see cref="Overload:System.Xml.XmlWriter.Create" /> metody.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter.Create%2A> Metody jest to preferowany sposób uzyskiwania <xref:System.Xml.XmlWriter> wystąpień. <xref:System.Xml.XmlWriter.Create%2A> Metoda używa <xref:System.Xml.XmlWriterSettings> klasy, aby określić, które funkcje można zaimplementować w <xref:System.Xml.XmlWriter> obiektu, który jest tworzony.  
  
> [!NOTE]
>  Jeśli używasz <xref:System.Xml.XmlWriter> obiekt z <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> metody, należy użyć <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> właściwości w celu uzyskania <xref:System.Xml.XmlWriterSettings> obiektu z prawidłowymi ustawieniami. To zapewnia, że utworzony <xref:System.Xml.XmlWriter> obiekt ma ustawienia poprawne dane wyjściowe.  
  
 <xref:System.Xml.XmlWriterSettings> Klasy zawiera właściwości format tego formantu w danych zgodności i dane wyjściowe.  
  
 Sprawdzanie zgodności danych i automatyczne poprawki przy użyciu tych właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|Zestaw, czy należy sprawdzić, czy znaki są w pliku XML prawne znaków zgodnie z definicją W3C.|`true` lub `false`|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|Określa, czy sprawdzić, czy dane wyjściowe jest poprawnie sformułowany dokument XML 1.0 lub fragmentu.|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (poziomie dokumentu), <xref:System.Xml.ConformanceLevel.Fragment> (poziom fragment), lub <xref:System.Xml.ConformanceLevel.Auto> (Autowykrywanie)|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (zgodność na poziomie dokumentu)|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|Czy chcesz dodać zamykające znaczniki do wszystkich elementów niezamknięty podczas <xref:System.Xml.XmlWriter.Close%2A> metoda jest wywoływana.|`true` lub `false`|`true`|  
  
 Aby określić format danych wyjściowych, należy użyć tych właściwości:  
  
|Właściwość|Określa|Wartość|Domyślny|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|Tekst kodowanie do użycia.|<xref:System.Text.Encoding?displayProperty=nameWithType> Wartość|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|Czy stosować wcięcia elementów|`true` lub `false`|`false` (nie wcięć)|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Ciąg do użycia podczas tworzenia wcięć znaków (używane podczas <xref:System.Xml.XmlWriterSettings.Indent%2A> ustawiono `true`).|String|Dwie spacje|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|Ciąg znaków do użycia dla podziałów wiersza.|String|`\r\n` (znaku powrotu karetki, nowy wiersz)|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|Jak obsługiwać znakami nowego wiersza.|<xref:System.Xml.NewLineHandling?displayProperty=nameWithType> wartość: <xref:System.Xml.NewLineHandling.Entitize> (znormalizowana) <xref:System.Xml.NewLineHandling.Replace> (Zastąp) lub <xref:System.Xml.NewLineHandling.None> (Pozostaw bez zmian)|<xref:System.Xml.NewLineHandling.Replace> (Zamień znaków określoną przez <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|Czy ma być Zapis atrybutów w poszczególnych wierszach (nie działa, gdy <xref:System.Xml.XmlWriterSettings.Indent%2A> jest `false`).|`true` lub `false`|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|Określa, czy można zapisać deklaracji XML.|`true` lub `false`|`false`|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> który zapisuje do pliku XML i zapisuje każdego atrybutu w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład generuje następujące wyniki:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlWriterSettings" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono początkowe wartości właściwości wystąpienia <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n` (powrotu karetki, nowy wiersz).|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa wcięcia znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy asynchroniczne <see cref="T:System.Xml.XmlWriter" /> metody mogą być używane w przypadku określonego <see cref="T:System.Xml.XmlWriter" /> wystąpienia.</summary>
        <value>
          <see langword="true" /> Jeśli metod asynchronicznych mogą być używane; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić tę wartość na `true` podczas tworzenia nowego <xref:System.Xml.XmlWriter> wystąpienia, jeśli chcesz używać asynchronicznych <xref:System.Xml.XmlWriter> metod, w tym wystąpieniu. Po <xref:System.Xml.XmlWriter> tworzone jest wystąpienie, <xref:System.Xml.XmlWriterSettings.Async%2A> właściwość jest tylko do odczytu. Wartość domyślna tej właściwości to `false`.  
  
 Ta flaga jest ignorowana przez <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> przeciążenia. Oznacza to, że jeśli utworzysz nową <xref:System.Xml.XmlWriter> oparty na istniejącym <xref:System.Xml.XmlWriter>, zachowanie asynchronicznej zależy od danych wejściowych <xref:System.Xml.XmlWriter>, i nie można użyć <xref:System.Xml.XmlWriterSettings.Async%2A> flagę, aby zmienić zachowanie asynchroniczne.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy należy sprawdzić edytora XML, upewnij się, że wszystkie znaki w dokumencie są zgodne z sekcji "2,2 znaki" W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/#charsets).</summary>
        <value>
          <see langword="true" /> znaku sprawdzanie; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Xml.XmlWriter> obiekt obsługuje sprawdzanie znak, zgłasza wyjątek, jeśli dowolne znaki poza zakresem prawne znaków XML, określone przez sekcję "2,2 znaki" W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/#charsets).  
  
 Sprawdzanie znaku nie obejmuje sprawdzanie niedozwolonych znaków w nazwach XML lub Sprawdzanie, czy wszystkie nazwy XML są prawidłowe. Te testy są dostępne w ramach sprawdzania zgodności i są zawsze wykonywane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy kopię <see cref="T:System.Xml.XmlWriterSettings" /> wystąpienia.</summary>
        <returns>Sklonowany <see cref="T:System.Xml.XmlWriterSettings" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sklonowany <xref:System.Xml.XmlWriterSettings> można zmodyfikować obiektu, bez wywierania wpływu na ustawienia do oryginalnego obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą czy <see cref="T:System.Xml.XmlWriter" /> również powinna zamykać zasadniczy strumień lub <see cref="T:System.IO.TextWriter" /> podczas <see cref="M:System.Xml.XmlWriter.Close" /> metoda jest wywoływana.</summary>
        <value>
          <see langword="true" /> można też zamknąć zasadniczy strumień lub <see cref="T:System.IO.TextWriter" />; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest przydatne, jeśli chcesz zapisać strumień XML, a następnie dodaj dodatkowe informacje na końcu strumienia po <xref:System.Xml.XmlWriter> zakończeniu zapisu.  
  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, które dane wyjściowe XML zawartości do strumienia lub <xref:System.IO.TextWriter>; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład zapisuje XML fragment do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia poziom zgodności, sprawdzający składnika zapisywania XML w danych wyjściowych XML dla.</summary>
        <value>Jedna z wartości wyliczenia, które określa poziom zgodności (dokument fragmentu i automatyczne wykrywanie). Wartość domyślna to <see cref="F:System.Xml.ConformanceLevel.Document" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> Właściwość konfiguruje moduł zapisujący XML można sprawdzić i gwarantuje, że strumień zapisywana jest zgodny z zestaw reguł. Dane XML można sprawdzić, aby zobaczyć, że są one zgodne z regułami dotyczącymi poprawnie sformułowany dokument XML 1.0 lub fragment dokumentu. W poniższej tabeli opisano te trzy ustawienia. Wartość domyślna to zgodność na poziomie dokumentu.  
  
|Ustawienie|Opis|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|Zapewnia, że dane wyjściowe XML jest zgodny ze [zasady poprawnie sformułowany dokument XML 1.0](https://www.w3.org/TR/REC-xml/#sec-well-formed) i mogą być przetwarzane przez każdy procesor odpowiadające.<br /><br /> Kontroli zgodności dokumentów zawierają najbardziej kontroli poziomie fragmentu i upewnij się również, że:<br /><br /> — Element najwyższego poziomu nie ma żadnych węzłów innych niż deklaracja XML, DTD, element, komentarza, biały lub instrukcji przetwarzania.<br />-Dane XML ma jeden i tylko jeden węzeł element najwyższego poziomu.<br /><br /> Modułu zapisujący XML nie przeanalizować informacji DTD, który jest zapisywany. Użytkownik jest odpowiedzialny za zapewnienie, że DTD jest poprawnie sformułowany.|  
|<xref:System.Xml.ConformanceLevel.Fragment>|Zapewnia, że dane wyjściowe XML jest zgodny ze [reguły dla fragmentu poprawnie sformułowany dokument XML 1.0](https://www.w3.org/TR/REC-xml/#wf-entities).<br /><br /> To ustawienie akceptuje dane XML, który ma wiele elementów głównych lub węzły tekstowe na najwyższym poziomie. Ten poziom kontroli zapewnia, że każdy procesor mogą wykorzystywać strumienia odczytywany jako przeanalizowanej jednostki zewnętrznej XML 1.0.<br /><br /> Informacje o DTD nie jest dozwolona w fragmentów dokumentu.|  
|<xref:System.Xml.ConformanceLevel.Auto>|Określa, że moduł zapisujący XML należy określić poziom sprawdzania zgodności, na podstawie danych przychodzących. To ustawienie może być przydatne, kiedy nie wiesz, czy wygenerowany kod XML ma być poprawnie sformułowany dokument XML lub fragmentu.<br /><br /> Sprawdzanie zgodności dokumentu jest stosowane w następujących przypadkach:<br /><br /> -Jeśli <xref:System.Xml.XmlWriter.WriteStartDocument%2A> metoda jest wywoływana.<br />— Jeśli DTD informacje są zapisywane.<br /><br /> Sprawdzanie zgodności fragmentów jest stosowane, jeśli dane XML zawiera jeden z nich:<br /><br /> -Text, CDATA lub EntityReference węzeł na poziomie głównym.<br />— Więcej niż jednego elementu na poziomie głównym.<br />-Brak elementu na poziomie głównym.<br /><br /> <xref:System.Xml.XmlException> Jest generowany, jeśli występuje konflikt, np. podczas próby zapisu węzeł tekstowy i DTD na poziomie głównym.<br /><br /> Jeśli na opakowaniu zawartych innego <xref:System.Xml.XmlWriter> obiektu, obiekt zewnętrzny nie robi, wszelkie dodatkowe zgodność sprawdzanie; to pole pozostanie do bazowego obiektu.|  
  
 Jeśli moduł zapisujący XML wykryje żadnych informacji, który mógłby naruszyć określony poziom zgodności, zgłasza wyjątek. W niektórych przypadkach edytora XML automatycznie naprawia błąd zgodności. Na przykład moduł zapisujący zamyka niezamknięty atrybutu bez zgłoszenia wyjątku. W poniższej tabeli przedstawiono, jak różne naruszeń zgodności są obsługiwane w poszczególnych ustawień.  
  
|Warunek|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|Znaleziono informacje DTD.|Nie naruszenie dla tego ustawienia. Modułu zapisujący XML nie sprawdza ona jednak, DTD; użytkownik musi zapewnić, że DTD jest poprawnie sformułowany.|<xref:System.Xml.XmlException> jest zgłaszany.|Sprawdzanie zgodności dokumentu jest stosowany.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> jest wywoływana.|Nie uznany za naruszenie dla tego ustawienia.|<xref:System.Xml.XmlException> jest zgłaszany.|Sprawdzanie zgodności dokumentu jest stosowany.|  
|<xref:System.Xml.XmlWriter.WriteStartDocument%2A> jest wywoływana wiele razy.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Wartość tekstowa pojawia się na najwyższym poziomie (nie pod węzłem atrybutu lub elementu).|<xref:System.Xml.XmlException> jest zgłaszany.|Nie uznany za naruszenie.|Sprawdzanie zgodności fragmentów jest stosowany.|  
|Wiele elementów lub żadne elementy pojawiają się na najwyższym poziomie.|<xref:System.Xml.XmlException> jest zgłaszany.|Nie uznany za naruszenie.|Sprawdzanie zgodności fragmentów jest stosowany.|  
|Element najwyższego poziomu jest biały znak.|Nie uznany za naruszenie.|Nie uznany za naruszenie.|Nie uznany za naruszenie.|  
|<xref:System.Xml.XmlWriter.WriteEndAttribute%2A> nie jest wywoływana, aby zakończyć węzłem atrybutu.|Rozwiązany przez moduł zapisujący XML.|Rozwiązany przez moduł zapisujący XML.|Rozwiązany przez moduł zapisujący XML.|  
|Modułu zapisujący XML jest w stanie nieprawidłowo zagnieżdżonych (na przykład <xref:System.Xml.XmlWriter.WriteStartElement%2A> następuje wywołanie <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Element najwyższego poziomu jest atrybutem.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Wiele sąsiadujących tekstu znajdują się węzły.|Nie uznany za naruszenie, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|Nie uznany za naruszenie, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|Nie uznany za naruszenie, ale jest odpowiedzialny za użytkownika do łączenia węzły tekstowe.|  
|Ten sam prefiks przestrzeni nazw jest zadeklarowany dwa razy w elemencie.|Modułu zapisujący XML generuje nowy prefiks dla drugiej przestrzeni nazw.|Modułu zapisujący XML generuje nowy prefiks dla drugiej przestrzeni nazw.|Modułu zapisujący XML generuje nowy prefiks dla drugiej przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartElement%2A> Określa prefiks i przestrzeń nazw, który nie jest zadeklarowany w tym zakresie lub prefiks jest skojarzony z innej przestrzeni nazw.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Określa prefiks i przestrzeń nazw, który nie jest zadeklarowany w tym zakresie.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje węzeł niezbędne przestrzeni nazw.|  
|<xref:System.Xml.XmlWriter.WriteStartAttribute%2A> Określa prefiks i przestrzeń nazw, ale prefiks jest skojarzony z innej przestrzeni nazw w zakresie.|Modułu zapisujący XML ignoruje określony prefiks i wyszukuje poprawny prefiks albo generuje nowy prefiks.|Modułu zapisujący XML ignoruje określony prefiks i wyszukuje poprawny prefiks albo generuje nowy prefiks.|Modułu zapisujący XML ignoruje określony prefiks i wyszukuje poprawny prefiks albo generuje nowy prefiks.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> używany do zapisywania elementów zawartości przy użyciu przestrzeni nazw, która nie istnieje w zakresie.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|<xref:System.Xml.XmlWriter.WriteQualifiedName%2A> Umożliwia zapisanie zawartości atrybutu przy użyciu przestrzeni nazw, która nie istnieje w zakresie.|Modułu zapisujący XML zapisuje deklaracja niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje deklaracja niezbędne przestrzeni nazw.|Modułu zapisujący XML zapisuje deklaracja niezbędne przestrzeni nazw.|  
|`xml:space` Atrybut nie zawiera prawidłowej wartości.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|Napotkano nieprawidłową nazwę.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|`xml` Prefiks nie jest dopasowany do identyfikatora URI.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|  
|`xml` Prefiks nie jest dopasowany do http://www.w3.org/XML/1998/namespace identyfikatora URI.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
|`xmlns` Prefiksu i lokalna nazwa nie jest dopasowany do identyfikatora URI.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|Modułu zapisujący XML nie zostanie zaewidencjonowane dla tego typu naruszeniem.|  
|`xmlns` Prefiksu i lokalna nazwa nie jest dopasowany do http://www.w3.org/2000/xmlns identyfikatora URI.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|<xref:System.Xml.XmlException> jest zgłaszany.|  
  
   
  
## Examples  
 Poniższy przykład zapisuje XML fragment do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> nie zmienia znaczenia atrybuty identyfikatora URI.</summary>
        <value>
          <see langword="true" /> Jeśli <see cref="T:System.Xml.XmlWriter" /> nie zmienia znaczenia atrybuty identyfikatora URI; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ tekstu kodowanie do użycia.</summary>
        <value>Tekst, który kodowanie do użycia. Wartość domyślna to <see langword="Encoding.UTF8" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlWriter> Koduje bufor znaków wszystkie na raz, a nie znak po znaku. Wyjątek jest generowany, gdy <xref:System.Xml.XmlWriter.Flush%2A> metoda jest wywoływana, jeśli nie zostaną napotkane błędy kodowania.  
  
 <xref:System.Xml.XmlWriterSettings.Encoding%2A> Właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, które są tworzone przy użyciu określonego <xref:System.IO.Stream> lub przy użyciu określonej nazwy pliku. Jeśli <xref:System.Xml.XmlWriter> tworzone jest wystąpienie z określonym <xref:System.IO.TextWriter>, <xref:System.Xml.XmlWriterSettings.Encoding%2A> właściwość nie zostanie zastąpiona przez kodowanie elementu bazowego <xref:System.IO.TextWriter>. Na przykład, jeśli ta właściwość jest ustawiona na Unicode (UTF-16) dla określonego <xref:System.Xml.XmlWriter>, ale podstawowy moduł zapisujący jest <xref:System.IO.StreamWriter> (pochodzącą od <xref:System.IO.TextWriter>) z jego kodowaniem równa UTF8, dane wyjściowe będą zakodowane w formacie UTF-8.  
  
 Jeśli <xref:System.Xml.XmlWriter> jest tworzone wystąpienie o inne parametry wyjściowe <xref:System.Xml.XmlWriterSettings.Encoding%2A> właściwość jest ignorowana.  
  
 W poniższym przykładzie:  
  
-   Wartość domyślna <xref:System.Xml.XmlWriterSettings.Encoding%2A> jest `Encoding.UTF8`.  
  
-   <xref:System.IO.StreamWriter> Ustawiono `Encoding.Unicode` i <xref:System.IO.StreamWriter>kodowanie zastąpienia <xref:System.Xml.XmlWriterSettings.Encoding%2A> ustawienie.  
  
-   Dane wyjściowe będą `Encoding.Unicode`.  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  Nie akceptuj <xref:System.Text.Encoding> obiektu z niezaufanego źródła.  
  
   
  
## Examples  
 Poniższy przykład zapisuje XML fragment do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy stosować wcięcia elementów.</summary>
        <value>
          <see langword="true" /> Aby zapisać poszczególne elementy nowych wierszy i wcięcia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, zawartości tekstowej w danych wyjściowych; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Elementy tworzone jest wcięcie tak długo, jak długo element nie zawiera zawartość mieszana. Gdy <xref:System.Xml.XmlWriter.WriteString%2A> lub <xref:System.Xml.XmlWriter.WriteWhitespace%2A> metoda jest wywoływana, aby zapisać zawartości mieszanej elementu <xref:System.Xml.XmlWriter> zatrzymuje wcięcia. Wcięcia wznawia działanie po zamknięciu elementu zawartości mieszanej.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa wcięcia znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków do użycia podczas tworzenia wcięć. To ustawienie jest używane podczas <see cref="P:System.Xml.XmlWriterSettings.Indent" /> właściwość jest ustawiona na <see langword="true" />.</summary>
        <value>Ciąg znaków do użycia podczas tworzenia wcięć. Może być równa dowolną wartość ciągu. Jednak aby zapewnić prawidłowy kod XML, należy określić tylko prawidłowe białe znaki, takie jak znaki spacji, tabulatorów, znaki powrotu karetki lub wysuwu wiersza. Wartość domyślna to dwie spacje.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, zawartości tekstowej w danych wyjściowych; w przeciwnym razie to ustawienie jest ignorowane. <xref:System.Xml.XmlWriter> Zgłasza wyjątek, jeśli znaki wcięcia mogłoby spowodować nieprawidłowy kod XML.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> obiekt, który używa wcięcia znak TABULACJI.  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> usuń zduplikowaną przestrzeń nazw deklaracje podczas zapisywania zawartości XML. Domyślnym zachowaniem jest moduł zapisujący służący do wypełniania wyjściowego wszystkie deklaracje przestrzeni nazw, które znajdują się w przestrzeni nazw moduł zapisujący programu rozpoznawania nazw.</summary>
        <value>
          <see cref="T:System.Xml.NamespaceHandling" /> Wyliczenia używane do określania, czy chcesz usunąć zduplikowaną przestrzeń nazw deklaracji w <see cref="T:System.Xml.XmlWriter" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg znaków do użycia dla podziałów wiersza.</summary>
        <value>Ciąg znaków do użycia dla podziałów wiersza. Może być równa dowolną wartość ciągu. Jednak aby zapewnić prawidłowy kod XML, należy określić tylko prawidłowe białe znaki, takie jak znaki spacji, tabulatorów, znaki powrotu karetki lub wysuwu wiersza. Wartość domyślna to <c>\r\n</c> (powrotu karetki, nowy wiersz).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, zawartości tekstowej w danych wyjściowych; w przeciwnym razie to ustawienie jest ignorowane. <xref:System.Xml.XmlWriter> Zgłasza wyjątek, jeśli znaki podziału wiersza mogłoby spowodować nieprawidłowy kod XML.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wartość przypisana do <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy do normalizacji podziały wierszy w danych wyjściowych.</summary>
        <value>Jedną z <see cref="T:System.Xml.NewLineHandling" /> wartości. Wartość domyślna to <see cref="F:System.Xml.NewLineHandling.Replace" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To ustawienie jest stosowane podczas zapisywania tekstu wartości atrybutu lub zawartości. Każdy z <xref:System.Xml.NewLineHandling> wartości są opisane poniżej:  
  
-   <xref:System.Xml.NewLineHandling.Entitize> Ustawienie informuje <xref:System.Xml.XmlWriter> do zastąpienia znaków nowego wiersza, które mogłyby w przeciwnym razie zachować przez normalizowanie <xref:System.Xml.XmlReader> z encje znaków. Jest to przydatne w scenariuszach Rundy, gdy dane wyjściowe są odczytywane przez normalizowanie <xref:System.Xml.XmlReader>. Normalizacja dodatkowe reguły są stosowane do wartości atrybutów podczas Rundy uruchomienie od `\t`, `\n` i `\r` są zastępowane miejsca w wartości atrybutów podczas znormalizować <xref:System.Xml.XmlReader>.  
  
-   <xref:System.Xml.NewLineHandling.Replace> Ustawienie informuje <xref:System.Xml.XmlWriter> do zastąpienia znaków nowego wiersza przy użyciu `\r\n`, czyli nowego formatu wiersza używane przez system operacyjny Microsoft Windows. Pomaga to zapewnić, plik może być poprawnie wyświetlane przez aplikacje w programie Notatnik lub Microsoft Word. To ustawienie również zamienia nowych wierszy w atrybutach encje znaków, aby zachować znaków. Jest to wartość domyślna.  
  
-   <xref:System.Xml.NewLineHandling.None> Ustawienie informuje <xref:System.Xml.XmlWriter> pozostawić niezmienione dane wejściowe. To ustawienie jest używane, gdy nie chcesz, aby jakiegokolwiek przetwarzania w nowym wierszu. Jest to przydatne podczas odczytywania danych wyjściowych przez <xref:System.Xml.XmlReader> , nie wykonuje żadnych normalizacji (na przykład <xref:System.Xml.XmlTextReader> przy użyciu ustawień domyślnych.)  
  
 W poniższych tabelach przedstawiono dane wyjściowe <xref:System.Xml.XmlWriter.WriteString%2A> metody, gdy dostarczony wraz z wartości wejściowej, w zależności od <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> ustawienie właściwości. Tabele pokazują dane wyjściowe podczas zapisywania zawartości tekstowej, a także podczas zapisywania wartości atrybutu.  
  
 `Text Node Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;\n|\n|&#D;|\t|  
|Zastąp|\r\n|\r\n|\r\n|\t|  
|Brak|\r\n|\n|\r|\t|  
  
 `Attribute Value:`  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Przekonwertuj|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Zastąp|&#D;&#A;|&#A;|&#D;|&\#9;|  
|Brak|\r\n|\n|\r|\t|  
  
> [!NOTE]
>  <xref:System.Xml.XmlWriter> Ma następującą charakterystykę podczas zapisywania zawartości w sekcji CDATA, komentarz lub instrukcji przetwarzania. Nowe wiersze nigdy nie są zastępowane ich encje znaków nawet wtedy, gdy <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.Entitize>. Jest to spowodowane encje znaków nie są rozpoznawane w sekcjach CDATA, komentarzy ani instrukcji przetwarzania. Jeśli <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> właściwość jest ustawiona na <xref:System.Xml.NewLineHandling.None> lub <xref:System.Xml.NewLineHandling.Replace>, zachowanie jest taka sama jak podczas zapisywania węzła wartości tekstowej.  
  
 W poniższej tabeli opisano, jakie normalizowanie <xref:System.Xml.XmlReader> zwraca dla każdego biały znak danych wejściowych. Aby uzyskać więcej informacji, zobacz sekcje 2.11 i 3.3.3 W3C [XML 1.0 zalecenie](https://www.w3.org/TR/REC-xml/).  
  
> [!NOTE]
>  Zakończono normalizowanie czytnik jest dowolnym <xref:System.Xml.XmlReader> obiekt utworzony przez <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> metody. Te obiekty są zawsze wykonuj normalizacji podziału wiersza i pełne normalizacją atrybutów. <xref:System.Xml.XmlTextReader> Obiekt może być również Zakończono normalizowanie czytnika, jeśli jest <xref:System.Xml.XmlTextReader.Normalization%2A> właściwość jest ustawiona na `true`.  
  
||\r\n|\n|\r|\t|  
|-|------------|---------|---------|---------|  
|Wartość węzła tekstowego|\n|\n|\n|\t|  
|Wartość atrybutu|pojedyncza spacja|pojedyncza spacja|pojedyncza spacja|pojedyncza spacja|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ma być Zapis atrybutów w nowym wierszu.</summary>
        <value>
          <see langword="true" /> do zapisywania atrybutów w poszczególnych wierszach; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.  
  
 <block subset="none" type="note"><para>  
 To ustawienie nie ma efektu, gdy <see cref="P:System.Xml.XmlWriterSettings.Indent" /> wartość właściwości jest <see langword="false" />.  
  
</para></block>  
  
 Gdy <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> ustawiono <see langword="true" />, każdy atrybut jest pre oczekującego za pomocą nowego wiersza i jeden dodatkowy poziom wcięcia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, zawartości tekstowej w danych wyjściowych; w przeciwnym razie to ustawienie jest ignorowane.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlWriter> który zapisuje do pliku XML i zapisuje każdego atrybutu w nowym wierszu.  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 Przykład generuje następujące wyniki:  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy pominąć deklaracji XML.</summary>
        <value>
          <see langword="true" /> Aby pominąć deklaracji XML; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />, deklaracja XML jest zapisywany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko do <xref:System.Xml.XmlWriter> wystąpień, zawartości tekstowej w danych wyjściowych; w przeciwnym razie to ustawienie jest ignorowane.  
  
 Jeśli <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> ustawiono `false`, deklaracja XML jest zapisywana automatycznie  
  
 Deklaracja XML są zawsze zapisywane, jeśli <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> ustawiono <xref:System.Xml.ConformanceLevel.Document>, nawet jeśli <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> ustawiono `true`.  
  
 Deklaracja XML nigdy nie jest zapisywany, gdy <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> ustawiono <xref:System.Xml.ConformanceLevel.Fragment>. Możesz wywołać <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> jawnie zapisać deklaracji XML.  
  
   
  
## Examples  
 Poniższy przykład zapisuje XML fragment do strumienia pamięci.  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metodę używaną do serializacji <see cref="T:System.Xml.XmlWriter" /> danych wyjściowych.</summary>
        <value>Jedną z <see cref="T:System.Xml.XmlOutputMethod" /> wartości. Wartość domyślna to <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa metodę używaną do serializowania danych wyjściowych. Dane wyjściowe może być Zserializowany za pomocą reguły HTML, XML 1.0 reguły i tak dalej. To ustawienie jest ustawiana przez procesora XSLT i jest używana wewnętrznie przez program Visual Studio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje elementów członkowskich klasy ustawienia do wartości domyślnych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono domyślne wartości właściwości wystąpienia <xref:System.Xml.XmlWriterSettings>.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|`true`.|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document>.|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|`Encoding.UTF8`.|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|Dwie spacje.|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|`\r\n`.|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<xref:System.Xml.NewLineHandling.Replace>.|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|`false`.|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see cref="T:System.Xml.XmlWriter" /> doda zamykanie tagów, aby wszystkie zamknięto element tagów podczas <see cref="M:System.Xml.XmlWriter.Close" /> metoda jest wywoływana.</summary>
        <value>
          <see langword="true" /> Jeśli wszystkie tagi elementów niezamknięty zostanie zamknięte. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ta flaga jest ustawiona na `false`, wyjściowy plik XML może nie być poprawnie sformułowany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>