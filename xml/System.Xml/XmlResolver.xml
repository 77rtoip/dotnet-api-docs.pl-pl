<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c7f61fa4aae8cadfddd317306595f8fc1563fa4" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69422173" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <TypeSignature Language="F#" Value="type XmlResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Rozpoznaje zewnętrzne zasoby XML o nazwie Uniform Resource Identifier (URI).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlResolver> Typ jest używany do rozpoznawania zewnętrznych zasobów XML, takich jak jednostki, definicje typu dokumentu (DTD) lub schematy. Służy również do przetwarzania elementów include i import znalezionych w arkuszach stylów Extensible Stylesheet Language (XSL) lub języka definicji schematu XML (XSD).  
  
 <xref:System.Xml.XmlResolver>obsługuje wszystkie aspekty negocjowania połączenia z zasobami, w tym obsługę poświadczeń zabezpieczeń, otwieranie połączenia ze źródłem danych i zwracanie zasobu w postaci strumienia lub innego typu obiektu. Obiekt, który wywołuje <xref:System.Xml.XmlResolver> , ma zadanie interpretacji strumienia.  
  
 Przestrzeń nazw zawiera dwa konkretne implementacje <xref:System.Xml.XmlResolver> klasy: <xref:System.Xml>  
  
-   <xref:System.Xml.XmlUrlResolver>jest domyślnym programem rozpoznawania nazw dla wszystkich klas w <xref:System.Xml> przestrzeni nazw. Obsługuje `file://` `http://`Protokołyi i żądania z klasy.<xref:System.Net.WebRequest?displayProperty=nameWithType> Przykłady rozszerzania klasy w celu zwiększenia wydajności znajdują <xref:System.Xml.XmlUrlResolver> się na stronie Dokumentacja.  
  
-   <xref:System.Xml.XmlSecureResolver>pomaga zabezpieczyć inny <xref:System.Xml.XmlResolver> obiekt przez Zawijanie obiektu i ograniczanie zasobów, do których może uzyskać dostęp. Na przykład <xref:System.Xml.XmlSecureResolver> może uniemożliwiać dostęp do określonych witryn lub stref internetowych.  
  
 Można utworzyć i określić własny program rozpoznawania nazw. Jeśli nie określisz programu rozpoznawania nazw, czytnik używa domyślnego ustawienia <xref:System.Xml.XmlUrlResolver> bez poświadczeń użytkownika.  
  
 Należy określić, <xref:System.Xml.XmlResolver> aby użyć przez <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> ustawienie właściwości i <xref:System.Xml.XmlReader.Create%2A> przekazanie <xref:System.Xml.XmlReaderSettings> obiektu do metody.  
  
 Jeśli zasób jest przechowywany w systemie, który wymaga uwierzytelniania, należy użyć <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> właściwości, aby określić niezbędne poświadczenia.  
  
## <a name="supplying-authentication-credentials"></a>Dostarczanie poświadczeń uwierzytelniania  
 Plik zawierający dane XML do odczytania mogą mieć ograniczone zasady dostępu. Jeśli do uzyskania dostępu do zasobu sieciowego jest wymagane uwierzytelnianie, użyj <xref:System.Xml.XmlResolver.Credentials%2A> właściwości, aby określić niezbędne poświadczenia. Jeśli właściwość nie jest ustawiona, poświadczenia są ustawione na `null`. <xref:System.Xml.XmlResolver.Credentials%2A>  
  
 Załóżmy na przykład, że poświadczenia są potrzebne podczas żądania danych z sieci Web w celu uwierzytelnienia. Jeśli katalog wirtualny sieci Web nie zezwala na dostęp anonimowy, należy ustawić <xref:System.Xml.XmlResolver.Credentials%2A> właściwość, aby podać poświadczenia. Poniższy przykład tworzy <xref:System.Xml.XmlReader> obiekt, który <xref:System.Xml.XmlUrlResolver> używa poświadczeń z poświadczeniami `http://localhost/bookstore/inventory.xml` domyślnymi w celu uzyskania dostępu do witryny.  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 Możesz podać inne poświadczenia dla różnych identyfikatorów URI i dodać je do pamięci podręcznej. Te poświadczenia są używane do sprawdzania uwierzytelniania dla różnych identyfikatorów URI niezależnie od oryginalnego źródła kodu XML. Poniższy przykład pokazuje, jak dodać poświadczenia do pamięci podręcznej.  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a>Zagadnienia dotyczące bezpieczeństwa  
 Podczas pracy z <xref:System.Xml.XmlResolver> klasą należy wziąć pod uwagę następujące elementy.  
  
-   <xref:System.Xml.XmlResolver>obiekty mogą zawierać poufne informacje, takie jak poświadczenia użytkownika. Należy zachować ostrożność podczas buforowania <xref:System.Xml.XmlResolver> obiektów i nie należy <xref:System.Xml.XmlResolver> przekazywać obiektu do niezaufanego składnika.  
  
-   W przypadku projektowania właściwości klasy, która używa <xref:System.Xml.XmlResolver> klasy, właściwość powinna być zdefiniowana jako właściwość tylko do zapisu. Właściwość może służyć do określenia <xref:System.Xml.XmlResolver> , aby użyć, ale nie można jej użyć do <xref:System.Xml.XmlResolver> zwrócenia obiektu.  
  
-   Jeśli aplikacja akceptuje <xref:System.Xml.XmlResolver> obiekty z niezaufanego kodu, nie można założyć, że identyfikator URI przekazana <xref:System.Xml.XmlResolver.GetEntity%2A> do metody będzie taki sam, <xref:System.Xml.XmlResolver.ResolveUri%2A> jak zwracany przez metodę. Klasy pochodne <xref:System.Xml.XmlResolver> klasy mogą <xref:System.Xml.XmlResolver.GetEntity%2A> przesłaniać metodę i zwracać dane, które są inne niż zawarte w oryginalnym identyfikatorze URI.  
  
-   Aplikacja może wyeliminować zagrożenia odmowy usługi pamięci do <xref:System.Xml.XmlResolver.GetEntity%2A> metody przez <xref:System.Runtime.InteropServices.ComTypes.IStream> implementację, która ogranicza liczbę odczytanych bajtów. Pomaga to chronić przed sytuacje, w których złośliwy kod próbuje przekazać nieskończony strumień <xref:System.Xml.XmlResolver.GetEntity%2A> bajtów do metody.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Xml.XmlUrlResolver> z poświadczeniami domyślnymi. A <xref:System.Xml.XmlReader> służy do odczytywania i wyświetlania strumienia danych wyjściowych.  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">Dokumenty i dane XML</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Xml.XmlResolver" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor jest wywoływany przez konstruktory klas pochodnych w celu zainicjowania stanu w tym typie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gdy jest zastępowany w klasie pochodnej, ustawia poświadczenia używane do uwierzytelniania żądań sieci Web.</summary>
        <value>Poświadczenia, które mają być używane do uwierzytelniania żądań sieci Web. Jeśli ta właściwość nie jest ustawiona, wartość domyślna <see langword="null" />to. oznacza to <see langword="XmlResolver" /> , że nie ma poświadczeń użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli katalog wirtualny nie wymaga uwierzytelniania, ta właściwość nie musi być ustawiona. W przeciwnym razie należy podać poświadczenia użytkownika.  
  
 Poniższy C# kod ustawia poświadczenia dla <xref:System.Xml.XmlResolver> obiektu.  
  
```csharp  
NetworkCredential nc = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 Można skojarzyć inne poświadczenia z różnymi identyfikatorami URI i dodać je do pamięci podręcznej. Przy użyciu poświadczeń można sprawdzić uwierzytelnianie dla różnych identyfikatorów URI niezależnie od oryginalnego źródła kodu XML.  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem korzystającym z tej właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : Uri * string * Type -&gt; obj" Usage="xmlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identyfikator URI zwrócony z <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Obecnie nie jest używana.</param>
        <param name="ofObjectToReturn">Typ obiektu, który będzie zwracany. Bieżąca wersja zwraca tylko obiekty System. IO. Stream.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, mapuje identyfikator URI na obiekt, który zawiera rzeczywisty zasób.</summary>
        <returns>Obiekt Stream lub <see langword="null" /> Jeśli określono typ inny niż strumień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana, gdy obiekt wywołujący chce zmapować dany identyfikator URI do obiektu zawierającego rzeczywisty zasób reprezentowany przez identyfikator URI. Typ zwracanego obiektu jest zbywalny; jednak implementacja musi być zawsze obsługiwana <xref:System.IO.Stream?displayProperty=nameWithType>.  
  
 Aby uzyskać asynchroniczną wersję tej metody, zobacz <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.  
  
> [!IMPORTANT]
>  Aplikacja może wyeliminować zagrożenia odmowy usługi pamięci do <xref:System.Xml.XmlResolver.GetEntity%2A> metody przez <xref:System.Runtime.InteropServices.ComTypes.IStream> implementację, która ogranicza liczbę odczytanych bajtów. Pomaga to chronić przed sytuacje, w których złośliwy kod próbuje przekazać nieskończony strumień <xref:System.Xml.XmlResolver.GetEntity%2A> bajtów do metody.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem za pomocą tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" />nie <see langword="Stream" /> jest typem.</exception>
        <exception cref="T:System.UriFormatException">Określony identyfikator URI nie jest bezwzględnym identyfikatorem URI.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="absoluteUri" />jest <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Wystąpił błąd czasu wykonywania (na przykład przerwano połączenie z serwerem).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identyfikator URI zwrócony z <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />.</param>
        <param name="role">Obecnie nie jest używana.</param>
        <param name="ofObjectToReturn">Typ obiektu, który będzie zwracany. Bieżąca wersja zwraca <see cref="T:System.IO.Stream" /> tylko obiekty.</param>
        <summary>Asynchronicznie mapuje identyfikator URI do obiektu, który zawiera rzeczywisty zasób.</summary>
        <returns>Obiekt Stream lub <see langword="null" /> Jeśli określono typ inny niż strumień.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to asynchroniczna wersja programu <xref:System.Xml.XmlResolver.GetEntity%2A>z tą samą funkcjonalnością. Aby użyć tej metody, należy ustawić <xref:System.Xml.XmlReaderSettings.Async%2A> flagę na. `true`  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Programowanie asynchroniczne z Async i Await (C# i Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member ResolveUri : Uri * string -&gt; Uri&#xA;override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Podstawowy identyfikator URI używany do rozpoznawania względnego identyfikatora URI.</param>
        <param name="relativeUri">Identyfikator URI do rozwiązania. Identyfikator URI może być bezwzględny lub względny. W przypadku absolutnej wartości ta wartość jest <paramref name="baseUri" /> efektywnie zastępowana wartością. Jeśli jest względna, łączy się <paramref name="baseUri" /> z, aby utworzyć bezwzględny identyfikator URI.</param>
        <summary>Gdy jest zastępowany w klasie pochodnej, rozwiązuje bezwzględny identyfikator URI z bazowego i względnego identyfikatora URI.</summary>
        <returns>Bezwzględnego identyfikatora <see langword="null" /> URI lub jeśli względny identyfikator URI nie może zostać rozpoznany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezwzględny identyfikator URI może być używany jako podstawowy identyfikator URI dla wszystkich kolejnych żądań dla jednostek, które są względne dla tego identyfikatora URI.  
  
   
  
## Examples  
 Zobacz <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> , aby zapoznać się z przykładem korzystającym z tej metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="relativeUri" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member SupportsType : Uri * Type -&gt; bool&#xA;override this.SupportsType : Uri * Type -&gt; bool" Usage="xmlResolver.SupportsType (absoluteUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Identyfikator URI.</param>
        <param name="type">Typ do zwrócenia.</param>
        <summary>Umożliwia programowi rozpoznawania nazw zwracanie typów innych <see cref="T:System.IO.Stream" />niż.</summary>
        <returns><see langword="true" />Jeśli jest obsługiwany; w przeciwnym razie <see langword="false" />. <paramref name="type" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
