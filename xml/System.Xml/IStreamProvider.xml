<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e968e06adde58ff690aa9a2ded2e2fcf2ea66a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje interfejs, który może być zaimplementowany przez klasy dostarczanie strumieni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas zapisywania wiadomości wychodzącej przesyłanej strumieniowo treści do edytora XML zawierający <xref:System.ServiceModel.Channels.Message> użyje sekwencję wywołań podobne do następujących w jego <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementacji:  
  
-   Zapisać wszelkie niezbędne informacje poprzedzających strumienia (na przykład otwierający XML tag).  
  
-   Zapisu strumienia.  
  
-   Zapis żadnych informacji po strumienia (na przykład zamykający XML tag).  
  
 To dobrze działa z kodowania, które są podobne do kodowania tekstowy XML. Istnieją pewne kodowania, który nie należy umieszczać XML typu infoset informacji (na przykład znaczników początkowych i końcowych elementów XML) wraz z danych zawartych w elementów. Na przykład w kodowanie MTOM wiadomość jest podzielony na wiele części. Jedną część zawiera XML typu infoset, który może zawierać odwołania do innych części dla elementu rzeczywistej zawartości. Ponieważ XML typu infoset sprawdzonych zazwyczaj będzie małe w porównaniu z przesyłaną strumieniowo zawartość, warto buforu typu infoset, zapisać go, a następnie wpisz zawartość w sposób przesyłany strumieniowo. Oznacza to, że do czasu zamknięcia tagu elementu są zapisywane, firma Microsoft nie powinien mieć zapisywany limit strumienia jeszcze.  
  
 W tym celu <xref:System.Xml.IStreamProvider> używany jest interfejs. Interfejs ma <xref:System.Xml.IStreamProvider.GetStream> metodę, która zwraca strumień do zapisania. Do zapisał komunikat przesyłany strumieniowo treści w prawidłowy sposób <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> wygląda następująco:  
  
-   Zapisuje wszystkie niezbędne informacje o poprzedzających strumienia (na przykład otwierający XML tag)  
  
-   Wywołanie `WriteValue` przeciążenia na <xref:System.Xml.XmlDictionaryWriter> pobierającej <xref:System.Xml.IStreamProvider>, z `IStreamProvider` implementację, która zwraca strumień do zapisania.  
  
-   Zapisywanie żadnych informacji po strumienia (na przykład zamykający XML tag)  
  
 Z tej metody edytora XML może wybrać kiedy wywołać metodę <xref:System.Xml.IStreamProvider.GetStream> i zapisać dane przesyłany strumieniowo. Na przykład zapisywania XML tekstową i binarne wywołują go bezpośrednio i zapisać przesyłanej strumieniowo zawartość między tagiem początkowym i końcowym. Modułu zapisującego MTOM może podjąć <xref:System.Xml.IStreamProvider.GetStream> później, gdy będzie gotowy do zapisu w odpowiedniej części wiadomości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień.</summary>
        <returns>A <see cref="T:System.IO.Stream" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do zwrócić strumień, który ma zostać zapisany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień został wydany.</param>
        <summary>Zwalnia strumienia wyjściowego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>