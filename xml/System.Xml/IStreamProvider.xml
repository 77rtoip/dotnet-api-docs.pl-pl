<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e968e06adde58ff690aa9a2ded2e2fcf2ea66a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30741311" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a745c-101">Reprezentuje interfejs, który może być zaimplementowany przez klasy dostarczanie strumieni.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a745c-101">Represents an interface that can be implemented by classes providing streams.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a745c-102">Podczas zapisywania wiadomości wychodzącej przesyłanej strumieniowo treści do edytora XML zawierający <xref:System.ServiceModel.Channels.Message> użyje sekwencję wywołań podobne do następujących w jego <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementacji:</span><span class="sxs-lookup"><span data-stu-id="a745c-102">When writing an outgoing message containing a streamed body to an XML writer, the <xref:System.ServiceModel.Channels.Message> will use a sequence of calls similar to the following in its <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementation:</span></span>  
  
-   <span data-ttu-id="a745c-103">Zapisać wszelkie niezbędne informacje poprzedzających strumienia (na przykład otwierający XML tag).</span><span class="sxs-lookup"><span data-stu-id="a745c-103">Write any necessary information preceding the stream (For example, the opening XML tag).</span></span>  
  
-   <span data-ttu-id="a745c-104">Zapisu strumienia.</span><span class="sxs-lookup"><span data-stu-id="a745c-104">Write the stream.</span></span>  
  
-   <span data-ttu-id="a745c-105">Zapis żadnych informacji po strumienia (na przykład zamykający XML tag).</span><span class="sxs-lookup"><span data-stu-id="a745c-105">Write any information following the stream (For example, the closing XML tag).</span></span>  
  
 <span data-ttu-id="a745c-106">To dobrze działa z kodowania, które są podobne do kodowania tekstowy XML.</span><span class="sxs-lookup"><span data-stu-id="a745c-106">This works well with encodings that are similar to the textual XML encoding.</span></span> <span data-ttu-id="a745c-107">Istnieją pewne kodowania, który nie należy umieszczać XML typu infoset informacji (na przykład znaczników początkowych i końcowych elementów XML) wraz z danych zawartych w elementów.</span><span class="sxs-lookup"><span data-stu-id="a745c-107">However, there are some encodings that do not place XML infoset information (For example, tags for starting and ending XML elements) together with the data contained within elements.</span></span> <span data-ttu-id="a745c-108">Na przykład w kodowanie MTOM wiadomość jest podzielony na wiele części.</span><span class="sxs-lookup"><span data-stu-id="a745c-108">For example, in the MTOM encoding, the message is split into multiple parts.</span></span> <span data-ttu-id="a745c-109">Jedną część zawiera XML typu infoset, który może zawierać odwołania do innych części dla elementu rzeczywistej zawartości.</span><span class="sxs-lookup"><span data-stu-id="a745c-109">One part contains the XML infoset, which may contain references to other parts for actual element contents.</span></span> <span data-ttu-id="a745c-110">Ponieważ XML typu infoset sprawdzonych zazwyczaj będzie małe w porównaniu z przesyłaną strumieniowo zawartość, warto buforu typu infoset, zapisać go, a następnie wpisz zawartość w sposób przesyłany strumieniowo.</span><span class="sxs-lookup"><span data-stu-id="a745c-110">Since the XML infoset will normally be small compared to the streamed contents, it makes sense to buffer the infoset, write it out, and then write the contents in a streamed way.</span></span> <span data-ttu-id="a745c-111">Oznacza to, że do czasu zamknięcia tagu elementu są zapisywane, firma Microsoft nie powinien mieć zapisywany limit strumienia jeszcze.</span><span class="sxs-lookup"><span data-stu-id="a745c-111">This means that by the time the closing element tag is written, we should not have written out the stream yet.</span></span>  
  
 <span data-ttu-id="a745c-112">W tym celu <xref:System.Xml.IStreamProvider> używany jest interfejs.</span><span class="sxs-lookup"><span data-stu-id="a745c-112">For this purpose, the <xref:System.Xml.IStreamProvider> interface is used.</span></span> <span data-ttu-id="a745c-113">Interfejs ma <xref:System.Xml.IStreamProvider.GetStream> metodę, która zwraca strumień do zapisania.</span><span class="sxs-lookup"><span data-stu-id="a745c-113">The interface has a <xref:System.Xml.IStreamProvider.GetStream> method that returns the stream to be written.</span></span> <span data-ttu-id="a745c-114">Do zapisał komunikat przesyłany strumieniowo treści w prawidłowy sposób <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> wygląda następująco:</span><span class="sxs-lookup"><span data-stu-id="a745c-114">The correct way to write out a streamed message body in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> is as follows:</span></span>  
  
-   <span data-ttu-id="a745c-115">Zapisuje wszystkie niezbędne informacje o poprzedzających strumienia (na przykład otwierający XML tag)</span><span class="sxs-lookup"><span data-stu-id="a745c-115">Write any necessary information preceding the stream (For example, the opening XML tag)</span></span>  
  
-   <span data-ttu-id="a745c-116">Wywołanie `WriteValue` przeciążenia na <xref:System.Xml.XmlDictionaryWriter> pobierającej <xref:System.Xml.IStreamProvider>, z `IStreamProvider` implementację, która zwraca strumień do zapisania.</span><span class="sxs-lookup"><span data-stu-id="a745c-116">Call the `WriteValue` overload on the <xref:System.Xml.XmlDictionaryWriter> that takes an <xref:System.Xml.IStreamProvider>, with an `IStreamProvider` implementation that returns the stream to be written.</span></span>  
  
-   <span data-ttu-id="a745c-117">Zapisywanie żadnych informacji po strumienia (na przykład zamykający XML tag)</span><span class="sxs-lookup"><span data-stu-id="a745c-117">Write any information following the stream (For example, the closing XML tag)</span></span>  
  
 <span data-ttu-id="a745c-118">Z tej metody edytora XML może wybrać kiedy wywołać metodę <xref:System.Xml.IStreamProvider.GetStream> i zapisać dane przesyłany strumieniowo.</span><span class="sxs-lookup"><span data-stu-id="a745c-118">With this approach, the XML writer has a choice of when to call <xref:System.Xml.IStreamProvider.GetStream> and write out the streamed data.</span></span> <span data-ttu-id="a745c-119">Na przykład zapisywania XML tekstową i binarne wywołują go bezpośrednio i zapisać przesyłanej strumieniowo zawartość między tagiem początkowym i końcowym.</span><span class="sxs-lookup"><span data-stu-id="a745c-119">For example, the textual and binary XML writers will call it immediately and write out the streamed contents in between the start and end tags.</span></span> <span data-ttu-id="a745c-120">Modułu zapisującego MTOM może podjąć <xref:System.Xml.IStreamProvider.GetStream> później, gdy będzie gotowy do zapisu w odpowiedniej części wiadomości.</span><span class="sxs-lookup"><span data-stu-id="a745c-120">The MTOM writer may decide to call <xref:System.Xml.IStreamProvider.GetStream> later, when it is ready to write the appropriate part of the message.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a745c-121">Pobiera strumień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a745c-121">Gets a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a745c-122">A <see cref="T:System.IO.Stream" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a745c-122">A <see cref="T:System.IO.Stream" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a745c-123">Ta metoda może służyć do zwrócić strumień, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="a745c-123">This method can be used to return the stream to be written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a745c-124">Strumień został wydany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a745c-124">The stream being released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a745c-125">Zwalnia strumienia wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a745c-125">Releases a stream to output.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>