<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62a39be8fe51095a9ef8b3e39a6bf4f5cea2eeb9" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58686641" /></Metadata><TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <TypeSignature Language="F#" Value="type IStreamProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="95994-101">Reprezentuje interfejs, który może być implementowany przez klasy, zapewniając strumieni.</span><span class="sxs-lookup"><span data-stu-id="95994-101">Represents an interface that can be implemented by classes providing streams.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95994-102">Podczas zapisywania wiadomości wychodzące z treścią przesyłane strumieniowo do usługi składnika zapisywania XML, <xref:System.ServiceModel.Channels.Message> użyje sekwencję wywołań, podobnie do poniższego w jego <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementacji:</span><span class="sxs-lookup"><span data-stu-id="95994-102">When writing an outgoing message containing a streamed body to an XML writer, the <xref:System.ServiceModel.Channels.Message> will use a sequence of calls similar to the following in its <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementation:</span></span>  
  
-   <span data-ttu-id="95994-103">Należy zapisać wszystkie informacje niezbędne poprzedzających strumienia (na przykład otwierający XML tag).</span><span class="sxs-lookup"><span data-stu-id="95994-103">Write any necessary information preceding the stream (For example, the opening XML tag).</span></span>  
  
-   <span data-ttu-id="95994-104">Napisz strumienia.</span><span class="sxs-lookup"><span data-stu-id="95994-104">Write the stream.</span></span>  
  
-   <span data-ttu-id="95994-105">Napisz żadnych informacji po strumienia (na przykład zamykający XML tag).</span><span class="sxs-lookup"><span data-stu-id="95994-105">Write any information following the stream (For example, the closing XML tag).</span></span>  
  
 <span data-ttu-id="95994-106">Działa to również efektywnie integrowana z kodowania, które są podobne do tekstową Kodowanie XML.</span><span class="sxs-lookup"><span data-stu-id="95994-106">This works well with encodings that are similar to the textual XML encoding.</span></span> <span data-ttu-id="95994-107">Istnieją jednak pewne kodowania, który nie należy umieszczać informacje zestaw informacji XML (na przykład znaczników początkowych i końcowych elementów XML) oraz dane zawarte w obrębie elementów.</span><span class="sxs-lookup"><span data-stu-id="95994-107">However, there are some encodings that do not place XML infoset information (For example, tags for starting and ending XML elements) together with the data contained within elements.</span></span> <span data-ttu-id="95994-108">Na przykład kodowanie MTOM komunikat jest podzielony na wiele części.</span><span class="sxs-lookup"><span data-stu-id="95994-108">For example, in the MTOM encoding, the message is split into multiple parts.</span></span> <span data-ttu-id="95994-109">Jedną z części zawiera zestaw informacji XML, który może zawierać odwołania do innych części dla elementu rzeczywistej zawartości.</span><span class="sxs-lookup"><span data-stu-id="95994-109">One part contains the XML infoset, which may contain references to other parts for actual element contents.</span></span> <span data-ttu-id="95994-110">Ponieważ zestaw informacji XML będzie zwykle być niewielka w porównaniu do zawartości przesyłanej strumieniowo, dobrym pomysłem będzie buforować zestaw informacji, zapisać go, a następnie wpisz zawartość w taki sposób, w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="95994-110">Since the XML infoset will normally be small compared to the streamed contents, it makes sense to buffer the infoset, write it out, and then write the contents in a streamed way.</span></span> <span data-ttu-id="95994-111">Oznacza to, że do czasu zamknięcia tagu elementu są zapisywane, firma Microsoft nie powinien mieć zapisywany się strumienia jeszcze.</span><span class="sxs-lookup"><span data-stu-id="95994-111">This means that by the time the closing element tag is written, we should not have written out the stream yet.</span></span>  
  
 <span data-ttu-id="95994-112">W tym celu <xref:System.Xml.IStreamProvider> używany jest interfejs.</span><span class="sxs-lookup"><span data-stu-id="95994-112">For this purpose, the <xref:System.Xml.IStreamProvider> interface is used.</span></span> <span data-ttu-id="95994-113">Interfejs ma <xref:System.Xml.IStreamProvider.GetStream> metodę, która zwraca strumień do zapisania.</span><span class="sxs-lookup"><span data-stu-id="95994-113">The interface has a <xref:System.Xml.IStreamProvider.GetStream> method that returns the stream to be written.</span></span> <span data-ttu-id="95994-114">Poprawny sposób zapisać treść komunikatu przesyłanej strumieniowo w <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> jest następująca:</span><span class="sxs-lookup"><span data-stu-id="95994-114">The correct way to write out a streamed message body in <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> is as follows:</span></span>  
  
-   <span data-ttu-id="95994-115">Zapisz wszelkie niezbędne informacje poprzedzających strumienia (na przykład otwierający XML tag)</span><span class="sxs-lookup"><span data-stu-id="95994-115">Write any necessary information preceding the stream (For example, the opening XML tag)</span></span>  
  
-   <span data-ttu-id="95994-116">Wywołaj `WriteValue` przeciążenia na <xref:System.Xml.XmlDictionaryWriter> przyjmującej <xref:System.Xml.IStreamProvider>, za pomocą `IStreamProvider` implementację, która zwraca strumień do zapisania.</span><span class="sxs-lookup"><span data-stu-id="95994-116">Call the `WriteValue` overload on the <xref:System.Xml.XmlDictionaryWriter> that takes an <xref:System.Xml.IStreamProvider>, with an `IStreamProvider` implementation that returns the stream to be written.</span></span>  
  
-   <span data-ttu-id="95994-117">Zapisz wszystkie informacje następującego strumienia (na przykład zamykający XML tag)</span><span class="sxs-lookup"><span data-stu-id="95994-117">Write any information following the stream (For example, the closing XML tag)</span></span>  
  
 <span data-ttu-id="95994-118">W przypadku tej metody, moduł zapisujący XML może wybrać kiedy wywołać metodę <xref:System.Xml.IStreamProvider.GetStream> i zapisać dane przesyłane strumieniowo.</span><span class="sxs-lookup"><span data-stu-id="95994-118">With this approach, the XML writer has a choice of when to call <xref:System.Xml.IStreamProvider.GetStream> and write out the streamed data.</span></span> <span data-ttu-id="95994-119">Na przykład autorzy XML pomocy tekstowych i binarnych wywołać ją od razu i zapisać zawartości przesyłanej strumieniowo między tagiem początkowym i końcowym.</span><span class="sxs-lookup"><span data-stu-id="95994-119">For example, the textual and binary XML writers will call it immediately and write out the streamed contents in between the start and end tags.</span></span> <span data-ttu-id="95994-120">Moduł zapisujący MTOM może podjąć <xref:System.Xml.IStreamProvider.GetStream> później, gdy wszystko będzie gotowe do zapisu w odpowiedniej części wiadomości.</span><span class="sxs-lookup"><span data-stu-id="95994-120">The MTOM writer may decide to call <xref:System.Xml.IStreamProvider.GetStream> later, when it is ready to write the appropriate part of the message.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="abstract member GetStream : unit -&gt; System.IO.Stream" Usage="iStreamProvider.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95994-121">Pobiera strumień.</span><span class="sxs-lookup"><span data-stu-id="95994-121">Gets a stream.</span></span></summary>
        <returns><span data-ttu-id="95994-122">Element <see cref="T:System.IO.Stream" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="95994-122">A <see cref="T:System.IO.Stream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95994-123">Ta metoda może służyć do zwrócić strumień, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="95994-123">This method can be used to return the stream to be written.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStream : System.IO.Stream -&gt; unit" Usage="iStreamProvider.ReleaseStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="95994-124">Strumień, zostały udostępnione.</span><span class="sxs-lookup"><span data-stu-id="95994-124">The stream being released.</span></span></param>
        <summary><span data-ttu-id="95994-125">Zwalnia strumienia w danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="95994-125">Releases a stream to output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>