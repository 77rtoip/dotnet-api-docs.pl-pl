<Type Name="IStreamProvider" FullName="System.Xml.IStreamProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7f9bada72f0e036f0fdb2ae93db2c823ab1aa15" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37729960" /></Metadata><TypeSignature Language="C#" Value="public interface IStreamProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStreamProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IStreamProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStreamProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStreamProvider" />
  <TypeSignature Language="F#" Value="type IStreamProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje interfejs, który może być implementowany przez klasy, zapewniając strumieni.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas zapisywania wiadomości wychodzące z treścią przesyłane strumieniowo do usługi składnika zapisywania XML, <xref:System.ServiceModel.Channels.Message> użyje sekwencję wywołań, podobnie do poniższego w jego <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> implementacji:  
  
-   Należy zapisać wszystkie informacje niezbędne poprzedzających strumienia (na przykład otwierający XML tag).  
  
-   Napisz strumienia.  
  
-   Napisz żadnych informacji po strumienia (na przykład zamykający XML tag).  
  
 Działa to również efektywnie integrowana z kodowania, które są podobne do tekstową Kodowanie XML. Istnieją jednak pewne kodowania, który nie należy umieszczać informacje zestaw informacji XML (na przykład znaczników początkowych i końcowych elementów XML) oraz dane zawarte w obrębie elementów. Na przykład kodowanie MTOM komunikat jest podzielony na wiele części. Jedną z części zawiera zestaw informacji XML, który może zawierać odwołania do innych części dla elementu rzeczywistej zawartości. Ponieważ zestaw informacji XML będzie zwykle być niewielka w porównaniu do zawartości przesyłanej strumieniowo, dobrym pomysłem będzie buforować zestaw informacji, zapisać go, a następnie wpisz zawartość w taki sposób, w strumieniu. Oznacza to, że do czasu zamknięcia tagu elementu są zapisywane, firma Microsoft nie powinien mieć zapisywany się strumienia jeszcze.  
  
 W tym celu <xref:System.Xml.IStreamProvider> używany jest interfejs. Interfejs ma <xref:System.Xml.IStreamProvider.GetStream> metodę, która zwraca strumień do zapisania. Poprawny sposób zapisać treść komunikatu przesyłanej strumieniowo w <xref:System.ServiceModel.Channels.Message.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> jest następująca:  
  
-   Zapisz wszelkie niezbędne informacje poprzedzających strumienia (na przykład otwierający XML tag)  
  
-   Wywołaj `WriteValue` przeciążenia na <xref:System.Xml.XmlDictionaryWriter> przyjmującej <xref:System.Xml.IStreamProvider>, za pomocą `IStreamProvider` implementację, która zwraca strumień do zapisania.  
  
-   Zapisz wszystkie informacje następującego strumienia (na przykład zamykający XML tag)  
  
 W przypadku tej metody, moduł zapisujący XML może wybrać kiedy wywołać metodę <xref:System.Xml.IStreamProvider.GetStream> i zapisać dane przesyłane strumieniowo. Na przykład autorzy XML pomocy tekstowych i binarnych wywołać ją od razu i zapisać zawartości przesyłanej strumieniowo między tagiem początkowym i końcowym. Moduł zapisujący MTOM może podjąć <xref:System.Xml.IStreamProvider.GetStream> później, gdy wszystko będzie gotowe do zapisu w odpowiedniej części wiadomości.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="abstract member GetStream : unit -&gt; System.IO.Stream" Usage="iStreamProvider.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera strumień.</summary>
        <returns>Element <see cref="T:System.IO.Stream" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do zwrócić strumień, który ma zostać zapisany.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseStream">
      <MemberSignature Language="C#" Value="public void ReleaseStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IStreamProvider.ReleaseStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStream : System.IO.Stream -&gt; unit" Usage="iStreamProvider.ReleaseStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Strumień, zostały udostępnione.</param>
        <summary>Zwalnia strumienia w danych wyjściowych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>