<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="43cf0aaefc550a4bc8a9e3af16aaed617ccca96c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69250038" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">Właściwość <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> dla właściwości skojarzonej z dwukrotnie klikniętą ikoną.</param>
    <param name="descriptor">Właściwość skojarzona z dwukrotnie klikniętą ikoną.</param>
    <param name="invokedItem"><see cref="T:System.Drawing.Design.PropertyValueUIItem" /> Skojarzona z ikoną klikniętą dwukrotnie.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> zdarzenie typu. <see cref="T:System.Drawing.Design.PropertyValueUIItem" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwukrotne kliknięcie ikony w okno właściwości spowoduje <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> wygenerowanie zdarzenia <xref:System.Drawing.Design.PropertyValueUIItem> , z którym skojarzona jest ikona. <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> Zdarzenie zazwyczaj uruchamia interfejs użytkownika, aby edytować wartość właściwości. <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> Dodaj do<xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> właściwości a<xref:System.Drawing.Design.PropertyValueUIItem> , aby przypisać procedurę obsługi zdarzeń, aby wykonać odpowiednie działanie, gdy ikona wyświetlana obok nazwy właściwości jest dwukrotnie kliknięta.  
  
 Podczas tworzenia <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegata należy określić metodę, która będzie obsługiwać zdarzenie. Aby skojarzyć zdarzenie z programem obsługi zdarzeń, Dodaj wystąpienie delegata do zdarzenia. Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata. Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu udostępnia <xref:System.Drawing.Design.PropertyValueUIItem> obiekt dla wszystkich właściwości składnika o nazwie `HorizontalMargin` lub `VerticalMargin`. <xref:System.Drawing.Design.PropertyValueUIItem> Dla tych właściwości są dostępne obrazy, etykietki narzędzia i program obsługi zdarzeń, który wyświetla okno komunikatu, gdy zostanie kliknięty obraz właściwości. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>
