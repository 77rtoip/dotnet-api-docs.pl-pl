<Type Name="IPropertyValueUIService" FullName="System.Drawing.Design.IPropertyValueUIService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d834dd00990c4a3f73d3474fad04f7e6830a27e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30451968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPropertyValueUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyValueUIService" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IPropertyValueUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyValueUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyValueUIService" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7bd4f-101">Udostępnia interfejs, aby zarządzać obrazami, etykietki narzędzi i programy obsługi zdarzeń dla właściwości składnika wyświetlany w przeglądarce właściwości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7bd4f-101">Provides an interface to manage the images, ToolTips, and event handlers for the properties of a component displayed in a property browser.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bd4f-102">Można użyć składnika <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu w celu zapewnienia <xref:System.Drawing.Design.PropertyValueUIItem> obiektów dla dowolnej właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-102">A component can use the <xref:System.Drawing.Design.IPropertyValueUIService> interface to provide <xref:System.Drawing.Design.PropertyValueUIItem> objects for any properties of the component.</span></span> <span data-ttu-id="7bd4f-103">A <xref:System.Drawing.Design.PropertyValueUIItem> skojarzony z właściwością zapewniają obrazu, etykietkę narzędzia i program obsługi zdarzeń dla zdarzenia, które jest wywoływane po kliknięciu obrazu skojarzonego z właściwością.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-103">A <xref:System.Drawing.Design.PropertyValueUIItem> associated with a property can provide an image, a ToolTip and an event handler for the event that is raised when the image associated with the property is clicked.</span></span>  
  
 <span data-ttu-id="7bd4f-104"><xref:System.Drawing.Design.IPropertyValueUIService> Interfejsu udostępnia metody do dodawania, usuwania i pobrać <xref:System.Drawing.Design.PropertyValueUIHandler> delegatów do lub z listy wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-104">The <xref:System.Drawing.Design.IPropertyValueUIService> interface provides methods to add, remove, and retrieve <xref:System.Drawing.Design.PropertyValueUIHandler> delegates to or from an internal list.</span></span> <span data-ttu-id="7bd4f-105">Po wyświetleniu właściwości składnika w przeglądarce właściwości każdego <xref:System.Drawing.Design.PropertyValueUIHandler> na liście jest szansa, aby zapewnić <xref:System.Drawing.Design.PropertyValueUIItem> dla każdej właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-105">When the properties of a component are displayed in a property browser, each <xref:System.Drawing.Design.PropertyValueUIHandler> in the list is given an opportunity to provide a <xref:System.Drawing.Design.PropertyValueUIItem> for each property of the component.</span></span>  
  
 <span data-ttu-id="7bd4f-106">Gdy przeglądarka właściwości ustawiono wyświetlanie właściwości obiektu, wywołuje <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> metody tego interfejsu dla każdej właściwości składnika przekazywanie <xref:System.ComponentModel.PropertyDescriptor> reprezentujący właściwość.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-106">When a property browser is set to display the properties of an object, it calls the <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> method of this interface for each property of the component, passing a <xref:System.ComponentModel.PropertyDescriptor> that represents the property.</span></span> <span data-ttu-id="7bd4f-107"><xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> Metoda wywołuje każdą <xref:System.Drawing.Design.PropertyValueUIHandler> które zostały dodane do usługi.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-107">The <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> method calls each <xref:System.Drawing.Design.PropertyValueUIHandler> that has been added to the service.</span></span> <span data-ttu-id="7bd4f-108">Każdy <xref:System.Drawing.Design.PropertyValueUIHandler> można dodać <xref:System.Drawing.Design.PropertyValueUIItem> do <xref:System.Collections.ArrayList> przekazany parametr `valueUIItemList` elementy parametr, aby podać interfejsu użytkownika dla właściwości reprezentowanej przez <xref:System.ComponentModel.PropertyDescriptor> przekazano `propDesc` parametru.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-108">Each <xref:System.Drawing.Design.PropertyValueUIHandler> can add a <xref:System.Drawing.Design.PropertyValueUIItem> to the <xref:System.Collections.ArrayList> parameter passed in the `valueUIItemList` parameter to supply UI items for the property represented by the <xref:System.ComponentModel.PropertyDescriptor> passed in the `propDesc` parameter.</span></span>  
  
 <span data-ttu-id="7bd4f-109">A <xref:System.Drawing.Design.PropertyValueUIItem> może zawierać obraz do wyświetlenia obok nazwy właściwości, typ string etykietki narzędzia i program obsługi zdarzeń do wywołania po dwukrotnym kliknięciu obraz skojarzony z właściwością.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-109">A <xref:System.Drawing.Design.PropertyValueUIItem> can contain an image to display next to the property name, a ToolTip string, and an event handler to invoke when an image associated with the property is double-clicked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7bd4f-110">Poniższy przykład kodu tworzy składnik, który otrzymuje wystąpienie <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu i dodaje <xref:System.Drawing.Design.PropertyValueUIHandler> do usługi.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-110">The following code example creates a component that obtains an instance of the <xref:System.Drawing.Design.IPropertyValueUIService> interface and adds a <xref:System.Drawing.Design.PropertyValueUIHandler> to the service.</span></span> <span data-ttu-id="7bd4f-111">Zapewnia obsługę <xref:System.Drawing.Design.PropertyValueUIItem> obiektu dla dowolnej właściwości składnika o nazwie `HorizontalMargin` lub `VerticalMargin`.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-111">The handler provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="7bd4f-112"><xref:System.Drawing.Design.PropertyValueUIItem> Dla tych właściwości zawiera obraz, etykietkę narzędzia i program obsługi zdarzeń, który wyświetla komunikat po kliknięciu obrazu dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-112">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="7bd4f-113">Etykietka narzędzia i obrazu są wyświetlane w <xref:System.Windows.Forms.PropertyGrid> po siatki jest wyświetlane te właściwości składnika.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-113">The image and the ToolTip are displayed in a <xref:System.Windows.Forms.PropertyGrid> when the grid is showing these properties of the component.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#1)]
 [!code-csharp[IPropertyValueUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#1)]
 [!code-vb[IPropertyValueUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
  </Docs>
  <Members>
    <Member MemberName="AddPropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">
          <span data-ttu-id="7bd4f-114">Właściwość obsługi interfejsu użytkownika wartość do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-114">The property value UI handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bd4f-115">Dodaje określony <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> do tej usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-115">Adds the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> to this service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bd4f-116">Gdy <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> jest wywoływana, każdy program obsługi dodane do tej usługi jest nazywane i możliwość dodawania ikony dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-116">When <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> is called, each handler added to this service is called and given the opportunity to add an icon for the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyUIValueItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems(class System.ComponentModel.ITypeDescriptorContext context, class System.ComponentModel.PropertyDescriptor propDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyUIValueItems (context As ITypeDescriptorContext, propDesc As PropertyDescriptor) As PropertyValueUIItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Design::PropertyValueUIItem ^&gt; ^ GetPropertyUIValueItems(System::ComponentModel::ITypeDescriptorContext ^ context, System::ComponentModel::PropertyDescriptor ^ propDesc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="7bd4f-117">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</span>
          </span>
        </param>
        <param name="propDesc">
          <span data-ttu-id="7bd4f-118">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> który wskazuje właściwość, która pasuje do właściwości do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-118">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that indicates the property to match with the properties to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bd4f-119">Pobiera <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiekty, które odpowiadają określonej właściwości kontekstu i właściwości deskryptora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-119">Gets the <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified context and property descriptor characteristics.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7bd4f-120">Tablica <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiektów, które są zgodne z określonymi parametrami.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-120">An array of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects that match the specified parameters.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyValueUIItemsChanged">
      <MemberSignature Language="C#" Value="public void NotifyPropertyValueUIItemsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyPropertyValueUIItemsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyPropertyValueUIItemsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyPropertyValueUIItemsChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7bd4f-121">Powiadamia <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> implementacji który globalnej listy <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiekty zostały zmodyfikowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-121">Notifies the <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> implementation that the global list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects has been modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyUIValueItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler PropertyUIValueItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyUIValueItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event PropertyUIValueItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyUIValueItemsChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7bd4f-122">Występuje, gdy lista <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> modyfikować obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-122">Occurs when the list of <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> objects is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7bd4f-123">Składniki, które pełnią <xref:System.Drawing.Design.PropertyValueUIItem> obiektów można wywołać <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> podczas zmiany ich listy elementów.</span><span class="sxs-lookup"><span data-stu-id="7bd4f-123">Components that serve <xref:System.Drawing.Design.PropertyValueUIItem> objects can call <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> when they change their list of items.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">
          <span data-ttu-id="7bd4f-124">Program obsługi do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-124">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7bd4f-125">Usuwa określoną <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> od wartości właściwości interfejsu użytkownika usługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7bd4f-125">Removes the specified <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> from the property value UI service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
  </Members>
</Type>