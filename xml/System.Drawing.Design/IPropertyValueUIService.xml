<Type Name="IPropertyValueUIService" FullName="System.Drawing.Design.IPropertyValueUIService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ec57ce9f116552c535cbe9e74de1a7e158edf39" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37658834" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPropertyValueUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyValueUIService" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IPropertyValueUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyValueUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyValueUIService" />
  <TypeSignature Language="F#" Value="type IPropertyValueUIService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Udostępnia interfejs do zarządzania obrazami, etykietki narzędzi i programy obsługi zdarzeń dla właściwości składnika wyświetlonej w przeglądarce właściwości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć składnika <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu, aby zapewnić <xref:System.Drawing.Design.PropertyValueUIItem> obiektów właściwości składnika. A <xref:System.Drawing.Design.PropertyValueUIItem> skojarzony z właściwością zapewniają obrazu, etykietki narzędzia i procedury obsługi zdarzeń dla zdarzenia, które jest wywoływane po kliknięciu obrazu skojarzonego z właściwością.  
  
 <xref:System.Drawing.Design.IPropertyValueUIService> Interfejs zapewnia metody do dodawania, usuwania i pobierania <xref:System.Drawing.Design.PropertyValueUIHandler> delegatów do lub z wewnętrznej listy. Po wyświetleniu właściwości składnika w przeglądarce właściwości każdego <xref:System.Drawing.Design.PropertyValueUIHandler> na liście jest szansa, aby zapewnić <xref:System.Drawing.Design.PropertyValueUIItem> dla każdej właściwości składnika.  
  
 Kiedy przeglądarkę właściwości jest ustawiony na wyświetlanie właściwości obiektu, wywołuje <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> metody tego interfejsu dla każdej właściwości tego składnika, przekazując <xref:System.ComponentModel.PropertyDescriptor> reprezentująca właściwość. <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> Metoda wywołuje każdą <xref:System.Drawing.Design.PropertyValueUIHandler> które zostały dodane do usługi. Każdy <xref:System.Drawing.Design.PropertyValueUIHandler> można dodać <xref:System.Drawing.Design.PropertyValueUIItem> do <xref:System.Collections.ArrayList> przekazany parametr `valueUIItemList` parametru, aby podać interfejsu użytkownika elementów właściwości reprezentowanej przez <xref:System.ComponentModel.PropertyDescriptor> przekazanej `propDesc` parametru.  
  
 Element <xref:System.Drawing.Design.PropertyValueUIItem> może zawierać obraz do wyświetlenia obok danej nazwy właściwości, ciąg etykietki narzędzi i program obsługi zdarzeń do wywołania po dwukrotnym kliknięciu obrazu, który został skojarzony z właściwością.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy składnik, który otrzymuje wystąpienie <xref:System.Drawing.Design.IPropertyValueUIService> interfejs i dodaje <xref:System.Drawing.Design.PropertyValueUIHandler> do usługi. Zapewnia obsługę <xref:System.Drawing.Design.PropertyValueUIItem> obiektu dla dowolnej z właściwości składnika o nazwie `HorizontalMargin` lub `VerticalMargin`. <xref:System.Drawing.Design.PropertyValueUIItem> Dla tych właściwości zawiera obraz, etykietki narzędzia i program obsługi zdarzeń, która wyświetla okno komunikatu, po kliknięciu obrazu dla właściwości. Obraz i etykietkę narzędzia, które są wyświetlane w <xref:System.Windows.Forms.PropertyGrid> po siatce są wyświetlane te właściwości składnika.  
  
 [!code-cpp[IPropertyValueUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#1)]
 [!code-csharp[IPropertyValueUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#1)]
 [!code-vb[IPropertyValueUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
  </Docs>
  <Members>
    <Member MemberName="AddPropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.AddPropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Właściwość obsługi interfejsu użytkownika wartość do dodania.</param>
        <summary>Dodaje określony <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> do tej usługi.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> jest wywoływana, każdy program obsługi dodane do tej usługi jest nazywana i możliwość dodania ikony z właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyUIValueItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems(class System.ComponentModel.ITypeDescriptorContext context, class System.ComponentModel.PropertyDescriptor propDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyUIValueItems (context As ITypeDescriptorContext, propDesc As PropertyDescriptor) As PropertyValueUIItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Design::PropertyValueUIItem ^&gt; ^ GetPropertyUIValueItems(System::ComponentModel::ITypeDescriptorContext ^ context, System::ComponentModel::PropertyDescriptor ^ propDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyUIValueItems : System.ComponentModel.ITypeDescriptorContext * System.ComponentModel.PropertyDescriptor -&gt; System.Drawing.Design.PropertyValueUIItem[]" Usage="iPropertyValueUIService.GetPropertyUIValueItems (context, propDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowy kontekst.</param>
        <param name="propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> , wskazuje właściwość, która odpowiada za pomocą właściwości do zwrócenia.</param>
        <summary>Pobiera <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiekty, które odpowiadają określonej właściwości kontekstu i właściwości deskryptora.</summary>
        <returns>Tablica <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiektów, które są zgodne z określonymi parametrami.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyValueUIItemsChanged">
      <MemberSignature Language="C#" Value="public void NotifyPropertyValueUIItemsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyPropertyValueUIItemsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyPropertyValueUIItemsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyPropertyValueUIItemsChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyPropertyValueUIItemsChanged : unit -&gt; unit" Usage="iPropertyValueUIService.NotifyPropertyValueUIItemsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia <see cref="T:System.Drawing.Design.IPropertyValueUIService" /> implementacji, globalną listę <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiekty zostały zmodyfikowane.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyUIValueItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler PropertyUIValueItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyUIValueItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event PropertyUIValueItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyUIValueItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyUIValueItemsChanged : EventHandler " Usage="member this.PropertyUIValueItemsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy listę <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> obiektów jest modyfikowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składniki, które pełnią <xref:System.Drawing.Design.PropertyValueUIItem> obiektów może wywołać <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> podczas zmiany ich lista elementów.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member RemovePropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.RemovePropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Obsługa do usunięcia.</param>
        <summary>Usuwa określony <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> od wartości właściwości usługi interfejsu użytkownika.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
  </Members>
</Type>