<Type Name="UITypeEditor" FullName="System.Drawing.Design.UITypeEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5c5aa98cf87f7dac7de8548fcab85d76b9c2dfd" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UITypeEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class UITypeEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia klasę podstawową, który może służyć do projektowania edytory wartości, które udostępniają interfejs użytkownika (UI) reprezentujący i edytowania wartości obiektów obsługiwane typy danych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Design.UITypeEditor> Klasa udostępnia klasę podstawową, który może pochodzić od i rozszerzyć do zaimplementowania edytorze typu niestandardowego środowiska czasu projektowania. Zazwyczaj edytora niestandardowego typu współdziała z <xref:System.Windows.Forms.PropertyGrid> formantu.  
  
 Edytory typu niestandardowego są przydatne w sytuacjach, gdy jest za mało, aby efektywnie wybierz wartości niektórych typów Edytor wartości pola tekstowego.  
  
 Aby wdrożyć niestandardowy Edytor typów interfejsu użytkownika czasu projektowania, należy wykonać następujące czynności:  
  
-   Definiowanie klasy, która jest pochodną <xref:System.Drawing.Design.UITypeEditor>.  
  
-   Zastąpienie <xref:System.Drawing.Design.UITypeEditor.EditValue%2A> metody do obsługi interfejsu użytkownika, przetwarzania wejściowych użytkownika i przypisanie wartości.  
  
-   Zastąpienie <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> metodę, aby poinformować okna właściwości typu styl edytor, który będzie używany przez edytor.  
  
 Można dodać dodatkowe wsparcie dla malowania reprezentacja wartości w oknie właściwości, wykonując następujące czynności:  
  
-   Zastąpienie <xref:System.Drawing.Design.UITypeEditor.GetPaintValueSupported%2A> metody, aby wskazać, czy edytor obsługuje wyświetlanie reprezentacja wartości.  
  
-   Zastąpienie <xref:System.Drawing.Design.UITypeEditor.PaintValue%2A> metody do zaimplementowania wyświetlanie reprezentacja wartości.  
  
-   Zastąpienie <xref:System.Drawing.Design.UITypeEditor> metody konstruktora, jeśli edytor powinien mieć zachowanie inicjowania.  
  
> [!NOTE]
>  <xref:System.Drawing.Design.UITypeEditor> Klasa nie obsługuje układów (od prawej do lewej) od prawej do lewej.  
  
 Aby uzyskać więcej informacji na temat zwiększenia obsługi w czasie projektowania, zobacz [rozszerzenie obsługuje czasu projektowania](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2). Aby uzyskać więcej informacji na temat implementowania <xref:System.Drawing.Design.UITypeEditor>, zobacz [omówienie edytory typ interfejsu użytkownika](http://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da).  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, że <xref:System.Drawing.Design.UITypeEditor> może być skojarzone z typu integer, double, lub float, za pomocą właściwości <xref:System.ComponentModel.EditorAttribute> udostępnia interfejs kąt zaznaczenia w oknie właściwości w trybie projektowania. W tym przykładzie użyto <xref:System.Windows.Forms.Design.IWindowsFormsEditorService> interfejsu powoduje wyświetlenie listy rozwijanej formantu w oknie właściwości w trybie projektowania. Należy skompilować kod i dodawanie zestawu do przybornika przy użyciu **Dostosowywanie przybornika** na **narzędzia** menu programu Visual Studio. Utwórz wystąpienie `AngleTestControl` i kliknij przycisk listy rozwijanej obok właściwości kąt, w oknie właściwości do skonfigurowania właściwości za pomocą edytora.  
  
 [!code-cpp[AngleEditor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AngleEditor/CPP/angleeditor.cpp#1)]
 [!code-csharp[AngleEditor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AngleEditor/CS/angleeditor.cs#1)]
 [!code-vb[AngleEditor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AngleEditor/VB/angleeditor.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">Aby uzyskać dostęp do zasobów systemowych. Żądanie wartości: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Skojarzony stan:</permission>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Windows.Forms.PropertyGrid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITypeEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UITypeEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Design.UITypeEditor" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EditValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zmiany wartość określonego obiektu przy użyciu stylu Edytor wskazywanym przez <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public object EditValue (IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object EditValue(class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function EditValue (provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EditValue(IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> Tego edytora za pomocą uzyskać usług.</param>
        <param name="value">Obiekt do edycji.</param>
        <summary>Zmiany wartość określonego obiektu przy użyciu stylu Edytor wskazywanym przez <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> metody.</summary>
        <returns>Nowa wartość obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda uruchamia interfejsu użytkownika do edycji wartość i jest wywoływane przez okno właściwości, gdy użytkownik próbuje edytować wartość typu skonfigurowania tego edytora można edytować wartość. Dostawcy usług jest udostępniana na potrzeby Edytor można uzyskać wszystkie wymagane usługi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public virtual object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EditValue (context As ITypeDescriptorContext, provider As IServiceProvider, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EditValue(System::ComponentModel::ITypeDescriptorContext ^ context, IServiceProvider ^ provider, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</param>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> Tego edytora za pomocą uzyskać usług.</param>
        <param name="value">Obiekt do edycji.</param>
        <summary>Edycji określony obiekt wartości przy użyciu stylu Edytor wskazywanym przez <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> metody.</summary>
        <returns>Nowa wartość obiektu. Jeśli wartość obiektu nie została zmieniona, powinny zostać zwrócone tego samego obiektu, który został on przekazany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dostawcy usług jest udostępniana na potrzeby Edytor można uzyskać wszystkie wymagane usługi.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditStyle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera Edytor styl używany przez <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> metody.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditStyle () As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Design::UITypeEditorEditStyle GetEditStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera Edytor styl używany przez <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> metody.</summary>
        <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> wartość wyliczenia wskazująca styl edytora używanego przez bieżących <see cref="T:System.Drawing.Design.UITypeEditor" />. Domyślnie ta metoda zwróci <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Drawing.Design.UITypeEditor> nie zastępuj i zaimplementować tę metodę <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> zwróci <xref:System.Drawing.Design.UITypeEditorEditStyle.None> domyślnie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditStyle (context As ITypeDescriptorContext) As UITypeEditorEditStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Design::UITypeEditorEditStyle GetEditStyle(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</param>
        <summary>Pobiera Edytor styl używany przez <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> metody.</summary>
        <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> wartość, która wskazuje na styl używany przez edytor <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> metody. Jeśli <see cref="T:System.Drawing.Design.UITypeEditor" /> nie obsługuje tej metody, następnie <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> zwróci <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPaintValueSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wskazuje, czy ten edytor obsługuje malowanie reprezentacja wartości obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public bool GetPaintValueSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPaintValueSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPaintValueSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPaintValueSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy ten edytor obsługuje malowanie reprezentacja wartości obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> jest implementowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPaintValueSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPaintValueSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Można uzyskać dostęp do informacji dodatkowych kontekstu.</param>
        <summary>Wskazuje, czy określony kontekst obsługuje malowanie reprezentacja wartości obiektów w ramach określonego kontekstu.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> jest implementowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="IsDropDownResizable">
      <MemberSignature Language="C#" Value="public virtual bool IsDropDownResizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownResizable" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDropDownResizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDropDownResizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy edytory listy rozwijanej powinny być o zmiennym rozmiarze przez użytkownika.</summary>
        <value>
          <see langword="true" /> w przypadku edytory listy rozwijanej o zmiennym rozmiarze; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PaintValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia malowanie reprezentacja wartości obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public virtual void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PaintValue (e As PaintValueEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PaintValue(System::Drawing::Design::PaintValueEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> wskazująca co do malowania i gdzie namalować go.</param>
        <summary>Umożliwia malowanie reprezentacja wartości przy użyciu określonego obiektu <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Edytory powinien malowanie w granicach określonego prostokąta. Prostokąt wskazuje obszarze okna właściwości do rysowania reprezentacja wartości w ramach.  
  
 Począwszy od [!INCLUDE[net_v46](~/includes/net-v46-md.md)], prostokąt określony przez <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> będzie zmieniany na podstawie ustawienia systemowego DPI w pliku app.config zawiera następujący wpis:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public void PaintValue (object value, System.Drawing.Graphics canvas, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintValue(object value, class System.Drawing.Graphics canvas, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PaintValue(System::Object ^ value, System::Drawing::Graphics ^ canvas, System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="canvas" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt, którego wartość wyświetli ten edytor typów.</param>
        <param name="canvas">Kanwę rysunku, na którym namalować reprezentacja wartości obiektu.</param>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> w ramach którego granice namalować wartość.</param>
        <summary>Umożliwia malowanie reprezentacja wartości określony obiekt do określonego obszaru roboczego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Edytory powinien malowanie w granicach określonego prostokąta. Prostokąt wskazuje obszarze okna właściwości do rysowania reprezentacja wartości w ramach.  
  
 Począwszy od [!INCLUDE[net_v46](~/includes/net-v46-md.md)], prostokąt określony przez <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> będzie zmieniany na podstawie ustawienia systemowego DPI w pliku app.config zawiera następujący wpis:  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>