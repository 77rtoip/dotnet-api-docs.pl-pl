<Type Name="PropertyValueUIItem" FullName="System.Drawing.Design.PropertyValueUIItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72d912d922f3ed136a5a7e0e19068cf6c2b8790a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30451809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyValueUIItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyValueUIItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItem" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyValueUIItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyValueUIItem" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera informacje dotyczące właściwości wyświetlane w oknie właściwości, w tym obsługi skojarzone ze zdarzeniem, ciąg wyskakujących informacji i ikonę, aby wyświetlić właściwości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu przedstawiono <xref:System.Drawing.Design.PropertyValueUIItem> obiektu dla dowolnej właściwości składnika o nazwie `HorizontalMargin` lub `VerticalMargin`. <xref:System.Drawing.Design.PropertyValueUIItem> Dla tych właściwości zawiera obraz, etykietkę narzędzia i program obsługi zdarzeń, który wyświetla komunikat po kliknięciu obrazu dla właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">Aby uzyskać dostęp do zasobów systemowych. Żądanie wartości: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Skojarzony stan:</permission>
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyValueUIItem (System.Drawing.Image uiItemImage, System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image uiItemImage, class System.Drawing.Design.PropertyValueUIItemInvokeHandler handler, string tooltip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.#ctor(System.Drawing.Image,System.Drawing.Design.PropertyValueUIItemInvokeHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uiItemImage As Image, handler As PropertyValueUIItemInvokeHandler, tooltip As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyValueUIItem(System::Drawing::Image ^ uiItemImage, System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ handler, System::String ^ tooltip);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiItemImage" Type="System.Drawing.Image" />
        <Parameter Name="handler" Type="System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
        <Parameter Name="tooltip" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uiItemImage">Ikona do wyświetlenia. Obraz musi być 8 x 8 pikseli.</param>
        <param name="handler">Program obsługi do wywołania, gdy obraz zostanie dwukrotnie kliknięty.</param>
        <param name="tooltip">
          <see cref="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" /> Można wyświetlić właściwości tego <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> jest skojarzony.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie kodu przedstawiono <xref:System.Drawing.Design.PropertyValueUIItem> obiektu dla dowolnej właściwości składnika o nazwie `HorizontalMargin` lub `VerticalMargin`. <xref:System.Drawing.Design.PropertyValueUIItem> Dla tych właściwości zawiera obraz, etykietkę narzędzia i program obsługi zdarzeń, który wyświetla komunikat po kliknięciu obrazu dla właściwości. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Drawing.Design.IPropertyValueUIService> interfejsu.  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uiItemImage" /> lub <paramref name="handler" /> jest <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image Image { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.Image" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera 8 x 8 pikseli obrazu, który będzie rysowany w oknie właściwości.</summary>
        <value>Obraz do użycia na potrzeby ikona właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten obraz musi być 8 x 8 pikseli. Zaleca się, aby obraz obsługują przezroczystość.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
      </Docs>
    </Member>
    <Member MemberName="InvokeHandler">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Design.PropertyValueUIItemInvokeHandler InvokeHandler" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InvokeHandler As PropertyValueUIItemInvokeHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ InvokeHandler { System::Drawing::Design::PropertyValueUIItemInvokeHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItemInvokeHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera program obsługi, które jest wywoływane, gdy użytkownik kliknie dwukrotnie tego elementu.</summary>
        <value>A <see cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" /> wskazujący program obsługi zdarzeń dla tego elementu interfejsu użytkownika.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.PropertyValueUIItem.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje element interfejsu użytkownika.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Klasy pochodne mogą przesłaniać tego elementu członkowskiego w celu wykonania ponownego narysowania elementu interfejsu użytkownika.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.PropertyValueUIItem.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg informacji do wyświetlenia dla tego elementu.</summary>
        <value>Ciąg zawierający informacje ciąg wyświetlany dla tego elementu.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
      </Docs>
    </Member>
  </Members>
</Type>