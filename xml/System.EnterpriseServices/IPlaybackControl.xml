<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="54fcf7590327e9d2356fc883bfae633d190f6a78" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452202" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Funkcje w kolejce składniki nietypowe obsługę błędów odtwarzania po stronie serwera i klienta błędów mechanizm dostarczania usługi kolejkowania komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasy wyjątków zdefiniowane dla składnika w wykazie modelu COM + implementuje zarówno <xref:System.EnterpriseServices.IPlaybackControl> i interfejsu dla oryginalnej klasy. Implementacje metod oryginalnego interfejsu klasy są używane do wykonywania obsługi dla metod nie powiodło się w samej klasy wyjątków. Zostanie wywołana po <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> lub <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> przetwarzania wyjątków dla pierwotnie wywołana metoda.  
  
 Odtwarzacz składniki w kolejce wywołuje metody <xref:System.EnterpriseServices.IPlaybackControl> informują obiekt programu obsługi wyjątków, który wiadomości ma być umieszczone w kolejce końcowego spoczynku lub utraconych wiadomości. Odtwarzacz składniki w kolejce następnie wywołuje tej samej metody w obiekcie program obsługi wyjątku, który nie powiodło się w oryginalnej wywołania metody. Obiekt programu obsługi wyjątków można wdrożyć zamiast, na przykład przy zbieranie informacji diagnozowania problemu lub generowania obiektu lub komunikat, który informuje klienta problemu. Jeśli aplikacja nie implementuje <xref:System.EnterpriseServices.IPlaybackControl>, Trująca wiadomość jest umieszczana na końcowym kolejki spoczynku lub utraconych wiadomości, gdy Player składniki w kolejce zmagazynowane ponawiania prób.  
  
 Trująca wiadomość jest komunikatu, którego nie można przetworzyć jakiegoś powodu, prawdopodobnie z powodu problemu z serwerem lub system kolejkowania wiadomości. Transakcja zostanie wycofana i Trująca wiadomość przechodzi do początku kolejki. Gdy komunikat jest usuniętej ponownie, występuje ten sam warunek. Ten komunikat nadal pętli do czasu ich coś skonfigurowano w celu rozwiązania problemu. Usługa Składniki w kolejce obsługuje Trująca wiadomość, używając szeregu ponownych prób. Po kilku nieudanych próbach wiadomość zostanie przeniesiona do kolejki nieaktywnych końcowego. Skażone wiadomości pozostaną w kolejce nieaktywnych, dopóki przeniesiona ręcznie za pomocą narzędzia w kolejce przenoszenia wiadomości składników.  
  
 Sytuację Trująca wiadomość można także rozwiązać programowo, za pomocą <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> metodę, która informuje autora składnik po stronie serwera, które nie powiodły się wszystkie próby odtwarzanie odroczonego aktywacji.  
  
 Jeśli użytkownik stwierdzi, Trująca wiadomość, można szybko rozwiązać podstawową przyczyną problemu. Na przykład jeśli z jakiegoś powodu serwer był w trybie offline, można przełączyć serwer w tryb online. Nie można szybko rozwiązać ten problem, można automatycznie generować innej transakcji, powiadamiająca obiekt żądający, który transakcja nie zostało przeprowadzone. Obiekt żądający następnie wprowadzić kompensacyjnych transakcję, dla której odwraca efekt transakcji, która została już zatwierdzona.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informuje składnik obsługi wyjątków po stronie klienta, wszystkie próby usługi kolejkowania komunikatów na dostarczenie wiadomości do serwera zostały odrzucone, czy wiadomość zakończyła kolejki utraconych wiadomości Powyże po stronie klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nadejścia nowych wiadomości w kolejce utraconych wiadomości Powyże, COM + próbuje Wywołaj obsługę wyjątków po stronie klienta, powiązane z klasą serwera w celu dostarczenia powiadomienia. Robi to przy pierwszym wywołaniu <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, a następnie w obiekcie obsługi wyjątków podczas wywoływania obsługi wyjątków wersji nie powiodło się — metoda. Ta metoda wyjątek można podjąć odpowiednie działania wyjątku, takie jak rejestrowanie awarii, wysyłania wiadomości e-mail do administratora lub wykonywania operacji wyrównywania po stronie klienta (efekt wcześniejszych transakcji cofania). Exception — metoda zakończy się niepowodzeniem, wiadomość pozostanie w kolejce zadania Xact utraconych wiadomości.  
  
 Kolejki utraconych wiadomości Powyże można wyświetlić w Eksploratorze Microsoft kolejki komunikatów (MSMQ).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wszystkie odtwarzanie odroczonego aktywacji na serwerze prób, czy ma zostać przeniesiona do kolejki nieaktywnych końcowego komunikat informuje o implementacji klasy wyjątków po stronie serwera.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nadejścia wiadomości do kolejki utraconych wiadomości Powyże COM + próbuje Wywołaj obsługę wyjątków po stronie serwera, powiązane z klasą serwera w celu dostarczenia powiadomienia. Robi to przy pierwszym wywołaniu <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, następnie wywoływania wyjątków, obsługa wersji metody nie powiodło się w obiekcie obsługi wyjątków. Ta metoda wyjątek można podjąć odpowiednie działania wyjątku, takie jak rejestrowanie awarii, wysyłania wiadomości e-mail do administratora lub wykonywania operacji wyrównywania po stronie klienta (efekt wcześniejszych transakcji cofania). Obiekt serwera należy wykonać wszelkich starań, aby pomyślnie zakończyć tę transakcję. W przeciwnym razie wartość ręcznej interwencji jest wymagana, aby ponownie przetworzyć komunikatu. Jeśli metoda wyjątek zakończy się niepowodzeniem, wiadomość zostanie przeniesiona do kolejki nieaktywnych końcowego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>