<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe897989dbaa72abda8d3820c890c8ab8d72397b" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53478314" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="966ed-101">Funkcje w składnikach umieszczane w kolejce w nieprawidłowej obsługi błędy odtwarzania po stronie serwera i klienta błędów mechanizm dostarczania usługi kolejkowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="966ed-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="966ed-102">Klasy wyjątków zdefiniowanych dla składnika w wykazie modelu COM + implementuje interfejsy <xref:System.EnterpriseServices.IPlaybackControl> i interfejs dla klasy oryginalnej.</span><span class="sxs-lookup"><span data-stu-id="966ed-102">The exception class defined for the component in the COM+ catalog implements both <xref:System.EnterpriseServices.IPlaybackControl> and the interface for the original class.</span></span> <span data-ttu-id="966ed-103">Implementacje metod, oryginalnym interfejsu klasy są używane do wykonywania obsługi dla metod nie powiodło się w samej klasy wyjątków.</span><span class="sxs-lookup"><span data-stu-id="966ed-103">The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</span></span> <span data-ttu-id="966ed-104">Zostanie wywołana po <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> lub <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> przetwarzania wyjątków dla metody pierwotnie.</span><span class="sxs-lookup"><span data-stu-id="966ed-104">They will be called after <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> or <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> to process exceptions for the method originally called.</span></span>  
  
 <span data-ttu-id="966ed-105">Player składników w kolejce wywołuje metody <xref:System.EnterpriseServices.IPlaybackControl> poinformować obiekt programu obsługi wyjątków, który ma można umieścić w ostatnim kolejki przechowywany lub utraconych wiadomości.</span><span class="sxs-lookup"><span data-stu-id="966ed-105">The Queued Components Player calls the methods of <xref:System.EnterpriseServices.IPlaybackControl> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</span></span> <span data-ttu-id="966ed-106">Odtwarzacz składników w kolejce następnie wywołuje taką samą metodę jak w obiekcie obsługi wyjątków, który nie powiodło się w wywołaniu metody oryginalnym.</span><span class="sxs-lookup"><span data-stu-id="966ed-106">The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</span></span> <span data-ttu-id="966ed-107">Obiekt programu obsługi wyjątków można zaimplementować zamiast, na przykład przez zbieranie informacji diagnozowania problemu lub generowania obiektu lub komunikat, który informuje klienta problemu.</span><span class="sxs-lookup"><span data-stu-id="966ed-107">The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</span></span> <span data-ttu-id="966ed-108">Jeśli aplikacja nie implementuje <xref:System.EnterpriseServices.IPlaybackControl>, zarządzanie skażonymi komunikatami jest umieszczany na końcowy kolejki przechowywany lub utraconych wiadomości, gdy gracz składników w kolejce przekroczy ponawiania prób.</span><span class="sxs-lookup"><span data-stu-id="966ed-108">If the application does not implement <xref:System.EnterpriseServices.IPlaybackControl>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</span></span>  
  
 <span data-ttu-id="966ed-109">Zarządzanie skażonymi komunikatami jest komunikat, który nie można przetworzyć jakiegoś powodu, prawdopodobnie z powodu problemu z serwerem lub systemie kolejkowania.</span><span class="sxs-lookup"><span data-stu-id="966ed-109">A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</span></span> <span data-ttu-id="966ed-110">Transakcja zostanie wycofana, a zarządzanie skażonymi komunikatami, przechodzi do początku kolejki.</span><span class="sxs-lookup"><span data-stu-id="966ed-110">The transaction is rolled back, and the poison message goes to the top of the queue.</span></span> <span data-ttu-id="966ed-111">Komunikat jest usunięty z kolejki ponownie, ten sam wystąpi.</span><span class="sxs-lookup"><span data-stu-id="966ed-111">When the message is dequeued again, the same condition occurs.</span></span> <span data-ttu-id="966ed-112">Ten komunikat nadal pętli na czas nieokreślony, aż coś, co jest gotowe, aby rozwiązać ten problem.</span><span class="sxs-lookup"><span data-stu-id="966ed-112">This message can continue looping indefinitely until something is done to correct the problem.</span></span> <span data-ttu-id="966ed-113">Usługa kolejki składników obsługuje zarządzanie skażonymi komunikatami, używając serii ponownych prób.</span><span class="sxs-lookup"><span data-stu-id="966ed-113">The Queued Components service handles the poison message by using a series of retries.</span></span> <span data-ttu-id="966ed-114">Po kilku nieudanych próbach wiadomość zostanie przeniesiona do końcowej kolejce nieaktywnych.</span><span class="sxs-lookup"><span data-stu-id="966ed-114">After several unsuccessful retries, the message is moved to a final resting queue.</span></span> <span data-ttu-id="966ed-115">Skażone wiadomości pozostaną w kolejce nieaktywnych, do momentu ręcznego przeniesienia za pomocą narzędzia w kolejce składniki komunikat modułu przenoszącego spójne kolekcje.</span><span class="sxs-lookup"><span data-stu-id="966ed-115">Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</span></span>  
  
 <span data-ttu-id="966ed-116">Sytuacja Zarządzanie skażonymi komunikatami można także rozwiązać programowo, za pomocą <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> metody, która informuje Autor składnik po stronie serwera, który wszystkie próby odtwarzania odroczonego aktywacji nie powiodło się.</span><span class="sxs-lookup"><span data-stu-id="966ed-116">The poison message situation can also be resolved programmatically, using the <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</span></span>  
  
 <span data-ttu-id="966ed-117">Jeśli użytkownik stwierdzi, zarządzanie skażonymi komunikatami, można szybko rozwiązać podstawową przyczyną problemu.</span><span class="sxs-lookup"><span data-stu-id="966ed-117">If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</span></span> <span data-ttu-id="966ed-118">Na przykład jeśli serwer był w trybie offline jakiegoś powodu, może przynieść serwer w tryb online.</span><span class="sxs-lookup"><span data-stu-id="966ed-118">For example, if the server was offline for some reason, you can bring the server back online.</span></span> <span data-ttu-id="966ed-119">Nie można szybko rozwiązać ten problem, możesz automatycznie wygenerować innej transakcji, która powiadamia obiekt żądający, która nie nastąpiła transakcji.</span><span class="sxs-lookup"><span data-stu-id="966ed-119">If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</span></span> <span data-ttu-id="966ed-120">Obiekt żądający może następnie wprowadzić transakcja wyrównująca, która cofa efekt transakcji, która została już zatwierdzona.</span><span class="sxs-lookup"><span data-stu-id="966ed-120">The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="966ed-121">Informuje składnik obsługi wyjątków po stronie klienta, że wszystkie usługi kolejkowania komunikatów prób dostarczenia komunikatu do serwera zostały odrzucone, a komunikat zakończył w kolejce zadania Xact utraconych po stronie klienta.</span><span class="sxs-lookup"><span data-stu-id="966ed-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="966ed-122">Nadejścia nowych wiadomości w kolejce utraconych zadania Xact, modelu COM + próbuje wywołać program obsługi wyjątków po stronie klienta dotyczy klasy serwera, aby dostarczyć to powiadomienie.</span><span class="sxs-lookup"><span data-stu-id="966ed-122">As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="966ed-123">Robi to za pośrednictwem pierwszego wywołania <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, a następnie wywoływania wersji obsługi wyjątków metody nie powiodło się w obiekcie obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="966ed-123">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, then calling the exception-handling version of the failed method in the exception-handler object.</span></span> <span data-ttu-id="966ed-124">Ta metoda wyjątek następnie podjąć działanie wyjątku, takie jak rejestrowanie błędu, wysyłanie wiadomości e-mail do administratora lub podejmowania działań wyrównującej po stronie klienta, (cofania efekt wcześniejszych transakcji).</span><span class="sxs-lookup"><span data-stu-id="966ed-124">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="966ed-125">Metoda wyjątku zakończy się niepowodzeniem, wiadomość pozostanie w kolejce zadania Xact utraconych wiadomości.</span><span class="sxs-lookup"><span data-stu-id="966ed-125">If the exception method is not successful, the message is left on the Xact Dead Letter queue.</span></span>  
  
 <span data-ttu-id="966ed-126">Kolejka utraconych wiadomości zadania Xact mogą być wyświetlane w Eksploratorze Microsoft kolejki komunikatów (MSMQ).</span><span class="sxs-lookup"><span data-stu-id="966ed-126">The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="966ed-127">Implementacja klasy wyjątków po stronie serwera informuje, że wszystkie próby odtwarzania odroczonego aktywacji z serwerem nie powiodło się i wiadomość ma zostać przeniesione do jego końcowej kolejce nieaktywnych.</span><span class="sxs-lookup"><span data-stu-id="966ed-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="966ed-128">Nadejścia nowych wiadomości w kolejce utraconych zadania Xact, modelu COM + próbuje wywołać program obsługi wyjątków po stronie serwera związane z klasy serwera, aby dostarczyć to powiadomienie.</span><span class="sxs-lookup"><span data-stu-id="966ed-128">As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="966ed-129">Robi to za pośrednictwem pierwszego wywołania <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, a następnie wywoływania wyjątków, obsługa wersji metody nie powiodło się w obiekcie programu obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="966ed-129">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, then calling the exception handling version of the failed method in the exception handler object.</span></span> <span data-ttu-id="966ed-130">Ta metoda wyjątek następnie podjąć działanie wyjątku, takie jak rejestrowanie błędu, wysyłanie wiadomości e-mail do administratora lub podejmowania działań wyrównującej po stronie klienta, (cofania efekt wcześniejszych transakcji).</span><span class="sxs-lookup"><span data-stu-id="966ed-130">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="966ed-131">Obiekt serwera upewnić wszelkich starań, aby pomyślnie ukończyć tej transakcji.</span><span class="sxs-lookup"><span data-stu-id="966ed-131">The server object should make every effort to complete this transaction successfully.</span></span> <span data-ttu-id="966ed-132">W przeciwnym razie ręcznej interwencji jest wymagana, aby ponownie przetworzyć komunikatu.</span><span class="sxs-lookup"><span data-stu-id="966ed-132">Otherwise, manual intervention is required to reprocess the message.</span></span> <span data-ttu-id="966ed-133">Jeśli metoda wyjątku zakończy się niepowodzeniem, wiadomość zostanie przeniesiona do końcowej kolejce nieaktywnych.</span><span class="sxs-lookup"><span data-stu-id="966ed-133">If the exception method is not successful, the message is moved to the final resting queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>