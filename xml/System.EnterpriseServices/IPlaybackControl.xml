<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8244a38f035a96f53aaf4b667da80a3de717304" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358529" /></Metadata><TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <TypeSignature Language="F#" Value="type IPlaybackControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Działa w umieszczonych w kolejce składnikach w nienormalnej obsłudze błędów odtwarzania po stronie serwera i błędach po stronie klienta mechanizmu dostarczania usługi kolejkowania komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klasa wyjątku zdefiniowana dla składnika w wykazie modelu COM+ implementuje zarówno <xref:System.EnterpriseServices.IPlaybackControl> i interfejs dla oryginalnej klasy. Implementacje metod oryginalnego interfejsu klasy są używane do wykonywania obsługi wyjątków dla metod zakończonych niepowodzeniem w samej klasie. Zostaną one wywołane po <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> lub <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> , aby przetworzyć wyjątki dla metody, która została pierwotnie wywołana.  
  
 Odtwarzacz składników znajdujących się w kolejce wywołuje <xref:System.EnterpriseServices.IPlaybackControl> metody w celu informowania obiektu programu obsługi wyjątków, który komunikat ma zostać umieszczony w końcowej kolejki REST lub utraconych liter. Odtwarzacz składników umieszczonych w kolejce następnie wywołuje tę samą metodę w obiekcie programu obsługi wyjątków, który nie powiódł się w oryginalnym wywołaniu metody. Obiekt programu obsługi wyjątków może zaimplementować alternatywę, na przykład przez zbieranie informacji diagnostycznych dotyczących problemów lub generowanie obiektu lub komunikatu, który informuje klienta o problemie. Jeśli aplikacja nie jest zaimplementowana <xref:System.EnterpriseServices.IPlaybackControl>, Trująca wiadomość jest umieszczana w kolejce końcowa lub utraconych list, gdy odtwarzacz składników znajdujących się w kolejce wyczerpuje wszystkie ponowne próby.  
  
 Trująca wiadomość jest komunikatem, którego nie można przetworzyć z jakiegoś powodu, prawdopodobnie z powodu problemu z serwerem lub systemem kolejkowania. Transakcja zostanie wycofana, a Trująca wiadomość przechodzi do góry kolejki. Po ponownym zakończeniu kolejki komunikat jest w tym samym stanie. Ten komunikat może kontynuować zapętlenie w nieskończoność, dopóki coś nie zostanie zrobione w celu rozwiązania problemu. Usługa składniki w kolejce obsługuje skażony komunikat przy użyciu serii ponownych prób. Po kilku nieudanych ponownych próbach komunikat zostanie przeniesiony do końcowej kolejki Rest. Trujące komunikaty pozostają w kolejce REST do momentu ręcznego przesunięcia przy użyciu narzędzia przenoszenia komunikatów składniki w kolejce.  
  
 Można również programowo rozwiązać problem skażonej wiadomości przy użyciu <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> metody, która informuje autora składnika po stronie serwera, że wszystkie próby odtworzenia odroczonej aktywacji nie powiodły się.  
  
 Jeśli wykryjesz trującą wiadomość, możesz szybko rozwiązać podstawową przyczynę problemu. Jeśli na przykład serwer był w trybie offline z jakiegoś powodu, możesz przywrócić serwer do trybu online. Jeśli nie możesz szybko rozwiązać tego problemu, możesz automatycznie wygenerować kolejną transakcję, która powiadamia obiekt żądający, że transakcja nie została wykonana. Obiekt żądający może następnie wykonać transakcję kompensacyjną, która odwraca efekt transakcji, która została już zatwierdzona.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalClientRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalClientRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informuje składnik obsługi wyjątków po stronie klienta, który usługa kolejkowania komunikatów próbuje dostarczyć komunikat do serwera, został odrzucony, a komunikat zakończył się w kolejce utraconych wiadomości po stronie klienta.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po nadejściu komunikatów do kolejki utraconych wiadomości dla opcji XACT model COM+ próbuje wywołać procedurę obsługi wyjątków po stronie klienta powiązaną z klasą serwera w celu dostarczenia tego powiadomienia. Wykonuje to po pierwsze wywołanie <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, a następnie wywołuje wersję obsługującą wyjątek metody zakończonej niepowodzeniem w obiekcie programu obsługi wyjątków. Ta metoda wyjątku może następnie wykonać akcję wyjątku, taką jak rejestrowanie błędu, wysyłanie wiadomości e-mail do administratora lub podejmowanie akcji kompensacyjnej po stronie klienta (odwracanie skutku wcześniejszej transakcji). Jeśli metoda wyjątku nie powiedzie się, komunikat zostanie pozostawiony w kolejce utraconych wiadomości dla opcji XACT.  
  
 Kolejka utraconych wiadomości dla opcji XACT może być wyświetlana w Eksploratorze kolejki komunikatów firmy Microsoft (MSMQ).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberSignature Language="F#" Value="abstract member FinalServerRetry : unit -&gt; unit" Usage="iPlaybackControl.FinalServerRetry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informuje implementację klasy wyjątku po stronie serwera, że wszystkie próby odtworzenia odroczonej aktywacji do serwera zakończą się niepowodzeniem, a komunikat zostanie przeniesiony do końcowej kolejki Rest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po nadejściu komunikatów do kolejki utraconych wiadomości dla opcji XACT model COM+ próbuje wywołać procedurę obsługi wyjątków po stronie serwera powiązaną z klasą serwera w celu dostarczenia tego powiadomienia. Wykonuje to przez pierwsze wywołanie <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, a następnie wywołanie wersji obsługującej wyjątek metody zakończonej niepowodzeniem w obiekcie obsługi wyjątków. Ta metoda wyjątku może następnie wykonać akcję wyjątku, taką jak rejestrowanie błędu, wysyłanie wiadomości e-mail do administratora lub podejmowanie akcji kompensacyjnej po stronie klienta (odwracanie skutku wcześniejszej transakcji). Obiekt serwera powinien podejmować wszelkie wysiłki, aby pomyślnie zakończyć tę transakcję. W przeciwnym razie interwencja ręczna jest wymagana do ponownego przetworzenia komunikatu. Jeśli metoda wyjątku nie powiedzie się, komunikat zostanie przeniesiony do końcowej kolejki Rest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
