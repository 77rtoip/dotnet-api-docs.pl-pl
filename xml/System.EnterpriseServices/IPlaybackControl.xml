<Type Name="IPlaybackControl" FullName="System.EnterpriseServices.IPlaybackControl">
  <TypeSignature Language="C#" Value="public interface IPlaybackControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPlaybackControl" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IPlaybackControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPlaybackControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPlaybackControl" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f8025-101">Funkcje w kolejce składniki nietypowe obsługę błędów odtwarzania po stronie serwera i klienta błędów mechanizm dostarczania usługi kolejkowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="f8025-101">Functions in Queued Components in the abnormal handling of server-side playback errors and client-side failures of the Message Queuing delivery mechanism.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8025-102">Klasy wyjątków zdefiniowane dla składnika w wykazie modelu COM + implementuje zarówno <xref:System.EnterpriseServices.IPlaybackControl> i interfejsu dla oryginalnej klasy.</span><span class="sxs-lookup"><span data-stu-id="f8025-102">The exception class defined for the component in the COM+ catalog implements both <xref:System.EnterpriseServices.IPlaybackControl> and the interface for the original class.</span></span> <span data-ttu-id="f8025-103">Implementacje metod oryginalnego interfejsu klasy są używane do wykonywania obsługi dla metod nie powiodło się w samej klasy wyjątków.</span><span class="sxs-lookup"><span data-stu-id="f8025-103">The method implementations of the original class interface are used to perform the exception handling for the failed methods in the class itself.</span></span> <span data-ttu-id="f8025-104">Zostanie wywołana po <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> lub <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> przetwarzania wyjątków dla pierwotnie wywołana metoda.</span><span class="sxs-lookup"><span data-stu-id="f8025-104">They will be called after <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A> or <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> to process exceptions for the method originally called.</span></span>  
  
 <span data-ttu-id="f8025-105">Odtwarzacz składniki w kolejce wywołuje metody <xref:System.EnterpriseServices.IPlaybackControl> informują obiekt programu obsługi wyjątków, który wiadomości ma być umieszczone w kolejce końcowego spoczynku lub utraconych wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f8025-105">The Queued Components Player calls the methods of <xref:System.EnterpriseServices.IPlaybackControl> to inform the exception-handler object that a message is about to be placed on the final resting or dead letter queue.</span></span> <span data-ttu-id="f8025-106">Odtwarzacz składniki w kolejce następnie wywołuje tej samej metody w obiekcie program obsługi wyjątku, który nie powiodło się w oryginalnej wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="f8025-106">The Queued Components Player then calls the same method in the exception-handler object that had failed in the original method call.</span></span> <span data-ttu-id="f8025-107">Obiekt programu obsługi wyjątków można wdrożyć zamiast, na przykład przy zbieranie informacji diagnozowania problemu lub generowania obiektu lub komunikat, który informuje klienta problemu.</span><span class="sxs-lookup"><span data-stu-id="f8025-107">The exception-handler object can implement an alternative, for example, by gathering problem diagnosis information or generating an object or message that informs the client of the problem.</span></span> <span data-ttu-id="f8025-108">Jeśli aplikacja nie implementuje <xref:System.EnterpriseServices.IPlaybackControl>, Trująca wiadomość jest umieszczana na końcowym kolejki spoczynku lub utraconych wiadomości, gdy Player składniki w kolejce zmagazynowane ponawiania prób.</span><span class="sxs-lookup"><span data-stu-id="f8025-108">If the application does not implement <xref:System.EnterpriseServices.IPlaybackControl>, the poison message is placed on the final resting or dead letter queue when the Queued Components Player exhausts all retries.</span></span>  
  
 <span data-ttu-id="f8025-109">Trująca wiadomość jest komunikatu, którego nie można przetworzyć jakiegoś powodu, prawdopodobnie z powodu problemu z serwerem lub system kolejkowania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f8025-109">A poison message is a message that cannot be processed for some reason, perhaps because of a problem with the server or queuing system.</span></span> <span data-ttu-id="f8025-110">Transakcja zostanie wycofana i Trująca wiadomość przechodzi do początku kolejki.</span><span class="sxs-lookup"><span data-stu-id="f8025-110">The transaction is rolled back, and the poison message goes to the top of the queue.</span></span> <span data-ttu-id="f8025-111">Gdy komunikat jest usuniętej ponownie, występuje ten sam warunek.</span><span class="sxs-lookup"><span data-stu-id="f8025-111">When the message is dequeued again, the same condition occurs.</span></span> <span data-ttu-id="f8025-112">Ten komunikat nadal pętli do czasu ich coś skonfigurowano w celu rozwiązania problemu.</span><span class="sxs-lookup"><span data-stu-id="f8025-112">This message can continue looping indefinitely until something is done to correct the problem.</span></span> <span data-ttu-id="f8025-113">Usługa Składniki w kolejce obsługuje Trująca wiadomość, używając szeregu ponownych prób.</span><span class="sxs-lookup"><span data-stu-id="f8025-113">The Queued Components service handles the poison message by using a series of retries.</span></span> <span data-ttu-id="f8025-114">Po kilku nieudanych próbach wiadomość zostanie przeniesiona do kolejki nieaktywnych końcowego.</span><span class="sxs-lookup"><span data-stu-id="f8025-114">After several unsuccessful retries, the message is moved to a final resting queue.</span></span> <span data-ttu-id="f8025-115">Skażone wiadomości pozostaną w kolejce nieaktywnych, dopóki przeniesiona ręcznie za pomocą narzędzia w kolejce przenoszenia wiadomości składników.</span><span class="sxs-lookup"><span data-stu-id="f8025-115">Poison messages remain in the resting queue until manually moved by using the Queued Components Message Mover tool.</span></span>  
  
 <span data-ttu-id="f8025-116">Sytuację Trująca wiadomość można także rozwiązać programowo, za pomocą <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> metodę, która informuje autora składnik po stronie serwera, które nie powiodły się wszystkie próby odtwarzanie odroczonego aktywacji.</span><span class="sxs-lookup"><span data-stu-id="f8025-116">The poison message situation can also be resolved programmatically, using the <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> method, which informs the server-side component author that all attempts to play back the deferred activation have failed.</span></span>  
  
 <span data-ttu-id="f8025-117">Jeśli użytkownik stwierdzi, Trująca wiadomość, można szybko rozwiązać podstawową przyczyną problemu.</span><span class="sxs-lookup"><span data-stu-id="f8025-117">If you discover a poison message, you might be able to solve the underlying cause of the problem quickly.</span></span> <span data-ttu-id="f8025-118">Na przykład jeśli z jakiegoś powodu serwer był w trybie offline, można przełączyć serwer w tryb online.</span><span class="sxs-lookup"><span data-stu-id="f8025-118">For example, if the server was offline for some reason, you can bring the server back online.</span></span> <span data-ttu-id="f8025-119">Nie można szybko rozwiązać ten problem, można automatycznie generować innej transakcji, powiadamiająca obiekt żądający, który transakcja nie zostało przeprowadzone.</span><span class="sxs-lookup"><span data-stu-id="f8025-119">If you cannot solve the problem quickly, you can automatically generate another transaction that notifies the requestor that the transaction did not occur.</span></span> <span data-ttu-id="f8025-120">Obiekt żądający następnie wprowadzić kompensacyjnych transakcję, dla której odwraca efekt transakcji, która została już zatwierdzona.</span><span class="sxs-lookup"><span data-stu-id="f8025-120">The requestor can then make a compensating transaction that reverses the effect of a transaction that has already committed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FinalClientRetry">
      <MemberSignature Language="C#" Value="public void FinalClientRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalClientRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalClientRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalClientRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalClientRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8025-121">Informuje składnik obsługi wyjątków po stronie klienta, wszystkie próby usługi kolejkowania komunikatów na dostarczenie wiadomości do serwera zostały odrzucone, czy wiadomość zakończyła kolejki utraconych wiadomości Powyże po stronie klienta.</span><span class="sxs-lookup"><span data-stu-id="f8025-121">Informs the client-side exception-handling component that all Message Queuing attempts to deliver the message to the server were rejected, and the message ended up on the client-side Xact Dead Letter queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8025-122">Nadejścia nowych wiadomości w kolejce utraconych wiadomości Powyże, COM + próbuje Wywołaj obsługę wyjątków po stronie klienta, powiązane z klasą serwera w celu dostarczenia powiadomienia.</span><span class="sxs-lookup"><span data-stu-id="f8025-122">As messages arrive in the Xact Dead Letter queue, COM+ attempts to invoke a client-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="f8025-123">Robi to przy pierwszym wywołaniu <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, a następnie w obiekcie obsługi wyjątków podczas wywoływania obsługi wyjątków wersji nie powiodło się — metoda.</span><span class="sxs-lookup"><span data-stu-id="f8025-123">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>, then calling the exception-handling version of the failed method in the exception-handler object.</span></span> <span data-ttu-id="f8025-124">Ta metoda wyjątek można podjąć odpowiednie działania wyjątku, takie jak rejestrowanie awarii, wysyłania wiadomości e-mail do administratora lub wykonywania operacji wyrównywania po stronie klienta (efekt wcześniejszych transakcji cofania).</span><span class="sxs-lookup"><span data-stu-id="f8025-124">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="f8025-125">Exception — metoda zakończy się niepowodzeniem, wiadomość pozostanie w kolejce zadania Xact utraconych wiadomości.</span><span class="sxs-lookup"><span data-stu-id="f8025-125">If the exception method is not successful, the message is left on the Xact Dead Letter queue.</span></span>  
  
 <span data-ttu-id="f8025-126">Kolejki utraconych wiadomości Powyże można wyświetlić w Eksploratorze Microsoft kolejki komunikatów (MSMQ).</span><span class="sxs-lookup"><span data-stu-id="f8025-126">The Xact Dead Letter queue can be viewed in the Microsoft Message Queue (MSMQ) Explorer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalServerRetry">
      <MemberSignature Language="C#" Value="public void FinalServerRetry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FinalServerRetry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IPlaybackControl.FinalServerRetry" />
      <MemberSignature Language="VB.NET" Value="Public Sub FinalServerRetry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FinalServerRetry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8025-127">Wszystkie odtwarzanie odroczonego aktywacji na serwerze prób, czy ma zostać przeniesiona do kolejki nieaktywnych końcowego komunikat informuje o implementacji klasy wyjątków po stronie serwera.</span><span class="sxs-lookup"><span data-stu-id="f8025-127">Informs the server-side exception class implementation that all attempts to play back the deferred activation to the server have failed, and the message is about to be moved to its final resting queue.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8025-128">Nadejścia wiadomości do kolejki utraconych wiadomości Powyże COM + próbuje Wywołaj obsługę wyjątków po stronie serwera, powiązane z klasą serwera w celu dostarczenia powiadomienia.</span><span class="sxs-lookup"><span data-stu-id="f8025-128">As messages arrive on the Xact Dead Letter queue, COM+ attempts to invoke a server-side exception handler related to the server class to deliver this notification.</span></span> <span data-ttu-id="f8025-129">Robi to przy pierwszym wywołaniu <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, następnie wywoływania wyjątków, obsługa wersji metody nie powiodło się w obiekcie obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="f8025-129">It does so by first calling <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>, then calling the exception handling version of the failed method in the exception handler object.</span></span> <span data-ttu-id="f8025-130">Ta metoda wyjątek można podjąć odpowiednie działania wyjątku, takie jak rejestrowanie awarii, wysyłania wiadomości e-mail do administratora lub wykonywania operacji wyrównywania po stronie klienta (efekt wcześniejszych transakcji cofania).</span><span class="sxs-lookup"><span data-stu-id="f8025-130">This exception method can then take an exception action, such as recording the failure, sending a mail message to the administrator, or taking client-side compensating action (reversing the effect of an earlier transaction).</span></span> <span data-ttu-id="f8025-131">Obiekt serwera należy wykonać wszelkich starań, aby pomyślnie zakończyć tę transakcję.</span><span class="sxs-lookup"><span data-stu-id="f8025-131">The server object should make every effort to complete this transaction successfully.</span></span> <span data-ttu-id="f8025-132">W przeciwnym razie wartość ręcznej interwencji jest wymagana, aby ponownie przetworzyć komunikatu.</span><span class="sxs-lookup"><span data-stu-id="f8025-132">Otherwise, manual intervention is required to reprocess the message.</span></span> <span data-ttu-id="f8025-133">Jeśli metoda wyjątek zakończy się niepowodzeniem, wiadomość zostanie przeniesiona do kolejki nieaktywnych końcowego.</span><span class="sxs-lookup"><span data-stu-id="f8025-133">If the exception method is not successful, the message is moved to the final resting queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>