<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd150054d7a10f5814f41e2c54febd907dc51b43" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69246825" /></Metadata><TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <TypeSignature Language="F#" Value="type ContextUtil = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="80395-101">Uzyskuje informacje o kontekście obiektu modelu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="80395-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="80395-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-103"><xref:System.EnterpriseServices.ContextUtil>jest preferowaną klasą używaną do uzyskiwania informacji kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="80395-104">Ponieważ elementy członkowskie tej klasy są wszystkie `static` (`shared` w Visual Basic), nie jest konieczne jej wystąpienie przed ich użyciem.</span><span class="sxs-lookup"><span data-stu-id="80395-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-105">Poniższy przykład kodu demonstruje, jak używać <xref:System.EnterpriseServices.ContextUtil> do tworzenia transakcyjnej. <xref:System.EnterpriseServices.ServicedComponent></span><span class="sxs-lookup"><span data-stu-id="80395-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivityId : Guid" Usage="System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-106">Pobiera identyfikator GUID reprezentujący działanie zawierające składnik.</span><span class="sxs-lookup"><span data-stu-id="80395-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="80395-107">Identyfikator GUID działania, jeśli bieżący kontekst jest częścią działania; w przeciwnym razie. <see langword="GUID_NULL" /></span><span class="sxs-lookup"><span data-stu-id="80395-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-108">Poniższy przykład kodu pobiera wartość <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-109">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-109">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-110">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-110">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-111">Pobiera identyfikator GUID bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="80395-111">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="80395-112">Identyfikator GUID bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="80395-112">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-113">Poniższy przykład kodu demonstruje użycie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-113">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-114">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-114">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-115">Platforma nie jest systemu Windows XP lub nowszego.</span><span class="sxs-lookup"><span data-stu-id="80395-115">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstanceId : Guid" Usage="System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-116">Pobiera identyfikator GUID dla bieżącego wystąpienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="80395-116">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="80395-117">Identyfikator GUID dla bieżącego wystąpienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="80395-117">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-118">Poniższy przykład kodu pobiera wartość <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-118">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-119">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-119">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-120">Platforma nie jest systemu Windows XP lub nowszego.</span><span class="sxs-lookup"><span data-stu-id="80395-120">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextId : Guid" Usage="System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-121">Pobiera identyfikator GUID dla bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="80395-121">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="80395-122">Identyfikator GUID dla bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="80395-122">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-123">Poniższy przykład kodu demonstruje użycie tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="80395-123">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-124">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-124">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-125">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-125">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DeactivateOnReturn : bool with get, set" Usage="System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-126">Pobiera lub ustawia <see langword="done" /> bit w kontekście modelu com+.</span><span class="sxs-lookup"><span data-stu-id="80395-126">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="80395-127"><see langword="true" />Jeśli obiekt ma zostać zdezaktywowany, gdy metoda zwraca; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="80395-127"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="80395-128">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="80395-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-129">Model com+ `done` określa, jak długo obiekt pozostaje aktywny po zakończeniu pracy i może wpływać na czas trwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-129">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="80395-130">Gdy wywołanie metody zwróci wartość, model com+ bada `done` bit.</span><span class="sxs-lookup"><span data-stu-id="80395-130">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="80395-131">Jeśli bit ma `true`wartość, model com+ dezaktywuje obiekt. `done`</span><span class="sxs-lookup"><span data-stu-id="80395-131">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="80395-132">Jeśli bit ma `false`wartość, obiekt nie zostanie zdezaktywowany. `done`</span><span class="sxs-lookup"><span data-stu-id="80395-132">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-133">Poniższy przykład kodu demonstruje użycie <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> właściwości, aby upewnić <xref:System.EnterpriseServices.ServicedComponent> się, że jest dezaktywowany po wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="80395-133">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-134">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-134">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-135">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-135">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberSignature Language="F#" Value="static member DisableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.DisableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80395-136">Ustawia bit i bit na <see langword="false" /> w kontekście modelu com+. <see langword="done" /> <see langword="consistent" /></span><span class="sxs-lookup"><span data-stu-id="80395-136">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-137">Jeśli zostanie wyświetlony monit, kontekst modelu COM+ odbędzie się przerwać bieżącą transakcję, ale obiekt nie zostanie zdezaktywowany w zwracanej metodzie.</span><span class="sxs-lookup"><span data-stu-id="80395-137">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-138">Poniższy przykład kodu wywołuje <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="80395-138">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-139">Żaden kontekst COM+ nie jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="80395-139">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberSignature Language="F#" Value="static member EnableCommit : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.EnableCommit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80395-140">Ustawia bit na <see langword="true" /> i <see langword="done" /> bit wkontekściemodelucom+.<see langword="false" /> <see langword="consistent" /></span><span class="sxs-lookup"><span data-stu-id="80395-140">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-141">Jeśli zostanie wyświetlony monit, kontekst modelu COM+ zatwierdzi bieżącą transakcję, ale obiekt nie zostanie zdezaktywowany w zwracanej metodzie.</span><span class="sxs-lookup"><span data-stu-id="80395-141">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-142">Poniższy przykład kodu wywołuje <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="80395-142">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-143">Żaden kontekst COM+ nie jest dostępny.</span><span class="sxs-lookup"><span data-stu-id="80395-143">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetNamedProperty : string -&gt; obj" Usage="System.EnterpriseServices.ContextUtil.GetNamedProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="80395-144">Nazwa żądanej właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-144">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="80395-145">Zwraca nazwaną właściwość z kontekstu com.</span><span class="sxs-lookup"><span data-stu-id="80395-145">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="80395-146">Nazwana Właściwość kontekstu.</span><span class="sxs-lookup"><span data-stu-id="80395-146">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-147">Jest to przydatne do uzyskiwania obiektów wewnętrznych Internet Information Services (IIS) zapewnianych przez Active Server stron (ASP).</span><span class="sxs-lookup"><span data-stu-id="80395-147">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-148">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-148">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-149">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-149">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="static member IsCallerInRole : string -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsCallerInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="80395-150">Nazwa roli do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="80395-150">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="80395-151">Określa, czy obiekt wywołujący znajduje się w określonej roli.</span><span class="sxs-lookup"><span data-stu-id="80395-151">Determines whether the caller is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="80395-152"><see langword="true" />Jeśli obiekt wywołujący znajduje się w określonej roli; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="80395-152"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-153">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-153">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberSignature Language="F#" Value="static member IsDefaultContext : unit -&gt; bool" Usage="System.EnterpriseServices.ContextUtil.IsDefaultContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80395-154">Określa, czy składnik serwisowany jest aktywowany w domyślnym kontekście.</span><span class="sxs-lookup"><span data-stu-id="80395-154">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="80395-155">Składniki usługi, które nie mają informacji wykazu COM+, są aktywowane w kontekście domyślnym.</span><span class="sxs-lookup"><span data-stu-id="80395-155">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="80395-156"><see langword="true" />Jeśli składnik serwisowany jest aktywowany w kontekście domyślnym; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="80395-156"><see langword="true" /> if the serviced component is activated in the default context; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInTransaction : bool" Usage="System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-157">Pobiera wartość wskazującą, czy bieżący kontekst jest transakcyjny.</span><span class="sxs-lookup"><span data-stu-id="80395-157">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value><span data-ttu-id="80395-158"><see langword="true" />Jeśli bieżący kontekst jest transakcyjny; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="80395-158"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-159">Poniższy przykład kodu pobiera wartość <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-160">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityEnabled : bool" Usage="System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-161">Pobiera wartość wskazującą, czy zabezpieczenia oparte na rolach są aktywne w bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="80395-161">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value><span data-ttu-id="80395-162"><see langword="true" />Jeśli w bieżącym kontekście włączono zabezpieczenia, w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="80395-162"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-163">Poniższy przykład kodu pobiera wartość <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-163">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-164">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-164">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberSignature Language="F#" Value="member this.MyTransactionVote : System.EnterpriseServices.TransactionVote with get, set" Usage="System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-165">Pobiera lub ustawia <see langword="consistent" /> bit w kontekście modelu com+.</span><span class="sxs-lookup"><span data-stu-id="80395-165">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="80395-166">Jedna z <see cref="T:System.EnterpriseServices.TransactionVote" /> wartości <see langword="Commit" /> albo lub <see langword="Abort" />.</span><span class="sxs-lookup"><span data-stu-id="80395-166">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-167">Gdy <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> jest ustawiona na `Commit`, bit modelu `consistent` com+ jest ustawiony na `true` , a kontekst com+ ma na celu zatwierdzenie transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-167">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="80395-168">Jeśli <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> jest ustawiona na `Abort`, `consistent` bit jest ustawiony na `false` , a kontekst com+ odnosi się do przerwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-168">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="80395-169">Wartość `consistent` domyślna bitu to `true`.</span><span class="sxs-lookup"><span data-stu-id="80395-169">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="80395-170">Bit rzutuje głos, aby zatwierdzić lub przerwać transakcję, w której jest wykonywany, `done` a bit kończy głos. `consistent`</span><span class="sxs-lookup"><span data-stu-id="80395-170">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="80395-171">Model com+ sprawdza bit `consistent` , `done` gdy bit jest ustawiony `true` na wartość Return wywołania metody lub po zdezaktywowaniu obiektu.</span><span class="sxs-lookup"><span data-stu-id="80395-171">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="80395-172">Chociaż `consistent` bit obiektu może wielokrotnie zmieniać się w ramach każdego wywołania metody, tylko Ostatnia liczba zmian.</span><span class="sxs-lookup"><span data-stu-id="80395-172">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-173">Poniższy przykład kodu demonstruje, jak używać <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> właściwości do tworzenia transakcyjnej. <xref:System.EnterpriseServices.ServicedComponent></span><span class="sxs-lookup"><span data-stu-id="80395-173">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-174">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-174">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-175">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-175">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.PartitionId : Guid" Usage="System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-176">Pobiera identyfikator GUID bieżącej partycji.</span><span class="sxs-lookup"><span data-stu-id="80395-176">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="80395-177">Identyfikator GUID bieżącej partycji.</span><span class="sxs-lookup"><span data-stu-id="80395-177">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-178">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-178">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-179">Platforma nie jest systemu Windows XP lub nowszego.</span><span class="sxs-lookup"><span data-stu-id="80395-179">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberSignature Language="F#" Value="static member SetAbort : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80395-180">Ustawia bit na <see langword="false" /> i <see langword="done" /> bit wkontekściemodelucom+.<see langword="true" /> <see langword="consistent" /></span><span class="sxs-lookup"><span data-stu-id="80395-180">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-181">Jeśli zostanie wyświetlony monit, kontekst odbędzie się przerwać bieżącą transakcję, a obiekt jest dezaktywowany w zwracanej metodzie.</span><span class="sxs-lookup"><span data-stu-id="80395-181">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-182">Poniższy przykład kodu demonstruje użycie tej metody.</span><span class="sxs-lookup"><span data-stu-id="80395-182">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-183">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-183">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberSignature Language="F#" Value="static member SetComplete : unit -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="80395-184">Ustawia bit i bit na <see langword="true" /> w kontekście modelu com+. <see langword="done" /> <see langword="consistent" /></span><span class="sxs-lookup"><span data-stu-id="80395-184">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-185">Jeśli zostanie wyświetlony monit, kontekst modelu COM+ zatwierdzi bieżącą transakcję, a obiekt zostanie zdezaktywowany w zwracanej metodzie.</span><span class="sxs-lookup"><span data-stu-id="80395-185">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80395-186">Poniższy przykład kodu demonstruje użycie tej metody.</span><span class="sxs-lookup"><span data-stu-id="80395-186">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-187">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-187">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetNamedProperty : string * obj -&gt; unit" Usage="System.EnterpriseServices.ContextUtil.SetNamedProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="80395-188">Nazwa właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="80395-188">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="80395-189">Obiekt, który reprezentuje wartość właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="80395-189">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="80395-190">Ustawia nazwę właściwości dla kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-190">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-191">Jest to przydatne do uzyskiwania obiektów wewnętrznych Internet Information Services (IIS) zapewnianych przez Active Server stron (ASP).</span><span class="sxs-lookup"><span data-stu-id="80395-191">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-192">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-192">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-193">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-193">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemTransaction : System.Transactions.Transaction" Usage="System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-194">Pobiera bieżący kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-194">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="80395-195"><see cref="T:System.Transactions.Transaction" /> Reprezentuje bieżący kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-195">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-196">Jeśli podczas uzyskiwania dostępu do tej właściwości nie istnieje żaden kontekst transakcji, zostanie utworzony i zwrócony nowy kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="80395-196">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-197">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-197">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-198">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-198">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transaction : obj" Usage="System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-199">Pobiera obiekt opisujący bieżącą transakcję usługi DTC (COM+).</span><span class="sxs-lookup"><span data-stu-id="80395-199">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="80395-200">Obiekt, który reprezentuje bieżącą transakcję.</span><span class="sxs-lookup"><span data-stu-id="80395-200">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80395-201">Zwrócony obiekt obsługuje interfejs, <xref:System.EnterpriseServices.ITransaction> Jeśli transakcja jest transakcją usługi DTC.</span><span class="sxs-lookup"><span data-stu-id="80395-201">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-202">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-202">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-203">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-203">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionId : Guid" Usage="System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="80395-204">Pobiera identyfikator GUID bieżącej transakcji usługi DTC.</span><span class="sxs-lookup"><span data-stu-id="80395-204">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="80395-205">Identyfikator GUID reprezentujący bieżącą transakcję usługi DTC (jeśli taki istnieje).</span><span class="sxs-lookup"><span data-stu-id="80395-205">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="80395-206">Poniższy przykład kodu pobiera wartość <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="80395-206">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="80395-207">Brak dostępnego kontekstu COM+.</span><span class="sxs-lookup"><span data-stu-id="80395-207">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="80395-208">Platforma nie jest w systemie Windows 2000 ani nowszym.</span><span class="sxs-lookup"><span data-stu-id="80395-208">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
