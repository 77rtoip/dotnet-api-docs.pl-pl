<Type Name="ContextUtil" FullName="System.EnterpriseServices.ContextUtil">
  <TypeSignature Language="C#" Value="public sealed class ContextUtil" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextUtil extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ContextUtil" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextUtil" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextUtil sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d745b-101">Pobiera informacje o kontekście obiektu modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-101">Obtains information about the COM+ object context.</span></span> <span data-ttu-id="d745b-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="d745b-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-103"><xref:System.EnterpriseServices.ContextUtil> jest preferowanym klasy służące do uzyskiwania informacji kontekstu modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-103"><xref:System.EnterpriseServices.ContextUtil> is the preferred class to use for obtaining COM+ context information.</span></span> <span data-ttu-id="d745b-104">Ponieważ wszystkie elementy członkowskie tej klasy `static` (`shared` w języku Visual Basic), nie jest konieczne do utworzenia wystąpienia go przed ich użyciem.</span><span class="sxs-lookup"><span data-stu-id="d745b-104">Because the members of this class are all `static` (`shared` in Visual Basic), it is not necessary to instantiate it before using them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-105">Poniższy przykład kodu pokazuje sposób użycia <xref:System.EnterpriseServices.ContextUtil> można utworzyć transakcyjnej <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="d745b-105">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil> to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivityId">
      <MemberSignature Language="C#" Value="public static Guid ActivityId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ActivityId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ActivityId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ActivityId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ActivityId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-106">Pobiera identyfikator GUID reprezentujący działania zawierającą składnik.</span><span class="sxs-lookup"><span data-stu-id="d745b-106">Gets a GUID representing the activity containing the component.</span></span></summary>
        <value><span data-ttu-id="d745b-107">Identyfikator GUID dla działania, jeśli bieżący kontekst jest częścią działanie; w przeciwnym razie <see langword="GUID_NULL" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-107">The GUID for an activity if the current context is part of an activity; otherwise, <see langword="GUID_NULL" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-108">Poniższy przykładowy kod pobiera wartość <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-108">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ActivityId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesContextUtil#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesContextUtil#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-109">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-109">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-110">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-110">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-111">Pobiera identyfikator GUID dla bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d745b-111">Gets a GUID for the current application.</span></span></summary>
        <value><span data-ttu-id="d745b-112">Identyfikator GUID dla bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d745b-112">The GUID for the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-113">Poniższy przykład kodu pokazuje użycie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-113">The following code example demonstrates the use of this property.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-114">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-114">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-115">Nie jest to platforma systemu Windows XP lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="d745b-115">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstanceId">
      <MemberSignature Language="C#" Value="public static Guid ApplicationInstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ApplicationInstanceId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ApplicationInstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationInstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ApplicationInstanceId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-116">Pobiera identyfikator GUID dla bieżącego wystąpienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d745b-116">Gets a GUID for the current application instance.</span></span></summary>
        <value><span data-ttu-id="d745b-117">Identyfikator GUID dla bieżącego wystąpienia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d745b-117">The GUID for the current application instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-118">Poniższy przykładowy kod pobiera wartość <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-118">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.ApplicationInstanceId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesContextUtil#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesContextUtil#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-119">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-119">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-120">Nie jest to platforma systemu Windows XP lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="d745b-120">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContextId">
      <MemberSignature Language="C#" Value="public static Guid ContextId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid ContextId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.ContextId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContextId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid ContextId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-121">Pobiera identyfikator GUID dla bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d745b-121">Gets a GUID for the current context.</span></span></summary>
        <value><span data-ttu-id="d745b-122">Identyfikator GUID dla bieżącego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d745b-122">The GUID for the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-123">Poniższy przykład kodu pokazuje użycie tego atrybutu.</span><span class="sxs-lookup"><span data-stu-id="d745b-123">The following example code demonstrates the use of this attribute.</span></span>  
  
 [!code-cpp[EnterpriseServices_Pooling#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CPP/inspector.cpp#3)]
 [!code-csharp[EnterpriseServices_Pooling#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Pooling/CS/inspector.cs#3)]
 [!code-vb[EnterpriseServices_Pooling#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Pooling/VB/inspector.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-124">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-124">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-125">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-125">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeactivateOnReturn">
      <MemberSignature Language="C#" Value="public static bool DeactivateOnReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DeactivateOnReturn" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.DeactivateOnReturn" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DeactivateOnReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DeactivateOnReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-126">Pobiera lub ustawia <see langword="done" /> bitu w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-126">Gets or sets the <see langword="done" /> bit in the COM+ context.</span></span></summary>
        <value>
          <span data-ttu-id="d745b-127"><see langword="true" /> Jeśli obiekt jest są nieaktywne, gdy metoda zwróci wartość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-127"><see langword="true" /> if the object is to be deactivated when the method returns; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d745b-128">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-129">COM + `done` Określa, jak długo obiektu pozostaje aktywna po zakończeniu jego pracy i wpływają na czas trwania transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-129">The COM+ `done` bit determines how long the object remains active after finishing its work and can affect the duration of a transaction.</span></span> <span data-ttu-id="d745b-130">Po powrocie z wywołania metody COM + sprawdza `done` bitowej.</span><span class="sxs-lookup"><span data-stu-id="d745b-130">When a method call returns, COM+ inspects the `done` bit.</span></span> <span data-ttu-id="d745b-131">Jeśli `done` bit jest `true`, COM + dezaktywuje obiektu.</span><span class="sxs-lookup"><span data-stu-id="d745b-131">If the `done` bit is `true`, COM+ deactivates the object.</span></span> <span data-ttu-id="d745b-132">Jeśli `done` bit jest `false`, obiekt nie jest dezaktywowany.</span><span class="sxs-lookup"><span data-stu-id="d745b-132">If the `done` bit is `false`, the object is not deactivated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-133">Poniższy przykład kodu pokazuje użycie <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> upewnij się, że dla właściwości <xref:System.EnterpriseServices.ServicedComponent> jest dezaktywowany po wywołaniu metody.</span><span class="sxs-lookup"><span data-stu-id="d745b-133">The following code example demonstrates the use of the <xref:System.EnterpriseServices.ContextUtil.DeactivateOnReturn%2A> property to ensure that a <xref:System.EnterpriseServices.ServicedComponent> is deactivated after a method call.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-134">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-134">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-135">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-135">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisableCommit">
      <MemberSignature Language="C#" Value="public static void DisableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.DisableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d745b-136">Ustawia zarówno <see langword="consistent" /> bit i <see langword="done" /> bit do <see langword="false" /> w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-136">Sets both the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-137">Jeśli pojawi się pytanie, kontekst modelu COM + głosów przerwanie bieżącej transakcji, ale obiekt nie jest dezaktywowany dla metody zwracany.</span><span class="sxs-lookup"><span data-stu-id="d745b-137">If asked, the COM+ context votes to abort the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-138">Poniższy kod przykładowy wywołania <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d745b-138">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.DisableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#3](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#3)]
 [!code-csharp[EnterpriseServicesContextUtil#3](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#3)]
 [!code-vb[EnterpriseServicesContextUtil#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-139">Brak kontekstu modelu COM + jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d745b-139">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnableCommit">
      <MemberSignature Language="C#" Value="public static void EnableCommit ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCommit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.EnableCommit" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCommit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCommit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d745b-140">Ustawia <see langword="consistent" /> bit do <see langword="true" /> i <see langword="done" /> bit do <see langword="false" /> w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-140">Sets the <see langword="consistent" /> bit to <see langword="true" /> and the <see langword="done" /> bit to <see langword="false" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-141">Jeśli pojawi się pytanie, kontekst modelu COM + będzie zatwierdzić bieżącej transakcji, ale obiekt nie jest dezaktywowany dla metody zwracany.</span><span class="sxs-lookup"><span data-stu-id="d745b-141">If asked, the COM+ context will commit the current transaction, but the object is not deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-142">Poniższy kod przykładowy wywołania <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="d745b-142">The following code example calls the <xref:System.EnterpriseServices.ContextUtil.EnableCommit%2A> method.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#4](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#4)]
 [!code-csharp[EnterpriseServicesContextUtil#4](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#4)]
 [!code-vb[EnterpriseServicesContextUtil#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-143">Brak kontekstu modelu COM + jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="d745b-143">No COM+ context is available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamedProperty">
      <MemberSignature Language="C#" Value="public static object GetNamedProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetNamedProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNamedProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetNamedProperty(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d745b-144">Nazwa żądanej właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-144">The name of the requested property.</span></span></param>
        <summary><span data-ttu-id="d745b-145">Zwraca wartość właściwości o nazwie z kontekstu modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-145">Returns a named property from the COM+ context.</span></span></summary>
        <returns><span data-ttu-id="d745b-146">Nazwane właściwości dla kontekstu.</span><span class="sxs-lookup"><span data-stu-id="d745b-146">The named property for the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-147">Jest to przydatne w celu uzyskania obiekty wewnętrzne Internet Information Services (IIS) podane przez Active Server Pages (ASP).</span><span class="sxs-lookup"><span data-stu-id="d745b-147">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-148">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-148">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-149">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-149">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsCallerInRole">
      <MemberSignature Language="C#" Value="public static bool IsCallerInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCallerInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsCallerInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCallerInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCallerInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="d745b-150">Nazwa roli do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="d745b-150">The name of the role to check.</span></span></param>
        <summary><span data-ttu-id="d745b-151">Określa, czy element wywołujący jest w określonej roli.</span><span class="sxs-lookup"><span data-stu-id="d745b-151">Determines whether the caller is in the specified role.</span></span></summary>
        <returns>
          <span data-ttu-id="d745b-152"><see langword="true" /> Jeśli element wywołujący jest w określonej roli; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-152"><see langword="true" /> if the caller is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-153">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-153">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContext">
      <MemberSignature Language="C#" Value="public static bool IsDefaultContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefaultContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.IsDefaultContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefaultContext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefaultContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d745b-154">Określa, czy serwisowanych składników jest aktywowana w kontekście domyślnym.</span><span class="sxs-lookup"><span data-stu-id="d745b-154">Determines whether the serviced component is activated in the default context.</span></span> <span data-ttu-id="d745b-155">Obsługiwane składniki, które nie mają informacje wykazu modelu COM + zostaną aktywowane w kontekście domyślnym.</span><span class="sxs-lookup"><span data-stu-id="d745b-155">Serviced components that do not have COM+ catalog information are activated in the default context.</span></span></summary>
        <returns><span data-ttu-id="d745b-156">**wartość true,** Jeśli serwisowanych składników jest aktywowana w domyślnym kontekście; w przeciwnym razie **false**.</span><span class="sxs-lookup"><span data-stu-id="d745b-156">**true** if the serviced component is activated in the default context; otherwise, **false**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTransaction">
      <MemberSignature Language="C#" Value="public static bool IsInTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsInTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsInTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsInTransaction { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-157">Pobiera wartość wskazującą, czy bieżący kontekst jest transakcyjna.</span><span class="sxs-lookup"><span data-stu-id="d745b-157">Gets a value that indicates whether the current context is transactional.</span></span></summary>
        <value>
          <span data-ttu-id="d745b-158"><see langword="true" /> Jeśli bieżący kontekst jest transakcyjna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-158"><see langword="true" /> if the current context is transactional; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-159">Poniższy przykładowy kod pobiera wartość <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-159">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsInTransaction%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#5](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#5)]
 [!code-csharp[EnterpriseServicesContextUtil#5](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#5)]
 [!code-vb[EnterpriseServicesContextUtil#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-160">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-160">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSecurityEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSecurityEnabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.IsSecurityEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSecurityEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSecurityEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-161">Pobiera wartość wskazującą, czy zabezpieczenia oparte na rolach jest aktywny w bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="d745b-161">Gets a value that indicates whether role-based security is active in the current context.</span></span></summary>
        <value>
          <span data-ttu-id="d745b-162"><see langword="true" /> Jeśli bieżący kontekst zabezpieczeń włączone; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-162"><see langword="true" /> if the current context has security enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-163">Poniższy przykładowy kod pobiera wartość <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-163">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.IsSecurityEnabled%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#6](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#6)]
 [!code-csharp[EnterpriseServicesContextUtil#6](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#6)]
 [!code-vb[EnterpriseServicesContextUtil#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-164">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-164">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MyTransactionVote">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionVote MyTransactionVote { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.EnterpriseServices.TransactionVote MyTransactionVote" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.MyTransactionVote" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property MyTransactionVote As TransactionVote" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::EnterpriseServices::TransactionVote MyTransactionVote { System::EnterpriseServices::TransactionVote get(); void set(System::EnterpriseServices::TransactionVote value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionVote</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-165">Pobiera lub ustawia <see langword="consistent" /> bitu w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-165">Gets or sets the <see langword="consistent" /> bit in the COM+ context.</span></span></summary>
        <value><span data-ttu-id="d745b-166">Jeden z <see cref="T:System.EnterpriseServices.TransactionVote" /> wartości albo <see langword="Commit" /> lub <see langword="Abort" />.</span><span class="sxs-lookup"><span data-stu-id="d745b-166">One of the <see cref="T:System.EnterpriseServices.TransactionVote" /> values, either <see langword="Commit" /> or <see langword="Abort" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-167">Gdy <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> ma ustawioną wartość `Commit`, COM + `consistent` bit jest ustawiony na `true` i kontekst modelu COM + głosów można zatwierdzić transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-167">When <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Commit`, the COM+ `consistent` bit is set to `true` and the COM+ context votes to commit the transaction.</span></span> <span data-ttu-id="d745b-168">Jeśli <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> ustawiono `Abort`, `consistent` bit jest ustawiony na `false` i głosów kontekstu modelu COM +, aby przerwać transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-168">If <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> is set to `Abort`, the `consistent` bit is set to `false` and the COM+ context votes to abort the transaction.</span></span> <span data-ttu-id="d745b-169">Wartość domyślna `consistent` bit jest `true`.</span><span class="sxs-lookup"><span data-stu-id="d745b-169">The default value of the `consistent` bit is `true`.</span></span>  
  
 <span data-ttu-id="d745b-170">`consistent` Bit rzutuje głos zatwierdzić lub przerwać transakcji, w której wykonuje, i `done` bit Kończenie znajdujących się w głosowaniu.</span><span class="sxs-lookup"><span data-stu-id="d745b-170">The `consistent` bit casts a vote to commit or abort the transaction in which it executes, and the `done` bit finalizes the vote.</span></span> <span data-ttu-id="d745b-171">COM + sprawdza `consistent` bit, kiedy `done` bit jest ustawiony na wartość `true` dla metody połączeń telefonicznych zwracany lub gdy dezaktywuje obiektu.</span><span class="sxs-lookup"><span data-stu-id="d745b-171">COM+ inspects the `consistent` bit when the `done` bit is set to `true` on a method call return or when the object deactivates.</span></span> <span data-ttu-id="d745b-172">Mimo że obiektu `consistent` bit można zmienić wielokrotnie w ramach każdego wywołania metody tylko ostatnia zmiana liczby.</span><span class="sxs-lookup"><span data-stu-id="d745b-172">Although an object's `consistent` bit can change repeatedly within each method call, only the last change counts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-173">Poniższy przykład kodu pokazuje sposób użycia <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> właściwość, aby utworzyć transakcyjnej <xref:System.EnterpriseServices.ServicedComponent>.</span><span class="sxs-lookup"><span data-stu-id="d745b-173">The following code example demonstrates how to use <xref:System.EnterpriseServices.ContextUtil.MyTransactionVote%2A> property to create a transactional <xref:System.EnterpriseServices.ServicedComponent>.</span></span>  
  
 [!code-cpp[EnterpriseServices_Transaction#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CPP/transaction.cpp#1)]
 [!code-csharp[EnterpriseServices_Transaction#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Transaction/CS/transaction.cs#1)]
 [!code-vb[EnterpriseServices_Transaction#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Transaction/VB/transaction.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-174">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-174">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-175">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-175">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PartitionId">
      <MemberSignature Language="C#" Value="public static Guid PartitionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid PartitionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.PartitionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PartitionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid PartitionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-176">Pobiera identyfikator GUID dla bieżącej partycji.</span><span class="sxs-lookup"><span data-stu-id="d745b-176">Gets a GUID for the current partition.</span></span></summary>
        <value><span data-ttu-id="d745b-177">Identyfikator GUID dla bieżącej partycji.</span><span class="sxs-lookup"><span data-stu-id="d745b-177">The GUID for the current partition.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-178">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-178">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-179">Nie jest to platforma systemu Windows XP lub nowszym.</span><span class="sxs-lookup"><span data-stu-id="d745b-179">The platform is not Windows XP or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetAbort">
      <MemberSignature Language="C#" Value="public static void SetAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetAbort" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAbort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d745b-180">Ustawia <see langword="consistent" /> bit do <see langword="false" /> i <see langword="done" /> bit do <see langword="true" /> w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-180">Sets the <see langword="consistent" /> bit to <see langword="false" /> and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-181">Jeśli pojawi się pytanie, kontekst głosów przerwanie bieżącej transakcji, a obiekt jest dezaktywowana na zwracany — metoda.</span><span class="sxs-lookup"><span data-stu-id="d745b-181">If asked, the context votes to abort the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-182">Poniższy przykład kodu pokazuje korzystać z tej metody.</span><span class="sxs-lookup"><span data-stu-id="d745b-182">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-183">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-183">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetComplete">
      <MemberSignature Language="C#" Value="public static void SetComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetComplete" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetComplete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d745b-184">Ustawia <see langword="consistent" /> bit i <see langword="done" /> bit do <see langword="true" /> w kontekście COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-184">Sets the <see langword="consistent" /> bit and the <see langword="done" /> bit to <see langword="true" /> in the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-185">Jeśli pojawi się pytanie, kontekst modelu COM + będzie Przekaż bieżącej transakcji, a obiekt jest dezaktywowana w metodzie zwracany.</span><span class="sxs-lookup"><span data-stu-id="d745b-185">If asked, the COM+ context will commit the current transaction, and the object is deactivated on method return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d745b-186">Poniższy przykład kodu pokazuje korzystać z tej metody.</span><span class="sxs-lookup"><span data-stu-id="d745b-186">The following code example demonstrates the use of this method.</span></span>  
  
 [!code-cpp[EnterpriseServices_Crm#13](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices_Crm/cpp/crmserver.cpp#13)]
 [!code-csharp[EnterpriseServices_Crm#13](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Crm/CS/crmserver.cs#13)]
 [!code-vb[EnterpriseServices_Crm#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices_Crm/VB/crmserver.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-187">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-187">There is no COM+ context available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetNamedProperty">
      <MemberSignature Language="C#" Value="public static void SetNamedProperty (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNamedProperty(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ContextUtil.SetNamedProperty(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetNamedProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNamedProperty(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d745b-188">Nazwa właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="d745b-188">The name of the property to set.</span></span></param>
        <param name="value"><span data-ttu-id="d745b-189">Obiekt reprezentujący wartość właściwości do ustawienia.</span><span class="sxs-lookup"><span data-stu-id="d745b-189">Object that represents the property value to set.</span></span></param>
        <summary><span data-ttu-id="d745b-190">Ustawia właściwość o nazwie kontekstu modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-190">Sets the named property for the COM+ context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-191">Jest to przydatne w celu uzyskania obiekty wewnętrzne Internet Information Services (IIS) podane przez Active Server Pages (ASP).</span><span class="sxs-lookup"><span data-stu-id="d745b-191">This is useful for obtaining the Internet Information Services (IIS) intrinsic objects provided by Active Server Pages (ASP).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-192">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-192">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-193">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-193">The platform is not Windows 2000 or later.</span></span></exception>
        <altmember cref="M:System.EnterpriseServices.ContextUtil.GetNamedProperty(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SystemTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction SystemTransaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.Transaction SystemTransaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.SystemTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SystemTransaction As Transaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Transactions::Transaction ^ SystemTransaction { System::Transactions::Transaction ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-194">Pobiera bieżący kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-194">Gets the current transaction context.</span></span></summary>
        <value><span data-ttu-id="d745b-195">A <see cref="T:System.Transactions.Transaction" /> reprezentujący bieżący kontekst transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-195">A <see cref="T:System.Transactions.Transaction" /> that represents the current transaction context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-196">Jeśli kontekst transakcji nie istnieje podczas uzyskiwania dostępu do tej właściwości, nowy kontekst transakcji jest utworzona i zwrócona.</span><span class="sxs-lookup"><span data-stu-id="d745b-196">If no transaction context exists when this property is accessed, a new transaction context is created and returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-197">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-197">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-198">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-198">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public static object Transaction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object Transaction" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Transaction As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ Transaction { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-199">Pobiera obiekt opisujący bieżącej transakcji usługi DTC modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-199">Gets an object describing the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="d745b-200">Obiekt, który reprezentuje bieżącej transakcji.</span><span class="sxs-lookup"><span data-stu-id="d745b-200">An object that represents the current transaction.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d745b-201">Zwrócony obiekt obsługuje <xref:System.EnterpriseServices.ITransaction> interfejsu, jeśli transakcja jest transakcji usługi DTC modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-201">The returned object supports the <xref:System.EnterpriseServices.ITransaction> interface if the transaction is a COM+ DTC transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-202">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-202">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-203">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-203">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionId">
      <MemberSignature Language="C#" Value="public static Guid TransactionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Guid TransactionId" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.ContextUtil.TransactionId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TransactionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Guid TransactionId { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d745b-204">Pobiera identyfikator GUID bieżącej transakcji usługi DTC modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-204">Gets the GUID of the current COM+ DTC transaction.</span></span></summary>
        <value><span data-ttu-id="d745b-205">Identyfikator GUID reprezentujący bieżącej transakcji usługi DTC modelu COM +, jeśli istnieje.</span><span class="sxs-lookup"><span data-stu-id="d745b-205">A GUID representing the current COM+ DTC transaction, if one exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d745b-206">Poniższy przykładowy kod pobiera wartość <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d745b-206">The following code example gets the value of a <xref:System.EnterpriseServices.ContextUtil.TransactionId%2A> property.</span></span>  
  
 [!code-cpp[EnterpriseServicesContextUtil#7](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CPP/class1.cpp#7)]
 [!code-csharp[EnterpriseServicesContextUtil#7](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesContextUtil/CS/class1.cs#7)]
 [!code-vb[EnterpriseServicesContextUtil#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesContextUtil/VB/class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="d745b-207">Nie jest kontekst modelu COM +.</span><span class="sxs-lookup"><span data-stu-id="d745b-207">There is no COM+ context available.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="d745b-208">Platforma nie jest system Windows 2000 lub nowszy.</span><span class="sxs-lookup"><span data-stu-id="d745b-208">The platform is not Windows 2000 or later.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>