<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14e815a9b904da3600c7d4999ec7622f535465cb" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39910091" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="56926-101">Zezwala na segment kodu identyfikowane przez <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> i <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> do uruchamiania w kontekście swój własny i zachowywać się tak, jakby był metodą, która jest wywoływana w obiekt utworzony w kontekście.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56926-101">Allows a code segment identified by <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> and <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> to run in its own context and behave as if it were a method that is called on an object created within the context.</span>
      </span>
      <span data-ttu-id="56926-102">Klasa ta nie może być dziedziczona.</span>
      <span class="sxs-lookup">
        <span data-stu-id="56926-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56926-103"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> metody są używane w parach otoczyć kod, który można następnie użyć usług COM +.</span><span class="sxs-lookup"><span data-stu-id="56926-103">The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> methods are used in pairs to surround code that can then use COM+ services.</span></span> <span data-ttu-id="56926-104">Kod, który jest ujęty w między wywołaniami <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> jest uruchamiany w kontekście swój własny i zachowuje się tak, jakby był metodą, która jest wywoływana w obiekt utworzony w kontekście.</span><span class="sxs-lookup"><span data-stu-id="56926-104">Code that is enclosed between calls to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> runs in its own context and behaves as if it were a method that is called on an object created within the context.</span></span> <span data-ttu-id="56926-105"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pary, które mogą być zagnieżdżone.</span><span class="sxs-lookup"><span data-stu-id="56926-105">The <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pairs can be nested.</span></span> <span data-ttu-id="56926-106">Zależy od użytkownika, aby upewnić się, że pary wywołania są równoważone, aby każde wywołanie <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> pasuje do poprzedniego wywołania <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</span><span class="sxs-lookup"><span data-stu-id="56926-106">It is up to the user to make sure that pairs of calls are balanced so that every call to <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> matches a previous call to <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <span data-ttu-id="56926-107">Element <see cref="T:System.EnterpriseServices.ServiceConfig" /> zawierający informacje o konfiguracji dla usługi do użycia w ramach zamkniętego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-107">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used within the enclosed code.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="56926-108">Tworzy kontekst określonej przez <see cref="T:System.EnterpriseServices.ServiceConfig" /> obiektu, a następnie wypycha go na stosie kontekstu, aby stać się bieżącego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-108">Creates the context specified by the <see cref="T:System.EnterpriseServices.ServiceConfig" /> object and pushes it onto the context stack to become the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56926-109"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> najpierw tworzy kontekst skonfigurowany jako określony przez <xref:System.EnterpriseServices.ServiceConfig> obiektu, który jest przekazywany jako `cfg` parametru.</span><span class="sxs-lookup"><span data-stu-id="56926-109"><xref:System.EnterpriseServices.ServiceDomain.Enter%2A> first creates a context configured as specified by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed as the `cfg` parameter.</span></span> <span data-ttu-id="56926-110">Zasady po stronie klienta i serwera są następnie wyzwalane tak, jakby miało miejsce wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="56926-110">Policies on both the client and server sides are then triggered as if a method call had occurred.</span></span> <span data-ttu-id="56926-111">Nowy kontekst jest następnie wypychane na stos kontekstu i staje się bieżącym kontekście.</span><span class="sxs-lookup"><span data-stu-id="56926-111">The new context is then pushed onto a context stack and becomes the current context.</span></span> <span data-ttu-id="56926-112">Ze względu na ich wydajność projektu, a zarządzanie wątku nie uczestniczy, za pomocą <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> obejmuje znacząco zmniejszyć obciążenie w porównaniu do wywołania metody równoważne.</span><span class="sxs-lookup"><span data-stu-id="56926-112">Because of their efficient design and because no thread marshaling is involved, using <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> and <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> involves significantly reduced overhead compared to an equivalent method call.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="56926-113">
            <see cref="T:System.EnterpriseServices.ServiceConfig" /> nie jest obsługiwana na bieżącej platformie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-113">
              <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="56926-114">Wyzwala serwer, a następnie zasady po stronie klienta, tak jakby były zwracanie wywołania metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-114">Triggers the server and then the client side policies as if a method call were returning.</span>
          </span>
          <span data-ttu-id="56926-115">Bieżący kontekst jest następnie zdjęte ze stosu Stos kontekstu i kontekstu, w którym jest uruchomiona, gdy <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> wywołano staje się bieżącym kontekście.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-115">The current context is then popped from the context stack, and the context that was running when <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> was called becomes the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="56926-116">Jedną z <see cref="T:System.EnterpriseServices.TransactionStatus" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-116">One of the <see cref="T:System.EnterpriseServices.TransactionStatus" /> values.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="56926-117">
            <see cref="T:System.EnterpriseServices.ServiceConfig" /> nie jest obsługiwana na bieżącej platformie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="56926-117">
              <see cref="T:System.EnterpriseServices.ServiceConfig" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>