<Type Name="ServiceDomain" FullName="System.EnterpriseServices.ServiceDomain">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a7cfa3ec1ad84703ed8d079fb526192db554f0a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358041" /></Metadata><TypeSignature Language="C#" Value="public sealed class ServiceDomain" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceDomain extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.ServiceDomain" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceDomain" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceDomain sealed" />
  <TypeSignature Language="F#" Value="type ServiceDomain = class" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zezwala na segment kodu identyfikowany <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> przez <see cref="M:System.EnterpriseServices.ServiceDomain.Leave" /> i do uruchomienia we własnym kontekście i zachowuje się tak, jakby była metodą, która jest wywoływana dla obiektu utworzonego w kontekście. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i<xref:System.EnterpriseServices.ServiceDomain.Leave%2A> są używane w parach do kodu przestrzennego, który może następnie korzystać z usług modelu com+. Kod, który jest ujęty między <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> wywołaniami i <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> działa we własnym kontekście i zachowuje się tak, jakby miał metodę, która jest wywoływana dla obiektu utworzonego w kontekście. Pary <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> i<xref:System.EnterpriseServices.ServiceDomain.Leave%2A> mogą być zagnieżdżone. Jest to użytkownik, aby upewnić się, że pary wywołań są zrównoważone, aby każde wywołanie było <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> zgodne z poprzednim wywołaniem <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>do.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public static void Enter (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Enter(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Enter (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Enter(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberSignature Language="F#" Value="static member Enter : System.EnterpriseServices.ServiceConfig -&gt; unit" Usage="System.EnterpriseServices.ServiceDomain.Enter cfg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> , który zawiera informacje o konfiguracji usług, które mają być używane w załączonym kodzie.</param>
        <summary>Tworzy kontekst określony przez <see cref="T:System.EnterpriseServices.ServiceConfig" /> obiekt i wypchnięcie go do stosu kontekstowego, aby stał się bieżącym kontekstem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>najpierw tworzy kontekst skonfigurowany jako określony przez <xref:System.EnterpriseServices.ServiceConfig> obiekt, który jest przesyłany `cfg` jako parametr. Zasady zarówno na stronie klienta, jak i na serwerze są następnie wyzwalane tak, jakby wystąpiło wywołanie metody. Nowy kontekst jest następnie wypychany do stosu kontekstowego i stał się bieżącym kontekstem. Ze względu na ich wydajny projekt i ponieważ nie jest zaangażowany Organizator <xref:System.EnterpriseServices.ServiceDomain.Enter%2A> wątków <xref:System.EnterpriseServices.ServiceDomain.Leave%2A> , używanie i obejmuje znacznie zmniejszone obciążenie w porównaniu z równoważnym wywołaniem metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" />nie jest obsługiwane na bieżącej platformie.</exception>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public static System.EnterpriseServices.TransactionStatus Leave ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.EnterpriseServices.TransactionStatus Leave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.ServiceDomain.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Leave () As TransactionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::EnterpriseServices::TransactionStatus Leave();" />
      <MemberSignature Language="F#" Value="static member Leave : unit -&gt; System.EnterpriseServices.TransactionStatus" Usage="System.EnterpriseServices.ServiceDomain.Leave " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EnterpriseServices.TransactionStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wyzwala serwer, a następnie zasady po stronie klienta tak, jakby wywołanie metody zostało zwrócone. Bieżący kontekst jest następnie zdjęte z stosu kontekstowego, a kontekst, który był uruchomiony po <see cref="M:System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)" /> wywołaniu, stać się bieżącym kontekstem.</summary>
        <returns>Jedna z <see cref="T:System.EnterpriseServices.TransactionStatus" /> wartości.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.EnterpriseServices.ServiceConfig" />nie jest obsługiwane na bieżącej platformie.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
