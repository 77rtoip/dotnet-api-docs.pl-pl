<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProcessInitializer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac571de6c95b5ac06ee9ff4c5ad83a05ad3542abd35.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">Obsługuje metody, które mogą być wywoływane, gdy składnik COM uruchamiania lub wyłączania.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">Implementowanie <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> metody interfejsu w obsługiwanych składników Jeśli chcesz uruchomić inicjowania lub zamknięcia kodu podczas procesu serwera (Dllhost.exe) uruchamiania lub zamykania, odpowiednio.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + zawiera <ph id="ph1">`Startup`</ph> i <ph id="ph2">`Shutdown`</ph> zdarzenia, gdy Dllhost.exe początkowej i końcowej.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">Ta funkcja umożliwia wszystkie składniki modelu COM + w aplikacji serwera COM + (nazywane składniki serwera poniżej) do uruchamiania niestandardowych inicjowanie i oczyszczanie kodu są zainstalowane.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>An instance of each component that implements the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">Wystąpienia każdego składnika, który implementuje <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfejs zostanie utworzona i przechowywana w czasie trwania procesu i wywołano metody interfejsu podczas uruchamiania i wyłączania.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>When implemented on a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, during registration of the component, the <ph id="ph2">`InitializesServerApplication`</ph> parameter in the <ph id="ph3">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Po zaimplementowaniu na <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, podczas rejestracji składnika <ph id="ph2">`InitializesServerApplication`</ph> parametru w <ph id="ph3">`COMAdminCatalogObject`</ph> w składnikach kolekcji ustawiono <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">Przy użyciu <ph id="ph1">`Startup`</ph> i <ph id="ph2">`Shutdown`</ph> zdarzenia, można zainicjować zasobów, tworzyć połączenia, zainicjować udostępnionych danych, a następnie uruchom oczyszczanie kodu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">Nie należy jednak dostępu stanów, które są specyficzne dla modelu COM +, ponieważ wystąpienia serwera składników nie został jeszcze utworzony.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">Ponadto kod w <ph id="ph1">`Startup`</ph> i <ph id="ph2">`Shutdown`</ph> zdarzenia powinien zwrócić tak szybko jak to możliwe, ponieważ system oczekuje tylko 90 sekund na Dllhost.exe w celu przygotowania do akceptowania aktywacji po procesie uruchamiania systemu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">Jeśli nie Dllhost.exe sygnalizuje, że jest gotowy w ciągu 90 sekund, system kończy proces; w związku z tym wszystkie inicjowania przetwarzania musi zostać wykonane w tym przedziale czasu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Each server component that participates in initialization must support the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface.</source>
          <target state="translated">Składnik każdego serwera, który uczestniczy w inicjowania musi obsługiwać <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface, and calls the <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> function.</source>
          <target state="translated">Przy uruchamianiu DllHost.exe COM + tworzy wszystkie składniki serwera, którzy zażądali tej usługi, wywołania <ph id="ph1">`QueryInterface`</ph> dla <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interfejsu i wywołania <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> funkcji.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> function on those previously stored interface pointers.</source>
          <target state="translated">Podobnie podczas zamykania procesu DllHost.exe wywołuje <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> funkcja tych wcześniej zapisanych wskaźniki interfejsu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Performs shutdown actions.</source>
          <target state="translated">Wykonuje akcje zamknięcia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">Wywoływana, gdy Dllhost.exe zostanie zamknięta.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> nie jest wywoływana podczas natychmiastowy błąd lub inne zdarzenia zamknięcia krytycznego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows XP, a pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface of the COM component starting up.</source>
          <target state="translated">W systemie Microsoft Windows XP wskaźnik do <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interfejs składnika COM uruchamiania.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows 2000, this argument is always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">W systemie Windows 2000, ten argument jest zawsze <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Performs initialization at startup.</source>
          <target state="translated">Wykonuje inicjowania podczas uruchamiania.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">Wywołuje się po uruchomieniu Dllhost.exe.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interface.</source>
          <target state="translated">Zawiera odwołanie do obiektu <ph id="ph1">`punkProcessControl`</ph> implementuje <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> supports the single method <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> obsługuje pojedynczej metody <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The initialization code in <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> can call the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">Kod inicjujący w <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> można wywołać <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, z równa ponownego uruchamiania razy składnika limit czasu w sekundach limit czasu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>