<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53f02b0dca103a2278f68dfe7522f65b914e4d15" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69358563" /></Metadata><TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <TypeSignature Language="F#" Value="type IProcessInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Obsługuje metody, które mogą być wywoływane, gdy składnik COM zostanie uruchomiony lub zamknięty.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zaimplementuj <xref:System.EnterpriseServices.IProcessInitializer> metody interfejsu na składnikach serwisowanych, jeśli chcesz uruchomić kod inicjalizacji lub zamknięcia, gdy proces serwera (dllhost. exe) zostanie uruchomiony odpowiednio lub zamknięty.  
  
 W przypadku `Startup` uruchomienia `Shutdown` i zakończenia pliku dllhost. exe model com+ udostępnia zdarzenia i. Ta funkcja włącza wszystkie składniki COM+, które są zainstalowane w aplikacji serwera COM+ (zwanej dalej składnikami serwera) do uruchamiania niestandardowego inicjowania i czyszczenia kodu. Każdemu składnikowi implementującemu <xref:System.EnterpriseServices.IProcessInitializer> interfejs zostanie utworzony i zapisany na czas trwania procesu i wywołany w metodach interfejsu podczas uruchamiania i zamykania. Po zaimplementowaniu <xref:System.EnterpriseServices.ServicedComponent>na, podczas rejestracji składnika `InitializesServerApplication` , parametr w `COMAdminCatalogObject` kolekcji Components ma ustawioną wartość `true`.  
  
 Przy użyciu zdarzeń `Shutdown`imożna inicjować zasoby, tworzyć połączenia, inicjować udostępnione dane i uruchamiać oczyszczanie kodu. `Startup` Jednak nie ma dostępu do Stanów specyficznych dla modelu COM+, ponieważ wystąpienia składników serwera nie zostały jeszcze utworzone. Ponadto kod w `Startup` zdarzeniach i `Shutdown` powinien zwrócić się tak szybko, jak to możliwe, ponieważ system czeka na 90 sekund dla programu dllhost. exe, aby przygotować się do przyjęcia aktywacji po rozpoczęciu procesu przez system. Jeśli program dllhost. exe nie sygnalizuje, że jest gotowy w ciągu 90 sekund, system skończy proces; w tym celu należy wykonać wszystkie zadania przetwarzania w tym przedziale czasowym. Każdy składnik serwera, który uczestniczy w inicjacji, <xref:System.EnterpriseServices.IProcessInitializer> musi obsługiwać interfejs. Po uruchomieniu programu dllhost. exe model COM+ tworzy wszystkie składniki serwera, które żądają tej `QueryInterface` usługi, <xref:System.EnterpriseServices.IProcessInitializer> wywołuje <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> interfejs i wywołuje funkcję. Podobnie, gdy proces dllhost. exe jest wyłączony, wywołuje <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> funkcję na tych wcześniej przechowywanych wskaźnikach interfejsu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="iProcessInitializer.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje akcje zamknięcia. Wywoływana, gdy plik dllhost. exe jest wyłączony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>nie jest wywoływana podczas podłączania lub innych katastrofalnych zdarzeń zamknięcia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberSignature Language="F#" Value="abstract member Startup : obj -&gt; unit" Usage="iProcessInitializer.Startup punkProcessControl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">W systemie Microsoft Windows XP wskaźnik do <see langword="IUnknown" /> interfejsu składnika modelu COM uruchamiany. W systemie Microsoft Windows 2000 ten argument jest zawsze <see langword="null" />.</param>
        <summary>Wykonuje inicjalizację przy uruchamianiu. Wywoływana, gdy jest uruchamiany plik dllhost. exe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt, do którego `punkProcessControl` odwołuje <xref:System.EnterpriseServices.IProcessInitControl> się element implementujący interfejs. <xref:System.EnterpriseServices.IProcessInitControl>obsługuje pojedynczą metodę <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.  
  
 Kod inicjalizacji w <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> programie może <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>wywoływać metodę, z ustawionym limitem czasu równym liczbie sekund pozostałej przed ponownym uruchomieniem składnika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
