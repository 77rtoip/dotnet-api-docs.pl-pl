<Type Name="RegistrationHelper" FullName="System.EnterpriseServices.RegistrationHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b15ea7296736dbf2e0ed0963eb1eb69c3c20b458" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48749602" /></Metadata><TypeSignature Language="C#" Value="public sealed class RegistrationHelper : MarshalByRefObject, System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistrationHelper extends System.MarshalByRefObject implements class System.EnterpriseServices.IRegistrationHelper" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.RegistrationHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistrationHelper&#xA;Inherits MarshalByRefObject&#xA;Implements IRegistrationHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistrationHelper sealed : MarshalByRefObject, System::EnterpriseServices::IRegistrationHelper" />
  <TypeSignature Language="F#" Value="type RegistrationHelper = class&#xA;    inherit MarshalByRefObject&#xA;    interface IRegistrationHelper" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.IRegistrationHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("89a86e7b-c229-4008-9baa-2f5c8411d7e0")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Instaluje i konfiguruje zestawów w wykazie modelu COM +. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper> jest używane zarówno przez narzędzie instalacji usług .NET (Regsvcs.exe) i czynności automatycznej rejestracji, które są wykonywane w momencie pierwszej aktywacji <xref:System.EnterpriseServices.ServicedComponent>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistrationHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistrationHelper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.EnterpriseServices.RegistrationHelper" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zawiera składniki czasu wykonywania, które jest dostępne dla wykazu aplikacji COM +.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallAssembly(string assembly, string&amp; application, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberSignature Language="F#" Value="abstract member InstallAssembly : string *  *  * System.EnterpriseServices.InstallationFlags -&gt; unit&#xA;override this.InstallAssembly : string *  *  * System.EnterpriseServices.InstallationFlags -&gt; unit" Usage="registrationHelper.InstallAssembly (assembly, application, tlb, installFlags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" RefType="ref" />
        <Parameter Name="tlb" Type="System.String" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">Nazwa pliku zestawu do instalacji.</param>
        <param name="application">Nazwa aplikacji COM +, aby zainstalować w. Ten parametr może być <see langword="null" />. Jeśli parametr jest <see langword="null" /> i zawiera zestaw <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, a następnie ten atrybut jest używany. W przeciwnym razie nazwa aplikacji jest generowany na podstawie nazwy zestawu, a następnie jest zwracana.</param>
        <param name="tlb">Nazwa wyjściowego pliku Eksporter biblioteki typów (Tlbexp.exe) lub ciąg, który zawiera <see langword="null" /> Jeśli pomocnika rejestracji do wygenerowania nazwy. Rzeczywista nazwa używana jest umieszczany w parametrze na ukończenie wywołania.</param>
        <param name="installFlags">Bitowa kombinacja <see cref="T:System.EnterpriseServices.InstallationFlags" /> wartości.</param>
        <summary>Instaluje zestaw o nazwie w aplikacji COM +.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> wykonuje następujące czynności: rejestracji, generowanie biblioteki typów, rejestrowania biblioteki typów, instalacja biblioteki typów w określonej aplikacji i konfiguracji składników zawartych w bibliotece typów.  
  
 Ta metoda wymaga obiekt wywołujący, aby mieć uprawnienia administracyjne na komputerze lokalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia `InstalAssembly` metodę, aby zainstalować zestaw o nazwie w aplikacji COM +.  
  
 [!code-cpp[EnterpriseServices Registration#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#1)]
 [!code-csharp[EnterpriseServices Registration#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#1)]
 [!code-vb[EnterpriseServices Registration#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Zestaw danych wejściowych nie ma silnej nazwy.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość dostępu do rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssembly">
      <MemberSignature Language="C#" Value="public void InstallAssembly (string assembly, ref string application, string partition, ref string tlb, System.EnterpriseServices.InstallationFlags installFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssembly(string assembly, string&amp; application, string partition, string&amp; tlb, valuetype System.EnterpriseServices.InstallationFlags installFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String,System.String@,System.EnterpriseServices.InstallationFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssembly (assembly As String, ByRef application As String, partition As String, ByRef tlb As String, installFlags As InstallationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssembly(System::String ^ assembly, System::String ^ % application, System::String ^ partition, System::String ^ % tlb, System::EnterpriseServices::InstallationFlags installFlags);" />
      <MemberSignature Language="F#" Value="member this.InstallAssembly : string *  * string *  * System.EnterpriseServices.InstallationFlags -&gt; unit" Usage="registrationHelper.InstallAssembly (assembly, application, partition, tlb, installFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" RefType="ref" />
        <Parameter Name="partition" Type="System.String" />
        <Parameter Name="tlb" Type="System.String" RefType="ref" />
        <Parameter Name="installFlags" Type="System.EnterpriseServices.InstallationFlags" />
      </Parameters>
      <Docs>
        <param name="assembly">Nazwa pliku zestawu do instalacji.</param>
        <param name="application">Nazwa aplikacji COM +, aby zainstalować w. Ten parametr może być <see langword="null" />. Jeśli parametr jest <see langword="null" /> i zawiera zestaw <see cref="T:System.EnterpriseServices.ApplicationNameAttribute" />, a następnie ten atrybut jest używany. W przeciwnym razie nazwa aplikacji jest generowany na podstawie nazwy zestawu, a następnie jest zwracana.</param>
        <param name="partition">Nazwa partycji. Ten parametr może być <see langword="null" />.</param>
        <param name="tlb">Nazwa wyjściowego pliku Eksporter biblioteki typów (Tlbexp.exe) lub ciąg, który zawiera <see langword="null" /> Jeśli pomocnika rejestracji do wygenerowania nazwy. Rzeczywista nazwa używana jest umieszczany w parametrze na ukończenie wywołania.</param>
        <param name="installFlags">Bitowa kombinacja <see cref="T:System.EnterpriseServices.InstallationFlags" /> wartości.</param>
        <summary>Instaluje zestaw o nazwie w aplikacji COM +.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.RegistrationHelper.InstallAssembly%2A> wykonuje następujące czynności: rejestracji, generowanie biblioteki typów, rejestrowania biblioteki typów, instalacja biblioteki typów w określonej aplikacji i konfiguracji składników zawartych w bibliotece typów.  
  
 Ta metoda wymaga obiekt wywołujący, aby mieć uprawnienia administracyjne na komputerze lokalnym.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Zestaw danych wejściowych nie ma silnej nazwy.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby uzyskać możliwość dostępu do rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void InstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.InstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberSignature Language="F#" Value="member this.InstallAssemblyFromConfig :  -&gt; unit" Usage="registrationHelper.InstallAssemblyFromConfig regConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identyfikowania zestawów do zainstalowania.</param>
        <summary>Instaluje zestaw o nazwie w aplikacji COM +.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wymaga obiekt wywołujący, aby mieć uprawnienia administracyjne na komputerze lokalnym.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia `InstalAssemblyFromConfig` metodę, aby zainstalować zestaw o nazwie w aplikacji COM +.  
  
 [!code-cpp[EnterpriseServices Registration#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServices Registration/CPP/deployservicedcomponent.cpp#2)]
 [!code-csharp[EnterpriseServices Registration#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices Registration/CS/deployservicedcomponent.cs#2)]
 [!code-vb[EnterpriseServices Registration#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServices Registration/VB/deployservicedcomponent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UninstallAssembly">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Odinstalowuje zestaw zarejestrowane przy użyciu poprzednich <see cref="M:System.EnterpriseServices.RegistrationHelper.InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallAssembly(string assembly, string application) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UninstallAssembly(System::String ^ assembly, System::String ^ application);" />
      <MemberSignature Language="F#" Value="abstract member UninstallAssembly : string * string -&gt; unit&#xA;override this.UninstallAssembly : string * string -&gt; unit" Usage="registrationHelper.UninstallAssembly (assembly, application)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.IRegistrationHelper.UninstallAssembly(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">Nazwa pliku zestawu do odinstalowania.</param>
        <param name="application">Jeśli ta nazwa jest <see langword="null" />, jest to nazwa aplikacji, która zawiera składniki w zestawie.</param>
        <summary>Odinstalowuje zestaw z danej aplikacji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Zestaw danych wejściowych nie ma silnej nazwy.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssembly">
      <MemberSignature Language="C#" Value="public void UninstallAssembly (string assembly, string application, string partition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssembly(string assembly, string application, string partition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssembly(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssembly (assembly As String, application As String, partition As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssembly(System::String ^ assembly, System::String ^ application, System::String ^ partition);" />
      <MemberSignature Language="F#" Value="member this.UninstallAssembly : string * string * string -&gt; unit" Usage="registrationHelper.UninstallAssembly (assembly, application, partition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.String" />
        <Parameter Name="application" Type="System.String" />
        <Parameter Name="partition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assembly">Nazwa pliku zestawu do odinstalowania.</param>
        <param name="application">Jeśli ta nazwa jest <see langword="null" />, jest to nazwa aplikacji, która zawiera składniki w zestawie.</param>
        <param name="partition">Nazwa partycji. Ten parametr może być <see langword="null" />.</param>
        <summary>Odinstalowuje zestaw z danej aplikacji.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.EnterpriseServices.RegistrationException">Zestaw danych wejściowych nie ma silnej nazwy.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Aby uzyskać możliwość dostępu do kodu niezarządzanego. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UninstallAssemblyFromConfig">
      <MemberSignature Language="C#" Value="public void UninstallAssemblyFromConfig (ref System.EnterpriseServices.RegistrationConfig regConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UninstallAssemblyFromConfig(class System.EnterpriseServices.RegistrationConfig&amp; regConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.RegistrationHelper.UninstallAssemblyFromConfig(System.EnterpriseServices.RegistrationConfig@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UninstallAssemblyFromConfig (ByRef regConfig As RegistrationConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UninstallAssemblyFromConfig(System::EnterpriseServices::RegistrationConfig ^ % regConfig);" />
      <MemberSignature Language="F#" Value="member this.UninstallAssemblyFromConfig :  -&gt; unit" Usage="registrationHelper.UninstallAssemblyFromConfig regConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regConfig" Type="System.EnterpriseServices.RegistrationConfig" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="regConfig">A <see cref="T:System.EnterpriseServices.RegistrationConfig" /> identyfikowanie zestawu do odinstalowania.</param>
        <summary>Odinstalowuje zestaw z danej aplikacji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>