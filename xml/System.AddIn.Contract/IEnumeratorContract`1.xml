<Type Name="IEnumeratorContract&lt;T&gt;" FullName="System.AddIn.Contract.IEnumeratorContract&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb09bce7495e8ab23bc69a79f590f4f45e7b8152" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30437352" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnumeratorContract&lt;T&gt; : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnumeratorContract`1&lt;T&gt; implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IEnumeratorContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnumeratorContract(Of T)&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IEnumeratorContract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">Typ wyliczany obiektów.</typeparam>
    <summary>Wylicza elementów w <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduły wyliczające może służyć do odczytywania danych w kolekcji, ale nie może służyć do modyfikowania kolekcji.  
  
 Początkowo moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji. W tym miejscu wartość zwracaną <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana. W związku z tym należy wywołać <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> można poprawić modułu wyliczającego pierwszy element do kolekcji przed wywołaniem <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> jest wywoływana. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Ustawia wartość zwracaną <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> do następnego elementu.  
  
 Jeśli <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwraca `false`. Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwracają również `false`. Jeśli przez ostatnie wywołanie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwrócił `false`, zwracana wartość <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana.  
  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli w kolekcji zostaną wprowadzone zmiany, takie jak dodanie, zmodyfikowanie czy usunięcie elementów, moduł wyliczający jest nieodwracalnie unieważniany, a jego zachowanie staje się niezdefiniowane.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCurrent">
      <MemberSignature Language="C#" Value="public T GetCurrent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetCurrent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.GetCurrent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrent () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetCurrent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca obiekt w kolekcji w bieżącym położeniu modułu wyliczającego.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.IContract" /> w kolekcji w bieżącym położeniu modułu wyliczającego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwracana <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> jest niezdefiniowana we wszystkich następujących warunków:  
  
-   Moduł wyliczający jest umieszczony przed pierwszym elementem w kolekcji, natychmiast po utworzeniu modułu wyliczającego lub po <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> jest wywoływana. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> musi zostać wywołana, aby przejść do pierwszego elementu w kolekcji przed wywołaniem modułu wyliczającego <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A>.  
  
-   Ostatnie wywołanie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwrócił `false`, co oznacza koniec kolekcji.  
  
-   Moduł wyliczający jest unieważnione z powodu zmian wprowadzonych w kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów.  
  
 <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> Zwraca tego samego obiektu, dopóki nie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> jest wywoływana. <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> Ustawia wartość zwracaną <xref:System.AddIn.Contract.IEnumeratorContract%601.GetCurrent%2A> do następnego elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Moduł wyliczający należy przechodzi do następnego elementu kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli moduł wyliczający został pomyślnie poprawionym do następnego elementu; <see langword="false" /> po zakończeniu zbierania moduł wyliczający.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu modułu wyliczającego lub po <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> metoda jest wywoływana, moduł wyliczający jest umieszczony przed pierwszym elementem kolekcji. W pierwszym wywołaniu <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> metody przenosi modułu wyliczającego pierwszym elementem kolekcji.  
  
 Jeśli <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> przekazuje końcem kolekcji, moduł wyliczający jest umieszczony za ostatnim elementem w kolekcji i <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwraca `false`. Gdy moduł wyliczający jest w tym miejscu kolejnych wywołań <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> zwracają również `false` do momentu <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> jest wywoływana.  
  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> lub <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> zgłasza <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IEnumeratorContract`1.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia modułu wyliczającego pozycji początkowej, czyli przed pierwszym elementem w kolekcji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Moduł wyliczający zachowuje ważność tak długo, jak długo kolekcja pozostaje niezmieniona. Jeśli zmiany zostały wprowadzone do kolekcji, takie jak dodawanie, modyfikowanie lub usuwanie elementów, moduł wyliczający jest bezpowrotnie unieważniona, a następne wywołanie <xref:System.AddIn.Contract.IEnumeratorContract%601.MoveNext%2A> lub <xref:System.AddIn.Contract.IEnumeratorContract%601.Reset%2A> zgłasza <xref:System.InvalidOperationException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Kolekcja została zmodyfikowana po utworzeniu modułu wyliczającego.</exception>
      </Docs>
    </Member>
  </Members>
</Type>