<Type Name="IListContract&lt;T&gt;" FullName="System.AddIn.Contract.IListContract&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IListContract&lt;T&gt; : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IListContract`1&lt;T&gt; implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.IListContract`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IListContract(Of T)&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IListContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="1e055-101">Typ kontraktu obiektów na liście.</span><span class="sxs-lookup"><span data-stu-id="1e055-101">The contract type of the objects in the list.</span></span></typeparam>
    <summary><span data-ttu-id="1e055-102">Reprezentuje listę ogólnych typów, które są definiowane przez kontrakt i są używane do przekazania między hostem i Dodaj w kolekcji tego typu kontraktu.</span><span class="sxs-lookup"><span data-stu-id="1e055-102">Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-103"><xref:System.AddIn.Pipeline.CollectionAdapters> Klasy używa <xref:System.AddIn.Contract.IListContract%601> interfejs do przekazania kolekcji, w obu kierunkach między hostem a dodatku.</span><span class="sxs-lookup"><span data-stu-id="1e055-103">The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in.</span></span> <span data-ttu-id="1e055-104">Zaleca się, że używasz <xref:System.AddIn.Pipeline.CollectionAdapters> klasy zamiast bezpośrednio w kodzie za pomocą tej klasy.</span><span class="sxs-lookup"><span data-stu-id="1e055-104">It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code.</span></span> <span data-ttu-id="1e055-105">Na przykład zobacz [wskazówki: przekazywanie kolekcje między hostami i dodatki](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span><span class="sxs-lookup"><span data-stu-id="1e055-105">For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/library/b532c604-548e-4fab-b11c-377257dd0ee5).</span></span>  
  
 <span data-ttu-id="1e055-106">Ta klasa może służyć do przekazywany obiektów za pomocą odwołania między domenami aplikacji, ponieważ obiekty nie są serializowane.</span><span class="sxs-lookup"><span data-stu-id="1e055-106">This class can be used to pass objects by reference between application domains because the objects are not serialized.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1e055-107">Obiekt do dodania.</span><span class="sxs-lookup"><span data-stu-id="1e055-107">The object to add.</span></span></param>
        <summary><span data-ttu-id="1e055-108">Dodaje obiekt, aby <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-108">Adds an object to an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-109">`item` Parametr musi być typu, który jest definiowana za pomocą kontraktu.</span><span class="sxs-lookup"><span data-stu-id="1e055-109">The `item` parameter must be of a type that is defined by the contract.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e055-110">Usuwa wszystkie obiekty z <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-110">Removes all objects from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1e055-111">Obiekt, który ma zostać wyszukane w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-111">The object to look for in the collection.</span></span></param>
        <summary><span data-ttu-id="1e055-112">Określa, czy konkretny element w <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-112">Determines whether a specific item is in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns>
          <span data-ttu-id="1e055-113"><see langword="true" /> Jeśli <paramref name="item" /> znajduje się w kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e055-113"><see langword="true" /> if <paramref name="item" /> is in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public int GetCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetCount" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCount () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCount();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e055-114">Pobiera liczbę elementów w <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-114">Gets the number of items in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="1e055-115">Liczba elementów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-115">The number of items in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorContract">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.IEnumeratorContract&lt;T&gt; GetEnumeratorContract ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.IEnumeratorContract`1&lt;!T&gt; GetEnumeratorContract() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumeratorContract () As IEnumeratorContract(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::IEnumeratorContract&lt;T&gt; ^ GetEnumeratorContract();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.IEnumeratorContract&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e055-116">Zwraca moduł wyliczający, który iteruje po <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-116">Returns an enumerator that iterates through an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="1e055-117"><see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> Modułu wyliczającego do iterowania po kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-117">An <see cref="T:System.AddIn.Contract.IEnumeratorContract`1" /> enumerator to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsReadOnly">
      <MemberSignature Language="C#" Value="public bool GetIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e055-118">Określa, czy <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e055-118">Determines whether an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></summary>
        <returns>
          <span data-ttu-id="1e055-119"><see langword="true" /> Jeśli kolekcja jest tylko do odczytu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e055-119"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public T GetItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; T GetItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1e055-120">Liczony od zera indeks elementu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="1e055-120">The zero-based index of the item to get.</span></span></param>
        <summary><span data-ttu-id="1e055-121">Zwraca element w określonym indeksie <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-121">Returns the item at the specified index of an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="1e055-122">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="1e055-122">The item at the specified index.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-123"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> — Metoda nie usuwa element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="1e055-123">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="1e055-124">Aby usunąć element z <xref:System.AddIn.Contract.IListContract%601> kolekcji, użyj <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-124">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="1e055-125"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e055-125"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1e055-126">—lub—</span><span class="sxs-lookup"><span data-stu-id="1e055-126">-or-</span></span>  
  
 <span data-ttu-id="1e055-127"><paramref name="index" /> jest równa lub większa niż wartość zwracaną <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="1e055-127"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (item As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1e055-128">Element w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-128">An item in the collection.</span></span></param>
        <summary><span data-ttu-id="1e055-129">Zwraca indeks konkretny element w <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-129">Returns the index of a specific item in an <see cref="T:System.AddIn.Contract.Collections.IListContract`1" /> collection.</span></span></summary>
        <returns><span data-ttu-id="1e055-130">Indeks określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="1e055-130">The index of the specified item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-131">Jeśli istnieje kilka obiektów tego samego typu w kolekcji, ta metoda określa indeks elementu, który jest pierwsze wystąpienie określonego typu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-131">If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.</span></span>  
  
 <span data-ttu-id="1e055-132"><xref:System.AddIn.Contract.IListContract%601.GetItem%2A> — Metoda nie usuwa element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="1e055-132">The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index.</span></span> <span data-ttu-id="1e055-133">Aby usunąć element z <xref:System.AddIn.Contract.IListContract%601> kolekcji, użyj <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-133">To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="1e055-134"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e055-134"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1e055-135">—lub—</span><span class="sxs-lookup"><span data-stu-id="1e055-135">-or-</span></span>  
  
 <span data-ttu-id="1e055-136"><paramref name="index" /> jest równa lub większa niż wartość zwracaną <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-136"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1e055-137">Liczony od zera indeks, w której mają zostać wstawione <c>elementu</c>.</span><span class="sxs-lookup"><span data-stu-id="1e055-137">The zero-based index at which to insert <c>item</c>.</span></span></param>
        <param name="item"><span data-ttu-id="1e055-138"><see cref="T:System.AddIn.Contract.IContract" /> Obiekt do wstawienia w <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-138">The <see cref="T:System.AddIn.Contract.IContract" /> object to insert in the <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></param>
        <summary><span data-ttu-id="1e055-139">Wstawia element pod określonym indeksem <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-139">Inserts an item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-140">Po wywołaniu metody <xref:System.AddIn.Contract.IListContract%601.Insert%2A> metody, elementy, które należy wykonać punkt wstawiania Przenieś do uwzględnienia nowego elementu.</span><span class="sxs-lookup"><span data-stu-id="1e055-140">After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item.</span></span> <span data-ttu-id="1e055-141">Zaktualizowano także indeksów elementów, które są przenoszone.</span><span class="sxs-lookup"><span data-stu-id="1e055-141">The indexes of the items that are moved are also updated.</span></span> <span data-ttu-id="1e055-142">Aby zastąpić element pod określonym indeksem, użyj <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-142">To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.</span></span>  
  
 <span data-ttu-id="1e055-143">Aby określić, czy <xref:System.AddIn.Contract.IListContract%601> kolekcja jest tylko do odczytu, należy wywołać <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-143">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="1e055-144"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e055-144"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1e055-145">—lub—</span><span class="sxs-lookup"><span data-stu-id="1e055-145">-or-</span></span>  
  
 <span data-ttu-id="1e055-146"><paramref name="index" /> jest równa lub większa niż wartość zwracaną <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span><span class="sxs-lookup"><span data-stu-id="1e055-146"><paramref name="index" /> is equal to or greater than the return value of <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e055-147"><see cref="T:System.AddIn.Contract.IListContract`1" /> Kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e055-147">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="1e055-148">Element do usunięcia z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-148">The item to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="1e055-149">Usuwa element z <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcję określonego typu.</span><span class="sxs-lookup"><span data-stu-id="1e055-149">Removes an item from an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection of a specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="1e055-150"><see langword="true" /> Jeśli element zostanie usunięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e055-150"><see langword="true" /> if an item is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-151">Tej metody należy powtórzyć dla każdego obiektu określonego typu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-151">You must repeat this method for each object of a particular type in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1e055-152">Indeks elementu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="1e055-152">The index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="1e055-153">Usuwa element pod określonym indeksem <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-153">Removes the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-154">Po wywołaniu metody <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, elementy, które należy wykonać usunięty element Przenieś zajmować vacated miejscu.</span><span class="sxs-lookup"><span data-stu-id="1e055-154">After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot.</span></span> <span data-ttu-id="1e055-155">Zaktualizowano także indeksów elementów, które są przenoszone.</span><span class="sxs-lookup"><span data-stu-id="1e055-155">The indexes of the items that are moved are also updated.</span></span>  
  
 <span data-ttu-id="1e055-156">Aby określić, czy <xref:System.AddIn.Contract.IListContract%601> kolekcja jest tylko do odczytu, należy wywołać <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-156">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="1e055-157"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e055-157"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1e055-158">—lub—</span><span class="sxs-lookup"><span data-stu-id="1e055-158">-or-</span></span>  
  
 <span data-ttu-id="1e055-159"><paramref name="index" /> jest równa lub większa niż wartość zwracaną <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-159"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e055-160"><see cref="T:System.AddIn.Contract.IListContract`1" /> Kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e055-160">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="public void SetItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItem(int index, T item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="1e055-161">Liczony od zera indeks, w którym można ustawić elementu.</span><span class="sxs-lookup"><span data-stu-id="1e055-161">The zero-based index at which to set the item.</span></span></param>
        <param name="item"><span data-ttu-id="1e055-162">Element można ustawić w określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="1e055-162">The item to set at the specified index.</span></span></param>
        <summary><span data-ttu-id="1e055-163">Ustawia element pod określonym indeksem <see cref="T:System.AddIn.Contract.IListContract`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1e055-163">Sets the item at the specified index in an <see cref="T:System.AddIn.Contract.IListContract`1" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e055-164"><xref:System.AddIn.Contract.IListContract%601.SetItem%2A> Metody ustawia element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="1e055-164">The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index.</span></span> <span data-ttu-id="1e055-165">Aby dodać element do <xref:System.AddIn.Contract.IListContract%601> kolekcji, użyj <xref:System.AddIn.Contract.IListContract%601.Insert%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-165">To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="1e055-166">Aby określić, czy <xref:System.AddIn.Contract.IListContract%601> kolekcja jest tylko do odczytu, należy wywołać <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-166">To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="1e055-167"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="1e055-167"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="1e055-168">—lub—</span><span class="sxs-lookup"><span data-stu-id="1e055-168">-or-</span></span>  
  
 <span data-ttu-id="1e055-169"><paramref name="index" /> jest równa lub większa niż wartość zwracaną <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1e055-169"><paramref name="index" /> is equal to or greater than the return value of the <see cref="M:System.AddIn.Contract.IListContract`1.GetCount" /> method.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1e055-170"><see cref="T:System.AddIn.Contract.IListContract`1" /> Kolekcja jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="1e055-170">The <see cref="T:System.AddIn.Contract.IListContract`1" /> collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>