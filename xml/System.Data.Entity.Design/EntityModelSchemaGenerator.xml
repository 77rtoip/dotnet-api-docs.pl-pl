<Type Name="EntityModelSchemaGenerator" FullName="System.Data.Entity.Design.EntityModelSchemaGenerator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcecc6c14740c5846c6b934e0d0da494723fe04f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36690952" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityModelSchemaGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityModelSchemaGenerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Design.EntityModelSchemaGenerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityModelSchemaGenerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityModelSchemaGenerator sealed" />
  <TypeSignature Language="F#" Value="type EntityModelSchemaGenerator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4e333-101">Klasa tworzy domyślne CCMapping między EntityContainer przestrzeni S i EntityContainer przestrzeni C.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e333-101">The class creates a default CCMapping between an EntityContainer in S space and an EntityContainer in C space.</span>
      </span>
      <span data-ttu-id="4e333-102">Mapowanie zostanie utworzona na podstawie zadeklarowanych typów zakresów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e333-102">The Mapping will be created based on the declared types of extents.</span>
      </span>
      <span data-ttu-id="4e333-103">Dlatego dziedziczenia nie działa.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e333-103">So Inheritance does not work.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e333-104">W tym miejscu nic nie będzie aktualizowane; proszę nie dodawać tutaj materiału.</span><span class="sxs-lookup"><span data-stu-id="4e333-104">No content here will be updated; please do not add material here.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-105">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.EntityContainer -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator storeEntityContainer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer">
          <span data-ttu-id="4e333-106">Z którego jest tworzony koncepcyjne i mapowania metadanych EntityContainer modelu magazynu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-106">The storage model EntityContainer from which conceptual and mapping metadata is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-107">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.EntityContainer storeEntityContainer, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.EntityContainer,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storeEntityContainer As EntityContainer, namespaceName As String, modelEntityContainerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::EntityContainer ^ storeEntityContainer, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.EntityContainer * string * string -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator (storeEntityContainer, namespaceName, modelEntityContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storeEntityContainer" Type="System.Data.Metadata.Edm.EntityContainer" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="modelEntityContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeEntityContainer">
          <span data-ttu-id="4e333-108">Z którego jest tworzony koncepcyjne i mapowania metadanych EntityContainer modelu magazynu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-108">The storage model EntityContainer from which conceptual and mapping metadata is created.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="4e333-109">Nazwa przestrzeni nazw modelu koncepcyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-109">The name for the conceptual model namespace.</span>
          </span>
          <span data-ttu-id="4e333-110">Jeśli ta wartość jest pusta, nazwa storeEntityContainer jest używana przez nazwę przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-110">If this value is null, the storeEntityContainer name is used for the namespace name.</span>
          </span>
        </param>
        <param name="modelEntityContainerName">
          <span data-ttu-id="4e333-111">Nazwa obiektu EntityContainer zadeklarowana w modelu koncepcyjnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-111">The EntityContainer name declared in the conceptual model.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-112">Initializes a new instance of the <see cref="T:System.Data.Entity.Design.EntityModelSchemaGenerator" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityModelSchemaGenerator (System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.StoreItemCollection storeItemCollection, string namespaceName, string modelEntityContainerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.#ctor(System.Data.Metadata.Edm.StoreItemCollection,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityModelSchemaGenerator(System::Data::Metadata::Edm::StoreItemCollection ^ storeItemCollection, System::String ^ namespaceName, System::String ^ modelEntityContainerName);" />
      <MemberSignature Language="F#" Value="new System.Data.Entity.Design.EntityModelSchemaGenerator : System.Data.Metadata.Edm.StoreItemCollection * string * string -&gt; System.Data.Entity.Design.EntityModelSchemaGenerator" Usage="new System.Data.Entity.Design.EntityModelSchemaGenerator (storeItemCollection, namespaceName, modelEntityContainerName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="storeItemCollection" Type="System.Data.Metadata.Edm.StoreItemCollection" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="modelEntityContainerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storeItemCollection">
          <span data-ttu-id="4e333-113">StoreItemCollection, która zawiera obiekt EntityContainer i innych elementów do tworzenia metadanych modelu z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-113">The StoreItemCollection that contains an EntityContainer and other items to create the Model Metadata from.</span>
          </span>
        </param>
        <param name="namespaceName">
          <span data-ttu-id="4e333-114">Nazwa umożliwiają przestrzeni nazw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-114">The name to give the namespace.</span>
          </span>
          <span data-ttu-id="4e333-115">Jeśli wartość null, nazwa storeEntityContainer będzie używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-115">If null, the name of the storeEntityContainer will be used.</span>
          </span>
        </param>
        <param name="modelEntityContainerName">
          <span data-ttu-id="4e333-116">Nazwa umożliwiają modelu EntityContainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-116">The name to give the Model EntityContainer.</span>
          </span>
          <span data-ttu-id="4e333-117">Jeśli wartość null, zmodyfikowanej wersji obszar nazw tego typu, do którego odwołuje się storeEntityContainer będą używane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-117">If null, a modified version of the namespace of the of a type referenced in storeEntityContainer will be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-118">Konstrukcje EntityModelGenerator</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-118">Constructs an EntityModelGenerator</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdmItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EdmItemCollection EdmItemCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EdmItemCollection As EdmItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EdmItemCollection ^ EdmItemCollection { System::Data::Metadata::Edm::EdmItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EdmItemCollection : System.Data.Metadata.Edm.EdmItemCollection" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.EdmItemCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-119">Pobiera EdmItemCollection, która została utworzona przez metodę GenerateMetadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-119">Gets the EdmItemCollection that was created by the GenerateMetadata method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e333-120">
            <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> Obiekt, który zawiera schematu koncepcyjnego definition language (CSDL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-120">An <see cref="T:System.Data.Metadata.Edm.EdmItemCollection" /> object that contains the conceptual schema definition language (CSDL).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer EntityContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntityContainer EntityContainer" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityContainer As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntityContainer ^ EntityContainer { System::Data::Metadata::Edm::EntityContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityContainer : System.Data.Metadata.Edm.EntityContainer" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.EntityContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-121">Pobiera model koncepcyjny obiektu EntityContainer, która została utworzona przez metodę GenerateMetadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-121">Gets the conceptual model EntityContainer that was created by the GenerateMetadata method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e333-122">
            <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> Obiekt, który zawiera model koncepcyjny obiektu EntityContainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-122">An <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object that contains the conceptual model EntityContainer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateForeignKeyProperties">
      <MemberSignature Language="C#" Value="public bool GenerateForeignKeyProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateForeignKeyProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateForeignKeyProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateForeignKeyProperties { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateForeignKeyProperties : bool with get, set" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateForeignKeyProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-123">Pobiera lub ustawia flagę generowania kluczy obcych w modelu koncepcyjnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-123">Gets or sets the flag for generating foreign key properties in a conceptual model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e333-124">Jeśli wartość tej właściwości jest równa <see langword="true" /> następnie właściwości klucza obcego są generowane w modelu koncepcyjnym; w przeciwnym razie wartość właściwości klucza obcego nie są generowane w modelu koncepcyjnym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-124">If the value of this property is set to <see langword="true" /> then foreign key properties are generated in the conceptual model; otherwise foreign key properties are not generated in the conceptual model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateMetadata">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-125">Generuje informacje o metadanych modelu koncepcyjnego i zwraca błędy schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-125">Generates the conceptual model metadata information and returns any schema errors.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata () As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata();" />
      <MemberSignature Language="F#" Value="member this.GenerateMetadata : unit -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityModelSchemaGenerator.GenerateMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e333-126">Generuje informacje o metadanych modelu koncepcyjnego i zwraca błędy schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-126">Generates the conceptual model metadata information and returns any schema errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e333-127">Kolekcja obiektów błąd schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-127">A collection of schema error objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata (Version targetEntityFrameworkVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Data.Metadata.Edm.EdmSchemaError&gt; GenerateMetadata(class System.Version targetEntityFrameworkVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.GenerateMetadata(System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateMetadata (targetEntityFrameworkVersion As Version) As IList(Of EdmSchemaError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Data::Metadata::Edm::EdmSchemaError ^&gt; ^ GenerateMetadata(Version ^ targetEntityFrameworkVersion);" />
      <MemberSignature Language="F#" Value="member this.GenerateMetadata : Version -&gt; System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;" Usage="entityModelSchemaGenerator.GenerateMetadata targetEntityFrameworkVersion" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Metadata.Edm.EdmSchemaError&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetEntityFrameworkVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="targetEntityFrameworkVersion">
          <span data-ttu-id="4e333-128">Właściwość EntityFrameworkVersions umożliwiająca docelowej wersji programu Entity Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-128">The property of EntityFrameworkVersions that corresponds to the targeted version of the Entity Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-129">Generuje informacje o metadanych modelu koncepcyjnego i zwraca błędy schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-129">Generates the conceptual model metadata information and returns any schema errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e333-130">Kolekcja obiektów błąd schematu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-130">A collection of schema error objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluralizationService">
      <MemberSignature Language="C#" Value="public System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Entity.Design.PluralizationServices.PluralizationService PluralizationService" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService" />
      <MemberSignature Language="VB.NET" Value="Public Property PluralizationService As PluralizationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Entity::Design::PluralizationServices::PluralizationService ^ PluralizationService { System::Data::Entity::Design::PluralizationServices::PluralizationService ^ get(); void set(System::Data::Entity::Design::PluralizationServices::PluralizationService ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PluralizationService : System.Data.Entity.Design.PluralizationServices.PluralizationService with get, set" Usage="System.Data.Entity.Design.EntityModelSchemaGenerator.PluralizationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Entity.Design.PluralizationServices.PluralizationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-131">Pobiera lub ustawia wartość PluralizationService, która wskazuje usługę używaną podczas generowania modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-131">Gets or sets the PluralizationService value that indicates the service used when generating a model.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e333-132">
            <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> Wartość, która wskazuje usługę używaną podczas generowania modelu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-132">The <see cref="T:System.Data.Entity.Design.PluralizationServices.PluralizationService" /> value that indicates the service used when generating a model.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteModelSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-133">Zapisuje wygenerowanego schematu koncepcyjnego definition language (CSDL) do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-133">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteModelSchema : string -&gt; unit" Usage="entityModelSchemaGenerator.WriteModelSchema outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">
          <span data-ttu-id="4e333-134">Nazwa pliku wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-134">The name of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-135">Zapisuje wygenerowanego schematu koncepcyjnego definition language (CSDL) do określonego pliku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-135">Writes the generated conceptual schema definition language (CSDL) to the specified file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteModelSchema">
      <MemberSignature Language="C#" Value="public void WriteModelSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteModelSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteModelSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteModelSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteModelSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteModelSchema : System.Xml.XmlWriter -&gt; unit" Usage="entityModelSchemaGenerator.WriteModelSchema writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="4e333-136">Element XmlWriter, do której jest zapisywany pliku CSDL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-136">The XmlWriter to which the CSDL is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-137">Zapisuje wygenerowanego schematu koncepcyjnego definition language (CSDL) do obiektu XmlWriter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-137">Writes the generated conceptual schema definition language (CSDL) to an XmlWriter object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStorageMapping">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4e333-138">Zapisuje określony plik języka specyfikacji wygenerowanego mapowania (MSL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-138">Writes the generated mapping specification language (MSL) to the specified file.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (string outputFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(string outputFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (outputFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::String ^ outputFileName);" />
      <MemberSignature Language="F#" Value="member this.WriteStorageMapping : string -&gt; unit" Usage="entityModelSchemaGenerator.WriteStorageMapping outputFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputFileName">
          <span data-ttu-id="4e333-139">Nazwa pliku wyjściowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-139">The name of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-140">Zapisuje określony plik języka specyfikacji wygenerowanego mapowania (MSL).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-140">Writes the generated mapping specification language (MSL) to the specified file.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStorageMapping">
      <MemberSignature Language="C#" Value="public void WriteStorageMapping (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStorageMapping(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Design.EntityModelSchemaGenerator.WriteStorageMapping(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStorageMapping (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStorageMapping(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStorageMapping : System.Xml.XmlWriter -&gt; unit" Usage="entityModelSchemaGenerator.WriteStorageMapping writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="4e333-141">Element XmlWriter, do którego pliku MSL jest zapisywany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-141">The XmlWriter to which the MSL is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e333-142">Zapisuje język specyfikacji wygenerowanego mapowania (MSL) do obiektu XmlWriter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e333-142">Writes the generated mapping specification language (MSL) to an XmlWriter object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>