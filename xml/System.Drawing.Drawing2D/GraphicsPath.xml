<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d76b4f131ed0fb365205bcfc0d72419e1798de9f" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63882204" /></Metadata><TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="946a3-101">Reprezentuje szereg podłączonych linii i krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-101">Represents a series of connected lines and curves.</span></span> <span data-ttu-id="946a3-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="946a3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-103">Aplikacje użyć ścieżek, aby narysować obramowanie kształtów, wypełnij wnętrza kształtów i utworzyć regionów wycinka.</span><span class="sxs-lookup"><span data-stu-id="946a3-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="946a3-104">Aparat grafiki zachowuje współrzędne kształtów geometrycznych w ścieżce w przestrzeni współrzędnych świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="946a3-105">Ścieżka może składać się z dowolną liczbę cyfr (podścieżek).</span><span class="sxs-lookup"><span data-stu-id="946a3-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="946a3-106">Każda liczba albo składa się z sekwencji połączone linie, krzywe i element podstawowy kształt geometryczny.</span><span class="sxs-lookup"><span data-stu-id="946a3-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="946a3-107">Punkt początkowy rysunku jest pierwszym punktem w sekwencji połączonych linii i krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="946a3-108">Punkt końcowy jest ostatniego punktu w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="946a3-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="946a3-109">Punkty początkowy i końcowy kształtu geometrycznego pierwotne są definiowane przez specyfikację pierwotnych.</span><span class="sxs-lookup"><span data-stu-id="946a3-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="946a3-110">Rysunek, który składa się z sekwencji połączone linie i krzywych (których punkty początkowy i końcowy może być zbieżna) jest otwartego rysunku, chyba że jawnie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="946a3-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="946a3-111">Rysunek może zostać jawnie zamknięty przy użyciu <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> metody, która powoduje zamknięcie bieżącego rysunek łącząc linię z punktu końcowego do punktu początkowego.</span><span class="sxs-lookup"><span data-stu-id="946a3-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="946a3-112">Rysunek, który składa się z podstawowy kształt geometryczny jest figurę zamkniętą.</span><span class="sxs-lookup"><span data-stu-id="946a3-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="946a3-113">Na potrzeby wypełniania i wycinka (na przykład, jeśli ścieżka jest renderowany przy użyciu <xref:System.Drawing.Graphics.FillPath%2A>), wszystkie otwarte rysunki są zamknięte przez dodanie linię z pierwszym punktem rysunku do ostatniego punktu.</span><span class="sxs-lookup"><span data-stu-id="946a3-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="946a3-114">Nowy rysunek niejawnie została uruchomiona po utworzeniu ścieżki, lub gdy rysunek jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="946a3-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="946a3-115">Nowy rysunek jest jawnie tworzone, gdy <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="946a3-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="946a3-116">Gdy element podstawowy kształt geometryczny zostanie dodany do ścieżki, dodaje rysunku zawierający kształtu geometrycznego i również niejawnie uruchamia nowy rysunek.</span><span class="sxs-lookup"><span data-stu-id="946a3-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="946a3-117">W związku z tym jest zawsze bieżącego rysunek w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="946a3-118">Gdy linii i krzywych zostaną dodane do ścieżki, niejawne wiersza jest dodawany jako wymagany do połączenia z punktu końcowego rysunek bieżący punkt początkowy nowej linii i krzywych w celu utworzenia sekwencji połączone linie i krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="946a3-119">Ilustracja ma kierunku, w którym w tym artykule opisano, jak segmenty linii i krzywych są śledzone od punktu początkowego i punktu końcowego.</span><span class="sxs-lookup"><span data-stu-id="946a3-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="946a3-120">Kierunek jest zdefiniowana w kolejności linii i krzywych są dodawane do rysunku lub jest zdefiniowane przez kształt geometryczny pierwotnych.</span><span class="sxs-lookup"><span data-stu-id="946a3-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="946a3-121">Kierunek jest używany podczas określania wnętrza ścieżki przycinania i wypełnienia.</span><span class="sxs-lookup"><span data-stu-id="946a3-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f16ec921-56cf-46d1-9741-d7316ad06b23"><span data-ttu-id="946a3-122">Konstruowanie i rysowanie ścieżek</span><span class="sxs-lookup"><span data-stu-id="946a3-122">Constructing and Drawing Paths</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> klasy <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenie <see langword="Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> klasy <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> wartość <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-124">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode"><span data-ttu-id="946a3-125"><see cref="T:System.Drawing.Drawing2D.FillMode" /> Wyliczenie, który określa sposób, w jaki posługiwanie się nimi tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> jest wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-125">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span></span></param>
        <summary><span data-ttu-id="946a3-126">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> klasy z określonym <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-126">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="946a3-127">Tablica <see cref="T:System.Drawing.Point" /> struktur, które określa współrzędne punktów, które tworzą to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-127">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="946a3-128">Tablica <see cref="T:System.Drawing.Drawing2D.PathPointType" /> elementy wyliczenia, które określa typ każdego odpowiedniego punktu w <paramref name="pts" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-128">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="946a3-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> klasy z określonym <see cref="T:System.Drawing.Drawing2D.PathPointType" /> i <see cref="T:System.Drawing.Point" /> tablic.</span><span class="sxs-lookup"><span data-stu-id="946a3-129">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="946a3-130">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które określa współrzędne punktów, które tworzą to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-130">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="946a3-131">Tablica <see cref="T:System.Drawing.Drawing2D.PathPointType" /> elementy wyliczenia, które określa typ każdego odpowiedniego punktu w <paramref name="pts" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-131">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <summary><span data-ttu-id="946a3-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> tablicę z określonym <see cref="T:System.Drawing.Drawing2D.PathPointType" /> i <see cref="T:System.Drawing.PointF" /> tablic.</span><span class="sxs-lookup"><span data-stu-id="946a3-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="946a3-133">Tablica <see cref="T:System.Drawing.Point" /> struktur, które określa współrzędne punktów, które tworzą to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-133">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="946a3-134">Tablica <see cref="T:System.Drawing.Drawing2D.PathPointType" /> elementy wyliczenia, które określa typ każdego odpowiedniego punktu w <paramref name="pts" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-134">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="946a3-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenie, który określa sposób wnętrza kształty w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> są wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-135">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="946a3-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> klasy z określonym <see cref="T:System.Drawing.Drawing2D.PathPointType" /> i <see cref="T:System.Drawing.Point" /> tablic i o określonej <see cref="T:System.Drawing.Drawing2D.FillMode" /> elementu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="946a3-137">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które określa współrzędne punktów, które tworzą to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-137">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <param name="types"><span data-ttu-id="946a3-138">Tablica <see cref="T:System.Drawing.Drawing2D.PathPointType" /> elementy wyliczenia, które określa typ każdego odpowiedniego punktu w <paramref name="pts" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-138">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <paramref name="pts" /> array.</span></span></param>
        <param name="fillMode"><span data-ttu-id="946a3-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenie, który określa sposób wnętrza kształty w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> są wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-139">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></param>
        <summary><span data-ttu-id="946a3-140">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> tablicę z określonym <see cref="T:System.Drawing.Drawing2D.PathPointType" /> i <see cref="T:System.Drawing.PointF" /> tablic i o określonej <see cref="T:System.Drawing.Drawing2D.FillMode" /> elementu wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-140">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-141">Dołącza łuk eliptyczny do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-141">Appends an elliptical arc to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-142">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokątne granice elipsy, z którego pochodzi łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-142">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-143">Kąt początkowy łuk w stopniach do ruchu wskazówek zegara od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-143">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-144">Kąt między <paramref name="startAngle" /> i na końcu łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-144">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="946a3-145">Dołącza łuk eliptyczny do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-145">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-146">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktem końcowym poprzedniego segmentu do stanu sprzed łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-146">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="946a3-147">Łuk jest śledzone wzdłuż obwodowej elipsy poprowadzoną określonego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-147">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="946a3-148">Punkt początkowy łuku jest określana przez dokonywanie pomiarów zgodnie ze wskazówkami zegara od osi x elipsy (pod kątem 0 stopni) przez liczbę stopni w Kąt początkowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-148">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="946a3-149">Punkt końcowy znajduje się podobnie mierząc zgodnie ze wskazówkami zegara od punktu początkowego przez liczbę stopni w kąta odchylenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-149">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="946a3-150">Jeśli kąta odchylenia jest większa niż 360 lub mniej niż-360 stopni, łuk jest przechwytywana przez dokładnie 360 lub-360 stopni, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="946a3-150">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-151">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-151">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-152">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-152">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-153">Tworzy prostokąt, w którym zdefiniowano łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-153">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="946a3-154">Tworzy ścieżkę `myPath`.</span><span class="sxs-lookup"><span data-stu-id="946a3-154">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="946a3-155">Definiuje łuk eliptyczny 180 stopni, który wrzucając z 0 stopni do 180 stopni i dołącza go do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-155">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="946a3-156">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-156">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-157">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokątne granice elipsy, z którego pochodzi łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-157">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-158">Kąt początkowy łuk w stopniach do ruchu wskazówek zegara od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-158">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-159">Kąt między <paramref name="startAngle" /> i na końcu łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-159">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="946a3-160">Dołącza łuk eliptyczny do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-160">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-161">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktem końcowym poprzedniego segmentu do stanu sprzed łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-161">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="946a3-162">Łuk jest śledzone wzdłuż obwodowej elipsy poprowadzoną określonego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-162">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="946a3-163">Punkt początkowy łuku jest określana przez dokonywanie pomiarów zgodnie ze wskazówkami zegara od osi x elipsy (pod kątem 0 stopni) przez liczbę stopni w Kąt początkowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-163">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="946a3-164">Punkt końcowy znajduje się podobnie mierząc zgodnie ze wskazówkami zegara od punktu początkowego przez liczbę stopni w kąta odchylenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-164">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="946a3-165">Jeśli kąta odchylenia jest większa niż 360 lub mniej niż-360 stopni, łuk jest przechwytywana przez dokładnie 360 lub-360 stopni, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="946a3-165">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-166">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-166">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-167">Współrzędna x w lewym górnym rogu prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-167">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-168">Współrzędna y lewego górnego rogu prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-168">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-169">Szerokość prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-169">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-170">Wysokość prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-170">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-171">Kąt początkowy łuk w stopniach do ruchu wskazówek zegara od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-171">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-172">Kąt między <paramref name="startAngle" /> i na końcu łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-172">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="946a3-173">Dołącza łuk eliptyczny do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-173">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-174">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktem końcowym poprzedniego segmentu do stanu sprzed łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-174">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="946a3-175">Łuk jest śledzone wzdłuż obwodowej elipsy poprowadzoną określonego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-175">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="946a3-176">Punkt początkowy łuku jest określana przez dokonywanie pomiarów zgodnie ze wskazówkami zegara od osi x elipsy (pod kątem 0 stopni) przez liczbę stopni w Kąt początkowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-176">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="946a3-177">Punkt końcowy znajduje się podobnie mierząc zgodnie ze wskazówkami zegara od punktu początkowego przez liczbę stopni w kąta odchylenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-177">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="946a3-178">Jeśli kąta odchylenia jest większa niż 360 lub mniej niż-360 stopni, łuk jest przechwytywana przez dokładnie 360 lub-360 stopni, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="946a3-178">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-179">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-179">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-180">Współrzędna x w lewym górnym rogu prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-180">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-181">Współrzędna y lewego górnego rogu prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-181">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-182">Szerokość prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-182">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-183">Wysokość prostokątny obszar, który definiuje elipsy, z którego łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-183">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-184">Kąt początkowy łuk w stopniach do ruchu wskazówek zegara od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-184">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-185">Kąt między <paramref name="startAngle" /> i na końcu łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-185">The angle between <paramref name="startAngle" /> and the end of the arc.</span></span></param>
        <summary><span data-ttu-id="946a3-186">Dołącza łuk eliptyczny do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-186">Appends an elliptical arc to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-187">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktem końcowym poprzedniego segmentu do stanu sprzed łuku.</span><span class="sxs-lookup"><span data-stu-id="946a3-187">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="946a3-188">Łuk jest śledzone wzdłuż obwodowej elipsy poprowadzoną określonego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-188">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="946a3-189">Punkt początkowy łuku jest określana przez dokonywanie pomiarów zgodnie ze wskazówkami zegara od osi x elipsy (pod kątem 0 stopni) przez liczbę stopni w Kąt początkowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-189">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="946a3-190">Punkt końcowy znajduje się podobnie mierząc zgodnie ze wskazówkami zegara od punktu początkowego przez liczbę stopni w kąta odchylenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-190">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="946a3-191">Jeśli kąta odchylenia jest większa niż 360 lub mniej niż-360 stopni, łuk jest przechwytywana przez dokładnie 360 lub-360 stopni, odpowiednio.</span><span class="sxs-lookup"><span data-stu-id="946a3-191">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-192">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-192">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-193">Dodaje krzywą Beziera trzeciego stopnia do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-193">Adds a cubic Bézier curve to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="946a3-194">A <see cref="T:System.Drawing.Point" /> reprezentująca punkt początkowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-194">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="946a3-195">A <see cref="T:System.Drawing.Point" /> reprezentująca pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-195">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="946a3-196">A <see cref="T:System.Drawing.Point" /> reprezentujący drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-196">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="946a3-197">A <see cref="T:System.Drawing.Point" /> reprezentujący punkt końcowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-197">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-198">Dodaje krzywą Beziera trzeciego stopnia do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-198">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-199">Krzywą trzeciego stopnia jest tworzona z pierwszego punktu punkt czwarty przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-199">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="946a3-200">Jeśli istnieje poprzedniej linii lub segmentu krzywej na ilustracji, wiersza jest dodawany do punktu końcowego poprzedniego segmentu nawiązać połączenie z punktem początkowym krzywą trzeciego stopnia.</span><span class="sxs-lookup"><span data-stu-id="946a3-200">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-201">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-201">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="946a3-202">A <see cref="T:System.Drawing.PointF" /> reprezentująca punkt początkowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-202">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="946a3-203">A <see cref="T:System.Drawing.PointF" /> reprezentująca pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-203">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="946a3-204">A <see cref="T:System.Drawing.PointF" /> reprezentujący drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-204">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="946a3-205">A <see cref="T:System.Drawing.PointF" /> reprezentujący punkt końcowy krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-205">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-206">Dodaje krzywą Beziera trzeciego stopnia do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-206">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-207">Krzywą trzeciego stopnia jest tworzona z pierwszego punktu punkt czwarty przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-207">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="946a3-208">Jeśli istnieje poprzedniej linii lub segmentu krzywej na ilustracji, wiersza jest dodawany do punktu końcowego poprzedniego segmentu nawiązać połączenie z punktem początkowym krzywą trzeciego stopnia.</span><span class="sxs-lookup"><span data-stu-id="946a3-208">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-209">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-209">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="946a3-210">Współrzędna x punktu początkowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-210">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="946a3-211">Współrzędna y punktu początkowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-211">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="946a3-212">Współrzędna x pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-212">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="946a3-213">Współrzędna y pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-213">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="946a3-214">Współrzędna x drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-214">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="946a3-215">Współrzędna y drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-215">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="946a3-216">Współrzędna x punktu końcowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-216">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="946a3-217">Współrzędna y punktu końcowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-217">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-218">Dodaje krzywą Beziera trzeciego stopnia do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-218">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-219">Krzywą trzeciego stopnia jest tworzona z pierwszego punktu punkt czwarty przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-219">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="946a3-220">Jeśli istnieje poprzedniej linii lub segmentu krzywej na ilustracji, wiersza jest dodawany do punktu końcowego poprzedniego segmentu nawiązać połączenie z punktem początkowym krzywą trzeciego stopnia.</span><span class="sxs-lookup"><span data-stu-id="946a3-220">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-221">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-221">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-222">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-222">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-223">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-223">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-224">Dodaje określone przez punkty (50, 50), krzywą Beziera trzeciego stopnia (70, 0), (100, 120), a (150, 50) do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-224">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="946a3-225">Zamyka krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-225">Closes the curve.</span></span>  
  
-   <span data-ttu-id="946a3-226">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-226">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="946a3-227">Współrzędna x punktu początkowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-227">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="946a3-228">Współrzędna y punktu początkowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-228">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="946a3-229">Współrzędna x pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-229">The x-coordinate of the first control point for the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="946a3-230">Współrzędna y pierwszy punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-230">The y-coordinate of the first control point for the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="946a3-231">Współrzędna x drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-231">The x-coordinate of the second control point for the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="946a3-232">Współrzędna y drugi punkt kontrolny krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-232">The y-coordinate of the second control point for the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="946a3-233">Współrzędna x punktu końcowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-233">The x-coordinate of the endpoint of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="946a3-234">Współrzędna y punktu końcowego krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-234">The y-coordinate of the endpoint of the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-235">Dodaje krzywą Beziera trzeciego stopnia do bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-235">Adds a cubic Bézier curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-236">Krzywą trzeciego stopnia jest tworzona z pierwszego punktu punkt czwarty przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-236">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="946a3-237">Jeśli istnieje poprzedniej linii lub segmentu krzywej na ilustracji, wiersza jest dodawany do punktu końcowego poprzedniego segmentu nawiązać połączenie z punktem początkowym krzywą trzeciego stopnia.</span><span class="sxs-lookup"><span data-stu-id="946a3-237">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-238">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-238">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-239">Dodaje sekwencję połączonych krzywych Beziera trzeciego stopnia do bieżącej wartości.</span><span class="sxs-lookup"><span data-stu-id="946a3-239">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-240">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-240">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="946a3-241">Dodaje sekwencję połączonych krzywych Beziera trzeciego stopnia do bieżącej wartości.</span><span class="sxs-lookup"><span data-stu-id="946a3-241">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-242">`points` Parametr określa tablicę punktów końcowych i punkty kontrolne krzywych połączonych.</span><span class="sxs-lookup"><span data-stu-id="946a3-242">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="946a3-243">Pierwszy krzywej jest tworzony z pierwszego punktu do czwartej punktu w `points` tablicy przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-243">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="946a3-244">Oprócz punkt końcowy poprzedniego krzywej każdej kolejnej krzywej w sekwencji musi dokładnie trzy większej liczby punktów: następne dwa punkty w sekwencji są punkty kontrolne, a trzeci jest punkt końcowy dla krzywej dodano.</span><span class="sxs-lookup"><span data-stu-id="946a3-244">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="946a3-245">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do endpoint poprzedniego segmentu nawiązać połączenie z punktu początkowego pierwszego krzywą trzeciego stopnia w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="946a3-245">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-246">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-246">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-247">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-247">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-248">Tworzy tablicę siedmiu punkty (reprezentującej dwie krzywe Beziera połączone).</span><span class="sxs-lookup"><span data-stu-id="946a3-248">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="946a3-249">Tworzy ścieżkę i dodaje serię punktów krzywej Beziera do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-249">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="946a3-250">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-250">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-251">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-251">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span></span></param>
        <summary><span data-ttu-id="946a3-252">Dodaje sekwencję połączonych krzywych Beziera trzeciego stopnia do bieżącej wartości.</span><span class="sxs-lookup"><span data-stu-id="946a3-252">Adds a sequence of connected cubic Bézier curves to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-253">`points` Parametr określa tablicę punktów końcowych i punkty kontrolne krzywych połączonych.</span><span class="sxs-lookup"><span data-stu-id="946a3-253">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="946a3-254">Pierwszy krzywej jest tworzony z pierwszego punktu do czwartej punktu w `points` tablicy przy użyciu punktów drugi i trzeci jako punkty kontrolne.</span><span class="sxs-lookup"><span data-stu-id="946a3-254">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="946a3-255">Oprócz punkt końcowy poprzedniego krzywej każdej kolejnej krzywej w sekwencji musi dokładnie trzy większej liczby punktów: następne dwa punkty w sekwencji są punkty kontrolne, a trzeci jest punkt końcowy dla krzywej dodano.</span><span class="sxs-lookup"><span data-stu-id="946a3-255">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="946a3-256">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do endpoint poprzedniego segmentu nawiązać połączenie z punktu początkowego pierwszego krzywą trzeciego stopnia w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="946a3-256">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-257">Aby uzyskać przykład, zobacz:</span><span class="sxs-lookup"><span data-stu-id="946a3-257">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-258">Dodaje zamkniętej krzywej do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-258">Adds a closed curve to this path.</span></span> <span data-ttu-id="946a3-259">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-259">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-260">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-260">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-261">Dodaje zamkniętej krzywej do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-261">Adds a closed curve to this path.</span></span> <span data-ttu-id="946a3-262">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-262">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-263">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-263">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-264">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-264">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="946a3-265">Jeśli punkt pierwszego i ostatniego punktu w `points` tablicy nie są tego samego punktu, krzywej jest zamknięty, łącząc te dwa punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-265">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="946a3-266">Nie można ustawić wartości napięcie tę metodę i przyjmuje domyślnie wartość odpowiednikiem 0,5.</span><span class="sxs-lookup"><span data-stu-id="946a3-266">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-267">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-267">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-268">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-268">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-269">Dodaje zamkniętej krzywej do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-269">Adds a closed curve to this path.</span></span> <span data-ttu-id="946a3-270">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-270">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-271">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-271">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-272">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-272">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="946a3-273">Jeśli punkt pierwszego i ostatniego punktu w `points` tablicy nie są tego samego punktu, krzywej jest zamknięty, łącząc te dwa punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-273">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="946a3-274">Nie można ustawić wartości napięcie tę metodę i przyjmuje domyślnie wartość odpowiednikiem 0,5.</span><span class="sxs-lookup"><span data-stu-id="946a3-274">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-275">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-275">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-276">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-276">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-277">Wartość z zakresu od od 0 do 1, który określa ilość, który krzywej załamania się między punktami z 0 jest najmniejsza krzywej (najlepszą jakość obrazu róg), a 1 daje płynne krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-277">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="946a3-278">Dodaje zamkniętej krzywej do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-278">Adds a closed curve to this path.</span></span> <span data-ttu-id="946a3-279">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-279">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-280">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-280">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-281">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-281">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="946a3-282">Jeśli punkt pierwszego i ostatniego punktu w `points` tablicy nie są tego samego punktu, krzywej jest zamknięty, łącząc te dwa punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-282">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-283">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-283">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-284">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-284">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-285">Tworzy tablicę z sześciu punktów (reprezentującej kardynalna).</span><span class="sxs-lookup"><span data-stu-id="946a3-285">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="946a3-286">Tworzy ścieżkę i dodaje krzywych zamkniętej krzywej kardynalnej do ścieżki (zamknięte z punktu końcowego na punkt początkowy).</span><span class="sxs-lookup"><span data-stu-id="946a3-286">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="946a3-287">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-287">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="946a3-288">Należy zauważyć, że napięcie 0,5 jest używany.</span><span class="sxs-lookup"><span data-stu-id="946a3-288">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-289">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-289">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-290">Wartość z zakresu od od 0 do 1, który określa ilość, który krzywej załamania się między punktami z 0 jest najmniejsza krzywej (najlepszą jakość obrazu róg), a 1 daje płynne krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-290">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span></span></param>
        <summary><span data-ttu-id="946a3-291">Dodaje zamkniętej krzywej do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-291">Adds a closed curve to this path.</span></span> <span data-ttu-id="946a3-292">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-292">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-293">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-293">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-294">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-294">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="946a3-295">Jeśli punkt pierwszego i ostatniego punktu w `points` tablicy nie są tego samego punktu, krzywej jest zamknięty, łącząc te dwa punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-295">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-296">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-296">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-297">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-297">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="946a3-298">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-298">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-299">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-299">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-300">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-300">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="946a3-301">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-301">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-302">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-302">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-303">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-303">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-304">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-304">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-305">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-305">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <summary><span data-ttu-id="946a3-306">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-306">Adds a spline curve to the current figure.</span></span> <span data-ttu-id="946a3-307">Krzywa kardynalna jest stosowana, ponieważ krzywej, przechodzi przez każdego z punktów w tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-307">A cardinal spline curve is used because the curve travels through each of the points in the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-308">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-308">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-309">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-309">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-310">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-310">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-311">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-311">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-312">Wartość, która określa, że krzywej załamania się między punktami kontrolnymi.</span><span class="sxs-lookup"><span data-stu-id="946a3-312">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="946a3-313">Wartości większe od 1 powodować nieprzewidywalne rezultaty.</span><span class="sxs-lookup"><span data-stu-id="946a3-313">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="946a3-314">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-314">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-315">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-315">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-316">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-316">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-317">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-317">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-318">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-318">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-319">Wartość, która określa, że krzywej załamania się między punktami kontrolnymi.</span><span class="sxs-lookup"><span data-stu-id="946a3-319">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="946a3-320">Wartości większe od 1 powodować nieprzewidywalne rezultaty.</span><span class="sxs-lookup"><span data-stu-id="946a3-320">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="946a3-321">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-321">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-322">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-322">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-323">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-323">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-324">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-324">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-325">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-325">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="946a3-326">Indeks elementu w <paramref name="points" /> tablicy, która jest używana jako pierwszy punkt krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-326">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="946a3-327">Wartość, która określa, że krzywej załamania się między punktami kontrolnymi.</span><span class="sxs-lookup"><span data-stu-id="946a3-327">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="946a3-328">Wartości większe od 1 powodować nieprzewidywalne rezultaty.</span><span class="sxs-lookup"><span data-stu-id="946a3-328">Values greater than 1 produce unpredictable results.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-329">Wartość, która określa, że krzywej załamania się między punktami kontrolnymi.</span><span class="sxs-lookup"><span data-stu-id="946a3-329">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="946a3-330">Wartości większe od 1 powodować nieprzewidywalne rezultaty.</span><span class="sxs-lookup"><span data-stu-id="946a3-330">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="946a3-331">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-331">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-332">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-332">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-333">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-333">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="946a3-334">Krzywa rozpoczyna się od punktu w macierzy, określony przez `offset` parametru oraz liczbie punktów (segmenty), określony przez `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="946a3-334">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-335">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-335">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-336">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-336">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-337">Tworzy tablicę czterech punktów (reprezentującej kardynalna).</span><span class="sxs-lookup"><span data-stu-id="946a3-337">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="946a3-338">Tworzy ścieżkę, a przy użyciu tablicy punkty, dodaje krzywej do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-338">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="946a3-339">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-339">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="946a3-340">Zauważ, że gdy tablica zawiera cztery punkty, są tylko dla trzech segmenty, czyli liczbie określonej w trzecim argumencie wywołanie <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-340">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-341">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-341">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span></span></param>
        <param name="offset"><span data-ttu-id="946a3-342">Indeks elementu w <paramref name="points" /> tablicy, która jest używana jako pierwszy punkt krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-342">The index of the element in the <paramref name="points" /> array that is used as the first point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="946a3-343">Liczba segmentów, używany do rysowania krzywej.</span><span class="sxs-lookup"><span data-stu-id="946a3-343">The number of segments used to draw the curve.</span></span> <span data-ttu-id="946a3-344">Segment można traktować jako linia łącząca dwa punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-344">A segment can be thought of as a line connecting two points.</span></span></param>
        <param name="tension"><span data-ttu-id="946a3-345">Wartość, która określa, że krzywej załamania się między punktami kontrolnymi.</span><span class="sxs-lookup"><span data-stu-id="946a3-345">A value that specifies the amount that the curve bends between control points.</span></span> <span data-ttu-id="946a3-346">Wartości większe od 1 powodować nieprzewidywalne rezultaty.</span><span class="sxs-lookup"><span data-stu-id="946a3-346">Values greater than 1 produce unpredictable results.</span></span></param>
        <summary><span data-ttu-id="946a3-347">Dodaje krzywej składanej na figurę bieżącego.</span><span class="sxs-lookup"><span data-stu-id="946a3-347">Adds a spline curve to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-348">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-348">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-349">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-349">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="946a3-350">Krzywa rozpoczyna się od punktu w macierzy, określony przez `offset`oraz liczbę punktów (segmenty), określony przez `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="946a3-350">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-351">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-351">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-352">Dodaje elipsę w bieżącej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-352">Adds an ellipse to the current path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-353">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-353">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="946a3-354">Dodaje elipsę w bieżącej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-354">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-355">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-356">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-356">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="946a3-357">Tworzy prostokąt otaczający, który definiuje elipsę.</span><span class="sxs-lookup"><span data-stu-id="946a3-357">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="946a3-358">Tworzy ścieżkę i dodaje elipsy do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-358">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="946a3-359">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-359">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-360">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-360">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="946a3-361">Dodaje elipsę w bieżącej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-361">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-362">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-362">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-363">Współrzędna x w lewym górnym rogu prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-363">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-364">Współrzędna y lewego górnego rogu prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-364">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-365">Szerokość prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-365">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-366">Wysokość prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-366">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="946a3-367">Dodaje elipsę w bieżącej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-367">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-368">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-368">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-369">Współrzędna x w lewym górnym rogu prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-369">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-370">Współrzędna y lewym górnym rogu prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-370">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-371">Szerokość prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-371">The width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-372">Wysokość prostokąt otaczający, który definiuje elipsy.</span><span class="sxs-lookup"><span data-stu-id="946a3-372">The height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="946a3-373">Dodaje elipsę w bieżącej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-373">Adds an ellipse to the current path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-374">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-374">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-375">Dołącza ten odcinek <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-375">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="946a3-376">A <see cref="T:System.Drawing.Point" /> reprezentująca punkt początkowy wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-376">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="946a3-377">A <see cref="T:System.Drawing.Point" /> reprezentujący punkt końcowy linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-377">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="946a3-378">Dołącza ten odcinek <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-378">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-379">Metoda ta umożliwia dodanie segment linii, zdefiniowane przez określony wskazuje na końcu <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-379">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="946a3-380">W przypadku poprzedniego linii i krzywych w <xref:System.Drawing.Drawing2D.GraphicsPath>, linia jest rysowana do ostatniego punktu w ścieżce nawiązać połączenie z pierwszym punktem w nowej segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-380">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-381">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-381">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1"><span data-ttu-id="946a3-382">A <see cref="T:System.Drawing.PointF" /> reprezentująca punkt początkowy wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-382">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span></span></param>
        <param name="pt2"><span data-ttu-id="946a3-383">A <see cref="T:System.Drawing.PointF" /> reprezentujący punkt końcowy linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-383">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="946a3-384">Dołącza ten odcinek <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-384">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-385">Metoda ta umożliwia dodanie segment linii, zdefiniowane przez określony wskazuje na końcu <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-385">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="946a3-386">W przypadku poprzedniego linii i krzywych w <xref:System.Drawing.Drawing2D.GraphicsPath>, linia jest rysowana do ostatniego punktu w ścieżce nawiązać połączenie z pierwszym punktem w nowej segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-386">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-387">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-387">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="946a3-388">Współrzędna x punktu początkowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-388">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="946a3-389">Współrzędna y punktu początkowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-389">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="946a3-390">Współrzędna x punktu końcowego linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-390">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="946a3-391">Współrzędna y punktu końcowego linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-391">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="946a3-392">Dołącza rysunek bieżący segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-392">Appends a line segment to the current figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-393">Metoda ta umożliwia dodanie zdefiniowane przez określony wskazuje na koniec bieżącego rysunek segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-393">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="946a3-394">W przypadku poprzedniego linii i krzywych w <xref:System.Drawing.Drawing2D.GraphicsPath>, linia jest rysowana do ostatniego punktu w ścieżce nawiązać połączenie z pierwszym punktem w nowej segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-394">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-395">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-395">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-396">Kod powoduje utworzenie ścieżki, dodaje trzy wiersze, które tworzą trójkąt i następnie rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-396">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1"><span data-ttu-id="946a3-397">Współrzędna x punktu początkowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-397">The x-coordinate of the starting point of the line.</span></span></param>
        <param name="y1"><span data-ttu-id="946a3-398">Współrzędna y punktu początkowego wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-398">The y-coordinate of the starting point of the line.</span></span></param>
        <param name="x2"><span data-ttu-id="946a3-399">Współrzędna x punktu końcowego linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-399">The x-coordinate of the endpoint of the line.</span></span></param>
        <param name="y2"><span data-ttu-id="946a3-400">Współrzędna y punktu końcowego linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-400">The y-coordinate of the endpoint of the line.</span></span></param>
        <summary><span data-ttu-id="946a3-401">Dołącza ten odcinek <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-401">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-402">Metoda ta umożliwia dodanie segment linii, zdefiniowane przez określony wskazuje na końcu <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-402">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="946a3-403">W przypadku poprzedniego linii i krzywych w <xref:System.Drawing.Drawing2D.GraphicsPath>, linia jest rysowana do ostatniego punktu w ścieżce nawiązać połączenie z pierwszym punktem w nowej segment linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-403">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-404">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-404">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-405">Dołącza szereg segmenty linii połączonej na końcu <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-405">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-406">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które definiują segmentów linii do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-406">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="946a3-407">Dołącza szereg segmenty linii połączonej na końcu <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-407">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-408">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktu końcowego poprzedniego segmentu punkt początkowy wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-408">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="946a3-409">`points` Parametr określa tablicę punktów końcowych.</span><span class="sxs-lookup"><span data-stu-id="946a3-409">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="946a3-410">Pierwsze dwa określ pierwszy wiersz.</span><span class="sxs-lookup"><span data-stu-id="946a3-410">The first two specify the first line.</span></span> <span data-ttu-id="946a3-411">Każdy dodatkowy punkt określa punkt końcowy segmentu wiersza, którego punkt początkowy jest punkt końcowy w poprzednim wierszu.</span><span class="sxs-lookup"><span data-stu-id="946a3-411">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-412">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-412">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-413">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-413">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-414">Tworzy tablicę czterech punktów, które opisują trójkąt.</span><span class="sxs-lookup"><span data-stu-id="946a3-414">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="946a3-415">Tworzy ścieżkę i dodaje tablicy wierszy.</span><span class="sxs-lookup"><span data-stu-id="946a3-415">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="946a3-416">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-416">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="946a3-417">Każdy wiersz po pierwszym punktem używa poprzedniego punktu jako punkt początkowy i nowy punkt, jako punktu końcowego powiadomienia.</span><span class="sxs-lookup"><span data-stu-id="946a3-417">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-418">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które definiują segmentów linii do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-418">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span></span></param>
        <summary><span data-ttu-id="946a3-419">Dołącza szereg segmenty linii połączonej na końcu <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-419">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-420">W przypadku poprzedniego linii i krzywych na ilustracji, wiersza jest dodawany do łączenia z punktu końcowego poprzedniego segmentu punkt początkowy wiersza.</span><span class="sxs-lookup"><span data-stu-id="946a3-420">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="946a3-421">`points` Parametr określa tablicę punktów końcowych.</span><span class="sxs-lookup"><span data-stu-id="946a3-421">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="946a3-422">Pierwsze dwa określ pierwszy wiersz.</span><span class="sxs-lookup"><span data-stu-id="946a3-422">The first two specify the first line.</span></span> <span data-ttu-id="946a3-423">Każdy dodatkowy punkt określa punkt końcowy segmentu wiersza, którego punkt początkowy jest punkt końcowy w poprzednim wierszu.</span><span class="sxs-lookup"><span data-stu-id="946a3-423">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-424">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-424">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath"><span data-ttu-id="946a3-425"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-425">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span></span></param>
        <param name="connect"><span data-ttu-id="946a3-426">Wartość logiczna określająca, czy pierwszy rysunek dodano ścieżki jest częścią ostatni rysunek w tej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-426">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="946a3-427">Wartość <see langword="true" /> określa (jeśli jest to możliwe) pierwszy rysunek dodano ścieżki jest częścią ostatni rysunek w tej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-427">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span></span> <span data-ttu-id="946a3-428">Wartość <see langword="false" /> Określa, że pierwszy rysunek dodano ścieżki jest oddzielony od ostatni rysunek w tej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-428">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span></span></param>
        <summary><span data-ttu-id="946a3-429">Dołącza określony <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-429">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-430">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-430">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-431">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-431">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-432">Tworzy dwie ścieżki jeden trójkąt prawej stronie górę, a druga trójkąta w górę strony szczegółów.</span><span class="sxs-lookup"><span data-stu-id="946a3-432">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="946a3-433">Dodaje ścieżkę drugiego do pierwszego.</span><span class="sxs-lookup"><span data-stu-id="946a3-433">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="946a3-434">Rysuje wynikowe ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-434">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-435">Dodaje konturu kształtu kołowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-435">Adds the outline of a pie shape to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-436">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-436">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-437">Kąt początkowy dla sekcji kołowy trwające stopni w prawo od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-437">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-438">Kąt między <paramref name="startAngle" /> i na końcu sekcji kołowy w stopniach do ruchu wskazówek zegara od <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-438">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="946a3-439">Dodaje konturu kształtu kołowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-439">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-440">Kształt kołowy jest definiowany przez częściowe zarys elipsę i dwa wiersze promieniowego, przecinających punktów końcowych konturu częściowe.</span><span class="sxs-lookup"><span data-stu-id="946a3-440">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="946a3-441">Częściowe konspektu rozpoczyna się od `startAngle` (mierzone zgodnie ze wskazówkami zegara od osi x) i kończy się `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="946a3-441">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-442">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-442">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-443">Współrzędna x lewego górnego rogu otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-443">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-444">Współrzędna y lewego górnego rogu otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-444">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-445">Szerokość otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-445">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-446">Wysokość otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-446">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-447">Kąt początkowy dla sekcji kołowy trwające stopni w prawo od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-447">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-448">Kąt między <paramref name="startAngle" /> i na końcu sekcji kołowy w stopniach do ruchu wskazówek zegara od <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-448">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="946a3-449">Dodaje konturu kształtu kołowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-449">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-450">Kształt kołowy jest definiowany przez częściowe zarys elipsę i dwa wiersze promieniowego, przecinających punktów końcowych konturu częściowe.</span><span class="sxs-lookup"><span data-stu-id="946a3-450">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="946a3-451">Częściowe konspektu rozpoczyna się od `startAngle` (mierzone zgodnie ze wskazówkami zegara od osi x) i kończy się `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="946a3-451">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-452">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-452">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-453">Kod powoduje utworzenie ścieżki grafiki, dodaje kształt kołowy i następnie rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-453">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-454">Współrzędna x lewego górnego rogu otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-454">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-455">Współrzędna y lewego górnego rogu otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-455">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="width"><span data-ttu-id="946a3-456">Szerokość otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-456">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="height"><span data-ttu-id="946a3-457">Wysokość otaczający prostokąt, który definiuje elipsy, z którego jest rysowana wykres kołowy.</span><span class="sxs-lookup"><span data-stu-id="946a3-457">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span></span></param>
        <param name="startAngle"><span data-ttu-id="946a3-458">Kąt początkowy dla sekcji kołowy trwające stopni w prawo od osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-458">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="946a3-459">Kąt między <paramref name="startAngle" /> i na końcu sekcji kołowy w stopniach do ruchu wskazówek zegara od <paramref name="startAngle" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-459">The angle between <paramref name="startAngle" /> and the end of the pie section, measured in degrees clockwise from <paramref name="startAngle" />.</span></span></param>
        <summary><span data-ttu-id="946a3-460">Dodaje konturu kształtu kołowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-460">Adds the outline of a pie shape to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-461">Kształt kołowy jest definiowany przez częściowe zarys elipsę i dwa wiersze promieniowego, przecinających punktów końcowych konturu częściowe.</span><span class="sxs-lookup"><span data-stu-id="946a3-461">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="946a3-462">Częściowe konspektu rozpoczyna się od `startAngle` (mierzone zgodnie ze wskazówkami zegara od osi x) i kończy się `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="946a3-462">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-463">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-463">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-464">Dodaje wielokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-464">Adds a polygon to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-465">Tablica <see cref="T:System.Drawing.Point" /> struktur, które definiuje wielokąta do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-465">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="946a3-466">Dodaje wielokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-466">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-467">Punkty w `points` tablicy Określ wierzchołki wielokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-467">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="946a3-468">Jeśli pierwszy punkt w tablicy nie jest taka sama jak ostatni punkt, te dwa punkty są podłączone do zamknąć wielokąt.</span><span class="sxs-lookup"><span data-stu-id="946a3-468">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-469">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-469">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-470">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-470">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-471">Tworzy tablicę punkty, który definiuje wielokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-471">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="946a3-472">Tworzy ścieżkę i dodaje wielokąta do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-472">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="946a3-473">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-473">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="946a3-474">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które definiuje wielokąta do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-474">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span></span></param>
        <summary><span data-ttu-id="946a3-475">Dodaje wielokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-475">Adds a polygon to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-476">Punkty w `points` tablicy Określ wierzchołki wielokąta.</span><span class="sxs-lookup"><span data-stu-id="946a3-476">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="946a3-477">Jeśli pierwszy punkt w tablicy nie jest taka sama jak ostatni punkt, te dwa punkty są podłączone do zamknąć wielokąt.</span><span class="sxs-lookup"><span data-stu-id="946a3-477">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-478">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-478">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-479">Dodaje prostokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-479">Adds a rectangle to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-480">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokąta do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-480">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="946a3-481">Dodaje prostokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-481">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-482">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-482">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-483">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-483">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-484">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-484">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-485">Tworzy prostokąt, a następnie dodaje prostokąta do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-485">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="946a3-486">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-486">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="946a3-487">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąta do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-487">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span></span></param>
        <summary><span data-ttu-id="946a3-488">Dodaje prostokąta do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-488">Adds a rectangle to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-489">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-489">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-490">Dodaje serię prostokąty do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-490">Adds a series of rectangles to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="946a3-491">Tablica <see cref="T:System.Drawing.Rectangle" /> struktur, które reprezentuje prostokątach, aby go dodać.</span><span class="sxs-lookup"><span data-stu-id="946a3-491">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="946a3-492">Dodaje serię prostokąty do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-492">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-493">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-494">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-495">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-495">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-496">Tworzy tablicę prostokąty i dodaje prostokątów w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-496">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="946a3-497">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-497">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects"><span data-ttu-id="946a3-498">Tablica <see cref="T:System.Drawing.RectangleF" /> struktur, które reprezentuje prostokątach, aby go dodać.</span><span class="sxs-lookup"><span data-stu-id="946a3-498">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span></span></param>
        <summary><span data-ttu-id="946a3-499">Dodaje serię prostokąty do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-499">Adds a series of rectangles to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-500">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-500">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-501">Dodaje ciąg tekstowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-501">Adds a text string to this path.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="946a3-502"><see cref="T:System.String" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-502">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="946a3-503">A <see cref="T:System.Drawing.FontFamily" /> reprezentujący nazwę czcionki, za pomocą którego jest rysowana testu.</span><span class="sxs-lookup"><span data-stu-id="946a3-503">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="946a3-504">A <see cref="T:System.Drawing.FontStyle" /> wyliczenie, które reprezentuje styl informacji na temat tekstu (pogrubienie, kursywa i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="946a3-504">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="946a3-505">Musi to być rzutowany jako liczba całkowita (zobacz przykładowy kod w dalszej części tej sekcji).</span><span class="sxs-lookup"><span data-stu-id="946a3-505">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="946a3-506">Wysokość pola kwadratowy em granic znak.</span><span class="sxs-lookup"><span data-stu-id="946a3-506">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="946a3-507">A <see cref="T:System.Drawing.Point" /> reprezentujący punkt, w którym tekst rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="946a3-507">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="946a3-508">Element <see cref="T:System.Drawing.StringFormat" /> , który określa formatowanie informacje, takie jak linia odstępów i wyrównania tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-508">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="946a3-509">Dodaje ciąg tekstowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-509">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-510">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-510">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-511">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-511">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-512">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-512">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-513">Określa argumenty ciągu i czcionki.</span><span class="sxs-lookup"><span data-stu-id="946a3-513">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="946a3-514">Dodaje ciąg do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-514">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="946a3-515">Rysuje ciąg do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-515">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="946a3-516">Istnieją dwie ważne czynności, aby podkreślić. Po pierwsze należy zauważyć, że `fontStyle` argument jest rzutowany jako liczba całkowita.</span><span class="sxs-lookup"><span data-stu-id="946a3-516">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="946a3-517"><xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> Metoda tego wymaga, tak że dwóch lub więcej <xref:System.Drawing.FontStyle> elementów członkowskich może być łączone w celu utworzenia styl czcionki żądaną (w tym przypadku <xref:System.Drawing.FontStyle.Italic> i <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="946a3-517">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="946a3-518">Po drugie, zwróć uwagę, że <xref:System.Drawing.Graphics.FillPath%2A> metoda jest używana zamiast <xref:System.Drawing.Graphics.DrawPath%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="946a3-518">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="946a3-519">Jeśli <xref:System.Drawing.Graphics.FillPath%2A> jest używany, renderowane pełnego tekstu, dlatego jeśli <xref:System.Drawing.Graphics.DrawPath%2A> jest używany, tekst będzie styl konturu.</span><span class="sxs-lookup"><span data-stu-id="946a3-519">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="946a3-520"><see cref="T:System.String" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-520">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="946a3-521">A <see cref="T:System.Drawing.FontFamily" /> reprezentujący nazwę czcionki, za pomocą którego jest rysowana testu.</span><span class="sxs-lookup"><span data-stu-id="946a3-521">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="946a3-522">A <see cref="T:System.Drawing.FontStyle" /> wyliczenie, które reprezentuje styl informacji na temat tekstu (pogrubienie, kursywa i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="946a3-522">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="946a3-523">Musi to być rzutowany jako liczba całkowita (zobacz przykładowy kod w dalszej części tej sekcji).</span><span class="sxs-lookup"><span data-stu-id="946a3-523">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="946a3-524">Wysokość pola kwadratowy em granic znak.</span><span class="sxs-lookup"><span data-stu-id="946a3-524">The height of the em square box that bounds the character.</span></span></param>
        <param name="origin"><span data-ttu-id="946a3-525">A <see cref="T:System.Drawing.PointF" /> reprezentujący punkt, w którym tekst rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="946a3-525">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span></span></param>
        <param name="format"><span data-ttu-id="946a3-526">Element <see cref="T:System.Drawing.StringFormat" /> , który określa formatowanie informacje, takie jak linia odstępów i wyrównania tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-526">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="946a3-527">Dodaje ciąg tekstowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-527">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-528">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-528">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="946a3-529"><see cref="T:System.String" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-529">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="946a3-530">A <see cref="T:System.Drawing.FontFamily" /> reprezentujący nazwę czcionki, za pomocą którego jest rysowana testu.</span><span class="sxs-lookup"><span data-stu-id="946a3-530">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="946a3-531">A <see cref="T:System.Drawing.FontStyle" /> wyliczenie, które reprezentuje styl informacji na temat tekstu (pogrubienie, kursywa i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="946a3-531">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="946a3-532">Musi to być rzutowany jako liczba całkowita (zobacz przykładowy kod w dalszej części tej sekcji).</span><span class="sxs-lookup"><span data-stu-id="946a3-532">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="946a3-533">Wysokość pola kwadratowy em granic znak.</span><span class="sxs-lookup"><span data-stu-id="946a3-533">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="946a3-534">A <see cref="T:System.Drawing.Rectangle" /> reprezentujący prostokąt, który granic tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-534">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="946a3-535">Element <see cref="T:System.Drawing.StringFormat" /> , który określa formatowanie informacje, takie jak linia odstępów i wyrównania tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-535">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="946a3-536">Dodaje ciąg tekstowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-536">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-537">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-537">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="946a3-538"><see cref="T:System.String" /> Do dodania.</span><span class="sxs-lookup"><span data-stu-id="946a3-538">The <see cref="T:System.String" /> to add.</span></span></param>
        <param name="family"><span data-ttu-id="946a3-539">A <see cref="T:System.Drawing.FontFamily" /> reprezentujący nazwę czcionki, za pomocą którego jest rysowana testu.</span><span class="sxs-lookup"><span data-stu-id="946a3-539">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span></span></param>
        <param name="style"><span data-ttu-id="946a3-540">A <see cref="T:System.Drawing.FontStyle" /> wyliczenie, które reprezentuje styl informacji na temat tekstu (pogrubienie, kursywa i tak dalej).</span><span class="sxs-lookup"><span data-stu-id="946a3-540">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span></span> <span data-ttu-id="946a3-541">Musi to być rzutowany jako liczba całkowita (zobacz przykładowy kod w dalszej części tej sekcji).</span><span class="sxs-lookup"><span data-stu-id="946a3-541">This must be cast as an integer (see the example code later in this section).</span></span></param>
        <param name="emSize"><span data-ttu-id="946a3-542">Wysokość pola kwadratowy em granic znak.</span><span class="sxs-lookup"><span data-stu-id="946a3-542">The height of the em square box that bounds the character.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="946a3-543">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który granic tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-543">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span></span></param>
        <param name="format"><span data-ttu-id="946a3-544">Element <see cref="T:System.Drawing.StringFormat" /> , który określa formatowanie informacje, takie jak linia odstępów i wyrównania tekstu.</span><span class="sxs-lookup"><span data-stu-id="946a3-544">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span></span></param>
        <summary><span data-ttu-id="946a3-545">Dodaje ciąg tekstowy do tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-545">Adds a text string to this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-546">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-546">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-547">Czyści wszystkie znaczniki z tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-547">Clears all markers from this path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-548">Użyj <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> metodę w celu utworzenia znacznik w bieżącej lokalizacji w <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="946a3-549">Użyj <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> metody do iteracji przez istniejące znaczniki w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-549">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="946a3-550">Znaczniki są używane do oddzielania grup ścieżek podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="946a3-550">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="946a3-551">Jeden lub więcej ścieżek podrzędnych mogą być zawarte między znacznikami dwa.</span><span class="sxs-lookup"><span data-stu-id="946a3-551">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-552">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-553">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-554">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-554">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-555">Dodaje kilka obiektów do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-555">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="946a3-556">Dodaje znaczniki do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-556">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="946a3-557">Czyści wszystkie znaczniki ze ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-557">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="946a3-558">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-558">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-559">Tworzy dokładną kopię tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-559">Creates an exact copy of this path.</span></span></summary>
        <returns><span data-ttu-id="946a3-560"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Ta metoda tworzy, rzutowany jako obiekt.</span><span class="sxs-lookup"><span data-stu-id="946a3-560">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-561">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-561">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-562">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-562">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-563">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-563">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-564">Dodaje kilka wartości do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-564">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="946a3-565">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-565">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-566">Klony kopię tej ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-566">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="946a3-567">Rysuje nowej ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-567">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="946a3-568">Należy zauważyć, że wywołanie <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> metody musi być rzutowany jako <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-568">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-569">Zamyka wszystkie otwarte dane w tej ścieżce i uruchamia nowy rysunek.</span><span class="sxs-lookup"><span data-stu-id="946a3-569">Closes all open figures in this path and starts a new figure.</span></span> <span data-ttu-id="946a3-570">Łącząc linię z punktu końcowego punktu początkowego na zamknięcie każdego otwartego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-570">It closes each open figure by connecting a line from its endpoint to its starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-571">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-572">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-573">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-573">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-574">Dodaje kilka otwartych figur do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-574">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="946a3-575">Zamyka wszystkie dane w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-575">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="946a3-576">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-576">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-577">Zamyka bieżący rysunek i uruchamia nowy rysunek.</span><span class="sxs-lookup"><span data-stu-id="946a3-577">Closes the current figure and starts a new figure.</span></span> <span data-ttu-id="946a3-578">Jeśli bieżący rysunek zawiera sekwencję połączonych linii i krzywych, metoda zamyka pętli, łącząc linię z punktu końcowego do punktu początkowego.</span><span class="sxs-lookup"><span data-stu-id="946a3-578">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-579">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-579">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-580">Ten kod tworzy trójkąt, tworząc nową ścieżkę, uruchamianie rysunku, dodając dwa wiersze przecinających się do wartości i zamknięcie rysunek w celu utworzenia trójkąt.</span><span class="sxs-lookup"><span data-stu-id="946a3-580">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="946a3-581">Ścieżka jest następnie rysowane na ekranie.</span><span class="sxs-lookup"><span data-stu-id="946a3-581">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-582">Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-582">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-583">Wywoływanie <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> umożliwia zasoby używane przez to <xref:System.Drawing.Drawing2D.GraphicsPath> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="946a3-583">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946a3-584">Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenie, które określa, jak wnętrza kształty w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> są wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-584">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></summary>
        <value><span data-ttu-id="946a3-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> wyliczenie, który określa sposób wnętrza kształty w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> są wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-585">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-586">Umożliwia obiektu spróbuj zwolnić zasoby i wykonywać inne operacje oczyszczania, zanim go jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="946a3-586">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-587">Konwertuje sekwencję segmenty linii połączonej każdej krzywej w tej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-587">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-588">Konwertuje sekwencję segmenty linii połączonej każdej krzywej w tej ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-588">Converts each curve in this path into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-589">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-589">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="946a3-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> o którą należy przekształcić to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> przed spłaszczanie.</span><span class="sxs-lookup"><span data-stu-id="946a3-590">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <summary><span data-ttu-id="946a3-591">Stosuje przekształcenia określony, a następnie konwertuje każdy krzywej w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> sekwencję segmenty linii połączonej.</span><span class="sxs-lookup"><span data-stu-id="946a3-591">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-592">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-592">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="946a3-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> o którą należy przekształcić to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> przed spłaszczanie.</span><span class="sxs-lookup"><span data-stu-id="946a3-593">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span></span></param>
        <param name="flatness"><span data-ttu-id="946a3-594">Określa maksymalny błąd dozwolone między krzywej i jego spłaszczonych zbliżenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-594">Specifies the maximum permitted error between the curve and its flattened approximation.</span></span> <span data-ttu-id="946a3-595">Wartość 0,25 jest domyślna.</span><span class="sxs-lookup"><span data-stu-id="946a3-595">A value of 0.25 is the default.</span></span> <span data-ttu-id="946a3-596">Zmniejszenie był zwiększy liczbę segmentów w zbliżenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-596">Reducing the flatness value will increase the number of line segments in the approximation.</span></span></param>
        <summary><span data-ttu-id="946a3-597">Konwertuje każdy krzywej w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> sekwencję segmenty linii połączonej.</span><span class="sxs-lookup"><span data-stu-id="946a3-597">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-598">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-598">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-599">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-599">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-600">Tworzy ścieżkę grafiki i macierzy tłumaczenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-600">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="946a3-601">Dodaje krzywej do ścieżki w cztery punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-601">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="946a3-602">Rysuje ścieżki (krzywa) do ekranu, za pomocą czarnego pióra.</span><span class="sxs-lookup"><span data-stu-id="946a3-602">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="946a3-603">Przenosi krzywa, szczegółów 10 pikseli i spłaszcza go.</span><span class="sxs-lookup"><span data-stu-id="946a3-603">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="946a3-604">Rysuje krzywą na ekranie za pomocą czerwonego pióra.</span><span class="sxs-lookup"><span data-stu-id="946a3-604">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="946a3-605">Należy zauważyć, że czerwone krzywej ma spłaszczone wiersze łączenia punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-605">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-606">Zwraca prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-607">Zwraca prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-607">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-608">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-608">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-609">Rozmiar zwróconego prostokąt otaczający jest zależne od typu zakończenia, szerokość i limit ukośnych pióra i w związku z tym tworzy "luźne Dopasuj" do ścieżki ograniczonego.</span><span class="sxs-lookup"><span data-stu-id="946a3-609">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="946a3-610">Przybliżony formuła jest: początkowej prostokąt otaczający jest zwiększony przez szerokość strony, a wynik jest mnożony przez limit skos, a także niektórych dodatkowych marginesie, aby umożliwić zakończenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-610">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-611">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-611">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-612">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-612">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-613">Tworzy ścieżkę grafiki.</span><span class="sxs-lookup"><span data-stu-id="946a3-613">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="946a3-614">Dodaje elipsę (okrąg) i pobiera je do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-614">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-615">Pobiera prostokąt otaczający koła wywołaniem <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> i rysuje prostokąt na ekranie.</span><span class="sxs-lookup"><span data-stu-id="946a3-615">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-616">Tworzy drugi ścieżki grafiki.</span><span class="sxs-lookup"><span data-stu-id="946a3-616">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="946a3-617">Dodaje okrąg i rozszerza się ścieżkę do szerokości 10.</span><span class="sxs-lookup"><span data-stu-id="946a3-617">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="946a3-618">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-618">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-619">Pobiera prostokąt otaczający drugi koła.</span><span class="sxs-lookup"><span data-stu-id="946a3-619">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="946a3-620">Rysuje prostokąt otaczający do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-620">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-621">Wyświetla rozmiar prostokąta w oknie dialogowym.</span><span class="sxs-lookup"><span data-stu-id="946a3-621">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="946a3-622">Zwróć uwagę, że prostokąt otaczający po prawej stronie jest większa (do konta dodatkową szerokość linii).</span><span class="sxs-lookup"><span data-stu-id="946a3-622">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="946a3-623"><see cref="T:System.Drawing.Drawing2D.Matrix" /> , Który określa przekształcenia mają być stosowane do tej ścieżki, przed obliczeniem prostokąt otaczający.</span><span class="sxs-lookup"><span data-stu-id="946a3-623">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="946a3-624">Ta ścieżka nie jest trwale przekształcane; Transformacja jest używany tylko podczas obliczania prostokąt otaczający.</span><span class="sxs-lookup"><span data-stu-id="946a3-624">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <summary><span data-ttu-id="946a3-625">Zwraca prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> gdy ta ścieżka jest przekształcana przez określony <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-625">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-626">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-626">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-627">Rozmiar zwróconego prostokąt otaczający jest zależne od typu zakończenia, szerokość i limit ukośnych pióra i w związku z tym tworzy "luźne Dopasuj" do ścieżki ograniczonego.</span><span class="sxs-lookup"><span data-stu-id="946a3-627">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="946a3-628">Przybliżony formuła jest: początkowej prostokąt otaczający jest zwiększony przez szerokość strony, a wynik jest mnożony przez limit skos, a także niektórych dodatkowych marginesie, aby umożliwić zakończenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-628">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-629">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="946a3-629">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="946a3-630"><see cref="T:System.Drawing.Drawing2D.Matrix" /> , Który określa przekształcenia mają być stosowane do tej ścieżki, przed obliczeniem prostokąt otaczający.</span><span class="sxs-lookup"><span data-stu-id="946a3-630">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span></span> <span data-ttu-id="946a3-631">Ta ścieżka nie jest trwale przekształcane; Transformacja jest używany tylko podczas obliczania prostokąt otaczający.</span><span class="sxs-lookup"><span data-stu-id="946a3-631">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-632"><see cref="T:System.Drawing.Pen" /> Za pomocą którego do rysowania <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-632">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></param>
        <summary><span data-ttu-id="946a3-633">Zwraca prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas bieżącej ścieżki jest przekształcana przez określony <see cref="T:System.Drawing.Drawing2D.Matrix" /> i pobierane z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-633">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-634">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który to granic <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-634">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-635">Rozmiar zwróconego prostokąt otaczający jest zależne od typu zakończenia, szerokość i limit ukośnych pióra i w związku z tym tworzy "luźne Dopasuj" do ścieżki ograniczonego.</span><span class="sxs-lookup"><span data-stu-id="946a3-635">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="946a3-636">Przybliżony formuła jest: początkowej prostokąt otaczający jest zwiększony przez szerokość strony, a wynik jest mnożony przez limit skos, a także niektórych dodatkowych marginesie, aby umożliwić zakończenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-636">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-637">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="946a3-637">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-638">Pobiera ostatniego punktu w <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> Tablica to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-638">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-639">A <see cref="T:System.Drawing.PointF" /> reprezentujący ostatniego punktu w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-639">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-640">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-640">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-641">Kod powoduje utworzenie ścieżki, dodaje wiersz do ścieżki i następnie pobiera ostatniego punktu w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-641">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-642">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-642">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="946a3-643">Element <see cref="T:System.Drawing.Point" /> , który określa lokalizację do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-643">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-644"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-644">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="946a3-645">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-645">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-646">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-646">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-647">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-647">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-648">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-648">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="946a3-649">Element <see cref="T:System.Drawing.PointF" /> , który określa lokalizację do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-649">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-650"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-650">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="946a3-651">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-651">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-652">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-652">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-653">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-653">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-654">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-654">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="946a3-655">Element <see cref="T:System.Drawing.Point" /> , który określa lokalizację do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-655">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-656"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-656">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-657"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-657">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-658">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" /> i przy użyciu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-658">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-659">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> zgodnie z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-659">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-660">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-660">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="946a3-661">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-661">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-662">Przekształcenia macierzy `graphics` tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-662">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-663">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-663">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="946a3-664">Element <see cref="T:System.Drawing.PointF" /> , który określa lokalizację do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-664">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-665"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-665">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-666"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-666">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-667">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" /> i przy użyciu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-667">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-668">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> zgodnie z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-668">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-669">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-669">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="946a3-670">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-670">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-671">Przekształcenia macierzy `graphics` tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-671">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-672">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-672">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-673">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-673">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-674">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-674">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-675"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-675">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="946a3-676">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-676">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-677">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-677">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-678">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-678">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-679">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-679">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-680">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-680">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-681">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-681">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-682"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-682">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <summary><span data-ttu-id="946a3-683">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-683">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-684">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-684">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-685">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-685">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-686">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-686">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-687">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-687">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-688">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-688">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-689"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-689">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-690"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-690">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-691">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" /> i przy użyciu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-691">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-692">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> zgodnie z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-692">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-693">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-693">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="946a3-694">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-694">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-695">Przekształcenia macierzy `graphics` tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-695">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-696">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="946a3-696">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="946a3-697">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-697">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-698">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-698">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-699">Dodanie prostokąta do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-699">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="946a3-700">Tworzy szerokiego pióra i rozszerza się ścieżkę, z tym pióra (Aby przykład bardziej zrozumiały)</span><span class="sxs-lookup"><span data-stu-id="946a3-700">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="946a3-701">Testuje punkt (100, 50) aby zobaczyć, jeśli leży w (w) jednej krawędzi prostokąta, wywołując <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-701">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="946a3-702">Wynik jest wyświetlany w oknie komunikatu (w tym przypadku, true).</span><span class="sxs-lookup"><span data-stu-id="946a3-702">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="946a3-703">Innymi słowy krawędzi jest renderowany za pośrednictwem tego punktu.</span><span class="sxs-lookup"><span data-stu-id="946a3-703">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-704">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-704">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-705">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-705">The y-coordinate of the point to test.</span></span></param>
        <param name="pen"><span data-ttu-id="946a3-706"><see cref="T:System.Drawing.Pen" /> Do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-706">The <see cref="T:System.Drawing.Pen" /> to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-707"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-707">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-708">Wskazuje, czy określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> podczas rysowania z określonym <see cref="T:System.Drawing.Pen" /> i przy użyciu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-708">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-709">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ciągu (pod) konturu tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> zgodnie z określonym <see cref="T:System.Drawing.Pen" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-709">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-710">Ta metoda sprawdza, czy zarys podanej ścieżce jest renderowany widoczne w określonym punkcie.</span><span class="sxs-lookup"><span data-stu-id="946a3-710">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="946a3-711">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-711">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-712">Przekształcenia macierzy `graphics` parametru tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-712">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-713">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-713">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-714">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-714">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="946a3-715">A <see cref="T:System.Drawing.Point" /> reprezentujący punkt do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-715">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="946a3-716">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-716">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-717">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-717">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-718">Aby uzyskać przykład, zobacz `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="946a3-718">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="946a3-719">A <see cref="T:System.Drawing.PointF" /> reprezentujący punkt do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-719">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <summary><span data-ttu-id="946a3-720">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-720">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-721">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-721">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-722">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-722">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="946a3-723">A <see cref="T:System.Drawing.Point" /> reprezentujący punkt do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-723">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-724"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-724">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-725">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-725">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-726">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-726">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-727">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-727">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-728">Przekształcenia macierzy `graphics` parametru tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-728">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-729">Aby uzyskać przykład, zobacz `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="946a3-729">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="946a3-730">A <see cref="T:System.Drawing.PointF" /> reprezentujący punkt do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-730">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-731"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-731">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-732">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-732">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-733">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej przeciwnym <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-733">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-734">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-734">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-735">Przekształcenia macierzy `graphics` parametru tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-735">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-736">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-736">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-737">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-737">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-738">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-738">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="946a3-739">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-739">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-740">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-740">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-741">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-741">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-742">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-742">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-743">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-743">The y-coordinate of the point to test.</span></span></param>
        <summary><span data-ttu-id="946a3-744">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-744">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-745">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-745">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-746">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-746">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-747">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-747">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-748">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-748">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-749"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-749">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-750">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, przy użyciu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-750">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-751">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-751">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-752">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-752">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-753">Przekształcenia macierzy `graphics` tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-753">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-754">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-754">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-755">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-755">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-756">Tworzy ścieżkę i dodaje elipsy do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-756">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="946a3-757">Sprawdza, czy określony punkt znajduje się w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-757">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="946a3-758">Wyświetla wyniki w oknie dialogowym.</span><span class="sxs-lookup"><span data-stu-id="946a3-758">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="946a3-759">Współrzędna x punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-759">The x-coordinate of the point to test.</span></span></param>
        <param name="y"><span data-ttu-id="946a3-760">Współrzędna y punktu do testowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-760">The y-coordinate of the point to test.</span></span></param>
        <param name="graphics"><span data-ttu-id="946a3-761"><see cref="T:System.Drawing.Graphics" /> Do których chcesz przetestować widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-761">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span></span></param>
        <summary><span data-ttu-id="946a3-762">Wskazuje, czy określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> w regionie widoczne klipu określonego <see cref="T:System.Drawing.Graphics" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-762">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="946a3-763">Ta metoda zwraca <see langword="true" /> Jeśli określony punkt znajduje się w ramach tej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-763">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-764">Współrzędne punktu testowanego są podane w współrzędne świata.</span><span class="sxs-lookup"><span data-stu-id="946a3-764">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="946a3-765">Przekształcenia macierzy `graphics` parametru tymczasowo zostanie zastosowany przed testowanie pod kątem widoczności.</span><span class="sxs-lookup"><span data-stu-id="946a3-765">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-766">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-766">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946a3-767">Pobiera <see cref="T:System.Drawing.Drawing2D.PathData" /> która hermetyzuje tablic punkty (<paramref name="points" />) i typy (<paramref name="types" />) dla tego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-767">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <value><span data-ttu-id="946a3-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> która hermetyzuje tablice zarówno punktów i typy w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-768">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946a3-769">Pobiera punkty w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-769">Gets the points in the path.</span></span></summary>
        <value><span data-ttu-id="946a3-770">Tablica <see cref="T:System.Drawing.PointF" /> obiekty reprezentujące ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-770">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946a3-771">Pobiera typy odpowiednich punktach w <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-771">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span></span></summary>
        <value><span data-ttu-id="946a3-772">Tablica bajtów określa typy odpowiednich punktów w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-772">An array of bytes that specifies the types of the corresponding points in the path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-773">Tablica bajtów zwróconych przez <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> właściwość określa typy punktów i flagi dla punktów danych w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-773">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="946a3-774">Dla każdego punktu Usługi bits od 0 do 2 wskazać typ punktu, a usługi bits 3 do 7, przytrzymaj zestaw flag, które określają atrybuty punktu.</span><span class="sxs-lookup"><span data-stu-id="946a3-774">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="946a3-775">W poniższej tabeli przedstawiono możliwe wartości i ich znaczenie.</span><span class="sxs-lookup"><span data-stu-id="946a3-775">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="946a3-776">Wartość</span><span class="sxs-lookup"><span data-stu-id="946a3-776">Value</span></span>|<span data-ttu-id="946a3-777">Znaczenie</span><span class="sxs-lookup"><span data-stu-id="946a3-777">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="946a3-778">0</span><span class="sxs-lookup"><span data-stu-id="946a3-778">0</span></span>|<span data-ttu-id="946a3-779">Wskazuje, czy punkt znajduje się początku rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-779">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="946a3-780">1</span><span class="sxs-lookup"><span data-stu-id="946a3-780">1</span></span>|<span data-ttu-id="946a3-781">Wskazuje, że punkt znajduje się jeden z dwóch punktów końcowych linii.</span><span class="sxs-lookup"><span data-stu-id="946a3-781">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="946a3-782">3</span><span class="sxs-lookup"><span data-stu-id="946a3-782">3</span></span>|<span data-ttu-id="946a3-783">Wskazuje, że punkt znajduje się punkt końcowy lub punktu kontrolnego Beziera trzeciego stopnia.</span><span class="sxs-lookup"><span data-stu-id="946a3-783">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="946a3-784">0x7</span><span class="sxs-lookup"><span data-stu-id="946a3-784">0x7</span></span>|<span data-ttu-id="946a3-785">Maski bitów wszystkie z wyjątkiem trzy mniej znaczące bity, które wskazuje typ punktu.</span><span class="sxs-lookup"><span data-stu-id="946a3-785">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="946a3-786">0x20</span><span class="sxs-lookup"><span data-stu-id="946a3-786">0x20</span></span>|<span data-ttu-id="946a3-787">Określa, czy punkt znajduje się znacznik.</span><span class="sxs-lookup"><span data-stu-id="946a3-787">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="946a3-788">0x80</span><span class="sxs-lookup"><span data-stu-id="946a3-788">0x80</span></span>|<span data-ttu-id="946a3-789">Określa, że punkt znajduje się ostatniego punktu w zamkniętym podrzędną (rysunek).</span><span class="sxs-lookup"><span data-stu-id="946a3-789">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="946a3-790">Pobiera liczbę elementów w <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> lub <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-790">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></summary>
        <value><span data-ttu-id="946a3-791">Liczba całkowita określająca liczbę elementów w <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> lub <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> tablicy.</span><span class="sxs-lookup"><span data-stu-id="946a3-791">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-792">Opróżnia <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> i <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> tablice i ustawia <see cref="T:System.Drawing.Drawing2D.FillMode" /> do <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-792">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-793">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-794">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-795">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-795">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-796">Dodaje kilka podstawowych do niego.</span><span class="sxs-lookup"><span data-stu-id="946a3-796">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="946a3-797">Rysuje tablica punktów ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-797">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-798">Resetuje stan pusty ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-798">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="946a3-799">Tablica punktów należy uzyskuje ponownie (jeśli istnieje).</span><span class="sxs-lookup"><span data-stu-id="946a3-799">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="946a3-800">Rysuje tablicy do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-800">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="946a3-801">Zwróć uwagę, czy znajdzie żadna macierz następujący po wywołaniu resetowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-801">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-802">Odwraca kolejność punktów w <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> Tablica to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-802">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-803">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-803">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-804">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-804">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-805">Tworzy ścieżkę, a następnie dodaje kilka podstawowych do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-805">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="946a3-806">Rysuje tablica punktów ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-806">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-807">Rysuje tablica odwróconej punktów do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-807">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="946a3-808">Zauważ, że drugi listę punktów w odwrotnej kolejności z pierwszego.</span><span class="sxs-lookup"><span data-stu-id="946a3-808">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-809">Ustawia znacznik, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-809">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-810">Ta metoda tworzy znacznik w ścieżce, który może służyć do oddzielania części ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-810">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="946a3-811">Następnie można użyć <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> metody iteracyjne przeglądanie znaczników w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-811">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="946a3-812">Znaczniki są używane do oddzielania grup ścieżek podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="946a3-812">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="946a3-813">Jeden lub więcej ścieżek podrzędnych mogą być zawarte między znacznikami dwa w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-813">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-814">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-814">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-815">Kod powoduje utworzenie ścieżki i dodaje kilka podstawowych do ścieżki oddzielone znaczniki i rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-815">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="946a3-816">Uruchamia nowy rysunek bez zamykania bieżącego rysunku.</span><span class="sxs-lookup"><span data-stu-id="946a3-816">Starts a new figure without closing the current figure.</span></span> <span data-ttu-id="946a3-817">Wszystkie kolejne punkty dodane do ścieżki są dodawane do tej nowej liczby.</span><span class="sxs-lookup"><span data-stu-id="946a3-817">All subsequent points added to the path are added to this new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-818">Użytkownik musi przechowywać oryginalnych punktów, jeśli są one potrzebne.</span><span class="sxs-lookup"><span data-stu-id="946a3-818">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="946a3-819">Oryginalny punkty są konwertowane na sześcienny punktów kontrolnych Beziera wewnętrznie, w związku z tym nie ma mechanizmu do zwracania oryginalnych punktów.</span><span class="sxs-lookup"><span data-stu-id="946a3-819">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="946a3-820">Ta metoda rozpoczyna nowe podrzędną w ścieżce.</span><span class="sxs-lookup"><span data-stu-id="946a3-820">This method starts a new subpath in the path.</span></span> <span data-ttu-id="946a3-821">Podrzędne umożliwiają ścieżkę należy oddzielić sekcje i użyj <xref:System.Drawing.Drawing2D.GraphicsPathIterator> klasy do iteracji podrzędnej.</span><span class="sxs-lookup"><span data-stu-id="946a3-821">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-822">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-822">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-823">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-823">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-824">Tworzy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-824">Creates a path.</span></span>  
  
-   <span data-ttu-id="946a3-825">Dodaje dwa zestawy danych.</span><span class="sxs-lookup"><span data-stu-id="946a3-825">Adds two sets of figures.</span></span> <span data-ttu-id="946a3-826">Pierwszy zestaw danych łączy czterech podstawowych w dwóch cyfr.</span><span class="sxs-lookup"><span data-stu-id="946a3-826">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="946a3-827">Drugi zestaw danych łączy ten sam czterech elementów podstawowych (z tą różnicą, że są one przesunięcie w osi y) w trzech wyników.</span><span class="sxs-lookup"><span data-stu-id="946a3-827">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="946a3-828">Rysuje wszystkich danych na ekranie.</span><span class="sxs-lookup"><span data-stu-id="946a3-828">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="946a3-829">Należy zauważyć różnicę w wyglądzie między dwoma zestawami danych.</span><span class="sxs-lookup"><span data-stu-id="946a3-829">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="946a3-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> reprezentujący przekształcenie do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="946a3-830">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="946a3-831">Dotyczy to macierzy transformacji <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-831">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-832">Przekształcenie można skalować, tłumaczenie, obracanie lub pochylić <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="946a3-832">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-833">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-833">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-834">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-834">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-835">Tworzy ścieżkę i dodaje elipsy do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-835">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="946a3-836">Rysuje ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-836">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="946a3-837">Tworzy macierzy transformacji do translacji ścieżki, 100 jednostek w kierunku osi x.</span><span class="sxs-lookup"><span data-stu-id="946a3-837">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="946a3-838">Rysuje przekształcone ścieżki do ekranu.</span><span class="sxs-lookup"><span data-stu-id="946a3-838">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="946a3-839">Zwróć uwagę, że oryginalna elipsy jest wstawiany czarno przekształcone wielokropka jest rysowana w kolorze czerwonym.</span><span class="sxs-lookup"><span data-stu-id="946a3-839">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-840">Stosuje przekształcenia warp, zdefiniowanym przez prostokąt i równoległobok, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-840">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="946a3-841">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które definiują równoległobok prostokąta zdefiniowanych przez <paramref name="srcRect" /> jest przekształcane.</span><span class="sxs-lookup"><span data-stu-id="946a3-841">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="946a3-842">Tablica może zawierać trzech lub czterech elementów.</span><span class="sxs-lookup"><span data-stu-id="946a3-842">The array can contain either three or four elements.</span></span> <span data-ttu-id="946a3-843">Jeśli tablica zawiera trzy elementy, w prawym dolnym rogu równoległobok jest implikowana przez pierwsze trzy punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-843">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="946a3-844">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który jest przekształcany w równoległobok definicją <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-844">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <summary><span data-ttu-id="946a3-845">Stosuje przekształcenia warp, zdefiniowanym przez prostokąt i równoległobok, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-845">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-846">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-846">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="946a3-847">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które definiują równoległobok prostokąta zdefiniowanych przez <paramref name="srcRect" /> jest przekształcane.</span><span class="sxs-lookup"><span data-stu-id="946a3-847">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="946a3-848">Tablica może zawierać trzech lub czterech elementów.</span><span class="sxs-lookup"><span data-stu-id="946a3-848">The array can contain either three or four elements.</span></span> <span data-ttu-id="946a3-849">Jeśli tablica zawiera trzy elementy, w prawym dolnym rogu równoległobok jest implikowana przez pierwsze trzy punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-849">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="946a3-850">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który jest przekształcany w równoległobok definicją <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-850">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="946a3-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> określający geometrycznych przekształcenie do zastosowania do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-851">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <summary><span data-ttu-id="946a3-852">Stosuje przekształcenia warp, zdefiniowanym przez prostokąt i równoległobok, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-852">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-853">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-853">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="946a3-854">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które definiuje równoległobok prostokąta zdefiniowanych przez <paramref name="srcRect" /> jest przekształcane.</span><span class="sxs-lookup"><span data-stu-id="946a3-854">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="946a3-855">Tablica może zawierać trzech lub czterech elementów.</span><span class="sxs-lookup"><span data-stu-id="946a3-855">The array can contain either three or four elements.</span></span> <span data-ttu-id="946a3-856">Jeśli tablica zawiera trzy elementy, w prawym dolnym rogu równoległobok jest implikowana przez pierwsze trzy punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-856">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="946a3-857">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który jest przekształcany w równoległobok definicją <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-857">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="946a3-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> określający geometrycznych przekształcenie do zastosowania do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-858">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="946a3-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> wyliczenia, która określa, czy ta operacja warp korzysta z punktu widzenia lub tryb warianty punktowego.</span><span class="sxs-lookup"><span data-stu-id="946a3-859">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <summary><span data-ttu-id="946a3-860">Stosuje przekształcenia warp, zdefiniowanym przez prostokąt i równoległobok, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-860">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-861">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-861">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints"><span data-ttu-id="946a3-862">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które definiują równoległobok prostokąta zdefiniowanych przez <paramref name="srcRect" /> jest przekształcane.</span><span class="sxs-lookup"><span data-stu-id="946a3-862">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed.</span></span> <span data-ttu-id="946a3-863">Tablica może zawierać trzech lub czterech elementów.</span><span class="sxs-lookup"><span data-stu-id="946a3-863">The array can contain either three or four elements.</span></span> <span data-ttu-id="946a3-864">Jeśli tablica zawiera trzy elementy, w prawym dolnym rogu równoległobok jest implikowana przez pierwsze trzy punkty.</span><span class="sxs-lookup"><span data-stu-id="946a3-864">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span></span></param>
        <param name="srcRect"><span data-ttu-id="946a3-865">A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokąt, który jest przekształcany w równoległobok definicją <paramref name="destPoints" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-865">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</span></span></param>
        <param name="matrix"><span data-ttu-id="946a3-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> określający geometrycznych przekształcenie do zastosowania do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-866">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span></span></param>
        <param name="warpMode"><span data-ttu-id="946a3-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> wyliczenia, która określa, czy ta operacja warp korzysta z punktu widzenia lub tryb warianty punktowego.</span><span class="sxs-lookup"><span data-stu-id="946a3-867">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span></span></param>
        <param name="flatness"><span data-ttu-id="946a3-868">To wartość z zakresu od 0 do 1, który określa sposób prostego wynikowy ścieżkę.</span><span class="sxs-lookup"><span data-stu-id="946a3-868">A value from 0 through 1 that specifies how flat the resulting path is.</span></span> <span data-ttu-id="946a3-869">Aby uzyskać więcej informacji, zobacz <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> metody.</span><span class="sxs-lookup"><span data-stu-id="946a3-869">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span></span></param>
        <summary><span data-ttu-id="946a3-870">Stosuje przekształcenia warp, zdefiniowanym przez prostokąt i równoległobok, w tym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-870">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="946a3-871">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-871">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-872">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-872">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-873">Tworzy ścieżkę i dodaje prostokąta do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-873">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="946a3-874">Rysuje prostokąt tego ekranu w kolorze czarnym.</span><span class="sxs-lookup"><span data-stu-id="946a3-874">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="946a3-875">Wygięciach ścieżkę z punktu widzenia warp.</span><span class="sxs-lookup"><span data-stu-id="946a3-875">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="946a3-876">Rysuje prostokąt zawijać (ścieżka) do ekranu w kolorze czerwonym.</span><span class="sxs-lookup"><span data-stu-id="946a3-876">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="946a3-877">Ta ścieżka jest zastępowany krzywych, które należy umieścić obszar, który jest wypełniony, gdy ta ścieżka jest rysowana przez pióro określony.</span><span class="sxs-lookup"><span data-stu-id="946a3-877">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="946a3-878">Element <see cref="T:System.Drawing.Pen" /> , który określa szerokość między konspekt oryginalnej ścieżki i konspektu nowych, ta metoda tworzy.</span><span class="sxs-lookup"><span data-stu-id="946a3-878">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <summary><span data-ttu-id="946a3-879">Dodaje dodatkowe konspektu do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-879">Adds an additional outline to the path.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-880">Ta metoda tworzy kontur wokół oryginalnych wierszy, w tym <xref:System.Drawing.Drawing2D.GraphicsPath>, za pomocą odległość między wierszami istniejących i nowych konspektu równe, szerokość <xref:System.Drawing.Pen> używane w wywołaniu <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-880">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="946a3-881">Jeśli chcesz wypełnić odstępy między wierszami należy użyć <xref:System.Drawing.Graphics.FillPath%2A> zamiast następnie <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-881">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-882">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-882">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="946a3-883">Element <see cref="T:System.Drawing.Pen" /> , który określa szerokość między konspekt oryginalnej ścieżki i konspektu nowych, ta metoda tworzy.</span><span class="sxs-lookup"><span data-stu-id="946a3-883">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="946a3-884">Element <see cref="T:System.Drawing.Drawing2D.Matrix" /> , który określa przekształcenie do zastosowania do ścieżki przed rozszerzanie.</span><span class="sxs-lookup"><span data-stu-id="946a3-884">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <summary><span data-ttu-id="946a3-885">Dodaje dodatkowe konspektu do <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span><span class="sxs-lookup"><span data-stu-id="946a3-885">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-886">Ta metoda tworzy kontur wokół oryginalnych wierszy, w tym <xref:System.Drawing.Drawing2D.GraphicsPath>, za pomocą odległość między wierszami istniejących i nowych konspektu równe, szerokość <xref:System.Drawing.Pen> używane w wywołaniu <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-886">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="946a3-887">Jeśli chcesz wypełnić odstępy między wierszami należy użyć <xref:System.Drawing.Graphics.FillPath%2A> zamiast następnie <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-887">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-888">Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="946a3-888">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="946a3-889">Element <see cref="T:System.Drawing.Pen" /> , który określa szerokość między konspekt oryginalnej ścieżki i konspektu nowych, ta metoda tworzy.</span><span class="sxs-lookup"><span data-stu-id="946a3-889">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span></span></param>
        <param name="matrix"><span data-ttu-id="946a3-890">Element <see cref="T:System.Drawing.Drawing2D.Matrix" /> , który określa przekształcenie do zastosowania do ścieżki przed rozszerzanie.</span><span class="sxs-lookup"><span data-stu-id="946a3-890">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span></span></param>
        <param name="flatness"><span data-ttu-id="946a3-891">Wartość, która określa płaskość dla krzywych.</span><span class="sxs-lookup"><span data-stu-id="946a3-891">A value that specifies the flatness for curves.</span></span></param>
        <summary><span data-ttu-id="946a3-892">Zastępuje to <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> przy użyciu krzywych, które należy ująć obszar, który jest wypełniona, ta ścieżka jest rysowana przez określony pióra.</span><span class="sxs-lookup"><span data-stu-id="946a3-892">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="946a3-893">Ta metoda tworzy kontur wokół oryginalnych wierszy, w tym <xref:System.Drawing.Drawing2D.GraphicsPath>, za pomocą odległość między wierszami istniejących i nowych konspektu równe, szerokość <xref:System.Drawing.Pen> używane w wywołaniu <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-893">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="946a3-894">Jeśli chcesz wypełnić odstępy między wierszami należy użyć <xref:System.Drawing.Graphics.FillPath%2A> zamiast następnie <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="946a3-894">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="946a3-895">Poniższy przykład kodu jest przeznaczony do użytku z formularzami Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="946a3-895">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="946a3-896">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="946a3-896">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="946a3-897">Tworzy ścieżkę i dodaje dwie elipsy do ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-897">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="946a3-898">Rysuje ścieżkę w kolorze czarnym.</span><span class="sxs-lookup"><span data-stu-id="946a3-898">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="946a3-899">Rozszerzenie ścieżki.</span><span class="sxs-lookup"><span data-stu-id="946a3-899">Widens the path.</span></span>  
  
-   <span data-ttu-id="946a3-900">Rysuje ścieżkę na czerwono.</span><span class="sxs-lookup"><span data-stu-id="946a3-900">Draws the path in red.</span></span>  
  
 <span data-ttu-id="946a3-901">Zwróć uwagę, drugi renderowanie używa <xref:System.Drawing.Graphics.FillPath%2A> zamiast <xref:System.Drawing.Graphics.DrawPath%2A>, i dlatego renderowanych rysunek konspektu wypełnione.</span><span class="sxs-lookup"><span data-stu-id="946a3-901">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>