<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GraphicsPathIterator.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5868cfafe7838293ffd89cde43221f26fa996840c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">868cfafe7838293ffd89cde43221f26fa996840c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Provides the ability to iterate through subpaths in a <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> and test the types of shapes contained in each subpath.</source>
          <target state="translated">Zapewnia możliwość iterację podrzędne w <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> i testowanie typów kształtów podrzędnej.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object for which this helper class is to be initialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> Obiektu, dla którego ma zostać zainicjowana ta klasa pomocy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> klasy z określonym <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Upon return, contains an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points in the path.</source>
          <target state="translated">Po powrocie, zawiera tablicę <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> struktur, które reprezentują punkty w ścieżce.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Upon return, contains an array of bytes that represents the types of points in the path.</source>
          <target state="translated">Po powrocie zawiera tablicę bajtów reprezentujący typy punktów w ścieżce.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Specifies the starting index of the arrays.</source>
          <target state="translated">Określa indeks początkowy tablic.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Specifies the ending index of the arrays.</source>
          <target state="translated">Określa końcowy indeks tablic.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> property and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> property arrays of the associated <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into the two specified arrays.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> właściwości i <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> tablice właściwości skojarzonego <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> do dwóch określonych tablic.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The number of points copied.</source>
          <target state="translated">Liczba punktów skopiowane.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">`startIndex`</ph> and <ph id="ph2">`endIndex`</ph> parameters to copy a specified range of the path data.</source>
          <target state="translated">Użyj <ph id="ph1">`startIndex`</ph> i <ph id="ph2">`endIndex`</ph> parametrów, aby skopiować dane ścieżki określonego zakresu.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Creates a graphics path.</source>
          <target state="translated">Tworzy ścieżkę grafiki.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Populates it with several primitives and some markers.</source>
          <target state="translated">Wypełnia je kilka podstawowych i niektóre znaczników.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Lists the path data on the left side of the screen.</source>
          <target state="translated">Wyświetla ścieżkę danych po lewej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> i przewija go do tyłu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Increments the path data index to the second marker.</source>
          <target state="translated">Zwiększa indeks danych ścieżki do drugiego znacznika.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A&gt;</ph> method to copy the path data contained between the start and end indexes to the points and types arrays.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A&gt;</ph> metodę, aby skopiować dane ścieżki zawarte między początkową i końcową indeksuje do punktów i typy tablic.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)">
          <source>Lists this copied data on the right side of the screen.</source>
          <target state="translated">Wyświetla listę tym skopiowanych danych po prawej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
          <source>Gets the number of points in the path.</source>
          <target state="translated">Pobiera liczbę punktów, które w ścieżce.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count">
          <source>The number of points in the path.</source>
          <target state="translated">Liczba punktów w ścieżce.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> object.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez to <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">Wywoływanie <ph id="ph1">`Dispose`</ph> umożliwia zasoby używane przez to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiektu odbiorczego do innych celów.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Upon return, contains an array of <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> structures that represents the points in the path.</source>
          <target state="translated">Po powrocie, zawiera tablicę <ph id="ph1">&lt;see cref="T:System.Drawing.PointF" /&gt;</ph> struktur, które reprezentują punkty w ścieżce.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Upon return, contains an array of bytes that represents the types of points in the path.</source>
          <target state="translated">Po powrocie zawiera tablicę bajtów reprezentujący typy punktów w ścieżce.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Copies the <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> property and <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> property arrays of the associated <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> into the two specified arrays.</source>
          <target state="translated">Kopie <ph id="ph1">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /&gt;</ph> właściwości i <ph id="ph2">&lt;see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /&gt;</ph> tablice właściwości skojarzonego <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> do dwóch określonych tablic.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The number of points copied.</source>
          <target state="translated">Liczba punktów skopiowane.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Creates a graphics path.</source>
          <target state="translated">Tworzy ścieżkę grafiki.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Populates it with several primitives and some markers.</source>
          <target state="translated">Wypełnia je kilka podstawowych i niektóre znaczników.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Lists the path data on the left side of the screen.</source>
          <target state="translated">Wyświetla ścieżkę danych po lewej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> i przewija go do tyłu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Increments the path data index to the second marker.</source>
          <target state="translated">Zwiększa indeks danych ścieżki do drugiego znacznika.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A&gt;</ph> method to copy the path data to the <ph id="ph2">`points`</ph> and <ph id="ph3">`types`</ph> arrays.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A&gt;</ph> metodę, aby skopiować dane, ścieżka <ph id="ph2">`points`</ph> i <ph id="ph3">`types`</ph> tablic.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)">
          <source>Lists this copied data on the right side of the screen.</source>
          <target state="translated">Wyświetla listę tym skopiowanych danych po prawej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Indicates whether the path associated with this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> contains a curve.</source>
          <target state="translated">Wskazuje, czy ścieżka jest skojarzony z tym <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> zawiera krzywą.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current subpath contains a curve; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Ta metoda zwraca <ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli podrzędną bieżącej zawiera krzywej; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>All curves in a path are stored as sequences of Bézier splines.</source>
          <target state="translated">Krzywe wszystkie ścieżki są przechowywane jako sekwencji krzywych Beziera.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>For example, when you add an ellipse to a path, you specify the upper-left corner, the width, and the height of the ellipse's bounding rectangle.</source>
          <target state="translated">Na przykład podczas dodawania elipsy do ścieżki, określasz lewego górnego rogu, szerokość i wysokość prostokąta obwiedni elipsy.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Those numbers (upper-left corner, width, and height) are not stored in the path; instead; the ellipse is converted to a sequence of four Bézier splines.</source>
          <target state="translated">Te numery (lewego górnego rogu, szerokość i wysokość) nie są przechowywane w ścieżce; Zamiast tego; elipsy jest konwertowana na sekwencję cztery krzywych Beziera.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The path stores the endpoints and control points of those Bézier splines.</source>
          <target state="translated">Ścieżka sklepów punktów końcowych i punkty kontrolne tych krzywych Beziera.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>A path stores an array of data points, each of which belongs to a line or a Bézier spline.</source>
          <target state="translated">Ścieżka przechowuje tablicy punktów danych, z których każdy należy do wiersza lub krzywej Beziera.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>If some of the points in the array belong to Bézier splines, then <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Jeśli niektóre punkty w tablicy należą do krzywych Beziera następnie <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> zwraca <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>If all points in the array belong to lines, then <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Jeśli wszystkie punkty w tablicy należą do wierszy, następnie <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> zwraca <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Certain methods flatten a path, which means that all the curves in the path are converted to sequences of lines.</source>
          <target state="translated">Niektóre metody spłaszczanie ścieżki, co oznacza, że wszystkie krzywych w ścieżce są konwertowane na sekwencji wierszy.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>After a path has been flattened, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> will always return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Po została spłaszczona ścieżki, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A&gt;</ph> zawsze zwraca <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Calling the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> class will flatten a path.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A&gt;</ph>, lub <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A&gt;</ph> metody <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> klasy będzie spłaszczanie ścieżki.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPath`</ph>.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu <ph id="ph2">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt i elipsy.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object for <ph id="ph2">`myPath`</ph>.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiekt do <ph id="ph2">`myPath`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Tests to see if the current path <ph id="ph1">`myPath`</ph> contains a curve.</source>
          <target state="translated">Testy, aby sprawdzić, czy bieżącej ścieżki <ph id="ph1">`myPath`</ph> zawiera krzywą.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve">
          <source>Shows the result of the test in a message box.</source>
          <target state="translated">Przedstawia wynik testu w oknie komunikatu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Moves the iterator to the next marker in the path.</source>
          <target state="translated">Przenosi iteratora dalej znacznika w ścieżce.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object to which the points will be copied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> Obiekt, do którego zostaną skopiowane punkty.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>This <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> object has a <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object associated with it.</source>
          <target state="translated">To <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> obiekt ma <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> obiekt skojarzony z nim.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /&gt;</ph> method increments the associated <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to the next marker in its path and copies all the points contained between the current marker and the next marker (or end of path) to a second <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object passed in to the parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /&gt;</ph> Metody zwiększa skojarzone <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> do następnego znacznika w jego ścieżkę i kopie wszystkich punktów zawarte między bieżący znacznik i dalej znacznika (lub końca ścieżki) do drugiej <ph id="ph3">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> obiekt przekazany do parametru.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The number of points between this marker and the next.</source>
          <target state="translated">Liczba punktów między znacznika tej i następnych.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to set markers in a path.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> metodę, aby ustawić znaczników w ścieżce.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Markers are used to create groups of subpaths.</source>
          <target state="translated">Znaczniki są używane do tworzenia grup podrzędne.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>One or more subpaths can be between two markers.</source>
          <target state="translated">Co najmniej jeden podrzędne może być między dwoma znacznikami.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Adds three lines, a rectangle, an ellipse, and two markers.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt elipsy i dwa znaczniki.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Lists the values of all the path's points to the left side of the screen.</source>
          <target state="translated">Wyświetla listę wartości punktów wszystkich ścieżek po lewej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPathSection`</ph>, to receive copied points.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu <ph id="ph2">`myPathSection`</ph>, aby odbierać skopiowanych punktów.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method, which iterates to the first marker and copies all the points contained between that marker and the next to <ph id="ph2">`myPathSection`</ph>.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> metodę, która wykonuje iterację na pierwszy znacznik i kopiuje wszystkie punkty zawarte między znacznik i dalej, aby <ph id="ph2">`myPathSection`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Returns the number of points copied to <ph id="ph1">`markerPoints`</ph>.</source>
          <target state="translated">Zwraca liczbę punktów skopiowane do <ph id="ph1">`markerPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)">
          <source>Lists the marker number (the first marker) and number of points it contains to the right side of the screen.</source>
          <target state="translated">Wyświetla numer znacznika (pierwszy znacznik) i liczbę punktów, które zawiera z prawej strony ekranu.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>[out] The integer reference supplied to this parameter receives the index of the point that starts a subpath.</source>
          <target state="translated">[out] Odwołanie do liczby całkowitej dostarczony do tego parametru odbiera indeks punktu, która rozpoczyna się jej ścieżka podrzędna.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>[out] The integer reference supplied to this parameter receives the index of the point that ends the subpath to which <bpt id="p1">&lt;c&gt;</bpt>startIndex<ept id="p1">&lt;/c&gt;</ept> points.</source>
          <target state="translated">[out] Odwołanie do liczby całkowitej dostarczony do tego parametru odbiera indeks punktu, który kończy się podrzędną, do którego <bpt id="p1">&lt;c&gt;</bpt>startIndex<ept id="p1">&lt;/c&gt;</ept> punktów.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Increments the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the next marker in the path and returns the start and stop indexes by way of the [out] parameters.</source>
          <target state="translated">Zwiększa <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> do następnego znacznika w ścieżce i zwraca indeksów rozpoczęcie i zakończenie na parametry [out].</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The number of points between this marker and the next.</source>
          <target state="translated">Liczba punktów między znacznika tej i następnych.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> method to set markers in a path.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A&gt;</ph> metodę, aby ustawić znaczników w ścieżce.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Markers are used to create groups of subpaths.</source>
          <target state="translated">Znaczniki są używane do tworzenia grup podrzędne.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>One or more subpaths can be between two markers.</source>
          <target state="translated">Co najmniej jeden podrzędne może być między dwoma znacznikami.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Adds three lines, a rectangle, and an ellipse ¾ with markers between each.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt i elipsy ¾ ze znacznikami między nimi.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Draws the values for the array of points to the screen.</source>
          <target state="translated">Rysuje wartości tablica punktów do ekranu.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> method.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Uses the values returned from the iterative calls to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> to draw the start and stop points for each marker to the screen.</source>
          <target state="translated">Używa wartości zwracana z wywołań iteracyjne <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> do rysowania uruchomienia i zatrzymania punkty dla każdego znacznika do ekranu.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)">
          <source>Draws the value for the total number of points to the screen.</source>
          <target state="translated">Pobiera wartość łączną liczbę punktów na ekranie.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the point type shared by all points in the group.</source>
          <target state="translated">[out] Odbiera typ punktu współużytkowane przez wszystkie punkty w grupie.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Possible types can be retrieved from the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> enumeration.</source>
          <target state="translated">Możliwe typy mogą być pobierane z <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PathPointType" /&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the starting index of the group of points.</source>
          <target state="translated">[out] Odbiera indeks początkowy grupa punktów.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>[out] Receives the ending index of the group of points.</source>
          <target state="translated">[out] Odbiera końcową indeksu grupy punktów.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Gets the starting index and the ending index of the next group of data points that all have the same type.</source>
          <target state="translated">Pobiera początkowy indeksu i końcową indeksu następnej grupy danych wskazuje, mające tego samego typu.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>This method returns the number of data points in the group.</source>
          <target state="translated">Ta metoda zwraca liczbę punktów danych w grupie.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>If there are no more groups in the path, this method returns 0.</source>
          <target state="translated">Jeśli nie ma żadnych więcej grup w ścieżce, ta metoda zwraca wartość 0.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt i elipsy.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Lists the values of all the points to the left side of the screen.</source>
          <target state="translated">Wyświetla listę wartości wszystkich punktów po lewej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> and rewinds it.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> i przewija go do tyłu.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>In a <ph id="ph1">`for`</ph> loop, iterates through the points using the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> methods.</source>
          <target state="translated">W <ph id="ph1">`for`</ph> pętli, iteruje punktów przy użyciu <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> i <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Uses the values returned from the iterative calls to list the subpath number, the number of points in it, and the type of the path points to the right side of the screen.</source>
          <target state="translated">Aby wyświetlić listę numer podrzędną, liczba punktów go i typ punkty ścieżki do prawej krawędzi ekranu są używane wartości zwracana z wywołań iteracji.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Displays the value for the total number of points to the screen.</source>
          <target state="translated">Wyświetla wartość łączną liczbę punktów na ekranie.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)">
          <source>Note that <ph id="ph1">`ListPathPoints`</ph> is a helper function that separates most (not all) of the display code from the graphics path code.</source>
          <target state="translated">Należy pamiętać, że <ph id="ph1">`ListPathPoints`</ph> jest funkcją pomocnika, która oddziela większość (nie wszystkie) wyświetlania kodu z kodu ścieżki grafiki.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.GraphicsPathIterator">
          <source>Moves the subpath to the next subpath in the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</source>
          <target state="translated">Przenosi podrzędną dalej podrzędną w określonym <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> that is to have its data points set to match the data points of the retrieved figure (subpath) for this iterator.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> to ma swoje dane punkty Ustaw odpowiadający punktów danych pobranej wartości (podrzędną) to iteratora.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>[out] Indicates whether the current subpath is closed.</source>
          <target state="translated">[out] Wskazuje, czy bieżący podrzędną jest zamknięty.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>It is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the if the figure is closed, otherwise it is <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Jest <ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli obszar, jeśli liczba jest zamknięty, w przeciwnym razie jest <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Gets the next figure (subpath) from the associated path of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph>.</source>
          <target state="translated">Pobiera następny rysunek (podrzędną) ze skojarzoną ścieżkę tego <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The number of data points in the retrieved figure (subpath).</source>
          <target state="translated">Liczba punktów danych na rysunku pobrane (podrzędną).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>If there are no more figures to retrieve, zero is returned.</source>
          <target state="translated">Jeśli nie ma żadnych więcej wartości do pobrania, zwracana jest wartość zero.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Adds three lines, a rectangle, an ellipse, and two markers.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt elipsy i dwa znaczniki.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Lists the values of all the path's points to the left side of the screen.</source>
          <target state="translated">Wyświetla listę wartości punktów wszystkich ścieżek po lewej stronie ekranu.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object, <ph id="ph2">`myPathSection`</ph>, to receive copied points.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu <ph id="ph2">`myPathSection`</ph>, aby odbierać skopiowanych punktów.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method, which iterates to the third subpath (figure) and copies all the points contained in that subpath to the <ph id="ph2">`myPathSection`</ph> path, and also returns the number of points copied to <ph id="ph3">`subpathPoints`</ph>.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> metodę, która wykonuje iterację na ścieżkę podrzędną trzeci (rysunek) i kopiuje wszystkie punkty, które są zawarte w tym podrzędną do <ph id="ph2">`myPathSection`</ph> ścieżkę i zwraca liczbę punktów, które są kopiowane do <ph id="ph3">`subpathPoints`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)">
          <source>Lists the subpath number and number of points it contains to the right side of the screen.</source>
          <target state="translated">Wyświetla liczbę podrzędną i liczbę punktów, które zawiera z prawej strony ekranu.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Receives the starting index of the next subpath.</source>
          <target state="translated">[out] Odbiera indeks początkowy dalej podrzędną.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Receives the ending index of the next subpath.</source>
          <target state="translated">[out] Odbiera końcowy indeks następnego podrzędną.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>[out] Indicates whether the subpath is closed.</source>
          <target state="translated">[out] Wskazuje, czy ścieżka podrzędna jest zamknięty.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Moves the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the next subpath in the path.</source>
          <target state="translated">Przenosi <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> do następnego podrzędną w ścieżce.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The start index and end index of the next subpath are contained in the [out] parameters.</source>
          <target state="translated">Indeks początkowy i końcowy indeks następnego podrzędną znajdują się w parametry [out].</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The number of subpaths in the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object.</source>
          <target state="translated">Liczba ścieżek podrzędnych w <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> event object.</source>
          <target state="translated">Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> obiekt zdarzenia.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>The code performs the following actions:</source>
          <target state="translated">Kod wykonuje następujące czynności:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Adds three lines, a rectangle, and an ellipse.</source>
          <target state="translated">Dodaje trzy wiersze, prostokąt i elipsy.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Draws the values for the array of points to the screen.</source>
          <target state="translated">Rysuje wartości tablica punktów do ekranu.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> object.</source>
          <target state="translated">Tworzy <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method.</source>
          <target state="translated">Wywołania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Uses the values returned from the iterative calls to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> to draw the start and stop values for each subpath to the screen.</source>
          <target state="translated">Używa wartości zwracana z wywołań iteracyjne <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> do rysowania uruchomienia i zatrzymania wartości dla podrzędnej do ekranu.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)">
          <source>Draws the value for the total number of subpaths to the screen.</source>
          <target state="translated">Pobiera wartość całkowitą liczbę podrzędne do ekranu.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>Rewinds this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> to the beginning of its associated path.</source>
          <target state="translated">Przewija do tyłu to <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /&gt;</ph> na początku ścieżki skojarzone.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The first time you call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> method of an iterator, it gets the first figure (subpath) of that iterator's associated path.</source>
          <target state="translated">Przy pierwszym wywołaniu <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> metody iteracyjne, pobiera pierwszy rysunek (podrzędną) skojarzona ścieżka tego iteratora.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The second time, it gets the second figure, and so on.</source>
          <target state="translated">Drugim, pobiera drugi rysunek i tak dalej.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>When you call the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph> method, the sequence starts over; that is, after you call <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph>, the next call to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> gets the first figure in the path.</source>
          <target state="translated">Podczas wywoływania <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph> metody ciąg rozpoczyna się powyżej; oznacza to, że po wywołaniu metody <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A&gt;</ph>, następne wywołanie <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A&gt;</ph> pobiera pierwszą w ścieżce.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> methods behave similarly.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A&gt;</ph> metody zachowują się podobnie.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
          <source>Gets the number of subpaths in the path.</source>
          <target state="translated">Pobiera liczbę podrzędne w ścieżce.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount">
          <source>The number of subpaths in the path.</source>
          <target state="translated">Liczba ścieżek podrzędnych w ścieżce.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>