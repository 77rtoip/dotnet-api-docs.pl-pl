<Type Name="GraphicsPathIterator" FullName="System.Drawing.Drawing2D.GraphicsPathIterator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="868cfafe7838293ffd89cde43221f26fa996840c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPathIterator : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPathIterator extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPathIterator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPathIterator&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPathIterator sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Zapewnia możliwość iterację podrzędne w <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> i testowanie typów kształtów podrzędnej. Klasa ta nie może być dziedziczona.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPathIterator (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPathIterator(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Obiektu, dla którego ma zostać zainicjowana ta klasa pomocy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> klasy z określonym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyData">
      <MemberSignature Language="C#" Value="public int CopyData (ref System.Drawing.PointF[] points, ref byte[] types, int startIndex, int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CopyData(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types, int32 startIndex, int32 endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData(System.Drawing.PointF[]@,System.Byte[]@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyData (ByRef points As PointF(), ByRef types As Byte(), startIndex As Integer, endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CopyData(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types, int startIndex, int endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]&amp;" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]&amp;" RefType="ref" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="endIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="points">Po powrocie, zawiera tablicę <see cref="T:System.Drawing.PointF" /> struktur, które reprezentują punkty w ścieżce.</param>
        <param name="types">Po powrocie zawiera tablicę bajtów reprezentujący typy punktów w ścieżce.</param>
        <param name="startIndex">Określa indeks początkowy tablic.</param>
        <param name="endIndex">Określa końcowy indeks tablic.</param>
        <summary>Kopie <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> właściwości i <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> tablice właściwości skojarzonego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> do dwóch określonych tablic.</summary>
        <returns>Liczba punktów skopiowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj `startIndex` i `endIndex` parametrów, aby skopiować dane ścieżki określonego zakresu.  
  
   
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki.  
  
-   Wypełnia je kilka podstawowych i niektóre znaczników.  
  
-   Wyświetla ścieżkę danych po lewej stronie ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> i przewija go do tyłu.  
  
-   Zwiększa indeks danych ścieżki do drugiego znacznika.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.CopyData%2A> metodę, aby skopiować dane ścieżki zawarte między początkową i końcową indeksuje do punktów i typy tablic.  
  
-   Wyświetla listę tym skopiowanych danych po prawej stronie ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę punktów, które w ścieżce.</summary>
        <value>Liczba punktów w ścieżce.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie `Dispose` umożliwia zasoby używane przez to <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiektu odbiorczego do innych celów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enumerate">
      <MemberSignature Language="C#" Value="public int Enumerate (ref System.Drawing.PointF[] points, ref byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Enumerate(valuetype System.Drawing.PointF[]&amp; points, unsigned int8[]&amp; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate(System.Drawing.PointF[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Enumerate (ByRef points As PointF(), ByRef types As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Enumerate(cli::array &lt;System::Drawing::PointF&gt; ^ % points, cli::array &lt;System::Byte&gt; ^ % types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]&amp;" RefType="ref" />
        <Parameter Name="types" Type="System.Byte[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="points">Po powrocie, zawiera tablicę <see cref="T:System.Drawing.PointF" /> struktur, które reprezentują punkty w ścieżce.</param>
        <param name="types">Po powrocie zawiera tablicę bajtów reprezentujący typy punktów w ścieżce.</param>
        <summary>Kopie <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> właściwości i <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> tablice właściwości skojarzonego <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> do dwóch określonych tablic.</summary>
        <returns>Liczba punktów skopiowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki.  
  
-   Wypełnia je kilka podstawowych i niektóre znaczników.  
  
-   Wyświetla ścieżkę danych po lewej stronie ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> i przewija go do tyłu.  
  
-   Zwiększa indeks danych ścieżki do drugiego znacznika.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Enumerate%2A> metodę, aby skopiować dane, ścieżka `points` i `types` tablic.  
  
-   Wyświetla listę tym skopiowanych danych po prawej stronie ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPathIterator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPathIterator ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCurve">
      <MemberSignature Language="C#" Value="public bool HasCurve ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasCurve() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve" />
      <MemberSignature Language="VB.NET" Value="Public Function HasCurve () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasCurve();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wskazuje, czy ścieżka jest skojarzony z tym <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> zawiera krzywą.</summary>
        <returns>Ta metoda zwraca <see langword="true" /> Jeśli podrzędną bieżącej zawiera krzywej; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Krzywe wszystkie ścieżki są przechowywane jako sekwencji krzywych Beziera. Na przykład podczas dodawania elipsy do ścieżki, określasz lewego górnego rogu, szerokość i wysokość prostokąta obwiedni elipsy. Te numery (lewego górnego rogu, szerokość i wysokość) nie są przechowywane w ścieżce; Zamiast tego; elipsy jest konwertowana na sekwencję cztery krzywych Beziera. Ścieżka sklepów punktów końcowych i punkty kontrolne tych krzywych Beziera.  
  
 Ścieżka przechowuje tablicy punktów danych, z których każdy należy do wiersza lub krzywej Beziera. Jeśli niektóre punkty w tablicy należą do krzywych Beziera następnie <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> zwraca `true`. Jeśli wszystkie punkty w tablicy należą do wierszy, następnie <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> zwraca `false`.  
  
 Niektóre metody spłaszczanie ścieżki, co oznacza, że wszystkie krzywych w ścieżce są konwertowane na sekwencji wierszy. Po została spłaszczona ścieżki, <xref:System.Drawing.Drawing2D.GraphicsPathIterator.HasCurve%2A> zawsze zwraca `false`. Wywoływanie <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%2A>, <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>, lub <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%2A> metody <xref:System.Drawing.Drawing2D.GraphicsPath> klasy będzie spłaszczanie ścieżki.  
  
   
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu `myPath`.  
  
-   Dodaje trzy wiersze, prostokąt i elipsy.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiekt do `myPath`.  
  
-   Testy, aby sprawdzić, czy bieżącej ścieżki `myPath` zawiera krzywą.  
  
-   Przedstawia wynik testu w oknie komunikatu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextMarker">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przenosi iteratora dalej znacznika w ścieżce.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (path As GraphicsPath) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Obiekt, do którego zostaną skopiowane punkty.</param>
        <summary>To <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> obiekt ma <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt skojarzony z nim. <see cref="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Drawing.Drawing2D.GraphicsPath)" /> Metody zwiększa skojarzone <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> do następnego znacznika w jego ścieżkę i kopie wszystkich punktów zawarte między bieżący znacznik i dalej znacznika (lub końca ścieżki) do drugiej <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt przekazany do parametru.</summary>
        <returns>Liczba punktów między znacznika tej i następnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> metodę, aby ustawić znaczników w ścieżce. Znaczniki są używane do tworzenia grup podrzędne. Co najmniej jeden podrzędne może być między dwoma znacznikami.  
  
   
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.  
  
-   Dodaje trzy wiersze, prostokąt elipsy i dwa znaczniki.  
  
-   Wyświetla listę wartości punktów wszystkich ścieżek po lewej stronie ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiektu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu `myPathSection`, aby odbierać skopiowanych punktów.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> metodę, która wykonuje iterację na pierwszy znacznik i kopiuje wszystkie punkty zawarte między znacznik i dalej, aby `myPathSection`.  
  
-   Zwraca liczbę punktów skopiowane do `markerPoints`.  
  
-   Wyświetla numer znacznika (pierwszy znacznik) i liczbę punktów, które zawiera z prawej strony ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMarker">
      <MemberSignature Language="C#" Value="public int NextMarker (out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextMarker([out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker(System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextMarker (ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextMarker([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">[out] Odwołanie do liczby całkowitej dostarczony do tego parametru odbiera indeks punktu, która rozpoczyna się jej ścieżka podrzędna.</param>
        <param name="endIndex">[out] Odwołanie do liczby całkowitej dostarczony do tego parametru odbiera indeks punktu, który kończy się podrzędną, do którego <c>startIndex</c> punktów.</param>
        <summary>Zwiększa <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> do następnego znacznika w ścieżce i zwraca indeksów rozpoczęcie i zakończenie na parametry [out].</summary>
        <returns>Liczba punktów między znacznika tej i następnych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> metodę, aby ustawić znaczników w ścieżce. Znaczniki są używane do tworzenia grup podrzędne. Co najmniej jeden podrzędne może być między dwoma znacznikami.  
  
   
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.  
  
-   Dodaje trzy wiersze, prostokąt i elipsy ¾ ze znacznikami między nimi.  
  
-   Rysuje wartości tablica punktów do ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiektu.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> metody.  
  
-   Używa wartości zwracana z wywołań iteracyjne <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> do rysowania uruchomienia i zatrzymania punkty dla każdego znacznika do ekranu.  
  
-   Pobiera wartość łączną liczbę punktów na ekranie.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPathType">
      <MemberSignature Language="C#" Value="public int NextPathType (out byte pathType, out int startIndex, out int endIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextPathType([out] unsigned int8&amp; pathType, [out] int32&amp; startIndex, [out] int32&amp; endIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType(System.Byte@,System.Int32@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextPathType (ByRef pathType As Byte, ByRef startIndex As Integer, ByRef endIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextPathType([Runtime::InteropServices::Out] System::Byte % pathType, [Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathType" Type="System.Byte&amp;" RefType="out" />
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pathType">[out] Odbiera typ punktu współużytkowane przez wszystkie punkty w grupie. Możliwe typy mogą być pobierane z <see cref="T:System.Drawing.Drawing2D.PathPointType" /> wyliczenia.</param>
        <param name="startIndex">[out] Odbiera indeks początkowy grupa punktów.</param>
        <param name="endIndex">[out] Odbiera końcową indeksu grupy punktów.</param>
        <summary>Pobiera początkowy indeksu i końcową indeksu następnej grupy danych wskazuje, mające tego samego typu.</summary>
        <returns>Ta metoda zwraca liczbę punktów danych w grupie. Jeśli nie ma żadnych więcej grup w ścieżce, ta metoda zwraca wartość 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.  
  
-   Dodaje trzy wiersze, prostokąt i elipsy.  
  
-   Wyświetla listę wartości wszystkich punktów po lewej stronie ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> i przewija go do tyłu.  
  
-   W `for` pętli, iteruje punktów przy użyciu <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> i <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> metody.  
  
-   Aby wyświetlić listę numer podrzędną, liczba punktów go i typ punkty ścieżki do prawej krawędzi ekranu są używane wartości zwracana z wywołań iteracji.  
  
-   Wyświetla wartość łączną liczbę punktów na ekranie.  
  
 Należy pamiętać, że `ListPathPoints` jest funkcją pomocnika, która oddziela większość (nie wszystkie) wyświetlania kodu z kodu ścieżki grafiki.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="NextSubpath">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Przenosi podrzędną dalej podrzędną w określonym <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (System.Drawing.Drawing2D.GraphicsPath path, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath(class System.Drawing.Drawing2D.GraphicsPath path, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (path As GraphicsPath, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath(System::Drawing::Drawing2D::GraphicsPath ^ path, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="isClosed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to ma swoje dane punkty Ustaw odpowiadający punktów danych pobranej wartości (podrzędną) to iteratora.</param>
        <param name="isClosed">[out] Wskazuje, czy bieżący podrzędną jest zamknięty. Jest <see langword="true" /> Jeśli obszar, jeśli liczba jest zamknięty, w przeciwnym razie jest <see langword="false" />.</param>
        <summary>Pobiera następny rysunek (podrzędną) ze skojarzoną ścieżkę tego <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" />.</summary>
        <returns>Liczba punktów danych na rysunku pobrane (podrzędną). Jeśli nie ma żadnych więcej wartości do pobrania, zwracana jest wartość zero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.  
  
-   Dodaje trzy wiersze, prostokąt elipsy i dwa znaczniki.  
  
-   Wyświetla listę wartości punktów wszystkich ścieżek po lewej stronie ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiektu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu `myPathSection`, aby odbierać skopiowanych punktów.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> metodę, która wykonuje iterację na ścieżkę podrzędną trzeci (rysunek) i kopiuje wszystkie punkty, które są zawarte w tym podrzędną do `myPathSection` ścieżkę i zwraca liczbę punktów, które są kopiowane do `subpathPoints`.  
  
-   Wyświetla liczbę podrzędną i liczbę punktów, które zawiera z prawej strony ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSubpath">
      <MemberSignature Language="C#" Value="public int NextSubpath (out int startIndex, out int endIndex, out bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 NextSubpath([out] int32&amp; startIndex, [out] int32&amp; endIndex, [out] bool&amp; isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath(System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSubpath (ByRef startIndex As Integer, ByRef endIndex As Integer, ByRef isClosed As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int NextSubpath([Runtime::InteropServices::Out] int % startIndex, [Runtime::InteropServices::Out] int % endIndex, [Runtime::InteropServices::Out] bool % isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="endIndex" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="isClosed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startIndex">[out] Odbiera indeks początkowy dalej podrzędną.</param>
        <param name="endIndex">[out] Odbiera końcowy indeks następnego podrzędną.</param>
        <param name="isClosed">[out] Wskazuje, czy ścieżka podrzędna jest zamknięty.</param>
        <summary>Przenosi <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> do następnego podrzędną w ścieżce. Indeks początkowy i końcowy indeks następnego podrzędną znajdują się w parametry [out].</summary>
        <returns>Liczba ścieżek podrzędnych w <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.  
  
-   Dodaje trzy wiersze, prostokąt i elipsy.  
  
-   Rysuje wartości tablica punktów do ekranu.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.GraphicsPathIterator> obiektu.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> metody.  
  
-   Używa wartości zwracana z wywołań iteracyjne <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> do rysowania uruchomienia i zatrzymania wartości dla podrzędnej do ekranu.  
  
-   Pobiera wartość całkowitą liczbę podrzędne do ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathIterator#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathIterator/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public void Rewind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rewind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rewind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rewind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przewija do tyłu to <see cref="T:System.Drawing.Drawing2D.GraphicsPathIterator" /> na początku ścieżki skojarzone.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przy pierwszym wywołaniu <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> metody iteracyjne, pobiera pierwszy rysunek (podrzędną) skojarzona ścieżka tego iteratora. Drugim, pobiera drugi rysunek i tak dalej. Podczas wywoływania <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A> metody ciąg rozpoczyna się powyżej; oznacza to, że po wywołaniu metody <xref:System.Drawing.Drawing2D.GraphicsPathIterator.Rewind%2A>, następne wywołanie <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath%2A> pobiera pierwszą w ścieżce. <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> i <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextPathType%2A> metody zachowują się podobnie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubpathCount">
      <MemberSignature Language="C#" Value="public int SubpathCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SubpathCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPathIterator.SubpathCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubpathCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SubpathCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera liczbę podrzędne w ścieżce.</summary>
        <value>Liczba ścieżek podrzędnych w ścieżce.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>