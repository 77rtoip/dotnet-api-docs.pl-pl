<Type Name="Blend" FullName="System.Drawing.Drawing2D.Blend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="645a5b71ab8fcbb5a5ac59533222310ba339f48c" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46654664" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Blend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Blend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Blend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Blend" />
  <TypeSignature Language="C++ CLI" Value="public ref class Blend sealed" />
  <TypeSignature Language="F#" Value="type Blend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiuje wzorzec blend dla <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> obiektu. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gradienty są często używane do bezproblemowego cieniowania wnętrza kształtów. Wzorzec blend jest definiowany przez dwie tablice (<xref:System.Drawing.Drawing2D.Blend.Factors%2A> i <xref:System.Drawing.Drawing2D.Blend.Positions%2A>), każda zawierać taką samą liczbę elementów. Każdy element obiektu <xref:System.Drawing.Drawing2D.Blend.Positions%2A> tablicy reprezentuje część odległości wzdłuż linia gradientu. Każdy element obiektu <xref:System.Drawing.Drawing2D.Blend.Factors%2A> tablicy reprezentuje część rozpoczęcia i zakończenia kolory gradientu blend pozycja wzdłuż linia gradientu, reprezentowane przez odpowiadający mu element w <xref:System.Drawing.Drawing2D.Blend.Positions%2A> tablicy.  
  
 Na przykład, jeśli odpowiadające elementy <xref:System.Drawing.Drawing2D.Blend.Positions%2A> i <xref:System.Drawing.Drawing2D.Blend.Factors%2A> tablice są 0.2 i 0.3, odpowiednio, gradient liniowy niebieski czerwony wzdłuż linii 100 pikseli kolorów 20 pikseli wzdłuż tego wiersza (20 procent odległości) składa się z 30 procent niebieski i czerwony do 70 procent.  
  
   
  
## Examples  
 Poniższy przykład jest przeznaczony do użycia w środowisku Windows Forms. Pokazuje, jak używać <xref:System.Drawing.Drawing2D.Blend> klasy w połączeniu z <xref:System.Drawing.Drawing2D.LinearGradientBrush> klasy, aby narysować elipsę na ekranie, który ma jego kolorów mieszane. Wielokropek jest niebieski po lewej stronie, przejść na czerwony w Centrum i przejść z powrotem do niebieski po prawej stronie. Jest to realizowane za pomocą ustawień w `myFactors` i `myPositions` tablice używane w <xref:System.Drawing.Drawing2D.Blend.Factors%2A> i <xref:System.Drawing.Drawing2D.Blend.Positions%2A> właściwości. Należy pamiętać, że <xref:System.Drawing.Drawing2D.Blend> właściwość <xref:System.Drawing.Drawing2D.LinearGradientBrush> obiektu o nazwie `lgBrush2` musi być następującemu przekształceniu <xref:System.Drawing.Drawing2D.Blend> obiektu `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.Blend" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.Blend" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład jest przeznaczony do użycia w środowisku Windows Forms. Pokazuje, jak używać <xref:System.Drawing.Drawing2D.Blend> klasy w połączeniu z <xref:System.Drawing.Drawing2D.LinearGradientBrush> klasy, aby narysować elipsę na ekranie, który ma jego kolorów mieszane. Wielokropek jest niebieski po lewej stronie, przejść na czerwony w Centrum i przejść z powrotem do niebieski po prawej stronie. Jest to realizowane za pomocą ustawień w `myFactors` i `myPositions` tablice używane w <xref:System.Drawing.Drawing2D.Blend.Factors%2A> i <xref:System.Drawing.Drawing2D.Blend.Positions%2A> właściwości. Należy pamiętać, że <xref:System.Drawing.Drawing2D.Blend> właściwość <xref:System.Drawing.Drawing2D.LinearGradientBrush> obiektu o nazwie `lgBrush2` musi być następującemu przekształceniu <xref:System.Drawing.Drawing2D.Blend> obiektu `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Blend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Blend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Blend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Blend : int -&gt; System.Drawing.Drawing2D.Blend" Usage="new System.Drawing.Drawing2D.Blend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Liczba elementów w <see cref="P:System.Drawing.Drawing2D.Blend.Factors" /> i <see cref="P:System.Drawing.Drawing2D.Blend.Positions" /> tablic.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.Blend" /> klasy z określoną liczbę stanowisk i czynnikach.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Aby uzyskać przykład, zobacz <xref:System.Drawing.Drawing2D.Blend.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factors">
      <MemberSignature Language="C#" Value="public float[] Factors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Factors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Factors" />
      <MemberSignature Language="VB.NET" Value="Public Property Factors As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Factors { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Factors : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Factors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę blend czynników gradientu.</summary>
        <value>Tablica blend czynników, które określają wartości procentowe kolor początkowy i końcowy kolor ma być używany w odpowiednim miejscu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj elementy tej tablicy jest wartością z przedziału od 0,0 do 1,0 f. Tych elementów należy określić wartości procentowe kolor końcowy i kolor początkowy w odpowiednich blend pozycji. Na przykład wartość 0,2 wskazuje, że w określonej pozycji mieszanego kolor składa się z 20 procent kolor końcowy gradientu i kolor początkowy gradientu 80 procent.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Drawing2D.Blend> klasy, ustawiając <xref:System.Drawing.Drawing2D.Blend.Factors%2A> i <xref:System.Drawing.Drawing2D.Blend.Positions%2A> właściwości. W tym przykładzie jest przeznaczona do użycia za pomocą interfejsu Windows Forms. Wklej kod do formularza, który importuje <xref:System.Drawing.Drawing2D> przestrzeni nazw. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DemonstrateBlend` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Blend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.Blend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę blend pozycje gradientu.</summary>
        <value>Tablica pozycji blend, które określają wartości procentowe odległości wzdłuż linia gradientu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elementy tej tablicy określ wartości procentowych odległości wzdłuż linia gradientu. Na przykład wartość elementu 0.2f Określa, że ten punkt jest 20 procent całkowitej odległości od punktu początkowego. Elementy w tej tablicy są reprezentowane przez wartości zmiennoprzecinkowych między 0,0 a 1,0 f. Pierwszy element tablicy muszą być 0.0f, a ostatni element musi być 1.0f.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób używania <xref:System.Drawing.Drawing2D.Blend> klasy, ustawiając <xref:System.Drawing.Drawing2D.Blend.Factors%2A> i <xref:System.Drawing.Drawing2D.Blend.Positions%2A> właściwości. W tym przykładzie jest przeznaczona do użycia za pomocą interfejsu Windows Forms. Wklej kod do formularza, który importuje <xref:System.Drawing.Drawing2D> przestrzeni nazw. Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DemonstrateBlend` jest metoda `e` jako <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.Misc2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Misc2/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Misc2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc2/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Misc2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc2/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>