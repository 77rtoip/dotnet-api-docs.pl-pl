<Type Name="PathGradientBrush" FullName="System.Drawing.Drawing2D.PathGradientBrush">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8b7cee23933b89a310a179b9ce17fd49157b201" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30452625" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PathGradientBrush : System.Drawing.Brush" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PathGradientBrush extends System.Drawing.Brush" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.PathGradientBrush" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PathGradientBrush&#xA;Inherits Brush" />
  <TypeSignature Language="C++ CLI" Value="public ref class PathGradientBrush sealed : System::Drawing::Brush" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Brush</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Hermetyzuje <see cref="T:System.Drawing.Brush" /> obiektu, który wypełnia wnętrza <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiektu gradientem. Klasa ta nie może być dziedziczona.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolor gradientu jest smooth cieniowania kolorów od punktu centralnego ścieżki do krawędzi granicy poza ścieżki. Czynniki, pozycji i styl wpływ, gdzie gradientu początek i koniec programu Blend, a szybkość zmienia cień.  
  
 Pędzle gradientów ścieżki nie podlega <xref:System.Drawing.Graphics.SmoothingMode%2A> właściwość <xref:System.Drawing.Graphics> obiekt używany do rysowania. Obszary wypełnione przy użyciu <xref:System.Drawing.Drawing2D.PathGradientBrush> obiektów mają być renderowane tak samo (alias) niezależnie od tego, tryb wygładzania.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób tworzenia <xref:System.Drawing.Drawing2D.PathGradientBrush>. W tym przykładzie jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> e, który jest parametrem elementu <xref:System.Windows.Forms.PaintEventHandler>.  
  
 [!code-csharp[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.UsingaGradientBrush#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.UsingaGradientBrush/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> przy użyciu określonej ścieżki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">
          <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> Definiuje obszar wypełnione to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> przy użyciu określonej ścieżki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> klasy z podanych punktów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> klasy z podanych punktów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.Point[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.Point[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Tablica <see cref="T:System.Drawing.Point" /> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki.</param>
        <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób wypełnienia narysowany to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> są rozmieszczane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> klasy z podanych punktów i zastępowania tryb.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PathGradientBrush (System.Drawing.PointF[] points, System.Drawing.Drawing2D.WrapMode wrapMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.WrapMode wrapMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.#ctor(System.Drawing.PointF[],System.Drawing.Drawing2D.WrapMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PathGradientBrush(cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::WrapMode wrapMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="wrapMode" Type="System.Drawing.Drawing2D.WrapMode" />
      </Parameters>
      <Docs>
        <param name="points">Tablica <see cref="T:System.Drawing.PointF" /> struktur, które reprezentuje punkty, które tworzą wierzchołki ścieżki.</param>
        <param name="wrapMode">A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób wypełnienia narysowany to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> są rozmieszczane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> klasy z podanych punktów i zastępowania tryb.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blend">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Blend Blend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Blend Blend" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Blend" />
      <MemberSignature Language="VB.NET" Value="Public Property Blend As Blend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Blend ^ Blend { System::Drawing::Drawing2D::Blend ^ get(); void set(System::Drawing::Drawing2D::Blend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Blend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.Blend" /> , który określa położenie i czynników, które Zdefiniuj niestandardowe zaniku gradientu.</summary>
        <value>A <see cref="T:System.Drawing.Drawing2D.Blend" /> reprezentujący niestandardowe zaniku gradientu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Drawing2D.Blend> zawiera odpowiednie tablice czynniki blend i pozycji. Czynniki blend określić wartości procentowe kolor początkowy i końcowy kolor do używania w odpowiednim miejscu. Pozycje są podane w procentach odległość ścieżce gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color CenterColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color CenterColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterColor" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color CenterColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor na środku gradientu ścieżki.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> reprezentujący kolorów w Centrum gradientu ścieżki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF CenterPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF CenterPoint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.CenterPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterPoint As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF CenterPoint { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia centralny punkt gradientu ścieżki.</summary>
        <value>A <see cref="T:System.Drawing.PointF" /> reprezentujący punktu centralnego gradientu ścieżki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy dokładną kopię to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <returns>
          <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> Ta metoda tworzy, rzutowany jako obiekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusScales">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF FocusScales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF FocusScales" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.FocusScales" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusScales As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::PointF FocusScales { System::Drawing::PointF get(); void set(System::Drawing::PointF value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia punkt fokus zaniku gradientu.</summary>
        <value>A <see cref="T:System.Drawing.PointF" /> reprezentujący fokus dla zaniku gradientu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.ColorBlend InterpolationColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.InterpolationColors" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationColors As ColorBlend" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::ColorBlend ^ InterpolationColors { System::Drawing::Drawing2D::ColorBlend ^ get(); void set(System::Drawing::Drawing2D::ColorBlend ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.ColorBlend</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> definiuje wielokolorowe gradientu liniowego.</summary>
        <value>A <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> definiuje wielokolorowe gradientu liniowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Drawing.Drawing2D.ColorBlend> zawiera odpowiednie tablice kolorów i pozycji. Pozycje są wartości od 0 do 1, który określa procent odległości wzdłuż gradientu ścieżki, w którym znajduje się odpowiedni kolor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Mnoży <see cref="T:System.Drawing.Drawing2D.Matrix" /> reprezentujący lokalne przekształcenia geometrycznych tego <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> przez określony <see cref="T:System.Drawing.Drawing2D.Matrix" /> przez poprzedzenie jej określonego <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <see cref="T:System.Drawing.Drawing2D.Matrix" /> Który będzie mnożona przez bieżący macierzy transformacji pędzla.</param>
        <summary>Aktualizuje pędzla macierzy transformacji z produktem macierzy transformacji pędzla pomnożona przez inny macierzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <see cref="T:System.Drawing.Drawing2D.Matrix" /> Który będzie mnożona przez bieżący macierzy transformacji pędzla.</param>
        <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> , który określa kolejność, w jakiej do mnożenie macierzy dwa.</param>
        <summary>Aktualizuje pędzla macierzy transformacji z produktem macierzy transformacji pędzla pomnożona przez inny macierzy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki i dodaje prostokąta do niego.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.PathGradientBrush> z punktów ścieżka (w tym przykładzie punkty tworzą prostokąt, ale może być dowolnym kształcie).  
  
-   Ustawia kolor czerwony i otaczającego kolor niebieski.  
  
-   Rysuje <xref:System.Drawing.Drawing2D.PathGradientBrush> do ekranu przed zastosowanie transformacji multiply.  
  
-   Tworzy macierzy s, obraca pędzla o 90 stopni, który tłumaczy go przez 100 w obu osiach.  
  
-   Zastosowanie tej macierzy pędzla przy użyciu <xref:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform%2A> metody.  
  
-   Rysuje pędzla do ekranu.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF Rectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF Rectangle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Rectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rectangle As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF Rectangle { System::Drawing::RectangleF get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokąt ograniczający dla <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>A <see cref="T:System.Drawing.RectangleF" /> reprezentujący prostokątny obszar, który ścieżce zakresem to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> wypełnia.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje <see cref="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" /> właściwości tożsamości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu resetuje geometrycznych przekształcenia z `pgBrush` do tożsamości. Zakłada ona, że `myPath` istnieje <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
```csharp  
PathGradientBrush pgBrush = new PathGradientBrush(myPath);  
 pgBrush.ResetTransform();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dotyczy obrót w prawo o określony kąt lokalne przekształcenia geometrycznej.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle">Kąt (zakres) obrotu.</param>
        <summary>Obraca lokalne przekształcenia geometrycznych o określonej szerokości. Ta metoda dołącza obrót do transformacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle">Kąt (zakres) obrotu.</param>
        <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> który określa, czy dołączyć lub dołączy macierzy obrotu.</param>
        <summary>Obraca lokalne przekształcenia geometrycznych przy określonym w określonej kolejności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki i dodaje prostokąta do niego.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.PathGradientBrush> z punktów ścieżka (w tym przykładzie punkty tworzą prostokąt, ale może być dowolnym kształcie).  
  
-   Ustawia kolor czerwony i otaczającego kolor niebieski.  
  
-   Rysuje <xref:System.Drawing.Drawing2D.PathGradientBrush> do ekranu przed zastosowaniem obracania transformacji.  
  
-   Dotyczy przekształcenie obracania pędzla przy użyciu jego <xref:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform%2A> metody.  
  
-   Rysuje obrócony pędzla (prostokąt) do ekranu.  
  
 Zauważ, że znajdujący się poniżej prostokąt jest obracany 45 stopni w porównaniu z jedną rysowane przed tłumaczenia.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Skaluje lokalnej geometrycznych przekształcanie za podana. Ta metoda dołącza skalowania macierzy transformacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx">Współczynnik skali przekształcenia w kierunku osi x.</param>
        <param name="sy">Współczynnik skali przekształcenia w kierunku y.</param>
        <summary>Skaluje lokalnej geometrycznych przekształcanie za podana. Ta metoda dołącza skalowania macierzy transformacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx">Współczynnik skali przekształcenia w kierunku osi x.</param>
        <param name="sy">Współczynnik skali przekształcenia w kierunku y.</param>
        <param name="order">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> który określa, czy dołączyć lub dołączy skalowania macierzy.</param>
        <summary>Skaluje lokalnej geometrycznych przekształcanie za podana w określonej kolejności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod  
  
-   Tworzy ścieżkę grafiki i dodaje prostokąta do niego.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.PathGradientBrush> z punktów ścieżka (w tym przykładzie punkty tworzą prostokąt, ale może być dowolnym kształcie).  
  
-   Ustawia kolor czerwony i otaczającego kolor niebieski.  
  
-   Rysuje <xref:System.Drawing.Drawing2D.PathGradientBrush> do ekranu przed zastosowanie transformacji skali.  
  
-   Stosuje transformację skali do pędzla przy użyciu jego <xref:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform%2A> metody.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metody można przesuwać pędzla tak, aby go nie nakładki co wcześniej rysowane na ekranie.  
  
-   Rysuje prostokąt przetłumaczonego pędzla do ekranu.  
  
 Należy zauważyć, że znajdujący się poniżej prostokąt jest dwa razy, jak długo w osi x, co jest rysowany przed tłumaczenia.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBlendTriangularShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy gradient kolor center i liniowej zaniku na jeden kolor otaczającego je.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki.</param>
        <summary>Tworzy gradient kolor center i liniowej zaniku na jeden kolor otaczającego je.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> tablicy, pierwszy kolor w tablicy jest używany kolor końcowy. Kolory określone w tablicy tego są używane osobne punktów na ścieżce granic pędzla.  
  
   
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBlendTriangularShape">
      <MemberSignature Language="C#" Value="public void SetBlendTriangularShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBlendTriangularShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBlendTriangularShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBlendTriangularShape(float focus, float scale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki.</param>
        <param name="scale">Wartość od 0 do 1, który określa maksymalne natężenie kolor center, który pobiera przenikaniem kolorem granic. Wartość 1 powoduje, że najwyższy możliwy intensywność koloru Centrum i jest wartością domyślną.</param>
        <summary>Tworzy gradientu z kolor center i liniowej zaniku do każdego otaczającego koloru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> tablicy, pierwszy kolor w tablicy jest używany kolor końcowy. Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.  
  
 Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki i dodaje prostokąta do niego.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.PathGradientBrush> z punktów ścieżka (w tym przykładzie punkty tworzą prostokąt, ale może być dowolnym kształcie).  
  
-   Ustawia kolor czerwony i otaczającego kolor niebieski.  
  
-   Rysuje <xref:System.Drawing.Drawing2D.PathGradientBrush> do ekranu przed zastosowanie transformacji mieszania.  
  
-   Stosuje transformację przejścia do pędzla przy użyciu jego <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A> metody.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metody można przesuwać pędzla tak, aby go nie nakładki co wcześniej rysowane na ekranie.  
  
-   Rysuje przekształcone pędzla prostokąt jest rysowana na ekranie.  
  
 Zauważ, że na kolor wartości środkowej maksymalną (czerwony) jest zlokalizowany połowy z Centrum ścieżki do granicy ścieżki.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSigmaBellShape">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy gradientu zaniku między na kolor wartości środkowej i pierwszy kolor otaczającego oparte na krzywą w kształcie dzwonka.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki.</param>
        <summary>Tworzy pędzla gradientu, który zmienia kolor, zaczynając od środka na zewnątrz ścieżki do granicy ścieżki. Przejście od jednego koloru do innego opiera się na krzywej w kształcie dzwonka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> tablicy, pierwszy kolor w tablicy jest używany kolor końcowy. Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.  
  
 Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody.  
  
   
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSigmaBellShape">
      <MemberSignature Language="C#" Value="public void SetSigmaBellShape (float focus, float scale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSigmaBellShape(float32 focus, float32 scale) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSigmaBellShape (focus As Single, scale As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSigmaBellShape(float focus, float scale);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focus" Type="System.Single" />
        <Parameter Name="scale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="focus">Wartość z zakresu od 0 do 1, która określa gdzie wzdłuż żadnych promieniowej z Centrum ścieżki do granicy ścieżki na kolor wartości środkowej będzie na natężenie najwyższym. Wartość 1 (opcja domyślna) umieszcza natężenie najwyższym w środkowej części ścieżki.</param>
        <param name="scale">Wartość od 0 do 1, który określa maksymalne natężenie kolor center, który pobiera przenikaniem kolorem granic. Wartość 1 powoduje, że najwyższy możliwy intensywność koloru Centrum i jest wartością domyślną.</param>
        <summary>Tworzy pędzla gradientu, który zmienia kolor, zaczynając od środka na zewnątrz ścieżki do granicy ścieżki. Przejście od jednego koloru do innego opiera się na krzywej w kształcie dzwonka.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli istnieje więcej niż jeden z kolorów <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> tablicy, pierwszy kolor w tablicy jest używany kolor końcowy. Kolory określone w tablicy tego są kolory używane osobne punktów na ścieżce granic pędzla.  
  
 Domyślnie w przypadku przejścia z granicą gradientu ścieżki do punktu centralnego zmienia kolor stopniowo od koloru granic na kolor center. Można dostosować, pozycjonowanie i mieszania kolorów Centrum i granic przez wywołanie tej metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod jest przeznaczony do użytku z formularzy systemu Windows i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Form.OnPaint%2A> obiekt zdarzenia. Kod wykonuje następujące czynności:  
  
-   Tworzy ścieżkę grafiki i dodaje prostokąta do niego.  
  
-   Tworzy <xref:System.Drawing.Drawing2D.PathGradientBrush> z punktów ścieżka (w tym przykładzie punkty tworzą prostokąt, ale może być dowolnym kształcie).  
  
-   Ustawia kolor czerwony i otaczającego kolor niebieski.  
  
-   Rysuje <xref:System.Drawing.Drawing2D.PathGradientBrush> do ekranu przed zastosowanie transformacji mieszania.  
  
-   Stosuje transformację przejścia do pędzla przy użyciu jego <xref:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape%2A> metody.  
  
-   Wywołania <xref:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform%2A> metody można przesuwać pędzla tak, aby go nie nakładki co wcześniej rysowane na ekranie.  
  
-   Rysuje prostokąt przekształcone pędzla do ekranu.  
  
 Zauważ, że na kolor wartości środkowej maksymalną (czerwony) jest zlokalizowany połowy z Centrum ścieżki do granicy ścieżki.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicPathGradientBrush#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicPathGradientBrush/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurroundColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] SurroundColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] SurroundColors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors" />
      <MemberSignature Language="VB.NET" Value="Public Property SurroundColors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ SurroundColors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tablicę kolorów, które odpowiadają punktów w ścieżce to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> wypełnia.</summary>
        <value>Tablica <see cref="T:System.Drawing.Color" /> struktur, które reprezentuje kolory skojarzone z każdym punktu w ścieżce to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> wypełnia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Drawing.Color> w <xref:System.Drawing.Drawing2D.PathGradientBrush.SurroundColors%2A> tablicy odnosi się do punktu w ścieżce.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kopię <see cref="T:System.Drawing.Drawing2D.Matrix" /> definiuje lokalne przekształcenia geometrycznych dla tego <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>Kopię <see cref="T:System.Drawing.Drawing2D.Matrix" /> definiuje geometrycznych transformację ma zastosowanie tylko do wypełnienia narysowany to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekształcenia geometrycznych może służyć do tłumaczenia, skalowanie, obracanie lub pochylanie wypełnieniem gradientowym. Ponieważ zwracany macierzy i przez <xref:System.Drawing.Drawing2D.PathGradientBrush.Transform%2A> właściwość kopię przekształcenia geometrycznych pędzla, należy usunąć macierzy, gdy nie są już potrzebne.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dotyczy określonej tłumaczenia lokalne przekształcenia geometrycznej. Ta metoda dołącza tłumaczenia do transformacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Wartość tłumaczenia x.</param>
        <param name="dy">Wartość tłumaczenia y.</param>
        <summary>Dotyczy określonej tłumaczenia lokalne przekształcenia geometrycznej. Ta metoda dołącza tłumaczenia do transformacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx">Wartość tłumaczenia x.</param>
        <param name="dy">Wartość tłumaczenia y.</param>
        <param name="order">Kolejność (dołączy lub Dołącz) w których mają zostać zastosowane tłumaczenia.</param>
        <summary>Dotyczy określonej tłumaczenia lokalne przekształcenia geometrycznych w określonej kolejności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Na przykład zobacz <xref:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.WrapMode WrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.PathGradientBrush.WrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property WrapMode As WrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::WrapMode WrapMode { System::Drawing::Drawing2D::WrapMode get(); void set(System::Drawing::Drawing2D::WrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.WrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.WrapMode" /> wskazujące, w tym trybie zawijania <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" />.</summary>
        <value>A <see cref="T:System.Drawing.Drawing2D.WrapMode" /> , który określa sposób wypełnienia narysowany to <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> są rozmieszczane.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>