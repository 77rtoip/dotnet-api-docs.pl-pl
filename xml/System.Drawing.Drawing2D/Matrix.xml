<Type Name="Matrix" FullName="System.Drawing.Drawing2D.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7688304a052000f52dc57ce036cd4b6dd7b91470" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69361654" /></Metadata><TypeSignature Language="C#" Value="public sealed class Matrix : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Matrix extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Matrix&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Matrix sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Matrix = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="eccd7-101">Hermetyzuje macierz afinicznym 3-by-3, która reprezentuje transformację geometryczną.</span><span class="sxs-lookup"><span data-stu-id="eccd7-101">Encapsulates a 3-by-3 affine matrix that represents a geometric transform.</span></span> <span data-ttu-id="eccd7-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="eccd7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-103">W [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] programie można przechowywać transformację afinicznym <xref:System.Drawing.Drawing2D.Matrix> w obiekcie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-103">In [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] you can store an affine transformation in a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="eccd7-104">Ponieważ trzecia kolumna macierzy, która reprezentuje transformację afinicznym, jest zawsze (0, 0, 1), podczas konstruowania <xref:System.Drawing.Drawing2D.Matrix> obiektu należy określić tylko sześć cyfr w pierwszych dwóch kolumnach.</span><span class="sxs-lookup"><span data-stu-id="eccd7-104">Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a <xref:System.Drawing.Drawing2D.Matrix> object.</span></span> <span data-ttu-id="eccd7-105">Instrukcja `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` konstruuje tablicę pokazaną na poniższym rysunku.</span><span class="sxs-lookup"><span data-stu-id="eccd7-105">The statement `Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)` constructs the matrix shown in the following figure.</span></span>  
  
 <span data-ttu-id="eccd7-106">![Przekształcenia] (~/add/media/aboutgdip05-art10.gif "Przekształcenia")</span><span class="sxs-lookup"><span data-stu-id="eccd7-106">![Transformations](~/add/media/aboutgdip05-art10.gif "Transformations")</span></span>  
  
## <a name="composite-transformations"></a><span data-ttu-id="eccd7-107">Przekształcenia złożone</span><span class="sxs-lookup"><span data-stu-id="eccd7-107">Composite Transformations</span></span>  
 <span data-ttu-id="eccd7-108">Transformacja złożona to sekwencja przekształceń, po której następują inne.</span><span class="sxs-lookup"><span data-stu-id="eccd7-108">A composite transformation is a sequence of transformations, one followed by the other.</span></span> <span data-ttu-id="eccd7-109">Rozważ macierze i przekształcenia na poniższej liście:</span><span class="sxs-lookup"><span data-stu-id="eccd7-109">Consider the matrices and transformations in the following list:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="eccd7-110">Macierz A</span><span class="sxs-lookup"><span data-stu-id="eccd7-110">Matrix A</span></span>|<span data-ttu-id="eccd7-111">Obróć o 90 stopni</span><span class="sxs-lookup"><span data-stu-id="eccd7-111">Rotate 90 degrees</span></span>|  
|<span data-ttu-id="eccd7-112">Macierz B</span><span class="sxs-lookup"><span data-stu-id="eccd7-112">Matrix B</span></span>|<span data-ttu-id="eccd7-113">Skalowanie według współczynnika 2 w kierunku x</span><span class="sxs-lookup"><span data-stu-id="eccd7-113">Scale by a factor of 2 in the x direction</span></span>|  
|<span data-ttu-id="eccd7-114">Matrix C</span><span class="sxs-lookup"><span data-stu-id="eccd7-114">Matrix C</span></span>|<span data-ttu-id="eccd7-115">Translacja 3 jednostek w kierunku y</span><span class="sxs-lookup"><span data-stu-id="eccd7-115">Translate 3 units in the y direction</span></span>|  
  
 <span data-ttu-id="eccd7-116">Jeśli zaczynamy od punktu (2, 1) — reprezentowanego przez macierz [2 1 1] — i pomnóż przez, a następnie B, a następnie C, punkt (2, 1) przejdzie trzy przekształcenia w podanej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-116">If we start with the point (2, 1) - represented by the matrix [2 1 1] - and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.</span></span>  
  
 <span data-ttu-id="eccd7-117">[2 1 1]ABC = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="eccd7-117">[2 1 1]ABC = [-2 5 1]</span></span>  
  
 <span data-ttu-id="eccd7-118">Zamiast przechowywać trzy części transformacji złożonej w trzech oddzielnych macierzach, można pomnożyć A, B i C, aby uzyskać jedną macierz 3 × 3, w której jest przechowywana cała transformacja złożona.</span><span class="sxs-lookup"><span data-stu-id="eccd7-118">Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3×3 matrix that stores the entire composite transformation.</span></span> <span data-ttu-id="eccd7-119">Załóżmy, że ABC = D. Następnie punkt pomnożony przez D daje ten sam wynik jako punkt pomnożony przez, a następnie B, C.</span><span class="sxs-lookup"><span data-stu-id="eccd7-119">Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.</span></span>  
  
 <span data-ttu-id="eccd7-120">[2 1 1]D = [-2 5 1]</span><span class="sxs-lookup"><span data-stu-id="eccd7-120">[2 1 1]D = [-2 5 1]</span></span>  
  
 <span data-ttu-id="eccd7-121">Na poniższej ilustracji przedstawiono macierze A, B, C i D.</span><span class="sxs-lookup"><span data-stu-id="eccd7-121">The following illustration shows the matrices A, B, C, and D.</span></span>  
  
 <span data-ttu-id="eccd7-122">![Przekształcenia] (~/add/media/aboutgdip05-art12.gif "Przekształcenia")</span><span class="sxs-lookup"><span data-stu-id="eccd7-122">![Transformations](~/add/media/aboutgdip05-art12.gif "Transformations")</span></span>  
  
 <span data-ttu-id="eccd7-123">Fakt, że macierz transformacji złożonej można utworzyć przez pomnożenie pojedynczych macierzy transformacji oznacza, że każda sekwencja transformacji afinicznym może być przechowywana w pojedynczym <xref:System.Drawing.Drawing2D.Matrix> obiekcie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-123">The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single <xref:System.Drawing.Drawing2D.Matrix> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="eccd7-124">Kolejność transformacji złożonej jest ważna.</span><span class="sxs-lookup"><span data-stu-id="eccd7-124">The order of a composite transformation is important.</span></span> <span data-ttu-id="eccd7-125">Ogólnie rzecz biorąc, Obróć, a następnie Skaluj, a następnie Przekształć nie jest taki sam jak skala, a następnie Obróć, a następnie Przekształć.</span><span class="sxs-lookup"><span data-stu-id="eccd7-125">In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate.</span></span> <span data-ttu-id="eccd7-126">Podobnie kolejność mnożenia macierzy jest ważna.</span><span class="sxs-lookup"><span data-stu-id="eccd7-126">Similarly, the order of matrix multiplication is important.</span></span> <span data-ttu-id="eccd7-127">Ogólnie rzecz biorąc, ABC nie jest taka sama jak BK.</span><span class="sxs-lookup"><span data-stu-id="eccd7-127">In general, ABC is not the same as BAC.</span></span>  
  
 <span data-ttu-id="eccd7-128"><xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A> <xref:System.Drawing.Drawing2D.Matrix.Scale%2A> <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>Klasa zawiera kilka metod tworzenia transformacji złożonej: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>,, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>,, i. <xref:System.Drawing.Drawing2D.Matrix></span><span class="sxs-lookup"><span data-stu-id="eccd7-128">The <xref:System.Drawing.Drawing2D.Matrix> class provides several methods for building a composite transformation: <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>, <xref:System.Drawing.Drawing2D.Matrix.Rotate%2A>, <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A>, <xref:System.Drawing.Drawing2D.Matrix.Scale%2A>, <xref:System.Drawing.Drawing2D.Matrix.Shear%2A>, and <xref:System.Drawing.Drawing2D.Matrix.Translate%2A>.</span></span> <span data-ttu-id="eccd7-129">Poniższy przykład tworzy macierz transformacji złożonej, która najpierw obraca 30 stopni, a następnie skaluje współczynnik 2 w kierunku y, a następnie tłumaczy 5 jednostek w kierunku x:</span><span class="sxs-lookup"><span data-stu-id="eccd7-129">The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:</span></span>  
  
 [!code-csharp[System.Drawing.CoordinateSystems#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/CS/Class1.cs#11)]
 [!code-vb[System.Drawing.CoordinateSystems#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CoordinateSystems/VB/Class1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9fef7451-bddf-4c68-9350-400d1f1f25a3"><span data-ttu-id="eccd7-130">Systemy i przekształcenia współrzędnych</span><span class="sxs-lookup"><span data-stu-id="eccd7-130">Coordinate Systems and Transformations</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.Matrix" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="eccd7-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-132">Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Drawing2D.Matrix" /> klasy jako macierz tożsamości.</span><span class="sxs-lookup"><span data-stu-id="eccd7-132">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class as the identity matrix.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Point[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.Rectangle,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle, plgpts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::Rectangle rect, cli::array &lt;System::Drawing::Point&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.Rectangle * System.Drawing.Point[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="plgpts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="eccd7-133"><see cref="T:System.Drawing.Rectangle" /> Struktura, która reprezentuje prostokąt, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="eccd7-133">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="eccd7-134">Tablica trzech <see cref="T:System.Drawing.Point" /> struktur, która reprezentuje punkty równoległobok, do których górny lewy, górny prawy i lewy dolny róg prostokąta ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="eccd7-134">An array of three <see cref="T:System.Drawing.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="eccd7-135">Prawy dolny róg równoległobok jest implikowany przez pierwsze trzy rogi.</span><span class="sxs-lookup"><span data-stu-id="eccd7-135">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="eccd7-136">Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Drawing2D.Matrix" /> klasy do transformacji geometrycznej zdefiniowanej przez określony prostokąt i tablicę punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-136">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-137">Ta metoda Inicjuje nową macierz, która reprezentuje transformację geometryczną, która mapuje prostokąt określony przez `rect` parametr do równoległobok zdefiniowanego przez trzy punkty `plgpts` w parametrze.</span><span class="sxs-lookup"><span data-stu-id="eccd7-137">This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="eccd7-138">Lewy górny róg prostokąta jest mapowany do pierwszego punktu w `plgpts` tablicy, prawy górny róg jest mapowany do drugiego punktu, a lewy dolny róg jest mapowany do trzeciego punktu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-138">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="eccd7-139">Prawy dolny punkt równoległobok jest implikowany przez pierwsze trzy.</span><span class="sxs-lookup"><span data-stu-id="eccd7-139">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.PointF[] plgpts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Drawing.RectangleF,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF, plgpts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(System::Drawing::RectangleF rect, cli::array &lt;System::Drawing::PointF&gt; ^ plgpts);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : System.Drawing.RectangleF * System.Drawing.PointF[] -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (rect, plgpts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="plgpts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="eccd7-140"><see cref="T:System.Drawing.RectangleF" /> Struktura, która reprezentuje prostokąt, który ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="eccd7-140">A <see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to be transformed.</span></span></param>
        <param name="plgpts"><span data-ttu-id="eccd7-141">Tablica trzech <see cref="T:System.Drawing.PointF" /> struktur, która reprezentuje punkty równoległobok, do których górny lewy, górny prawy i lewy dolny róg prostokąta ma zostać przekształcony.</span><span class="sxs-lookup"><span data-stu-id="eccd7-141">An array of three <see cref="T:System.Drawing.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed.</span></span> <span data-ttu-id="eccd7-142">Prawy dolny róg równoległobok jest implikowany przez pierwsze trzy rogi.</span><span class="sxs-lookup"><span data-stu-id="eccd7-142">The lower-right corner of the parallelogram is implied by the first three corners.</span></span></param>
        <summary><span data-ttu-id="eccd7-143">Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Drawing2D.Matrix" /> klasy do transformacji geometrycznej zdefiniowanej przez określony prostokąt i tablicę punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-143">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-144">Ta metoda Inicjuje nową <xref:System.Drawing.Drawing2D.Matrix> , która reprezentuje transformację geometryczną, która mapuje prostokąt określony `rect` przez parametr do równoległobok zdefiniowanego przez trzy punkty w `plgpts` parametrze.</span><span class="sxs-lookup"><span data-stu-id="eccd7-144">This method initializes the new <xref:System.Drawing.Drawing2D.Matrix> such that it represents the geometric transform that maps the rectangle specified by the `rect` parameter to the parallelogram defined by the three points in the `plgpts` parameter.</span></span> <span data-ttu-id="eccd7-145">Lewy górny róg prostokąta jest mapowany do pierwszego punktu w `plgpts` tablicy, prawy górny róg jest mapowany do drugiego punktu, a lewy dolny róg jest mapowany do trzeciego punktu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-145">The upper-left corner of the rectangle is mapped to the first point in the `plgpts` array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point.</span></span> <span data-ttu-id="eccd7-146">Prawy dolny punkt równoległobok jest implikowany przez pierwsze trzy.</span><span class="sxs-lookup"><span data-stu-id="eccd7-146">The lower-right point of the parallelogram is implied by the first three.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 m11, float32 m12, float32 m21, float32 m22, float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Single, m12 As Single, m21 As Single, m22 As Single, dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(float m11, float m12, float m21, float m22, float dx, float dy);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.Matrix : single * single * single * single * single * single -&gt; System.Drawing.Drawing2D.Matrix" Usage="new System.Drawing.Drawing2D.Matrix (m11, m12, m21, m22, dx, dy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Single" />
        <Parameter Name="m12" Type="System.Single" />
        <Parameter Name="m21" Type="System.Single" />
        <Parameter Name="m22" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="eccd7-147">Wartość w pierwszym wierszu i pierwszej kolumnie nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-147">The value in the first row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m12"><span data-ttu-id="eccd7-148">Wartość z pierwszego wiersza i drugiej kolumny nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-148">The value in the first row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m21"><span data-ttu-id="eccd7-149">Wartość w drugim wierszu i pierwszej kolumnie nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-149">The value in the second row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="m22"><span data-ttu-id="eccd7-150">Wartość w drugim wierszu i drugiej kolumnie nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-150">The value in the second row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dx"><span data-ttu-id="eccd7-151">Wartość w trzecim wierszu i pierwszej kolumnie nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-151">The value in the third row and first column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="dy"><span data-ttu-id="eccd7-152">Wartość w trzecim wierszu i drugiej kolumnie nowej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-152">The value in the third row and second column of the new <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="eccd7-153">Inicjuje nowe wystąpienie <see cref="T:System.Drawing.Drawing2D.Matrix" /> klasy z określonymi elementami.</span><span class="sxs-lookup"><span data-stu-id="eccd7-153">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> class with the specified elements.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.Matrix Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::Matrix ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Drawing2D.Matrix" Usage="matrix.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-154">Tworzy dokładną kopię tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-154">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="eccd7-155"><see cref="T:System.Drawing.Drawing2D.Matrix" /> Ta metoda tworzy.</span><span class="sxs-lookup"><span data-stu-id="eccd7-155">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that this method creates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="matrix.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-156">Zwalnia wszystkie zasoby używane przez ten <see cref="T:System.Drawing.Drawing2D.Matrix" />program.</span><span class="sxs-lookup"><span data-stu-id="eccd7-156">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-157">Wywołanie `Dispose` zezwala na przydzielenie zasobów używanych <xref:System.Drawing.Drawing2D.Matrix> przez ten obiekt do innych celów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-157">Calling `Dispose` allows the resources used by this <xref:System.Drawing.Drawing2D.Matrix> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public float[] Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Elements" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Elements { cli::array &lt;float&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Elements : single[]" Usage="System.Drawing.Drawing2D.Matrix.Elements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eccd7-158">Pobiera tablicę wartości zmiennoprzecinkowych reprezentujących elementy tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-158">Gets an array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="eccd7-159">Tablica wartości zmiennoprzecinkowych reprezentujących elementy tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-159">An array of floating-point values that represents the elements of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-160">Elementy M11, M12, M21, M22, DX i dy <xref:System.Drawing.Drawing2D.Matrix> są reprezentowane przez wartości w tablicy w tej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-160">The elements m11, m12, m21, m22, dx, and dy of the <xref:System.Drawing.Drawing2D.Matrix> are represented by the values in the array in that order.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="eccd7-161">Obiekt do przetestowania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-161">The object to test.</span></span></param>
        <summary><span data-ttu-id="eccd7-162">Testuje <see cref="T:System.Drawing.Drawing2D.Matrix" /> , czy określony obiekt jest i jest identyczny z <see cref="T:System.Drawing.Drawing2D.Matrix" />tym.</span><span class="sxs-lookup"><span data-stu-id="eccd7-162">Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="eccd7-163">Ta metoda zwraca <see langword="true" /> wartość <paramref name="obj" /> , <see cref="T:System.Drawing.Drawing2D.Matrix" /> <see cref="T:System.Drawing.Drawing2D.Matrix" /> Jeślijestokreślonaidentycznaztym;<see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-163">This method returns <see langword="true" /> if <paramref name="obj" /> is the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> identical to this <see cref="T:System.Drawing.Drawing2D.Matrix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Matrix ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Matrix ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="matrix.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-164">Umożliwia obiektowi podjęcie próby zwolnienia zasobów i wykonywanie innych operacji czyszczenia przed odinstalowaniem ich przez wyrzucanie elementów bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="eccd7-164">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-165">Zwraca kod skrótu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-165">Returns a hash code.</span></span></summary>
        <returns><span data-ttu-id="eccd7-166">Kod skrótu dla tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-166">The hash code for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-167">Odwraca to <see cref="T:System.Drawing.Drawing2D.Matrix" />, jeśli jest odwracalna.</span><span class="sxs-lookup"><span data-stu-id="eccd7-167">Inverts this <see cref="T:System.Drawing.Drawing2D.Matrix" />, if it is invertible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-168">Poniższy przykład kodu tworzy macierz i odwraca ją:</span><span class="sxs-lookup"><span data-stu-id="eccd7-168">The following code example creates a matrix and inverts it:</span></span>  
  
```csharp  
Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  
 myMatrix.Invert();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Drawing.Drawing2D.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eccd7-169">Pobiera wartość wskazującą, czy jest <see cref="T:System.Drawing.Drawing2D.Matrix" /> to macierz tożsamości.</span><span class="sxs-lookup"><span data-stu-id="eccd7-169">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is the identity matrix.</span></span></summary>
        <value><span data-ttu-id="eccd7-170">Ta właściwość ma <see langword="true" /> wartość, <see cref="T:System.Drawing.Drawing2D.Matrix" /> <see langword="false" />jeśli jest to tożsamość; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-170">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is identity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvertible">
      <MemberSignature Language="C#" Value="public bool IsInvertible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvertible" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInvertible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInvertible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvertible : bool" Usage="System.Drawing.Drawing2D.Matrix.IsInvertible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eccd7-171">Pobiera wartość wskazującą, czy jest <see cref="T:System.Drawing.Drawing2D.Matrix" /> to odwracalna.</span><span class="sxs-lookup"><span data-stu-id="eccd7-171">Gets a value indicating whether this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible.</span></span></summary>
        <value><span data-ttu-id="eccd7-172">Ta właściwość ma <see langword="true" /> wartość <see cref="T:System.Drawing.Drawing2D.Matrix" /> odwracalna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-172">This property is <see langword="true" /> if this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is invertible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Multiply">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-173">Mnoży ten <see cref="T:System.Drawing.Drawing2D.Matrix" /> parametr przez określony <see cref="T:System.Drawing.Drawing2D.Matrix" /> , w zależności od określonego <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-173">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="matrix.Multiply matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="eccd7-174">, <see cref="T:System.Drawing.Drawing2D.Matrix" /> Według<see cref="T:System.Drawing.Drawing2D.Matrix" /> którego ma zostać pomnożona wartość.</span><span class="sxs-lookup"><span data-stu-id="eccd7-174">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <summary><span data-ttu-id="eccd7-175">Mnoży tę <see cref="T:System.Drawing.Drawing2D.Matrix" /> wartość przez macierz określoną <paramref name="matrix" /> w parametrze, w zależności od określonej <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-175">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, by prepending the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-176">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-176">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Multiply%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Multiply(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Multiply(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Multiply(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Multiply : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Multiply (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="eccd7-177">, <see cref="T:System.Drawing.Drawing2D.Matrix" /> Według<see cref="T:System.Drawing.Drawing2D.Matrix" /> którego ma zostać pomnożona wartość.</span><span class="sxs-lookup"><span data-stu-id="eccd7-177">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which this <see cref="T:System.Drawing.Drawing2D.Matrix" /> is to be multiplied.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-178"><see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> Reprezentuje kolejność mnożenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-178">The <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that represents the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="eccd7-179">Mnoży tę <see cref="T:System.Drawing.Drawing2D.Matrix" /> wartość przez macierz określoną <paramref name="matrix" /> w parametrze i w kolejności określonej w <paramref name="order" /> parametrze.</span><span class="sxs-lookup"><span data-stu-id="eccd7-179">Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the matrix specified in the <paramref name="matrix" /> parameter, and in the order specified in the <paramref name="order" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-180">W przypadku podanej <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>kolejności zostanie <xref:System.Drawing.Drawing2D.Matrix> ona pomnożona przez określoną macierz w pożądanej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-180">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in a prepended order.</span></span> <span data-ttu-id="eccd7-181">W przypadku podanej <xref:System.Drawing.Drawing2D.MatrixOrder.Append>kolejności zostanie <xref:System.Drawing.Drawing2D.Matrix> ona pomnożona przez określoną macierz w załączonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-181">If the specified order is <xref:System.Drawing.Drawing2D.MatrixOrder.Append>, this <xref:System.Drawing.Drawing2D.Matrix> is multiplied by the specified matrix in an appended order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eccd7-182">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-182">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-183">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-183">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-184">Tworzy trzy macierze.</span><span class="sxs-lookup"><span data-stu-id="eccd7-184">Creates three matrices.</span></span>  
  
-   <span data-ttu-id="eccd7-185">Wyświetla zawartość macierzy 1 na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-185">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-186">Mnoży macierz 1 przez macierz 2 i zapisuje wynik w macierzy 1.</span><span class="sxs-lookup"><span data-stu-id="eccd7-186">Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="eccd7-187">Wyświetla zawartość macierzy 1 na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-187">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-188">Mnoży wynik przechowywany w macierzy 1 przez macierz 3 i ponownie zapisuje wynik w macierzy 1.</span><span class="sxs-lookup"><span data-stu-id="eccd7-188">Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.</span></span>  
  
-   <span data-ttu-id="eccd7-189">Wyświetla zawartość macierzy 1 na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-189">Lists the contents of matrix 1 to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-190">Rysuje prostokąt na ekranie przed zastosowaniem transformacji macierzy 1 (niebieski prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-190">Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-191">Stosuje przekształcenie do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-191">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-192">Rysuje przekształcony prostokąt do ekranu (czerwony prostokąt), używając takich samych współrzędnych jak poprzedni prostokąt.</span><span class="sxs-lookup"><span data-stu-id="eccd7-192">Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="eccd7-193">Zwróć uwagę, że czerwony prostokąt został przeskalowany przez współczynnik dwóch w kierunku poziomym, a następnie obrócone 90 stopni, a następnie przeniesione (tłumaczone) 250 punktów w kierunku x i 50 punkty w kierunku y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-193">Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public float OffsetX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eccd7-194">Pobiera wartość tłumaczenia x (wartość DX lub element w trzecim wierszu i pierwszej kolumnie) <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-194">Gets the x translation value (the dx value, or the element in the third row and first column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="eccd7-195">Wartość tłumaczenia x <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-195">The x translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public float OffsetY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OffsetY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float OffsetY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : single" Usage="System.Drawing.Drawing2D.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eccd7-196">Pobiera wartość tłumaczenia y (wartość dy lub element w trzecim wierszu i drugiej kolumnie) tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-196">Gets the y translation value (the dy value, or the element in the third row and second column) of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="eccd7-197">Wartość tłumaczenia y tego <see cref="T:System.Drawing.Drawing2D.Matrix" />elementu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-197">The y translation value of this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="matrix.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eccd7-198">Resetuje ten <see cref="T:System.Drawing.Drawing2D.Matrix" /> element tak, aby miał elementy macierzy tożsamości.</span><span class="sxs-lookup"><span data-stu-id="eccd7-198">Resets this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to have the elements of the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-199">Elementy na głównym przekątnej macierzy tożsamości to 1.</span><span class="sxs-lookup"><span data-stu-id="eccd7-199">The elements on the main diagonal of the identity matrix are 1.</span></span> <span data-ttu-id="eccd7-200">Wszystkie inne elementy macierzy tożsamości są równe 0.</span><span class="sxs-lookup"><span data-stu-id="eccd7-200">All other elements of the identity matrix are 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eccd7-201">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-201">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-202">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-202">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-203">Tworzy macierz skalowania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-203">Creates a scaling matrix.</span></span>  
  
-   <span data-ttu-id="eccd7-204">Wyświetla listę elementów macierzy na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-204">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-205">Resetuje macierz do tożsamości.</span><span class="sxs-lookup"><span data-stu-id="eccd7-205">Resets the matrix to identity.</span></span>  
  
-   <span data-ttu-id="eccd7-206">Wyświetla listę elementów na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-206">Lists the elements to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-207">Tłumaczy macierz przez 50 punktów na osi x i 40 punktów na osi y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-207">Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.</span></span>  
  
-   <span data-ttu-id="eccd7-208">Wyświetla listę elementów przetłumaczonej macierzy na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-208">Lists the elements of the translated matrix to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-209">Rysuje prostokąt jest rysowany na ekranie przed zastosowaniem transformacji macierzy (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-209">Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-210">Stosuje przekształcenie do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-210">Applies the transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-211">Rysuje przekształcony prostokąt jest rysowany na ekranie (czerwony prostokąt), przy użyciu takich samych współrzędnych jak poprzedni prostokąt.</span><span class="sxs-lookup"><span data-stu-id="eccd7-211">Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.</span></span>  
  
 <span data-ttu-id="eccd7-212">Zauważ, że czerwony prostokąt nie był skalowany (z powodu resetowania), ale został przetłumaczony na osi x i y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-212">Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rotate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-213">Stosuje obrót w prawo o określony kąt dotyczący pochodzenia <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-213">Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="eccd7-214">Kąt obrotu (w stopniach).</span><span class="sxs-lookup"><span data-stu-id="eccd7-214">The angle of the rotation, in degrees.</span></span></param>
        <summary><span data-ttu-id="eccd7-215">Dołącz do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> obrotu w prawo, wokół źródła i według określonego kąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-215">Prepend to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> a clockwise rotation, around the origin and by the specified angle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-216">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-216">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Rotate%28System.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Rotate(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Rotate : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Rotate (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="eccd7-217">Kąt (w zakresie) obrotu (w stopniach).</span><span class="sxs-lookup"><span data-stu-id="eccd7-217">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> określa kolejność (dołączanie lub łączenie), <see cref="T:System.Drawing.Drawing2D.Matrix" />do której jest stosowany obrót.</span><span class="sxs-lookup"><span data-stu-id="eccd7-218">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="eccd7-219">Stosuje obrót w prawo do wartości określonej w <paramref name="angle" /> parametrze wokół źródła (współrzędne zerowe x i y). <see cref="T:System.Drawing.Drawing2D.Matrix" /></span><span class="sxs-lookup"><span data-stu-id="eccd7-219">Applies a clockwise rotation of an amount specified in the <paramref name="angle" /> parameter, around the origin (zero x and y coordinates) for this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-220">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-221">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-222">Rysuje prostokąt na ekranie przed zastosowaniem transformacji obrotu (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-222">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-223">Tworzy macierz i obraca ją o 45 stopni.</span><span class="sxs-lookup"><span data-stu-id="eccd7-223">Creates a matrix and rotates it 45 degrees.</span></span>  
  
-   <span data-ttu-id="eccd7-224">Stosuje to przekształcenie macierzy do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-224">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-225">Rysuje przekształcony prostokąt do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-225">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-226">Należy zauważyć, że czerwony prostokąt został obrócony wokół Współrzędne ekranu 0, 0.</span><span class="sxs-lookup"><span data-stu-id="eccd7-226">Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateAt">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-227">Stosuje obrót w prawo w stosunku do <see cref="T:System.Drawing.Drawing2D.Matrix" /> określonego punktu, w zależności od obrotu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-227">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF -&gt; unit" Usage="matrix.RotateAt (angle, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="eccd7-228">Kąt (w zakresie) obrotu (w stopniach).</span><span class="sxs-lookup"><span data-stu-id="eccd7-228">The angle (extent) of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="eccd7-229"><see cref="T:System.Drawing.PointF" /> Reprezentuje środek obrotu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-229">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <summary><span data-ttu-id="eccd7-230">Stosuje obrót w prawo do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> wokół punktu określonego <paramref name="point" /> w parametrze i w zależności od obrotu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-230">Applies a clockwise rotation to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> around the point specified in the <paramref name="point" /> parameter, and by prepending the rotation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-231">Poniższy przykład kodu demonstruje użycie <xref:System.Drawing.Drawing2D.Matrix> metody i, <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> aby obrócić ciąg.</span><span class="sxs-lookup"><span data-stu-id="eccd7-231">The following code example demonstrates using a <xref:System.Drawing.Drawing2D.Matrix> and the <xref:System.Drawing.Drawing2D.GraphicsPath.Transform%2A> method to rotate a string.</span></span> <span data-ttu-id="eccd7-232">Ten przykład jest przeznaczony do użycia z Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="eccd7-232">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="eccd7-233">Utwórz formularz i wklej do niego następujący kod.</span><span class="sxs-lookup"><span data-stu-id="eccd7-233">Create a form and paste the following code into it.</span></span> <span data-ttu-id="eccd7-234">Wywołaj <xref:System.Windows.Forms.Control.Paint> `e` metodę w programie obsługi zdarzeń formularza, przekazując jako <xref:System.Windows.Forms.PaintEventArgs>. `DrawVerticalStringFromBottomUp`</span><span class="sxs-lookup"><span data-stu-id="eccd7-234">Call the `DrawVerticalStringFromBottomUp` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.MiscExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.MiscExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float32 angle, valuetype System.Drawing.PointF point, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.RotateAt(System.Single,System.Drawing.PointF,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Single, point As PointF, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(float angle, System::Drawing::PointF point, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : single * System.Drawing.PointF * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.RotateAt (angle, point, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="eccd7-235">Kąt obrotu (w stopniach).</span><span class="sxs-lookup"><span data-stu-id="eccd7-235">The angle of the rotation, in degrees.</span></span></param>
        <param name="point"><span data-ttu-id="eccd7-236"><see cref="T:System.Drawing.PointF" /> Reprezentuje środek obrotu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-236">A <see cref="T:System.Drawing.PointF" /> that represents the center of the rotation.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> określa kolejność (dołączanie lub łączenie), do której jest stosowany obrót.</span><span class="sxs-lookup"><span data-stu-id="eccd7-237">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the rotation is applied.</span></span></param>
        <summary><span data-ttu-id="eccd7-238">Stosuje obrót w prawo o określony punkt do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-238">Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-239">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-239">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-240">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-240">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-241">Rysuje prostokąt na ekranie przed zastosowaniem transformacji obrotu (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-241">Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-242">Tworzy macierz i obraca ją o 45 stopni wokół określonego punktu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-242">Creates a matrix and rotates it 45 degrees around a specified point.</span></span>  
  
-   <span data-ttu-id="eccd7-243">Stosuje to przekształcenie macierzy do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-243">Applies this matrix transform is to the rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-244">Rysuje przekształcony prostokąt do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-244">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-245">Zwróć uwagę, że czerwony prostokąt został obrócony wokół lewego górnego rogu prostokąta (punkt obrotu określony przez <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> metodę).</span><span class="sxs-lookup"><span data-stu-id="eccd7-245">Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the <xref:System.Drawing.Drawing2D.Matrix.RotateAt%2A> method).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-246">Stosuje określony wektor skali do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> , w zależności od wektora skali.</span><span class="sxs-lookup"><span data-stu-id="eccd7-246">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="eccd7-247">Wartość, według której ma być skalowane <see cref="T:System.Drawing.Drawing2D.Matrix" /> w kierunku osi x.</span><span class="sxs-lookup"><span data-stu-id="eccd7-247">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="eccd7-248">Wartość, według której ma być skalowane <see cref="T:System.Drawing.Drawing2D.Matrix" /> w kierunku osi y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-248">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <summary><span data-ttu-id="eccd7-249">Stosuje określony wektor skali do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> , w zależności od wektora skali.</span><span class="sxs-lookup"><span data-stu-id="eccd7-249">Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-250">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-250">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Scale%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 scaleX, float32 scaleY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Scale(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Single, scaleY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float scaleX, float scaleY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Scale (scaleX, scaleY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Single" />
        <Parameter Name="scaleY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="eccd7-251">Wartość, według której ma być skalowane <see cref="T:System.Drawing.Drawing2D.Matrix" /> w kierunku osi x.</span><span class="sxs-lookup"><span data-stu-id="eccd7-251">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the x-axis direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="eccd7-252">Wartość, według której ma być skalowane <see cref="T:System.Drawing.Drawing2D.Matrix" /> w kierunku osi y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-252">The value by which to scale this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the y-axis direction.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> określa kolejność (dołączanie lub łączenie), <see cref="T:System.Drawing.Drawing2D.Matrix" />do której jest stosowany wektor skali.</span><span class="sxs-lookup"><span data-stu-id="eccd7-253">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the scale vector is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="eccd7-254">Stosuje określony wektor skali (<paramref name="scaleX" /> i <paramref name="scaleY" />) do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> przy użyciu określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-254">Applies the specified scale vector (<paramref name="scaleX" /> and <paramref name="scaleY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> using the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-255">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-255">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-256">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-256">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-257">Rysuje prostokąt na ekranie przed zastosowaniem transformacji skalowania (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-257">Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-258">Tworzy macierz i skaluje ją przez 3 na osi x i 2 w osi y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-258">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="eccd7-259">Stosuje to przekształcenie macierzy do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-259">Applies this matrix transform to the rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-260">Rysuje przekształcony prostokąt do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-260">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-261">Zwróć uwagę, że czerwony prostokąt został przeskalowany przez współczynnik 3 na osi x i 2 w osi y, w tym górny róg prostokąta (punkt początkowy prostokąta).</span><span class="sxs-lookup"><span data-stu-id="eccd7-261">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Shear">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-262">Stosuje określony wektor ścinania do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> przez zaczekanie wektora ścinania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-262">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single -&gt; unit" Usage="matrix.Shear (shearX, shearY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="eccd7-263">Współczynnik ścinania w poziomie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-263">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="eccd7-264">Współczynnik ścinania w pionie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-264">The vertical shear factor.</span></span></param>
        <summary><span data-ttu-id="eccd7-265">Stosuje określony wektor ścinania do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> przez zaczekanie na przekształcenie ścinania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-265">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear transformation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-266">Transformacja zastosowana w tej metodzie jest czystym ścinaniem tylko wtedy, gdy jeden z parametrów jest równy 0.</span><span class="sxs-lookup"><span data-stu-id="eccd7-266">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="eccd7-267">Stosowane do prostokąta w miejscu pochodzenia, gdy `shearY` współczynnik ma wartość 0, transformacja przesuwa dolną krawędź w poziomie o `shearX` więcej niż wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-267">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="eccd7-268">Gdy czynnik ma wartość 0, przesuwa prawą krawędź w pionie, `shearY` określając szerokość prostokąta. `shearX`</span><span class="sxs-lookup"><span data-stu-id="eccd7-268">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="eccd7-269">Przestroga jest w kolejności, gdy oba parametry mają wartość różną od zera, ponieważ wyniki są trudne do przewidywania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-269">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="eccd7-270">Na przykład, jeśli oba czynniki mają wartość 1, transformacja jest pojedyncza (w związku z tym noninvertible), dzięki czemu cała płaszczyzna jest ściskana do jednego wiersza.</span><span class="sxs-lookup"><span data-stu-id="eccd7-270">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eccd7-271">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-271">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-272">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-272">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="eccd7-273">Rysuje prostokąt na ekranie przy użyciu zielonego pióra przed zastosowaniem transformacji skalowania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-273">Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.</span></span>  
  
-   <span data-ttu-id="eccd7-274">Tworzy i używa go, aby ustawić transformację światową <xref:System.Drawing.Graphics>dla. <xref:System.Drawing.Drawing2D.Matrix></span><span class="sxs-lookup"><span data-stu-id="eccd7-274">Creates a <xref:System.Drawing.Drawing2D.Matrix> and uses it to set a world-coordinate transform for the <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="eccd7-275">Rysuje inny prostokąt przy użyciu czerwonego pióra.</span><span class="sxs-lookup"><span data-stu-id="eccd7-275">Draws another rectangle using a red pen.</span></span>  
  
-   <span data-ttu-id="eccd7-276">Rysuje elipsę przy użyciu niebieskiego pióra.</span><span class="sxs-lookup"><span data-stu-id="eccd7-276">Draws an ellipse using a blue pen.</span></span>  
  
 <span data-ttu-id="eccd7-277">Wynik jest zielonym prostokątem, czerwonym równoległobokm i przekształconym, niebieską elipsą.</span><span class="sxs-lookup"><span data-stu-id="eccd7-277">The result is a green rectangle, a red parallelogram and a transformed, blue ellipse.</span></span> <span data-ttu-id="eccd7-278">Należy zauważyć, że zielony prostokąt (rysowany przed ustawieniem transformacji) bezpośrednio używa współrzędnych podanych <xref:System.Drawing.Graphics.DrawRectangle%2A> w wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="eccd7-278">Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <xref:System.Drawing.Graphics.DrawRectangle%2A> call.</span></span> <span data-ttu-id="eccd7-279">Pozostałe dwie cyfry są przekształcane przed rysowaniem.</span><span class="sxs-lookup"><span data-stu-id="eccd7-279">The other two figures are transformed prior to drawing.</span></span> <span data-ttu-id="eccd7-280">Prostokąt jest przekształcony na równoległobok (czerwony), a Elipsa (niebieska) jest przekształcana w celu dopasowania do przekształconego równoległobok.</span><span class="sxs-lookup"><span data-stu-id="eccd7-280">The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram.</span></span> <span data-ttu-id="eccd7-281">Zwróć uwagę na to, że Dolna część prostokąta jest przenoszona (ścinanie) na osi x przez dwukrotne wysokość prostokąta, tworząc równoległobok.</span><span class="sxs-lookup"><span data-stu-id="eccd7-281">Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shear(float32 shearX, float32 shearY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Shear(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shear (shearX As Single, shearY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shear(float shearX, float shearY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Shear : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Shear (shearX, shearY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shearX" Type="System.Single" />
        <Parameter Name="shearY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="shearX"><span data-ttu-id="eccd7-282">Współczynnik ścinania w poziomie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-282">The horizontal shear factor.</span></span></param>
        <param name="shearY"><span data-ttu-id="eccd7-283">Współczynnik ścinania w pionie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-283">The vertical shear factor.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> określa kolejność (dołączanie lub łączenie), w której zastosowano ścinanie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-284">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the shear is applied.</span></span></param>
        <summary><span data-ttu-id="eccd7-285">Stosuje określony wektor ścinania do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-285">Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eccd7-286">Transformacja zastosowana w tej metodzie jest czystym ścinaniem tylko wtedy, gdy jeden z parametrów jest równy 0.</span><span class="sxs-lookup"><span data-stu-id="eccd7-286">The transformation applied in this method is a pure shear only if one of the parameters is 0.</span></span> <span data-ttu-id="eccd7-287">Stosowane do prostokąta w miejscu pochodzenia, gdy `shearY` współczynnik ma wartość 0, transformacja przesuwa dolną krawędź w poziomie o `shearX` więcej niż wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-287">Applied to a rectangle at the origin, when the `shearY` factor is 0, the transformation moves the bottom edge horizontally by `shearX` times the height of the rectangle.</span></span> <span data-ttu-id="eccd7-288">Gdy czynnik ma wartość 0, przesuwa prawą krawędź w pionie, `shearY` określając szerokość prostokąta. `shearX`</span><span class="sxs-lookup"><span data-stu-id="eccd7-288">When the `shearX` factor is 0, it moves the right edge vertically by `shearY` times the width of the rectangle.</span></span> <span data-ttu-id="eccd7-289">Przestroga jest w kolejności, gdy oba parametry mają wartość różną od zera, ponieważ wyniki są trudne do przewidywania.</span><span class="sxs-lookup"><span data-stu-id="eccd7-289">Caution is in order when both parameters are nonzero, because the results are hard to predict.</span></span> <span data-ttu-id="eccd7-290">Na przykład, jeśli oba czynniki mają wartość 1, transformacja jest pojedyncza (w związku z tym noninvertible), dzięki czemu cała płaszczyzna jest ściskana do jednego wiersza.</span><span class="sxs-lookup"><span data-stu-id="eccd7-290">For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eccd7-291">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-291">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Shear%28System.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-292">Stosuje przekształcenia <see cref="T:System.Drawing.Drawing2D.Matrix" /> geometryczne, które reprezentuje do tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-292">Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="eccd7-293">Tablica <see cref="T:System.Drawing.Point" /> struktur reprezentujących punkty do przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-293">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="eccd7-294">Stosuje transformację geometryczną reprezentowaną przez tę <see cref="T:System.Drawing.Drawing2D.Matrix" /> wartość do określonej tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-294">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-295">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-295">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-296">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-296">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-297">Tworzy tablicę punktów, które tworzą prostokąt.</span><span class="sxs-lookup"><span data-stu-id="eccd7-297">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-298">Rysuje tę tablicę punktów (na ekranie przed zastosowaniem transformacji skalowania (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-298">Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-299">Tworzy macierz i skaluje ją przez 3 na osi x i 2 w osi y.</span><span class="sxs-lookup"><span data-stu-id="eccd7-299">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.</span></span>  
  
-   <span data-ttu-id="eccd7-300">Stosuje to przekształcenie macierzy do tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-300">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="eccd7-301">Rysuje przekształconą tablicę do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-301">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-302">Zwróć uwagę, że czerwony prostokąt został przeskalowany przez współczynnik 3 na osi x i 2 w osi y, w tym górny róg prostokąta (punkt początkowy prostokąta).</span><span class="sxs-lookup"><span data-stu-id="eccd7-302">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformPoints(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="eccd7-303">Tablica <see cref="T:System.Drawing.PointF" /> struktur reprezentujących punkty do przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-303">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="eccd7-304">Stosuje transformację geometryczną reprezentowaną przez tę <see cref="T:System.Drawing.Drawing2D.Matrix" /> wartość do określonej tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-304">Applies the geometric transform represented by this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to a specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-305">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-305">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformVectors">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-306">Mnoży każdy wektor w tablicy przez macierz.</span><span class="sxs-lookup"><span data-stu-id="eccd7-306">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="eccd7-307">Elementy tłumaczenia tej macierzy (trzeci wiersz) są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="eccd7-307">The translation elements of this matrix (third row) are ignored.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.Point[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="eccd7-308">Tablica <see cref="T:System.Drawing.Point" /> struktur reprezentujących punkty do przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-308">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="eccd7-309">Stosuje tylko składniki skala i obrót tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> elementu do określonej tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-309">Applies only the scale and rotate components of this <see cref="T:System.Drawing.Drawing2D.Matrix" /> to the specified array of points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-310">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-310">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-311">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-311">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-312">Tworzy tablicę punktów, które tworzą prostokąt.</span><span class="sxs-lookup"><span data-stu-id="eccd7-312">Creates an array of points that form a rectangle.</span></span>  
  
-   <span data-ttu-id="eccd7-313">Rysuje tę tablicę punktów na ekranie przed zastosowaniem transformacji skalowania (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-313">Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-314">Tworzy macierz i skaluje ją przez 3 na osi x i 2 na osi y i tłumaczy je o 100 na obu osiach.</span><span class="sxs-lookup"><span data-stu-id="eccd7-314">Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="eccd7-315">Wyświetla listę elementów macierzy na ekranie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-315">Lists the matrix elements to the screen.</span></span>  
  
-   <span data-ttu-id="eccd7-316">Stosuje to przekształcenie macierzy do tablicy punktów.</span><span class="sxs-lookup"><span data-stu-id="eccd7-316">Applies this matrix transform to the array of points.</span></span>  
  
-   <span data-ttu-id="eccd7-317">Rysuje przekształconą tablicę do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-317">Draws the transformed array to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-318">Należy zauważyć, że czerwony prostokąt został przeskalowany przez współczynnik 3 na osi x i 2 w osi y, w tym górny róg prostokąta (punkt początkowy prostokąta), ale wektor tłumaczenia (ostatnie dwa elementy macierzy) jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="eccd7-318">Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformVectors">
      <MemberSignature Language="C#" Value="public void TransformVectors (System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformVectors(valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.TransformVectors(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformVectors (pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformVectors(cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformVectors : System.Drawing.PointF[] -&gt; unit" Usage="matrix.TransformVectors pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="eccd7-319">Tablica <see cref="T:System.Drawing.Point" /> struktur reprezentujących punkty do przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-319">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="eccd7-320">Mnoży każdy wektor w tablicy przez macierz.</span><span class="sxs-lookup"><span data-stu-id="eccd7-320">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="eccd7-321">Elementy tłumaczenia tej macierzy (trzeci wiersz) są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="eccd7-321">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-322">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-322">For an example, see <xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eccd7-323">Stosuje do <see cref="T:System.Drawing.Drawing2D.Matrix" /> niego określony wektor tłumaczenia, w zależności od wektora tłumaczenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-323">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="eccd7-324">Wartość x, według której ma zostać przetłumaczenie <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-324">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="eccd7-325">Wartość y, według której ma zostać przetłumaczenie <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-325">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="eccd7-326">Stosuje określone wektory tłumaczenia (<paramref name="offsetX" /> i <paramref name="offsetY" />) do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> w zależności od wektora tłumaczenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-326">Applies the specified translation vector (<paramref name="offsetX" /> and <paramref name="offsetY" />) to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-327">Aby zapoznać się z przykładem, zobacz <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span><span class="sxs-lookup"><span data-stu-id="eccd7-327">For an example, see <xref:System.Drawing.Drawing2D.Matrix.Translate%28System.Single%2CSystem.Single%2CSystem.Drawing.Drawing2D.MatrixOrder%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 offsetX, float32 offsetY, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.Translate(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Single, offsetY As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float offsetX, float offsetY, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="matrix.Translate (offsetX, offsetY, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Single" />
        <Parameter Name="offsetY" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="eccd7-328">Wartość x, według której ma zostać przetłumaczenie <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-328">The x value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="offsetY"><span data-ttu-id="eccd7-329">Wartość y, według której ma zostać przetłumaczenie <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span><span class="sxs-lookup"><span data-stu-id="eccd7-329">The y value by which to translate this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <param name="order"><span data-ttu-id="eccd7-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> określa kolejność (dołączanie lub łączenie), <see cref="T:System.Drawing.Drawing2D.Matrix" />do której zastosowano tłumaczenie.</span><span class="sxs-lookup"><span data-stu-id="eccd7-330">A <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> that specifies the order (append or prepend) in which the translation is applied to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="eccd7-331">Stosuje określony wektor tłumaczenia do tego <see cref="T:System.Drawing.Drawing2D.Matrix" /> w określonej kolejności.</span><span class="sxs-lookup"><span data-stu-id="eccd7-331">Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eccd7-332">Poniższy przykład kodu jest przeznaczony do użytku z Windows Forms i wymaga <xref:System.Windows.Forms.PaintEventArgs> `e` <xref:System.Windows.Forms.Control.Paint> obiektu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-332">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="eccd7-333">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="eccd7-333">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="eccd7-334">Rysuje prostokąt na ekranie przed zastosowaniem transformacji tłumaczenia (niebieskim prostokątem).</span><span class="sxs-lookup"><span data-stu-id="eccd7-334">Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).</span></span>  
  
-   <span data-ttu-id="eccd7-335">Tworzy macierz i tłumaczy ją o 100 na obu osiach.</span><span class="sxs-lookup"><span data-stu-id="eccd7-335">Creates a matrix and translates it by 100 in both axes.</span></span>  
  
-   <span data-ttu-id="eccd7-336">Stosuje to przekształcenie macierzy do prostokąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-336">Applies this matrix transform to the rectangle,</span></span>  
  
-   <span data-ttu-id="eccd7-337">Rysuje przekształcony prostokąt do ekranu (czerwony prostokąt).</span><span class="sxs-lookup"><span data-stu-id="eccd7-337">Draws the transformed rectangle to the screen (the red rectangle).</span></span>  
  
 <span data-ttu-id="eccd7-338">Należy zauważyć, że początek czerwonego prostokąta znajduje się w zakresie 100 punktów na obu osiach od początku niebieskiego trójkąta.</span><span class="sxs-lookup"><span data-stu-id="eccd7-338">Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMatrixExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMatrixExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VectorTransformPoints">
      <MemberSignature Language="C#" Value="public void VectorTransformPoints (System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VectorTransformPoints(valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.Matrix.VectorTransformPoints(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub VectorTransformPoints (pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VectorTransformPoints(cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.VectorTransformPoints : System.Drawing.Point[] -&gt; unit" Usage="matrix.VectorTransformPoints pts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pts"><span data-ttu-id="eccd7-339">Tablica <see cref="T:System.Drawing.Point" /> struktur reprezentujących punkty do przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="eccd7-339">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transform.</span></span></param>
        <summary><span data-ttu-id="eccd7-340">Mnoży każdy wektor w tablicy przez macierz.</span><span class="sxs-lookup"><span data-stu-id="eccd7-340">Multiplies each vector in an array by the matrix.</span></span> <span data-ttu-id="eccd7-341">Elementy tłumaczenia tej macierzy (trzeci wiersz) są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="eccd7-341">The translation elements of this matrix (third row) are ignored.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
