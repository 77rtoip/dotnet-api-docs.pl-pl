<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f65efc2bf5e51cf23ed0a83e2215697298c0bb8" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52906608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type CustomLineCap = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="464b0-101">Hermetyzuje limit niestandardowej linii zdefiniowanych przez użytkownika.</span>
      <span class="sxs-lookup">
        <span data-stu-id="464b0-101">Encapsulates a custom user-defined line cap.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-102">Wielkości graniczne linii są używane na początku i końcu linii lub Krzywe rysowania w GDI + <xref:System.Drawing.Pen> obiektów.</span><span class="sxs-lookup"><span data-stu-id="464b0-102">Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <xref:System.Drawing.Pen> objects.</span></span> <span data-ttu-id="464b0-103">GDI + obsługuje kilka wstępnie zdefiniowanych limit stylów i pozwala użytkownikom na definiowanie własnych stylów zakończenia.</span><span class="sxs-lookup"><span data-stu-id="464b0-103">GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</span></span> <span data-ttu-id="464b0-104">Ta klasa jest używana do tworzenia style niestandardowe limit.</span><span class="sxs-lookup"><span data-stu-id="464b0-104">This class is used to create custom cap styles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="464b0-105">Poniższy przykład pokazuje sposób użycia <xref:System.Drawing.Drawing2D.CustomLineCap> klasy.</span><span class="sxs-lookup"><span data-stu-id="464b0-105">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap> class.</span></span> <span data-ttu-id="464b0-106">Aby uruchomić ten przykład Wklej, kod do formularza Windows.</span><span class="sxs-lookup"><span data-stu-id="464b0-106">To run this example paste, the code into a Windows Form.</span></span> <span data-ttu-id="464b0-107">Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DrawCaps` z poziomu formularza <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="464b0-107">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="464b0-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> klasy przy użyciu określonego konturu i wypełnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-108">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="464b0-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje wypełnienia dla niestandardowych cap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="464b0-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje konspektu niestandardowe zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> klasy przy użyciu określonego konturu i wypełnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-111">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-112"><xref:System.Drawing.Drawing2D.CustomLineCap> używa trybu wypełnienia "rozwiązania", niezależnie od tego trybu wypełnienia określony dla operacji.</span><span class="sxs-lookup"><span data-stu-id="464b0-112"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="464b0-113">`fillPath` i `strokePath` parametrów nie można używać w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="464b0-113">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="464b0-114">Jeden parametr, muszą być przekazywane wartości null.</span><span class="sxs-lookup"><span data-stu-id="464b0-114">One parameter must be passed a null value.</span></span> <span data-ttu-id="464b0-115">Jeśli żaden parametr nie zostanie przekazana wartość null, `fillPath` zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="464b0-115">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="464b0-116">Jeśli `strokePath` jest `null`, `fillPath` należy przechwytywać ujemne y.</span><span class="sxs-lookup"><span data-stu-id="464b0-116">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="464b0-117">Poniższy przykład pokazuje sposób użycia <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="464b0-117">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span></span> <span data-ttu-id="464b0-118">Aby uruchomić ten przykład, Wklej kod do formularza Windows.</span><span class="sxs-lookup"><span data-stu-id="464b0-118">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="464b0-119">Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DrawCaps` z poziomu formularza <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="464b0-119">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="464b0-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje wypełnienia dla niestandardowych cap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="464b0-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje konspektu niestandardowe zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="464b0-122">Limit wiersza służący do utworzenia niestandardowych zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-122">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-123">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> klasy z określonego istniejącego <see cref="T:System.Drawing.Drawing2D.LineCap" /> wyliczenie z określonego konturu i wypełnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-124"><xref:System.Drawing.Drawing2D.CustomLineCap> używa trybu wypełnienia "rozwiązania", niezależnie od tego trybu wypełnienia określony dla operacji.</span><span class="sxs-lookup"><span data-stu-id="464b0-124"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="464b0-125">`fillPath` i `strokePath` parametrów nie można używać w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="464b0-125">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="464b0-126">Jeden parametr, muszą być przekazywane wartości null.</span><span class="sxs-lookup"><span data-stu-id="464b0-126">One parameter must be passed a null value.</span></span> <span data-ttu-id="464b0-127">Jeśli żaden parametr nie zostanie przekazana wartość null, `fillPath` zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="464b0-127">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="464b0-128">Jeśli `strokePath` jest `null`, `fillPath` należy przechwytywać ujemne y.</span><span class="sxs-lookup"><span data-stu-id="464b0-128">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.CustomLineCap : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.LineCap * single -&gt; System.Drawing.Drawing2D.CustomLineCap" Usage="new System.Drawing.Drawing2D.CustomLineCap (fillPath, strokePath, baseCap, baseInset)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath">
          <span data-ttu-id="464b0-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje wypełnienia dla niestandardowych cap.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span>
          </span>
        </param>
        <param name="strokePath">
          <span data-ttu-id="464b0-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> obiekt, który definiuje konspektu niestandardowe zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span>
          </span>
        </param>
        <param name="baseCap">
          <span data-ttu-id="464b0-131">Limit wiersza służący do utworzenia niestandardowych zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-131">The line cap from which to create the custom cap.</span>
          </span>
        </param>
        <param name="baseInset">
          <span data-ttu-id="464b0-132">Odległość między zakończenia linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-132">The distance between the cap and the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-133">Inicjuje nowe wystąpienie klasy <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> klasy z określonego istniejącego <see cref="T:System.Drawing.Drawing2D.LineCap" /> wyliczenie z określonym konspektu, wypełnij i wstawki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-133">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-134"><xref:System.Drawing.Drawing2D.CustomLineCap> używa trybu wypełnienia "rozwiązania", niezależnie od tego trybu wypełnienia określony dla operacji.</span><span class="sxs-lookup"><span data-stu-id="464b0-134"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="464b0-135">`fillPath` i `strokePath` parametrów nie można używać w tym samym czasie.</span><span class="sxs-lookup"><span data-stu-id="464b0-135">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="464b0-136">Jeden parametr, muszą być przekazywane wartości null.</span><span class="sxs-lookup"><span data-stu-id="464b0-136">One parameter must be passed a null value.</span></span> <span data-ttu-id="464b0-137">Jeśli żaden parametr nie zostanie przekazana wartość null, `fillPath` zostaną zignorowane.</span><span class="sxs-lookup"><span data-stu-id="464b0-137">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="464b0-138">Jeśli `strokePath` jest `null`, `fillPath` należy przechwytywać ujemne y.</span><span class="sxs-lookup"><span data-stu-id="464b0-138">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberSignature Language="F#" Value="member this.BaseCap : System.Drawing.Drawing2D.LineCap with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="464b0-139">Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.LineCap" /> wyliczenia, na którym znajduje się ten <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> opiera się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-139">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="464b0-140">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> Wyliczenia, na którym znajduje się ten <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> opiera się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-140">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.BaseInset : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="464b0-141">Pobiera lub Ustawia odległość między zakończenia linii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-141">Gets or sets the distance between the cap and the line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="464b0-142">Odległość między początkiem zakończenie końca wiersza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-142">The distance between the beginning of the cap and the end of the line.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="customLineCap.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="464b0-143">Tworzy dokładną kopię tego <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-143">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="464b0-144">
            <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Ta metoda tworzy, rzutowany jako obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-144">The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="464b0-145">Poniższy przykład jest przeznaczony do użytku z formularzami Windows Forms i potrzebny <xref:System.Windows.Forms.PaintEventArgs> `e`, <xref:System.Windows.Forms.Control.Paint> obiektem zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="464b0-145">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="464b0-146">Kod wykonuje następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="464b0-146">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="464b0-147">Tworzy limit niestandardowej linii przy użyciu <xref:System.Drawing.Drawing2D.GraphicsPath> obiektu.</span><span class="sxs-lookup"><span data-stu-id="464b0-147">Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="464b0-148">Tworzy <xref:System.Drawing.Drawing2D.CustomLineCap> obiektu `firstCap`przy użyciu <xref:System.Drawing.Drawing2D.GraphicsPath> właśnie utworzony obiekt.</span><span class="sxs-lookup"><span data-stu-id="464b0-148">Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.</span></span>  
  
-   <span data-ttu-id="464b0-149">Tworzy klon `firstCap` przy użyciu <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="464b0-149">Creates a clone of `firstCap` by using the <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> method.</span></span>  
  
-   <span data-ttu-id="464b0-150">Konfiguruje <xref:System.Drawing.Pen.CustomStartCap%2A> i <xref:System.Drawing.Pen.CustomEndCap%2A> właściwości <xref:System.Drawing.Pen> obiektu i zastosowań, które piórem Rysowanie linii i limity niestandardowego do ekranu.</span><span class="sxs-lookup"><span data-stu-id="464b0-150">Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.</span></span>  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="customLineCap.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="464b0-151">Zwalnia wszelkie zasoby używane przez to <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-151">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-152">Wywoływanie <xref:System.IDisposable.Dispose%2A> umożliwia zasoby używane przez to <xref:System.Drawing.Drawing2D.CustomLineCap> obiektu zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="464b0-152">Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="customLineCap.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="464b0-153">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-153">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-154">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-154">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="customLineCap.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="464b0-155">Umożliwia <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> próby zwolnienie zasobów i wykonywać inne operacje oczyszczania przed <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> jest odzyskiwane przez wyrzucanie elementów bezużytecznych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-155">Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberSignature Language="F#" Value="member this.GetStrokeCaps :  *  -&gt; unit" Usage="customLineCap.GetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="464b0-156">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> Wyliczenia używane na początku wiersza, w ramach tego limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-156">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="464b0-157">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> Wyliczenia używane na końcu wiersza, w ramach tego limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-157">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-158">Pobiera limity używane do uruchamiania i na końcu wiersza, które tworzą ten limit niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-158">Gets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="464b0-159">Poniższy przykład pokazuje sposób użycia <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="464b0-159">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> method.</span></span> <span data-ttu-id="464b0-160">Aby uruchomić ten przykład, Wklej kod do formularza Windows.</span><span class="sxs-lookup"><span data-stu-id="464b0-160">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="464b0-161">Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DrawCaps` z poziomu formularza <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="464b0-161">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberSignature Language="F#" Value="member this.SetStrokeCaps : System.Drawing.Drawing2D.LineCap * System.Drawing.Drawing2D.LineCap -&gt; unit" Usage="customLineCap.SetStrokeCaps (startCap, endCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <span data-ttu-id="464b0-162">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> Wyliczenia używane na początku wiersza, w ramach tego limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-162">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span>
          </span>
        </param>
        <param name="endCap">
          <span data-ttu-id="464b0-163">
            <see cref="T:System.Drawing.Drawing2D.LineCap" /> Wyliczenia używane na końcu wiersza, w ramach tego limitu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-163">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="464b0-164">Ustawia limity używane do uruchamiania i na końcu wiersza, które tworzą ten limit niestandardowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-164">Sets the caps used to start and end lines that make up this custom cap.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="464b0-165">Poniższy przykład pokazuje sposób użycia <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="464b0-165">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> method.</span></span> <span data-ttu-id="464b0-166">Aby uruchomić ten przykład, Wklej kod do formularza Windows.</span><span class="sxs-lookup"><span data-stu-id="464b0-166">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="464b0-167">Obsługa formularzy <xref:System.Windows.Forms.Control.Paint> zdarzenia i wywołania `DrawCaps` z poziomu formularza <xref:System.Windows.Forms.Control.Paint> metody obsługi zdarzeń, przekazując `e` jako <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="464b0-167">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberSignature Language="F#" Value="member this.StrokeJoin : System.Drawing.Drawing2D.LineJoin with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="464b0-168">Pobiera lub ustawia <see cref="T:System.Drawing.Drawing2D.LineJoin" /> wyliczenie, które określa, jak wiersze, które tworzą to <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> obiektu są łączone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-168">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="464b0-169">
            <see cref="T:System.Drawing.Drawing2D.LineJoin" /> Wyliczenia to <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> obiekt używa do dołączenia do wierszy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-169">The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-170">Ta właściwość określa <xref:System.Drawing.Drawing2D.LineJoin> wyliczenie, które służy do sprzęgania linii i krzywych, które tworzą ścieżkę obrysowane <xref:System.Drawing.Drawing2D.CustomLineCap> obiektu.</span><span class="sxs-lookup"><span data-stu-id="464b0-170">This property specifies a <xref:System.Drawing.Drawing2D.LineJoin> enumeration that is used to join lines and curves that make up the stroked path of this <xref:System.Drawing.Drawing2D.CustomLineCap> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.WidthScale : single with get, set" Usage="System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="464b0-171">Pobiera lub ustawia wartość, o którą można skalować <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> obiektu klasy względem szerokości <see cref="T:System.Drawing.Pen" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-171">Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="464b0-172">Kwota za pomocą którego można skalować do zakończenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="464b0-172">The amount by which to scale the cap.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="464b0-173">Ta właściwość określa wielokrotność szerokość mnożenia rozmiar niestandardowych zakończenia.</span><span class="sxs-lookup"><span data-stu-id="464b0-173">This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</span></span> <span data-ttu-id="464b0-174">Na przykład jeśli ta właściwość ma wartość 1, szerokość zakończenia niestandardowego wynosi 10, wysokość niestandardowe limit wynosi 5 i linia jest rysowana piórem o szerokości 3, zakończenie jest rysowane 30 jednostek szerokiego 15 jednostek i wysoka.</span><span class="sxs-lookup"><span data-stu-id="464b0-174">For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</span></span> <span data-ttu-id="464b0-175">Ustawienie tej właściwości na 3 powoduje, że limit być rysowane 90 szerokości i 45 jednostek wysokiej.</span><span class="sxs-lookup"><span data-stu-id="464b0-175">Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>