<Type Name="TreeWalker" FullName="System.Windows.Automation.TreeWalker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="987d1b484eeaf275b2f5439b677ac13f0f398f9e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39805802" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TreeWalker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TreeWalker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TreeWalker" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TreeWalker" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeWalker sealed" />
  <TypeSignature Language="F#" Value="type TreeWalker = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metody i właściwości służące do nawigacji drzewa automatyzacji interfejsu użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wyświetl klientów automatyzacji interfejsu użytkownika [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów na pulpicie jako zbiór <xref:System.Windows.Automation.AutomationElement> obiekty ułożone w strukturze drzewa.  
  
 Za pomocą <xref:System.Windows.Automation.TreeWalker> klasy, można przejść w aplikacji klienckiej [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewa przy wybraniu widoku drzewa i Krokowe przechodzenie z jednego <xref:System.Windows.Automation.AutomationElement> do drugiego w określonym kierunku, w którym używana jest <xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A>, <xref:System.Windows.Automation.TreeWalker.GetLastChild%2A>, <xref:System.Windows.Automation.TreeWalker.GetPreviousSibling%2A>, <xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A>, i <xref:System.Windows.Automation.TreeWalker.GetParent%2A> metody.  
  
 Nawigacja [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewa za pomocą <xref:System.Windows.Automation.TreeWalker> może doprowadzić do wywołań między procesami, a nie wydajne niż lokalizowania elementu za pomocą <xref:System.Windows.Automation.AutomationElement.FindAll%2A> lub <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> metody.  
  
 Jeśli Twoja aplikacja kliencka może próbować znajdowanie elementów w interfejsie użytkownika, musisz wprowadzić wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeWalker (System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeWalker(System::Windows::Automation::Condition ^ condition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Automation.TreeWalker : System.Windows.Automation.Condition -&gt; System.Windows.Automation.TreeWalker" Usage="new System.Windows.Automation.TreeWalker condition" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="condition">Widok [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element drzewa, która <see cref="T:System.Windows.Automation.TreeWalker" /> spowoduje przejście.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Automation.TreeWalker" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementy, które nie są zgodne `condition` są pomijane nad tym, kiedy <xref:System.Windows.Automation.TreeWalker> służy do nawigowania drzewo elementów.  
  
 Jeśli Twoja aplikacja kliencka może próbować znajdowanie elementów w interfejsie użytkownika, musisz wprowadzić wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak można skonstruować <xref:System.Windows.Automation.TreeWalker> która nawiguje tylko między elementami włączone.  
  
 [!code-csharp[UIAClient_snip#174](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#174)]
 [!code-vb[UIAClient_snip#174](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#174)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition Condition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TreeWalker.Condition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Condition As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ Condition { System::Windows::Automation::Condition ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Condition : System.Windows.Automation.Condition" Usage="System.Windows.Automation.TreeWalker.Condition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który określa widok <see cref="T:System.Windows.Automation.TreeWalker" /> obiektu.</summary>
        <value>Warunek, który definiuje widoku. Jest to wartość, która została przekazana do konstruktora.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.TreeWalker.#ctor(System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="ContentViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ContentViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ContentViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ContentViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContentViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ContentViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContentViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.ContentViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wstępnie zdefiniowanej <see cref="T:System.Windows.Automation.TreeWalker" /> z widokiem elementy w drzewie, które są oznaczone jako formanty zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli Twoja aplikacja kliencka może próbować znajdowanie elementów w interfejsie użytkownika, musisz wprowadzić wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.ControlViewWalker> używane do konstruowania elementów w poddrzewo w widoku drzewa. Właściwość usage <xref:System.Windows.Automation.TreeWalker.ContentViewWalker> jest taka sama.  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      </Docs>
    </Member>
    <Member MemberName="ControlViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker ControlViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker ControlViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.ControlViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ ControlViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable ControlViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.ControlViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wstępnie zdefiniowanej <see cref="T:System.Windows.Automation.TreeWalker" /> z widokiem elementy w drzewie, które są oznaczone jako kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli Twoja aplikacja kliencka może próbować znajdowanie elementów w interfejsie użytkownika, musisz wprowadzić wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.ControlViewWalker> używane do konstruowania elementów w poddrzewo w widoku drzewa.  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera pierwszy element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako pierwszy element podrzędny zostaną zwrócone jako pierwszy element podrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetFirstChild : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetFirstChild element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane z pierwszego elementu podrzędnego.</param>
        <summary>Pobiera pierwszy element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Pierwszy element podrzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako pierwszy element podrzędny zostaną zwrócone jako pierwszy element podrzędny w kolejnych przebiegów.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.GetFirstChild%2A> używane do konstruowania elementów w poddrzewo w widoku drzewa.  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetFirstChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetFirstChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetFirstChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetFirstChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetFirstChild : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetFirstChild (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane z pierwszego elementu podrzędnego.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określając zwracanym właściwości i wzorców <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera pierwszy element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" /> i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Pierwszy element podrzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako pierwszy element podrzędny zostaną zwrócone jako pierwszy element podrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLastChild">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera ostatni element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako ostatni element podrzędny zostaną zwrócone jako ostatni element podrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetLastChild : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetLastChild element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane ostatnim elementem podrzędnym.</param>
        <summary>Pobiera ostatni element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>
          <see cref="T:System.Windows.Automation.AutomationElement" /> Oznacza to ostatni element podrzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako ostatni element podrzędny zostaną zwrócone jako ostatni element podrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastChild">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetLastChild (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetLastChild(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetLastChild(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastChild (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetLastChild(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetLastChild : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetLastChild (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane ostatnim elementem podrzędnym.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określając zwracanym właściwości i wzorców <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera ostatni element podrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" /> i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Ostatni element lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć dodatkowe elementy podrzędne, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako ostatni element podrzędny zostaną zwrócone jako ostatni element podrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNextSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera następny element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako następny element równorzędny zostanie zwrócony następny element równorzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetNextSibling : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetNextSibling element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.Automation.AutomationElement" /> z którego można pobrać następny element równorzędny.</param>
        <summary>Pobiera następny element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Następny element równorzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako następny element równorzędny zostanie zwrócony następny element równorzędny w kolejnych przebiegów.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.GetNextSibling%2A> używane do konstruowania elementów w poddrzewo w widoku drzewa.  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetNextSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetNextSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetNextSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetNextSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetNextSibling : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetNextSibling (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego można pobrać następny element równorzędny.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określając zwracanym właściwości i wzorców <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera następny element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" /> i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Następny element równorzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako następny element równorzędny zostanie zwrócony następny element równorzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParent">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element nadrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako elementu nadrzędnego zostaną zwrócone jako element nadrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetParent : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetParent element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">Element, którego rodzic, jest zwracana.</param>
        <summary>Pobiera element nadrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Element nadrzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli określony element jest elementem głównym drzewa lub element nadrzędny nie jest widoczny w bieżącym widoku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.GetParent%2A> jest używana do znajdowania elementu okna, który zawiera określony element.  
  
 [!code-csharp[UIAFocusTracker_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFocusTracker_snip/CSharp/FocusTracker.cs#102)]
 [!code-vb[UIAFocusTracker_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFocusTracker_snip/VisualBasic/FocusTracker.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetParent (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetParent(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetParent(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetParent(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetParent : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetParent (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, którego rodzic, jest zwracana.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określanie elementów członkowskich w zwracanym <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera element nadrzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" /> i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Element nadrzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli określony element jest elementem głównym drzewa lub element nadrzędny nie jest widoczny w tym widoku.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako elementu nadrzędnego zostaną zwrócone jako element nadrzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPreviousSibling">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera poprzedni element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako poprzedni element równorzędny zostaną zwrócone jako poprzedni element równorzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousSibling : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetPreviousSibling element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane poprzedni element równorzędny.</param>
        <summary>Pobiera poprzedni element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Poprzedni element równorzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako poprzedni element równorzędny zostaną zwrócone jako poprzedni element równorzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreviousSibling">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetPreviousSibling (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetPreviousSibling(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.GetPreviousSibling(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPreviousSibling (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetPreviousSibling(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.GetPreviousSibling : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.GetPreviousSibling (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, z którego mają zostać pobrane poprzedni element równorzędny.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określając zwracanym właściwości i wzorców <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera poprzedni element równorzędny określonego <see cref="T:System.Windows.Automation.AutomationElement" /> i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Poprzedni element równorzędny lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku braku takiego elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Może mieć elementów równorzędnych dodatkowe, które nie są zgodne z bieżącego stanu widoku, a zatem nie są zwracane w przypadku przechodzenia drzewo elementów.  
  
 Struktura <xref:System.Windows.Automation.AutomationElement> drzewa zmian jako widoczny [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów w przypadku zmiany pulpitu. Nie gwarantuje, że element ma być zwracany jako poprzedni element równorzędny zostaną zwrócone jako poprzedni element równorzędny w kolejnych przebiegów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera element nadrzędny najbardziej zbliżona określonego <see cref="T:System.Windows.Automation.AutomationElement" /> w widoku drzewa, używane przez to wystąpienie elementu <see cref="T:System.Windows.Automation.TreeWalker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element jest znormalizować, przechodząc łańcuch elementu nadrzędnego w drzewie, aż do elementu, który spełnia warunek widoku <xref:System.Windows.Automation.TreeWalker> obiektu zostanie osiągnięty. W przypadku osiągnięcia element główny element główny jest zwracany, nawet wtedy, gdy nie spełnia warunku widoku.  
  
 Ta metoda jest przydatna w przypadku aplikacji, które pobierają odwołania do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów przez testowanie trafień. Aplikacja może być tylko z określonych typów elementów i użyć <xref:System.Windows.Automation.TreeWalker.Normalize%2A> do upewnij się, że niezależnie od tego, jaki element jest początkowo pobierane (na przykład, gdy pasek przewijania pobiera fokus wprowadzania), tylko element zainteresowań (na przykład zawartość pobierany jest ostatecznie element).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Windows.Automation.AutomationElement -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.Normalize element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="element">Element, który ma wyznaczać początek normalizacji.</param>
        <summary>Pobiera węzeł, jeśli spełnia <see cref="P:System.Windows.Automation.TreeWalker.Condition" />, lub najbliższej nadrzędnej lub nadrzędnym węzła który spełnia <see cref="P:System.Windows.Automation.TreeWalker.Condition" />.</summary>
        <returns>Najbliższej <see cref="T:System.Windows.Automation.AutomationElement" /> w bieżącym widoku. Jeśli nawigacji łańcuch nadrzędnym osiągnie element główny, zwracany jest elementem głównym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element jest znormalizować, przechodząc łańcuch elementu nadrzędnego w drzewie, aż do elementu, który spełnia warunek widoku <xref:System.Windows.Automation.TreeWalker> obiektu zostanie osiągnięty. W przypadku osiągnięcia element główny element główny jest zwracany, nawet wtedy, gdy nie spełnia warunku widoku.  
  
 Ta metoda jest przydatna w przypadku aplikacji, które pobierają odwołania do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów przez testowanie trafień. Aplikacja może być tylko z określonych typów elementów i użyć <xref:System.Windows.Automation.TreeWalker.Normalize%2A> do upewnij się, że niezależnie od tego, jaki element jest początkowo pobierane (na przykład, gdy pasek przewijania pobiera fokus wprowadzania), tylko element zainteresowań (na przykład zawartość pobierany jest ostatecznie element).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement Normalize (System.Windows.Automation.AutomationElement element, System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement Normalize(class System.Windows.Automation.AutomationElement element, class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TreeWalker.Normalize(System.Windows.Automation.AutomationElement,System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize (element As AutomationElement, request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ Normalize(System::Windows::Automation::AutomationElement ^ element, System::Windows::Automation::CacheRequest ^ request);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Windows.Automation.AutomationElement * System.Windows.Automation.CacheRequest -&gt; System.Windows.Automation.AutomationElement" Usage="treeWalker.Normalize (element, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="element">Element, który ma wyznaczać początek normalizacji.</param>
        <param name="request">Obiekt żądania pamięci podręcznej, określając zwracanym właściwości i wzorców <see cref="T:System.Windows.Automation.AutomationElement" /> do pamięci podręcznej.</param>
        <summary>Pobiera węzeł, jeśli spełnia <see cref="P:System.Windows.Automation.TreeWalker.Condition" />, lub najbliższej nadrzędnej lub nadrzędnym węzła który spełnia <see cref="P:System.Windows.Automation.TreeWalker.Condition" />i zapisuje w pamięci podręcznej, właściwości i wzorce.</summary>
        <returns>Najbliższej <see cref="T:System.Windows.Automation.AutomationElement" /> w bieżącym widoku. Jeśli nawigacji łańcuch nadrzędnym osiągnie element główny, zwracany jest elementem głównym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element jest znormalizować, przechodząc łańcuch elementu nadrzędnego w drzewie, aż do elementu, który spełnia warunek widoku <xref:System.Windows.Automation.TreeWalker> obiektu zostanie osiągnięty. W przypadku osiągnięcia element główny element główny jest zwracany, nawet wtedy, gdy nie spełnia warunku widoku.  
  
 Ta metoda jest przydatna w przypadku aplikacji, które pobierają odwołania do [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów przez testowanie trafień. Aplikacja może być tylko z określonych typów elementów i użyć <xref:System.Windows.Automation.TreeWalker.Normalize%2A> do upewnij się, że niezależnie od tego, jaki element jest początkowo pobierane (na przykład, gdy pasek przewijania pobiera fokus wprowadzania), tylko element zainteresowań (na przykład zawartość pobierany jest ostatecznie element).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawViewWalker">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.TreeWalker RawViewWalker;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.TreeWalker RawViewWalker" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TreeWalker.RawViewWalker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RawViewWalker As TreeWalker " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::TreeWalker ^ RawViewWalker;" />
      <MemberSignature Language="F#" Value=" staticval mutable RawViewWalker : System.Windows.Automation.TreeWalker" Usage="System.Windows.Automation.TreeWalker.RawViewWalker" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeWalker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje wstępnie zdefiniowanej <see cref="T:System.Windows.Automation.TreeWalker" /> z widokiem wszystkie elementy w drzewie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli Twoja aplikacja kliencka może próbować znajdowanie elementów w interfejsie użytkownika, musisz wprowadzić wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Automation.TreeWalker.ControlViewWalker> używane do konstruowania elementów w poddrzewo w widoku drzewa. Właściwość usage <xref:System.Windows.Automation.TreeWalker.RawViewWalker> jest taka sama.  
  
 [!code-csharp[UIAClient_snip#171](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#171)]
 [!code-vb[UIAClient_snip#171](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#171)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>