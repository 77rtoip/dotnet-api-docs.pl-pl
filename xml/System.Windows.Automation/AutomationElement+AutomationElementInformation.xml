<Type Name="AutomationElement+AutomationElementInformation" FullName="System.Windows.Automation.AutomationElement+AutomationElementInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f17bbcb93cbd35809f5d2207b17d51d95f199542" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46617400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit AutomationElement/AutomationElementInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure AutomationElement.AutomationElementInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class AutomationElement::AutomationElementInformation" />
  <TypeSignature Language="F#" Value="type AutomationElement.AutomationElementInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera metody dostępu właściwości, używany przez <see cref="P:System.Windows.Automation.AutomationElement.Cached" /> lub <see cref="P:System.Windows.Automation.AutomationElement.Current" /> właściwości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości są dostępne bezpośrednio z <xref:System.Windows.Automation.AutomationElement.Cached%2A> i <xref:System.Windows.Automation.AutomationElement.Current%2A>; nie trzeba pobrać <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation> samej struktury.  
  
 Właściwości w tej strukturze można również pobrać za pomocą <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> i <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>, przy użyciu odpowiednich identyfikatorów z <xref:System.Windows.Automation.AutomationElement>. Na przykład <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey%2A?displayProperty=nameWithType> właściwość jest identyfikowane za pomocą <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty?displayProperty=nameWithType> pola. Więcej informacji na temat poszczególnych właściwości są dostępne na stronach odwołania dotyczące tych identyfikatorów; Zobacz link w sekcji uwag każdego tematu odwołania.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób, w jaki <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> właściwości jest pobierana z tej struktury.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/a6c31d7b-b33e-49b3-b5c1-31a345f9b7c8">Przegląd właściwości automatyzacji interfejsu użytkownika</related>
    <related type="Article" href="http://msdn.microsoft.com/library/255905af-0b17-485c-93d4-8a2db2a6524b">Właściwości automatyzacji interfejsu użytkownika dla klientów</related>
    <related type="Article" href="http://msdn.microsoft.com/library/09576b1a-291f-435c-980e-dee32d899ae1">Pobierz właściwości elementu automatyzacji interfejsu użytkownika</related>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKey">
      <MemberSignature Language="C#" Value="public string AcceleratorKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AcceleratorKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceleratorKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AcceleratorKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceleratorKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający kombinacje klawiszy skrótów dla elementu.</summary>
        <value>Sekwencja kombinacje klawiszy, które wywołują akcji skojarzonej z elementem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kombinacje klawiszy skrótu wywoływania akcji. Na przykład, CTRL + O jest często używana do wywołania **Otwórz plik** okno dialogowe. [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Implementowanie elementy, które mają właściwość klawisza skrótu ustawić opcji zawsze <xref:System.Windows.Automation.InvokePattern> klasy.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public string AccessKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessKey { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający dostępu do klucza w znakach dla elementu.</summary>
        <value>Znak skojarzone z elementem, służący do aktywowania tego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz dostępu jest znak w tekście menu, element menu lub etykieta kontrolce, takiej jak przycisk, który aktywuje funkcji dołączonym menu. Na przykład litery "O" jest często używana do wywołania **Otwórz** wspólne okno dialogowe pliku z **pliku** menu.  [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Implementowanie elementy, które mają dostęp do właściwości klucza, ustawić opcji zawsze <xref:System.Windows.Automation.InvokePattern> klasy.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.AccessKeyProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomationId">
      <MemberSignature Language="C#" Value="public string AutomationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AutomationId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AutomationId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AutomationId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomationId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] dla elementu.</summary>
        <value>Identyfikator elementu, która jest unikatowa wśród elementów równorzędnych w jego kontenerze.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy jest dostępna <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> elementu powinien zawsze być takie same, w żadnym wystąpieniu aplikacji niezależnie od tego, w języku lokalnym. Wartość powinna być unikatowa wśród elementów równorzędnych, ale nie muszą być unikatowe w cały pulpit. Na przykład wiele wystąpień aplikacji lub wielu widoków folder w Eksploratorze Windows może zawierać elementy o takiej samej <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, takie jak "SystemMenuBar".  
  
 Podczas obsługi <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> zawsze zaleca się lepsze możliwości testowania, ta właściwość nie jest obowiązkowe. W przypadku, gdy jest obsługiwany, <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> jest przydatne w przypadku tworzenia automatyzacji testów skryptów, które niezależnie od tego, język interfejsu użytkownika. Klienci, należy wykonać żadnych założeń dotyczących <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s udostępnianych przez inne aplikacje. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> Nie zawsze musi być stabilna przez różne wersje lub kompilacji aplikacji.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera współrzędnych prostokąta, który całkowicie wypełnia elementu.</summary>
        <value>Współrzędne punktu prostokąt otaczający.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prostokąt zwrócone mogą zawierać punktów, które nie są aktywne. Są wystąpienia, w którym może się to zdarzyć, gdy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element ma nieregularne kształtu lub kliknąć region lub zostaną zasłonięte przez inne [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementów.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClassName">
      <MemberSignature Language="C#" Value="public string ClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassName : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera ciąg zawierający nazwę klasy elementu zgodnie z dokonanym przez dewelopera kontrolek.</summary>
        <value>Nazwa klasy przypisany przez dewelopera kontrolek.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej właściwości zależy od implementacji. Właściwość jest przydatne w środowiskach testowania.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.ClassNameProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ControlType ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.ControlType ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ControlType ^ ControlType { System::Windows::Automation::ControlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : System.Windows.Automation.ControlType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Automation.ControlType" /> elementu.</summary>
        <value>Model interakcji dla tego elementu. Wartość domyślna to <see cref="F:System.Windows.Automation.ControlType.Custom" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ formantu w tym artykule opisano model znanych interakcji dla dowolnego [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów bez polegania na typ kontrolki zlokalizowane lub kombinacji złożoną logikę reguł.  
  
 Tylko wówczas, gdy ta właściwość można zmienić w czasie wykonywania jest dla formantu, który obsługuje <xref:System.Windows.Automation.MultipleViewPattern>. Na przykład [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] kontrolki ListView, które można zmienić poziomu <xref:System.Windows.Automation.ControlType.DataGrid> do <xref:System.Windows.Automation.ControlType.List>, w zależności od bieżącego widoku.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.ControlTypeProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/261dcc59-3a62-4e40-91dd-63ff9d2241c0">Typy kontrolek automatyzacji interfejsu użytkownika</related>
        <related type="Article" href="http://msdn.microsoft.com/library/75159ef8-bd43-4d13-acb7-1f1fe9253160">Typy kontrolek automatyzacji interfejsu użytkownika — omówienie</related>
      </Docs>
    </Member>
    <Member MemberName="FrameworkId">
      <MemberSignature Language="C#" Value="public string FrameworkId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameworkId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FrameworkId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FrameworkId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameworkId : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę podstawowej struktury interfejsu użytkownika.</summary>
        <value>Nazwa struktury interfejsu użytkownika, takie jak "Win32", "Formularza systemu Windows" lub "DirectUI". Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca wartości właściwości są typu <xref:System.String>. Wartością domyślną jest ciąg pusty.  
  
 Ta właściwość umożliwia aplikacjom dotyczą specjalne przypadki całego platform tworzenia interfejsu użytkownika.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.FrameworkIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocus">
      <MemberSignature Language="C#" Value="public bool HasKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeyboardFocus : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy element ma fokus klawiatury.</summary>
        <value>
          <see langword="true" /> Jeśli element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli element w kontenerze ma fokus, <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus%2A> jest również wartość true dla elementu kontenera.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpText : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst Pomocy skojarzonego z elementem.</summary>
        <value>Tekst etykietki narzędzia pomocy dla elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.HelpTextProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElement">
      <MemberSignature Language="C#" Value="public bool IsContentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContentElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsContentElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsContentElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsContentElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy element jest elementem zawartości.</summary>
        <value>
          <see langword="true" /> Jeśli element jest elementem zawartości; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Element zawartości zawiera dane, które są prezentowane użytkownikowi. Przykłady elementów zawartości elementów w polu listy lub przycisku w oknie dialogowym. Elementy zawartości spoza, jest określana skrótem peryferyjne elementów, zwykle są używane do manipulowania zawartość kontrolki złożonej; na przykład przycisk na kontrolkę listy rozwijanej.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsContentElementProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">Przegląd drzewa automatyzacji interfejsu użytkownika</related>
      </Docs>
    </Member>
    <Member MemberName="IsControlElement">
      <MemberSignature Language="C#" Value="public bool IsControlElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsControlElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsControlElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsControlElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsControlElement : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy element jest wyświetlany jako formant.</summary>
        <value>
          <see langword="true" /> Jeśli element jest traktowana jak kontroli. w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsControlElementProperty>.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/03b98058-bdb3-47a0-8ff7-45e6cdf67166">Przegląd drzewa automatyzacji interfejsu użytkownika</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] odwołuje się element [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element jest włączony.</summary>
        <value>
          <see langword="true" /> Jeśli kontrolka jest włączona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> właściwość można zmienić z powodu [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] interakcje. Zaktualizowano pamięci podręcznej powinna pojawić się przez wywołanie metody <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> Jeśli wartość <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled%2A> właściwość mogły ulec zmianie, ponieważ wystawione żądanie pamięci podręcznej.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusable">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusable : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementu może akceptować fokus klawiatury.</summary>
        <value>
          <see langword="true" /> Jeśli formant może otrzymywać fokus klawiatury; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreen">
      <MemberSignature Language="C#" Value="public bool IsOffscreen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffscreen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOffscreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOffscreen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOffscreen : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element jest widoczny na ekranie.</summary>
        <value>
          <see langword="true" /> Jeśli formant nie jest widoczny; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość logiczna wskazująca, jeśli element jest całkowicie przewijane (na przykład element w polu listy jest poza okienkiem ekranu obiektu kontenera) lub zwinięte (na przykład element w widoku drzewa, menu lub przywrócenia zminimalizowanego okna) z widoku.  
  
 Jeśli element ma kliknięcia, które mogą spowodować, że koncentrować się, jest on uznawany za się na ekranie, nawet wtedy, gdy część elementu jest poza ekranem.  
  
 Wartość właściwości jest nie dotyczy zamknięcia przez inne okna lub tego, czy element jest widoczny na konkretnego monitora.  
  
 Gdy jest IsOffscreen `true,` element, który jest przewijane lub zwinięte poza widokiem, ale wciąż są częścią z punktu widzenia użytkowników końcowych interfejsu użytkownika, może być wprowadzana powrót do widoku przez proste manipulowanie, takie jak przewijania lub klikając kontrolkę listy rozwijanej.  
  
 Jeśli element znajduje się czegoś, co użytkownik końcowy nie dostrzegana w ogóle lub nazywa się "programowo ukrywane" (na przykład okno dialogowe, który został odrzucony, ale których podkreślenie obiektu w pamięci podręcznej przez aplikację) następnie go powinny zostać usunięte z Drzewo elementów niż ustawienie wartości IsOffscreen do `true`.  
  
 Jeśli wartość to `true` dla kontenera, jest również `true` dla elementów podrzędnych elementu kontenera.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPassword">
      <MemberSignature Language="C#" Value="public bool IsPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPassword" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPassword As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPassword { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPassword : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element zawiera chronioną zawartość.</summary>
        <value>
          <see langword="true" /> Jeśli element zawiera chronioną zawartość; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia aplikacji takich jak czytniki zawartości ekranu, aby określić, czy zawartość tekstu dla formantu powinny być odczytywany na głos.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsPasswordProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForForm">
      <MemberSignature Language="C#" Value="public bool IsRequiredForForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequiredForForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequiredForForm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequiredForForm { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequiredForForm : bool" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element jest wymagany do wypełniania formularza.</summary>
        <value>
          <see langword="true" /> Jeśli element jest wymagany do wypełniania; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatus">
      <MemberSignature Language="C#" Value="public string ItemStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStatus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemStatus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStatus { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStatus : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis stanu elementu w obrębie elementu.</summary>
        <value>Opis stanu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia klienta w celu ustalenia, czy element jest przekazywania informacji dotyczących elementu stanu. Na przykład element skojarzony z kontaktu w aplikacji obsługi może być "Zajęty" lub "Połączone".  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.ItemStatusProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis typu elementu.</summary>
        <value>Zlokalizowany ciąg, który zawiera opis elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana do uzyskania informacji na temat elementów listy, widok drzewa lub w siatce danych. Na przykład element w widoku katalogu pliku może być "Plik dokumentu" lub "Folder".  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.ItemTypeProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledBy">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement LabeledBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement LabeledBy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LabeledBy As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ LabeledBy { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LabeledBy : System.Windows.Automation.AutomationElement" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera element, który zawiera tekst etykiety dla tego elementu.</summary>
        <value>Element, który jest etykietę dla tego elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość może służyć do pobrania, na przykład etykieta statyczny tekst pola kombi.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.LabeledByProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalizedControlType : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis typu kontrolki.</summary>
        <value>Zlokalizowany opis typu kontrolki, takie jak "button".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę tego elementu.</summary>
        <value>Nazwa [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa elementu można znaleźć elementu w [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element drzewa, kiedy <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> właściwość nie jest obsługiwana w elemencie.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.NameProperty>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób, w jaki <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> właściwości są pobierane.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandle">
      <MemberSignature Language="C#" Value="public int NativeWindowHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NativeWindowHandle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NativeWindowHandle { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NativeWindowHandle : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera uchwyt okna elementu.</summary>
        <value>Uchwyt okna, jeśli istnieje; w przeciwnym razie 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.OrientationType Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.OrientationType Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Orientation As OrientationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::OrientationType Orientation { System::Windows::Automation::OrientationType get(); };" />
      <MemberSignature Language="F#" Value="member this.Orientation : System.Windows.Automation.OrientationType" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.OrientationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera orientację przestrzenną kontrolki.</summary>
        <value>Orientacja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest obsługiwana przez formanty, takie jak suwaki, które mogą mieć w orientacji poziomej lub pionowej i paski przewijania.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.OrientationProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera proces [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] tego elementu.</summary>
        <value>Identyfikator procesu, który jest hostem elementu. Wartość domyślna właściwości wynosi 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proces [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)] jest przypisany przez system operacyjny. Są widoczne w **PID** kolumny **procesy** kartę w Menedżerze zadań.  
  
 Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Automation.AutomationElement.ProcessIdProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>