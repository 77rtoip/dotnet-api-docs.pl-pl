<Type Name="ValuePattern+ValuePatternInformation" FullName="System.Windows.Automation.ValuePattern+ValuePatternInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddea251c2772dedb0a7a0edad3fb0e6996bf0f06" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69222054" /></Metadata><TypeSignature Language="C#" Value="public struct ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ValuePattern/ValuePatternInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValuePattern.ValuePatternInformation" />
  <TypeSignature Language="C++ CLI" Value="public: value class ValuePattern::ValuePatternInformation" />
  <TypeSignature Language="F#" Value="type ValuePattern.ValuePatternInformation = struct" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp do wartości <see cref="T:System.Windows.Automation.ValuePattern" /> właściwości obiektu przy użyciu jego <see cref="P:System.Windows.Automation.ValuePattern.Current" /> metod or <see cref="P:System.Windows.Automation.ValuePattern.Cached" /> .</summary>
    <remarks>To be added.</remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Wzorce formantów automatyzacji interfejsu użytkownika — omówienie</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">Wzorce kontrolek automatyzacji interfejsu użytkownika dla klientów</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771478(v=vs.90)">Przykład wstawiania TextPattern tekstu</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ec722dff-6009-4279-b86a-e18d3fa94ebf">Używanie buforowania w automatyzacji interfejsu użytkownika</related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy wartość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementu jest tylko do odczytu.</summary>
        <value><see langword="true" />Jeśli wartość jest tylko do odczytu; <see langword="false" /> Jeśli można ją zmodyfikować.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> Kontrolka powinna mieć <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> `true` ustawioną wartość i ustawioną <xref:System.Windows.Automation.ValuePattern.SetValue%2A>na `false` przed próbą wywołania przez klienta.  
  
   
  
## Examples  
 W poniższym przykładzie, <xref:System.Windows.Automation.AutomationElement> który <xref:System.Windows.Automation.ValuePattern> obsługuje wzorzec kontroli ma <xref:System.Windows.Automation.RangeValuePattern.ValueProperty> ustawiony na wartość określoną przez użytkownika.  
  
 [!code-csharp[UIAValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#103)]
 [!code-vb[UIAValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771478(v=vs.90)">Przykład wstawiania TextPattern tekstu</related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementu.</summary>
        <value>Wartość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementu jako ciąg. Wartość domyślna to pusty ciąg.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednowierszowe kontrolki edycji obsługują dostęp programistyczny do zawartości <xref:System.Windows.Automation.ValuePattern>za pomocą. Jednak wielowierszowe kontrolki edycji nie obsługują <xref:System.Windows.Automation.ValuePattern> wzorca kontrolki.  
  
 Aby pobrać zawartość tekstową wielowierszowych kontrolek edycji, formanty muszą obsługiwać <xref:System.Windows.Automation.TextPattern> wzorzec kontrolki. Jednak program <xref:System.Windows.Automation.TextPattern> nie obsługuje ustawiania wartości formantu.  
  
 <xref:System.Windows.Automation.ValuePattern>nie obsługuje pobierania informacji o formatowaniu ani wartości podciągów. Wzorzec <xref:System.Windows.Automation.TextPattern> kontrolki musi być używany w tych scenariuszach.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.ValuePattern> obiekt uzyskany z kontrolki docelowej jest przenoszona do funkcji, która pobiera bieżące <xref:System.Windows.Automation.ValuePattern> wartości właściwości.  
  
 [!code-csharp[UIAValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#102)]
 [!code-vb[UIAValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771478(v=vs.90)">Przykład wstawiania TextPattern tekstu</related>
      </Docs>
    </Member>
  </Members>
</Type>
