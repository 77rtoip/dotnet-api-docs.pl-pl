<Type Name="CacheRequest" FullName="System.Windows.Automation.CacheRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98e48264be5e4450ff222a82cc4499e0996df303" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39785736" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CacheRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CacheRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.CacheRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CacheRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class CacheRequest sealed" />
  <TypeSignature Language="F#" Value="type CacheRequest = class" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fc393-101">Określa właściwości i wzorce struktura automatyzacji interfejsu użytkownika buforuje, kiedy <see cref="T:System.Windows.Automation.AutomationElement" /> uzyskuje się.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fc393-101">Specifies properties and patterns that the UI Automation framework caches when an <see cref="T:System.Windows.Automation.AutomationElement" /> is obtained.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-102">Trwa pobieranie właściwości i wzorce w [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wymaga wywołania między procesami, które można wolno dół wydajności.</span><span class="sxs-lookup"><span data-stu-id="fc393-102">Retrieving properties and patterns through [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] requires cross-process calls that can slow down performance.</span></span> <span data-ttu-id="fc393-103">Przez buforowanie wartości ich właściwości i wzorców w operacji zbiorczej, może zwiększyć wydajność aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fc393-103">By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</span></span>  
  
 <span data-ttu-id="fc393-104">Utwórz nowe żądanie pamięci podręcznej przez wywołanie konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="fc393-104">Create a new cache request by calling the class constructor.</span></span> <span data-ttu-id="fc393-105">Żądanie jest wypełniana przez wielokrotnego wywołania <xref:System.Windows.Automation.CacheRequest.Add%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fc393-105">The request is populated by repeated calls to the <xref:System.Windows.Automation.CacheRequest.Add%2A> method.</span></span>  
  
 <span data-ttu-id="fc393-106">Tylko jeden <xref:System.Windows.Automation.CacheRequest> może być aktywne.</span><span class="sxs-lookup"><span data-stu-id="fc393-106">Only a single <xref:System.Windows.Automation.CacheRequest> can be active.</span></span> <span data-ttu-id="fc393-107">Istnieją dwa sposoby aktywacji na żądanie:</span><span class="sxs-lookup"><span data-stu-id="fc393-107">There are two ways to activate a request:</span></span>  
  
-   <span data-ttu-id="fc393-108">Wywołaj <xref:System.Windows.Automation.CacheRequest.Activate%2A> na żądanie.</span><span class="sxs-lookup"><span data-stu-id="fc393-108">Call <xref:System.Windows.Automation.CacheRequest.Activate%2A> on the request.</span></span> <span data-ttu-id="fc393-109">To wypycha żądanie na stosie i żądanie jest zdejmowany, po usunięciu obiektu.</span><span class="sxs-lookup"><span data-stu-id="fc393-109">This pushes the request onto the stack, and the request is popped when the object is disposed.</span></span> <span data-ttu-id="fc393-110">Aby zapewnić usuwania, nawet wtedy, gdy wyjątek jest zgłaszany, użyj wartości zwracanej z <xref:System.Windows.Automation.CacheRequest.Activate%2A> w ramach `using` bloku (`Using` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fc393-110">To ensure disposal even if an exception is raised, use the return value from <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="fc393-111">Umieszczanie żądania na wewnętrznym stosie, wywołując <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc393-111">Put the request onto the internal stack by calling <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span> <span data-ttu-id="fc393-112">Tylko najwyższego poziomu żądanie na stosie jest aktywne, a musi być kolejny usuwany ze stosu przez <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc393-112">Only the topmost request on the stack is active, and it must be the next one removed from the stack by <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span> <span data-ttu-id="fc393-113">Usuwanie żądania dezaktywuje.</span><span class="sxs-lookup"><span data-stu-id="fc393-113">Popping the request deactivates it.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]<span data-ttu-id="fc393-114"> elementy uzyskane, gdy żądanie jest aktywne będą mieć buforowane wartości dla właściwości i określonych wzorców.</span><span class="sxs-lookup"><span data-stu-id="fc393-114"> elements obtained while the request is active will have cached values for the properties and patterns specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-115">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Automation.CacheRequest.Activate%2A> wzorce pamięci podręcznej i właściwości.</span><span class="sxs-lookup"><span data-stu-id="fc393-115">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 <span data-ttu-id="fc393-116">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Automation.CacheRequest.Push%2A> i <xref:System.Windows.Automation.CacheRequest.Pop%2A> wzorce pamięci podręcznej i właściwości.</span><span class="sxs-lookup"><span data-stu-id="fc393-116">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CacheRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CacheRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc393-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Automation.CacheRequest" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-117">Initializes a new instance of the <see cref="T:System.Windows.Automation.CacheRequest" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-118">Gdy <xref:System.Windows.Automation.CacheRequest> utworzeniu <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identyfikator jest dodawany jako domyślna właściwość do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="fc393-118">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public IDisposable Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; IDisposable" Usage="cacheRequest.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc393-119">Ustawia to <see cref="T:System.Windows.Automation.CacheRequest" /> jako aktywny specyfikacji dla elementów, które są zwracane, kiedy <see cref="T:System.Windows.Automation.AutomationElement" /> jest wymagane w tym samym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-119">Sets this <see cref="T:System.Windows.Automation.CacheRequest" /> as the active specification for the items that are returned when an <see cref="T:System.Windows.Automation.AutomationElement" /> is requested on the same thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc393-120">Obiekt, który może służyć do usunięcia <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-120">The object that can be used to dispose the <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-121">Metoda ta zazwyczaj zalecane jest stosowanie <xref:System.Windows.Automation.CacheRequest.Push%2A> i <xref:System.Windows.Automation.CacheRequest.Pop%2A> jako sposób uaktywniania <xref:System.Windows.Automation.CacheRequest>.</span><span class="sxs-lookup"><span data-stu-id="fc393-121">Using this method is usually preferable to using <xref:System.Windows.Automation.CacheRequest.Push%2A> and <xref:System.Windows.Automation.CacheRequest.Pop%2A> as a means of activating the <xref:System.Windows.Automation.CacheRequest>.</span></span> <span data-ttu-id="fc393-122">Obiekt są wypychane na stosie po <xref:System.Windows.Automation.CacheRequest.Activate%2A> jest wywoływana, a następnie zabrany po usunięciu.</span><span class="sxs-lookup"><span data-stu-id="fc393-122">The object is pushed onto the stack when <xref:System.Windows.Automation.CacheRequest.Activate%2A> is called, and then popped off when it is disposed.</span></span> <span data-ttu-id="fc393-123">Aby upewnić się, usuwania, umieść zwracanej wartości w `using` bloku (`Using` w języku Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fc393-123">To ensure disposal, place the return value within a `using` block (`Using` in Visual Basic).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-124">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Automation.CacheRequest.Activate%2A> wzorce pamięci podręcznej i właściwości.</span><span class="sxs-lookup"><span data-stu-id="fc393-124">The following example shows how to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to cache patterns and properties.</span></span>  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fc393-125">Dodaje właściwość lub wzorzec identyfikatora do <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-125">Adds a property or pattern identifier to a <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-126">Gdy <xref:System.Windows.Automation.CacheRequest> obiekt zostanie utworzony, <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identyfikator jest dodawany jako domyślna właściwość do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="fc393-126">When a <xref:System.Windows.Automation.CacheRequest> object is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="fc393-127">Dodawanie obiektu, który jest już żądanie pamięci podręcznej nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="fc393-127">Adding an object that is already in the cache request has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (pattern As AutomationPattern)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationPattern -&gt; unit" Usage="cacheRequest.Add pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="fc393-128">Identyfikator określania wzorzec na potrzeby pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-128">An identifier specifying a pattern to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc393-129">Dodaje określony <see cref="T:System.Windows.Automation.AutomationPattern" /> to identyfikator <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-129">Adds the specified <see cref="T:System.Windows.Automation.AutomationPattern" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-130">Dodawanie wzorca, który jest już żądanie pamięci podręcznej nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="fc393-130">Adding a pattern that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-131">Poniższy przykład pokazuje, jak skonstruować <xref:System.Windows.Automation.CacheRequest> i dodawanie wzorca przechowywanie w pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="fc393-131">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a pattern to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc393-132">
            <see cref="T:System.Windows.Automation.CacheRequest" /> Jest aktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-132">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Add(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (property As AutomationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Automation.AutomationProperty -&gt; unit" Usage="cacheRequest.Add property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="fc393-133">Identyfikator, określając wartość właściwości do pamięci podręcznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-133">An identifier specifying a property value to cache.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fc393-134">Dodaje określony <see cref="T:System.Windows.Automation.AutomationProperty" /> to identyfikator <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-134">Adds the specified <see cref="T:System.Windows.Automation.AutomationProperty" /> identifier to this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-135">Gdy <xref:System.Windows.Automation.CacheRequest> utworzeniu <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identyfikator jest dodawany jako domyślna właściwość do pamięci podręcznej.</span><span class="sxs-lookup"><span data-stu-id="fc393-135">When a <xref:System.Windows.Automation.CacheRequest> is created, the <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> identifier is added as a default property to cache.</span></span>  
  
 <span data-ttu-id="fc393-136">Dodawanie właściwości żądanie pamięci podręcznej nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="fc393-136">Adding a property that is already in the cache request has no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-137">Poniższy przykład pokazuje, jak skonstruować <xref:System.Windows.Automation.CacheRequest> i Dodaj właściwość, która ma być buforowane.</span><span class="sxs-lookup"><span data-stu-id="fc393-137">The following example shows how to construct a <xref:System.Windows.Automation.CacheRequest> and add a property to be cached.</span></span>  
  
 [!code-csharp[UIAClient_snip#202](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#202)]
 [!code-vb[UIAClient_snip#202](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#202)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc393-138">
            <see cref="T:System.Windows.Automation.CacheRequest" /> Jest aktywny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-138">The <see cref="T:System.Windows.Automation.CacheRequest" /> is active.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AutomationElementMode">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementMode AutomationElementMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElementMode AutomationElementMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomationElementMode As AutomationElementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementMode AutomationElementMode { System::Windows::Automation::AutomationElementMode get(); void set(System::Windows::Automation::AutomationElementMode value); };" />
      <MemberSignature Language="F#" Value="member this.AutomationElementMode : System.Windows.Automation.AutomationElementMode with get, set" Usage="System.Windows.Automation.CacheRequest.AutomationElementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc393-139">Pobiera lub ustawia wartość określającą, czy zwrócone elementy może zawierać pełnej odwołania do bazowego [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], lub tylko buforowanych informacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-139">Gets or sets a value that specifies whether returned elements should contain full references to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], or only cached information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc393-140">
            <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> zwrócone elementy mają pełną dokumentację źródłowy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; w przeciwnym razie <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-140">
              <see cref="F:System.Windows.Automation.AutomationElementMode.Full" /> if the returned elements have a full reference to the underlying [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]; otherwise <see cref="F:System.Windows.Automation.AutomationElementMode.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-141"><xref:System.Windows.Automation.AutomationElementMode.Full> Wartość domyślna to i określa, że zwracane elementy zawierają pełną dokumentację źródłowy [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fc393-141"><xref:System.Windows.Automation.AutomationElementMode.Full> is the default value, and specifies that returned elements contain a full reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="fc393-142"><xref:System.Windows.Automation.AutomationElementMode.None> Określa, że zwracane elementy miało żadnego odwołania do bazowego [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]i zawierać tylko buforowanych informacji.</span><span class="sxs-lookup"><span data-stu-id="fc393-142"><xref:System.Windows.Automation.AutomationElementMode.None> specifies that the returned elements have no reference to the underlying [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], and contain only cached information.</span></span>  
  
 <span data-ttu-id="fc393-143">Niektóre operacje na elementach, w tym <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, i <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, wymagają pełną dokumentację, próby wykonania tych na element, który nie ma żadnego skutkuje <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="fc393-143">Certain operations on elements, including <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>, <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>, and <xref:System.Windows.Automation.AutomationElement.SetFocus%2A>, require a full reference; attempting to perform these on an element that has none results in an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="fc393-144">Za pomocą <xref:System.Windows.Automation.AutomationElementMode.None> może być bardziej efektywne, gdy są potrzebne tylko właściwości, takie rozwiązanie pomaga uniknąć obciążenie związane z konfigurowaniem pełne odwołań.</span><span class="sxs-lookup"><span data-stu-id="fc393-144">Using <xref:System.Windows.Automation.AutomationElementMode.None> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-145">W poniższym przykładzie <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> ustawiono <xref:System.Windows.Automation.AutomationElementMode.None>, z wynikiem, tylko pamięci podręcznej właściwości i wzorce są dostępne dla obiektu pobrane.</span><span class="sxs-lookup"><span data-stu-id="fc393-145">In the following example, <xref:System.Windows.Automation.CacheRequest.AutomationElementMode%2A> is set to <xref:System.Windows.Automation.AutomationElementMode.None>, with the result that only cached properties and patterns are available for the retrieved object.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.CacheRequest Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.CacheRequest Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::CacheRequest ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Automation.CacheRequest" Usage="cacheRequest.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc393-146">Tworzy kopię <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-146">Creates a copy of this <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fc393-147">Można modyfikować kopię bieżącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-147">A modifiable copy of the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.CacheRequest Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.CacheRequest Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As CacheRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::CacheRequest ^ Current { System::Windows::Automation::CacheRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.CacheRequest" Usage="System.Windows.Automation.CacheRequest.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.CacheRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc393-148">Pobiera <see cref="T:System.Windows.Automation.CacheRequest" /> , który jest aktywny w bieżącym wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-148">Gets the <see cref="T:System.Windows.Automation.CacheRequest" /> that is active on the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc393-149">Aktywny <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-149">The active <see cref="T:System.Windows.Automation.CacheRequest" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; unit" Usage="cacheRequest.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc393-150">Usuwa aktywne <see cref="T:System.Windows.Automation.CacheRequest" /> z wewnętrznego stosu dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-150">Removes the active <see cref="T:System.Windows.Automation.CacheRequest" /> from the internal stack for the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-151">Tylko aktualnie aktywne żądanie może zostać usunięty przy użyciu <xref:System.Windows.Automation.CacheRequest.Pop%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fc393-151">Only the currently active request can be removed using the <xref:System.Windows.Automation.CacheRequest.Pop%2A> method.</span></span> <span data-ttu-id="fc393-152">Próba usunięcia żądania, będący nie bieżącego jedne wyniki wyjątek.</span><span class="sxs-lookup"><span data-stu-id="fc393-152">Attempting to remove a request that is not the current one results in an exception.</span></span>  
  
 <span data-ttu-id="fc393-153">O ile nie są zagnieżdżania żądań pamięci podręcznej, to lepiej jest używać <xref:System.Windows.Automation.CacheRequest.Activate%2A> umieszcza żądanie na stosie.</span><span class="sxs-lookup"><span data-stu-id="fc393-153">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="fc393-154">Przyczyną jest to, że można użyć <xref:System.Windows.Automation.CacheRequest.Activate%2A> w ramach `using` bloku (`Using` w języku Visual Basic), zapewniając, że żądanie zostanie zdjęte ze stosu, nawet wtedy, gdy wyjątek jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="fc393-154">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-155">Poniższy przykład pokazuje, jak dezaktywować <xref:System.Windows.Automation.CacheRequest> przy użyciu <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc393-155">The following example shows how to deactivate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Pop%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="fc393-156">Próbowano usunąć żądanie pamięci podręcznej, który nie był ostatni wypychane na stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-156">An attempt was made to remove a cache request that was not the last one pushed onto the stack.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Push" />
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.CacheRequest.Push" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push();" />
      <MemberSignature Language="F#" Value="member this.Push : unit -&gt; unit" Usage="cacheRequest.Push " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fc393-157">Umieszcza <see cref="T:System.Windows.Automation.CacheRequest" /> na stosie stanu wewnętrznego, dzięki czemu aktywne żądanie dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-157">Places the <see cref="T:System.Windows.Automation.CacheRequest" /> on the internal state stack, making it the active request on the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-158">Wiele <xref:System.Windows.Automation.CacheRequest> obiektów, które można umieścić na stosie stanu.</span><span class="sxs-lookup"><span data-stu-id="fc393-158">Multiple <xref:System.Windows.Automation.CacheRequest> objects can be placed onto the state stack.</span></span> <span data-ttu-id="fc393-159">Żądania pamięci podręcznej muszą zostać usunięte z stosu w kolejności, w której zostały one przekazane. w przeciwnym razie <xref:System.InvalidOperationException> zgłaszany jest wyjątek.</span><span class="sxs-lookup"><span data-stu-id="fc393-159">Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <xref:System.InvalidOperationException> exception is raised.</span></span>  
  
 <span data-ttu-id="fc393-160">O ile nie są zagnieżdżania żądań pamięci podręcznej, to lepiej jest używać <xref:System.Windows.Automation.CacheRequest.Activate%2A> umieszcza żądanie na stosie.</span><span class="sxs-lookup"><span data-stu-id="fc393-160">Unless you are nesting cache requests, it is preferable to use <xref:System.Windows.Automation.CacheRequest.Activate%2A> to place the request on the stack.</span></span> <span data-ttu-id="fc393-161">Przyczyną jest to, że można użyć <xref:System.Windows.Automation.CacheRequest.Activate%2A> w ramach `using` bloku (`Using` w języku Visual Basic), zapewniając, że żądanie zostanie zdjęte ze stosu, nawet wtedy, gdy wyjątek jest zgłaszany.</span><span class="sxs-lookup"><span data-stu-id="fc393-161">The reason is that you can use <xref:System.Windows.Automation.CacheRequest.Activate%2A> within a `using` block (`Using` in Visual Basic), ensuring that the request is popped off the stack even if an exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-162">Poniższy przykład pokazuje, jak aktywować <xref:System.Windows.Automation.CacheRequest> przy użyciu <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span><span class="sxs-lookup"><span data-stu-id="fc393-162">The following example shows how to activate a <xref:System.Windows.Automation.CacheRequest> by using <xref:System.Windows.Automation.CacheRequest.Push%2A>.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.CacheRequest.Pop" />
      </Docs>
    </Member>
    <Member MemberName="TreeFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Condition TreeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Condition TreeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeFilter As Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Condition ^ TreeFilter { System::Windows::Automation::Condition ^ get(); void set(System::Windows::Automation::Condition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TreeFilter : System.Windows.Automation.Condition with get, set" Usage="System.Windows.Automation.CacheRequest.TreeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Condition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc393-163">Pobiera lub ustawia wartość określającą, widok [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewo elementów do użycia podczas buforowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-163">Gets or sets a value specifying the view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree to use when caching.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc393-164">Widok [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewo elementów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-164">The view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree.</span>
          </span>
          <span data-ttu-id="fc393-165">Widok domyślny to <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-165">The default view is <see cref="F:System.Windows.Automation.Automation.ControlViewCondition" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-166">Aby uzyskać dodatkowe informacje na temat widoków [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewo elementów, zobacz [Przegląd drzewa automatyzacji interfejsu użytkownika](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span><span class="sxs-lookup"><span data-stu-id="fc393-166">For additional information on views of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element tree, see [UI Automation Tree Overview](~/docs/framework/ui-automation/ui-automation-tree-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-167">W poniższym przykładzie <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> ustawiono <xref:System.Windows.Automation.Automation.RawViewCondition> tak, że buforowanie jest wykonywane dla wszystkich elementów, niezależnie od tego, czy są one częścią zawartości widoku lub w widoku formantu.</span><span class="sxs-lookup"><span data-stu-id="fc393-167">In the following example, <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> is set to <xref:System.Windows.Automation.Automation.RawViewCondition> so that caching is done for all elements, regardless of whether they are part of the content view or the control view.</span></span>  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="TreeScope">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TreeScope TreeScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TreeScope TreeScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberSignature Language="VB.NET" Value="Public Property TreeScope As TreeScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TreeScope TreeScope { System::Windows::Automation::TreeScope get(); void set(System::Windows::Automation::TreeScope value); };" />
      <MemberSignature Language="F#" Value="member this.TreeScope : System.Windows.Automation.TreeScope with get, set" Usage="System.Windows.Automation.CacheRequest.TreeScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TreeScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fc393-168">Pobiera lub ustawia wartość określającą, czy pamięć podręczna jest wykonywane tylko w przypadku głównego poddrzewo lub jego elementy podrzędne lub elementy podrzędne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-168">Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fc393-169">Co najmniej jeden <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, lub <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-169">One or more of <see cref="F:System.Windows.Automation.TreeScope.Element" />, <see cref="F:System.Windows.Automation.TreeScope.Children" />, <see cref="F:System.Windows.Automation.TreeScope.Descendants" />, or <see cref="F:System.Windows.Automation.TreeScope.Subtree" />.</span>
          </span>
          <span data-ttu-id="fc393-170">Wartość domyślna to <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-170">The default value is <see cref="F:System.Windows.Automation.TreeScope.Element" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fc393-171">Zakres pamięci podręcznej w odniesieniu do obiektu lub obiektów są pobierane, nie w odniesieniu do obiektu, na którym <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> lub <xref:System.Windows.Automation.AutomationElement.FindAll%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fc393-171">The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> or <xref:System.Windows.Automation.AutomationElement.FindAll%2A> is called.</span></span> <span data-ttu-id="fc393-172">Zobacz przykład.</span><span class="sxs-lookup"><span data-stu-id="fc393-172">See the example.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fc393-173">W poniższym przykładzie element pola listy jest uzyskiwana z elementu nadrzędnego okna podczas <xref:System.Windows.Automation.CacheRequest> jest aktywny i <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> jest <xref:System.Windows.Automation.TreeScope.Children>.</span><span class="sxs-lookup"><span data-stu-id="fc393-173">In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope.Children>.</span></span> <span data-ttu-id="fc393-174">Określone właściwości elementów podrzędnych (czyli elementów listy) są przechowywane w pamięci podręcznej i mogą być pobierane z <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> pola listy.</span><span class="sxs-lookup"><span data-stu-id="fc393-174">The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> of the list box.</span></span>  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="fc393-175">Próbowano ustawić dla właściwości <see cref="F:System.Windows.Automation.TreeScope.Parent" /> lub <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fc393-175">An attempt was made to set the property to <see cref="F:System.Windows.Automation.TreeScope.Parent" /> or <see cref="F:System.Windows.Automation.TreeScope.Ancestors" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>