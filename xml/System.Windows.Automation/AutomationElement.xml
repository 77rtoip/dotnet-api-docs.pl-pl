<Type Name="AutomationElement" FullName="System.Windows.Automation.AutomationElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa3164dbf684e77693c4a1676812479a9cefcf9e" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AutomationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AutomationElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.AutomationElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AutomationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AutomationElement sealed" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje element automatyzacji interfejsu użytkownika w drzewie automatyzacji interfejsu użytkownika i zawiera wartości używane jako identyfikatory przez aplikacje klienckie automatyzacji interfejsu użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Odpowiada fragment [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], niezależnie od implementacji podstawowej (takich jak [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] lub [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AcceleratorKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AcceleratorKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceleratorKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AcceleratorKeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Kombinacje klawiszy skrótów wywoływania akcji. Na przykład CTRL + O często służy do wywoływania **Otwórz** wspólne okno dialogowe pliku. <xref:System.Windows.Automation.AutomationElement> Czy właściwość klawisza skrótu ustawił zawsze implementuje <xref:System.Windows.Automation.InvokePattern> klasy.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartość domyślna właściwości jest pustym ciągiem.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#124](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#124)]
 [!code-vb[UIAClient_snip#124](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#124)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#125](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#125)]
 [!code-vb[UIAClient_snip#125](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessKeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AccessKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AccessKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccessKeyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AccessKeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Klucz dostępu jest znak w tekście menu, element menu lub etykiety formantu, takie jak przycisk, który uaktywnia funkcji dołączonych menu. Na przykład litera "O" jest często używany do wywołania **Otwórz plik** wspólne okno dialogowe z **pliku** menu.  
  
 Dostęp do wartości klucza są typu <xref:System.String> i może zawierać znaków zarejestrowanej jako klucz dostępu dla elementu. Domyślna wartość ciągu jest pustym ciągiem.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#127](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#127)]
 [!code-vb[UIAClient_snip#127](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#127)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#128](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#128)]
 [!code-vb[UIAClient_snip#128](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncContentLoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AsyncContentLoadedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AsyncContentLoadedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa zdarzenia wywoływane podczas asynchronicznych ładowania zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 To zdarzenie jest używany głównie przez dostawców, aby wskazać, że wystąpiły zdarzenia asynchroniczne ładowanie zawartości.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AsyncContentLoadedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationFocusChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationFocusChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationFocusChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie jest wywoływane, gdy fokus zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationFocusChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AutomationIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty AutomationIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ AutomationIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId" /> właściwość, która służy do identyfikowania elementów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartość domyślna właściwości jest pustym ciągiem.  
  
 Jeśli jest dostępny <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> elementu powinien zawsze być takie same, w żadnym wystąpieniu aplikacji niezależnie od tego, w języku lokalnym. Wartość powinna być unikatowa wśród elementów równorzędnych, ale nie zawsze jest unikatowy w całej pulpitu. Na przykład wiele wystąpień aplikacji lub wiele widoków folder w Eksploratorze Windows, mogą zawierać elementy o tej samej <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty>, takie jak "SystemMenuBar".  
  
 Podczas obsługi <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> zawsze jest zalecane dla lepszej kontroli, ta właściwość nie jest obowiązkowe. W przypadku, gdy jest obsługiwany, <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> jest przydatne w przypadku testowego automatyzacji tworzenia skryptów niezależnie od tego, język interfejsu użytkownika. Klientów, należy wykonać żadnych założeń dotyczących <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>s udostępnianych przez inne aplikacje. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> Nie jest gwarantowana musi być stabilna w poszczególnych wydaniach lub kompilacji aplikacji.  
  
 Wystąpienia [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementy są identyfikowane na pulpicie przez ich <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty> właściwości.  
  
> [!NOTE]
>  <xref:System.Windows.Automation.AutomationElement.AutomationIdProperty> jest obsługiwana przez wszystkie elementy automatyzacji interfejsu użytkownika w widoku kontrolki z wyjątkiem najwyższego poziomu aplikacji systemu windows, elementach automatyzacji interfejsu użytkownika pochodzące z [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] formantów, które nie mają Identyfikatora lub x: Uid i elementów automatyzacji interfejsu użytkownika pochodzące z [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] formantów, które nie ma identyfikatora formantu.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#129](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#129)]
 [!code-vb[UIAClient_snip#129](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#129)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#130](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#130)]
 [!code-vb[UIAClient_snip#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#130)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="AutomationPropertyChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutomationPropertyChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ AutomationPropertyChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationPropertyChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BoundingRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty BoundingRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.BoundingRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BoundingRectangleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ BoundingRectangleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Prostokąty są typu <xref:System.Windows.Rect>. Prostokąt zwracane jest we współrzędnych ekranu fizycznego. Wartość domyślna to <xref:System.Windows.Rect.Empty%2A>. <xref:System.Windows.Rect.Empty%2A> jest zwracany, jeśli element nie jest obecnie wyświetlana [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Zwrócony prostokąt może zawierać punktów, które nie są aktywne. Wystąpienia, w którym może się to zdarzyć dołączone podczas [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] element ma nieregularne kształtu lub aktywne region lub jest on zostanie przesłonięty przez inne [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementów.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#131](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#131)]
 [!code-vb[UIAClient_snip#131](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#131)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#132](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#132)]
 [!code-vb[UIAClient_snip#132](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Cached { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforowany [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wartości właściwości dla tego <see cref="T:System.Windows.Automation.AutomationElement" /> obiektu.</summary>
        <value>Struktury zawierające pamięci podręcznej właściwości wartości <see cref="T:System.Windows.Automation.AutomationElement" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody dostępu dla [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] właściwości są reprezentowane jako właściwości zwrócony przez strukturę <xref:System.Windows.Automation.AutomationElement.Cached%2A>. Nie trzeba pobierać struktury; Możesz bezpośrednio, dostęp do jego elementów członkowskich, tak jak w poniższym przykładzie. Aby uzyskać szczegółowe informacje o dostępnych właściwości i ich użycia, zobacz <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Aby uzyskać bieżącą wartość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] właściwości w tym za pomocą elementu <xref:System.Windows.Automation.AutomationElement.Current%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> właściwości mogą być buforowane i następnie odczytywane za pomocą <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie ma żadnych właściwości pamięci podręcznej.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElementCollection CachedChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedChildren As AutomationElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElementCollection ^ CachedChildren { System::Windows::Automation::AutomationElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforowany podrzędne elementy tego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Kolekcja elementów podrzędnych. Ta kolekcja może być pusta, jeśli element nie ma elementów podrzędnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Widok zwracana kolekcja jest określany przez <xref:System.Windows.Automation.CacheRequest.TreeFilter%2A> warunek <xref:System.Windows.Automation.CacheRequest> który był aktywny podczas to <xref:System.Windows.Automation.AutomationElement> obiekt został uzyskany.  
  
 Elementy podrzędne są buforowane, tylko wtedy, gdy zakres <xref:System.Windows.Automation.CacheRequest> uwzględnione <xref:System.Windows.Automation.TreeScope.Subtree>, <xref:System.Windows.Automation.TreeScope.Children>, lub <xref:System.Windows.Automation.TreeScope.Descendants>.  
  
 Jeśli <xref:System.Windows.Automation.CacheRequest> określono, że elementy podrzędne zostały pamięci podręcznej na tym poziomie, ale istnieją bez żadnych elementów podrzędnych, a następnie wartość tej właściwości jest równa 0. Jednak jeśli żądanie nie zostało przesłane do podrzędnych pamięci podręcznej na tym poziomie, próba pobrania właściwości spowodują zgłoszenie wyjątku.  
  
   
  
## Examples  
 W poniższym przykładzie element pola listy są uzyskiwane z elementu nadrzędnego okna podczas <xref:System.Windows.Automation.CacheRequest> jest aktywna i <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> jest <xref:System.Windows.Automation.TreeScope.Children>. Określone właściwości elementów podrzędnych (to znaczy elementy listy) są przechowywane w pamięci podręcznej i może zostać pobrany z <xref:System.Windows.Automation.AutomationElement.CachedChildren%2A> pola listy.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
        <exception cref="T:System.InvalidOperationException">Nie żądanie zostało przesłane do pamięci podręcznej elementy podrzędne tego elementu.</exception>
      </Docs>
    </Member>
    <Member MemberName="CachedParent">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement CachedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.AutomationElement CachedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.CachedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedParent As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement ^ CachedParent { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforowany nadrzędny tego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Element nadrzędny. Zwracana wartość może być <see langword="null" /> , jeśli określony element nie ma nadrzędnego — na przykład, jeśli ten element jest węzła głównego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> właściwości pola listy oraz jej elementy listy są buforowane. Element pola listy jest dostępna w <xref:System.Windows.Automation.AutomationElement.CachedParent%2A> właściwości każdego elementu listy.  
  
 [!code-csharp[UIAClient_snip#119](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#119)]
 [!code-vb[UIAClient_snip#119](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#119)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Nie elementu nadrzędnego jest buforowany.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClassNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClassNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClassNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClassNameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClassNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Nazwa klasy zależy od implementacji dostawcy automatyzacji interfejsu użytkownika i w związku z tym nie może być traktowane po w standardowym formacie. Jednak jeśli znasz nazwę klasy umożliwia zweryfikowanie, czy aplikacja działa z oczekiwanym [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementu.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartością domyślną jest ciąg pusty.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#133](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#133)]
 [!code-vb[UIAClient_snip#133](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#133)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#134](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#134)]
 [!code-vb[UIAClient_snip#134](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickablePointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ClickablePointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ClickablePointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickablePointProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ClickablePointProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość elementu do kliknięcia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 <xref:System.Windows.Automation.AutomationElement> Nie jest aktywne, jeśli jest ona całkowicie zasłonięty przez inne okno.  
  
 Zwraca czy wartości właściwości typu <xref:System.Windows.Point>. Wartość domyślna to `null`.  
  
 Wartość zwracana jest we współrzędnych ekranu fizycznego.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości.  
  
 [!code-csharp[UIAClient_snip#135](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#135)]
 [!code-vb[UIAClient_snip#135](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#135)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#166](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#166)]
 [!code-vb[UIAClient_snip#166](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#166)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="ControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ControlTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Wartość domyślna właściwości to <xref:System.Windows.Automation.ControlType.Custom>  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#136](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#136)]
 [!code-vb[UIAClient_snip#136](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#136)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#137](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#137)]
 [!code-vb[UIAClient_snip#137](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#137)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CultureProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CultureProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.CultureProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CultureProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CultureProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje właściwość kultury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 W ramach systemu Windows Presentation Foundation (WPF), wartość domyślna zgłosił zawsze będzie `en-US` ponieważ programu .NET Framework automatycznie domyślnie jest język angielski. Dla innych platform, interfejs użytkownika ta właściwość musi być jawnie ustawiona lub nie mają być widoczne.  
  
 Ta właściwość może istnieć na podstawie-control, ale zazwyczaj jest dostępna tylko na poziomie aplikacji.  
  
 Zwraca czy wartości właściwości typu <xref:System.Globalization.CultureInfo>.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości.  
  
 [!code-csharp[UIAClient_snip#138](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#138)]
 [!code-vb[UIAClient_snip#138](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#138)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.AutomationElement/AutomationElementInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As AutomationElement.AutomationElementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::AutomationElement::AutomationElementInformation Current { System::Windows::Automation::AutomationElement::AutomationElementInformation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement+AutomationElementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżące wartości właściwości <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <value>Struktura, zawierającą bieżące wartości właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metody dostępu dla [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] właściwości są reprezentowane jako właściwości zwrócony przez strukturę <xref:System.Windows.Automation.AutomationElement.Current%2A>. Nie trzeba pobierać struktury; Możesz bezpośrednio, dostęp do jego elementów członkowskich, tak jak w poniższym przykładzie. Aby uzyskać szczegółowe informacje o dostępnych właściwości i ich użycia, zobacz <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>.  
  
 Aby uzyskać wartość w pamięci podręcznej z [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Użyj właściwości w tym elemencie <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono sposób <xref:System.Windows.Automation.AutomationElement.Current%2A> właściwość służy do pobierania nazwy elementu, które zostały wybrane na liście.  
  
 [!code-csharp[UIAClient_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#106)]
 [!code-vb[UIAClient_snip#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Windows.Automation.AutomationElement" /> Do porównania.</param>
        <summary>Określa, czy określony <see cref="T:System.Windows.Automation.AutomationElement" /> ma taką samą wartość jak to <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>
          <see langword="true" /> Jeśli określony <see cref="T:System.Windows.Automation.AutomationElement" /> jest taki sam <see cref="T:System.Windows.Automation.AutomationElement" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa elementy porównana jako równe mogą zawierać różne buforowanych informacji z różnych punktach w czasie. Sprawdzanie równości tylko testy, które <xref:System.Windows.Automation.AutomationElement> obiektów odwoływać się do tego samego podstawowego elementu interfejsu użytkownika i czy mają one ten sam identyfikator środowiska wykonawczego.  
  
 Ta metoda jest odpowiednikiem operatora równości, który także porównać identyfikatory czasu wykonywania.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AutomationElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AutomationElement ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElementCollection FindAll(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElementCollection ^ FindAll(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElementCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">Bitowe połączenie wartości, która określa zakres wyszukiwania.</param>
        <param name="condition">Obiekt zawierający kryteria do dopasowania.</param>
        <summary>Zwraca wszystkie <see cref="T:System.Windows.Automation.AutomationElement" /> obiektów, które spełniają określony warunek.</summary>
        <returns>Kolekcja obiektów, która spełnia określony warunek. Jeśli nie ma zgodnych wyników, jest zwracana pustej kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres wyszukiwania jest określana względem elementu, na którym ma zostać wywołana metoda. Elementy są zwracane w kolejności napotkano w drzewie.  
  
 Podczas wyszukiwania okien najwyższego poziomy na pulpicie, należy określić <xref:System.Windows.Automation.TreeScope.Children> w `scope`, a nie <xref:System.Windows.Automation.TreeScope.Descendants>. Wyszukiwanie za pomocą Całe poddrzewo pulpitu można iteracji tysięcy elementów i prowadzić do przepełnienia stosu.  
  
 Jeśli aplikacja kliencka może podjąć próbę Znajdź elementy w interfejsie użytkownika, należy wykonać wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.Windows.Automation.AutomationElement.FindAll%2A> zlokalizować wszystkie włączone przyciski w oknie.  
  
 [!code-csharp[UIAClient_snip#116](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#116)]
 [!code-vb[UIAClient_snip#116](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#116)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement FindFirst(valuetype System.Windows.Automation.TreeScope scope, class System.Windows.Automation.Condition condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ FindFirst(System::Windows::Automation::TreeScope scope, System::Windows::Automation::Condition ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Windows.Automation.TreeScope" />
        <Parameter Name="condition" Type="System.Windows.Automation.Condition" />
      </Parameters>
      <Docs>
        <param name="scope">Bitowe połączenie wartości, która określa zakres wyszukiwania.</param>
        <param name="condition">Obiekt zawierający kryteria do dopasowania.</param>
        <summary>Zwraca pierwszy element podrzędny lub obiekt podrzędny, który odpowiada określony warunek.</summary>
        <returns>Pierwszy element, który jest zgodny z warunkiem lub <see langword="null" /> Jeżeli nie znaleziono.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zakres wyszukiwania jest określana względem elementu, na którym ma zostać wywołana metoda.  
  
 Podczas wyszukiwania najwyższego poziomu okien na pulpicie, należy określić <xref:System.Windows.Automation.TreeScope.Children> w `scope`, a nie <xref:System.Windows.Automation.TreeScope.Descendants>. Wyszukiwanie za pomocą Całe poddrzewo pulpitu można iteracji tysięcy elementów i prowadzić do przepełnienia stosu.  
  
 Jeśli aplikacja kliencka może podjąć próbę Znajdź elementy w interfejsie użytkownika, należy wykonać wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można znaleźć okna podrzędnego z jego identyfikator.  
  
 [!code-csharp[UIAClient_snip#110](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#110)]
 [!code-vb[UIAClient_snip#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#110)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)" />
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ FocusedElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Automation.AutomationElement" /> czy aktualnie ma fokus.</summary>
        <value>Ukierunkowanych [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli aplikacja kliencka może podjąć próbę Znajdź elementy w interfejsie użytkownika, należy wykonać wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameworkIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty FrameworkIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.FrameworkIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FrameworkIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ FrameworkIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartością domyślną jest ciąg pusty.  
  
 Ta właściwość umożliwia aplikacjom dotyczą szczególnych przypadkach całej struktury interfejsu użytkownika. Przykładowe wartości właściwości są "Win32", "Formularza systemu Windows" i "DirectUI".  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości.  
  
 [!code-csharp[UIAClient_snip#139](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#139)]
 [!code-vb[UIAClient_snip#139](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#139)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromHandle(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (hwnd As IntPtr) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromHandle(IntPtr hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">Dojście [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementu.</param>
        <summary>Pobiera nową <see cref="T:System.Windows.Automation.AutomationElement" /> obiekt do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu odwołuje się określony uchwyt okna.</summary>
        <returns>
          <see cref="T:System.Windows.Automation.AutomationElement" /> Dla [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] identyfikowane przez element <paramref name="hwnd" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="FromLocalProvider">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromLocalProvider(class System.Windows.Automation.Provider.IRawElementProviderSimple localImpl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromLocalProvider (localImpl As IRawElementProviderSimple) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromLocalProvider(System::Windows::Automation::Provider::IRawElementProviderSimple ^ localImpl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localImpl" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
      </Parameters>
      <Docs>
        <param name="localImpl">Obiekt dostawcy.</param>
        <summary>Pobiera nową <see cref="T:System.Windows.Automation.AutomationElement" /> obiektu z lokalnym <see cref="T:System.Windows.Automation.Provider.IRawElementProviderSimple" /> implementacji.</summary>
        <returns>
          <see cref="T:System.Windows.Automation.AutomationElement" /> Reprezentujący element obsługiwane przez obiekt dostawcy.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda mogą być wykorzystane przez bibliotekę klienta pomocnika do włączyć jego elementom wywołującym na dostęp do jego własnego typu element macierzysty. Na przykład [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] wewnętrznie używa tej metody, dzięki czemu może on zwrócić <xref:System.Windows.Automation.AutomationElement> do klientów, których chcesz pobrać [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element bezpośrednio z <xref:System.Windows.UIElement>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromPoint">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.AutomationElement FromPoint(valuetype System.Windows.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromPoint (pt As Point) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::AutomationElement ^ FromPoint(System::Windows::Point pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pt">Współrzędne ekranu fizycznego na pulpicie, w którym można znaleźć [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementu.</param>
        <summary>Pobiera nową <see cref="T:System.Windows.Automation.AutomationElement" /> obiekt do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element w określonym momencie na pulpicie.</summary>
        <returns>[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Element w określonym momencie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.FromPoint%2A> Zwraca element w drzewie logicznym zbliżony do elementu głównego.  
  
 Jeśli aplikacja kliencka może podjąć próbę Znajdź elementy w interfejsie użytkownika, należy wykonać wszystkie [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wywołuje w oddzielnym wątku.  
  
 Chociaż punkt znajduje się w prostokątem zwracana <xref:System.Windows.Automation.AutomationElement>, nie jest zawsze na aktywne część formantu. Na przykład round przycisku nie może być aktywne w pobliżu jednej narożników jego prostokątem.  
  
   
  
## Examples  
 Poniższy przykład pobiera <xref:System.Windows.Automation.AutomationElement> w lokalizacji kursora systemu.  
  
 [!code-csharp[UIAClient_snip#181](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#181)]
 [!code-vb[UIAClient_snip#181](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#181)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="GetCachedPattern">
      <MemberSignature Language="C#" Value="public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">Identyfikator wzorzec do pobrania.</param>
        <summary>Pobiera określony wzorzec z pamięci podręcznej to <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Obiekt reprezentujący określony wzorzec. Jeśli nie wzorce dopasowania <see langword="null" /> jest zwracany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A> pobiera określony wzorzec z pamięci podręcznej. Aby pobrać bieżący obiekt do określonego wzorca, należy wywołać <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>.  
  
 Ta metoda zgłasza wyjątek, jeśli żądana wzorzec nie został wcześniej buforowane.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak buforowanie, pobrać wzorca.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądany wzorzec nie znajduje się w pamięci podręcznej lub nie jest obsługiwany przez element.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCachedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera wartość z określonej właściwości w pamięci podręcznej <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> pobiera określonej właściwości z pamięci podręcznej <xref:System.Windows.Automation.AutomationElement>. Aby pobrać bieżącą właściwość, należy wywołać <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Cached" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">Identyfikator właściwości do pobrania.</param>
        <summary>Pobiera wartość określonej właściwości z pamięci podręcznej to <see cref="T:System.Windows.Automation.AutomationElement" />. Zwrócono odpowiednią wartość domyślną dla typu właściwości dla właściwości nie jest jawnie obsługiwany przez element docelowy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu.</summary>
        <returns>Obiekt zawierający wartość określonej właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli dostawcy automatyzacji interfejsu użytkownika dla elementu obsługuje właściwość, jest zwracana wartość właściwości. W przeciwnym razie wartość właściwości domyślnej określony przez [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] jest zwracany. Uzyskać informacji o domyślnych właściwości, zobacz pola Identyfikator właściwości <xref:System.Windows.Automation.AutomationElement>, takich jak <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> pobiera określonej właściwości z <xref:System.Windows.Automation.AutomationElement>obiektu pamięci podręcznej. Można pobrać bieżącego obiektu dla określonej właściwości wywołania <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Ta metoda zgłasza wyjątek, jeśli Żądana właściwość nie została wcześniej buforowane.  
  
   
  
## Examples  
 Poniżej przedstawiono, jak ta metoda może służyć do pobierania właściwości pamięci podręcznej.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądana właściwość nie jest w pamięci podręcznej.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCachedPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCachedPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">Identyfikator właściwości do pobrania.</param>
        <param name="ignoreDefaultValue">Wartość, która określa, czy należy ją ignorować wartość domyślną, jeśli określona właściwość nie jest obsługiwana.</param>
        <summary>Pobiera wartość określonej właściwości z pamięci podręcznej to <see cref="T:System.Windows.Automation.AutomationElement" />, opcjonalnie ignoruje wszystkie właściwości domyślnej.</summary>
        <returns>Obiekt zawierający wartość określonej właściwości lub <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> Jeśli element nie dostarcza wartość i <paramref name="ignoreDefaultValue" /> jest <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> pobiera z pamięci podręcznej dla określonej właściwości <xref:System.Windows.Automation.AutomationElement>. Aby pobrać bieżącą właściwość, należy wywołać <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>.  
  
 Przekazywanie `false` w `ignoreDefaultValue` jest odpowiednikiem wywołania <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Jeśli dostawcy automatyzacji interfejsu użytkownika dla elementu obsługuje właściwość, jest zwracana wartość właściwości. W przeciwnym razie, jeśli `ignoreDefaultValue` jest `false`, domyślna określona przez właściwość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] jest zwracany. Uzyskać informacji o domyślnych właściwości, zobacz pola Identyfikator właściwości <xref:System.Windows.Automation.AutomationElement>, takich jak <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Ta metoda zgłasza wyjątek, jeśli Żądana właściwość nie została wcześniej buforowane.  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono, jak ta metoda może służyć do pobierania właściwości pamięci podręcznej.  
  
 [!code-csharp[UIAClient_snip#108](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#108)]
 [!code-vb[UIAClient_snip#108](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądana właściwość nie jest w pamięci podręcznej.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClickablePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetClickablePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetClickablePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClickablePoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetClickablePoint();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera punkt na <see cref="T:System.Windows.Automation.AutomationElement" /> który kliknięcie.</summary>
        <returns>Współrzędne ekranu fizycznego punkt, który jest używany przez klienta, kliknij w tym elemencie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Nie jest aktywne, jeśli jest ona całkowicie zasłonięty przez inne okno.  
  
 <xref:System.Windows.Automation.AutomationElement> Jest aktywne, gdy spełnia wszystkie następujące warunki:  
  
-   Jest programowo widoczne i dostępne z [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewa.  
  
-   Zostanie wyświetlony wyniku pełni do widoku wewnątrz kontenera nadrzędnego, jeśli istnieją. Jeśli element jest przycinana, nie ma żadnej gwarancji, że jest aktywne.  
  
-   Element jest czytelna przez innego elementu interfejsu użytkownika. Jeśli element jest częściowo zasłonięty przez niektóre elementu interfejsu użytkownika innych niż jego obiektów nadrzędnych, nie może być aktywne.  
  
-   Okna zawierającego element musi być aktywne. Na przykład okno nie jest aktywne, jeśli okna nadrzędnego jest całkowicie niewidoczne. Kliknięcie myszą będzie kliknij, aby okna poniżej, więc jakichkolwiek formantów w oknie przezroczysty nie zwróci punkty aktywne.  
  
-   Jeśli element kontenera (na przykład widok listy lub drzewa), musi mieć punktu które po kliknięciu będzie powodować tła formantu koncentrować się. Jeśli każdej części formantu kontenera jest zajęte przez element podrzędny, nie jest aktywne.  
  
 Nie ma żadnej gwarancji, że formant będzie wykonywać żadnych czynności, po kliknięciu punktu zdefiniowane jako aktywne przez dostawcy automatyzacji interfejsu użytkownika. Wzorce formantu zamiast tego Rozważ użycie do wykonywania akcji względem kontrolki.  
  
   
  
## Examples  
 Poniższy kod pobiera kliknięcia formantu i przesuwania kursora systemu do tego punktu.  
  
 [!code-csharp[UIAClient_snip#179](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#179)]
 [!code-vb[UIAClient_snip#179](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#179)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.NoClickablePointException">Nie ma żadnych akcji punktu.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPattern">
      <MemberSignature Language="C#" Value="public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPattern (pattern As AutomationPattern) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
      </Parameters>
      <Docs>
        <param name="pattern">Identyfikator wzorzec do pobrania.</param>
        <summary>Pobiera obiekt określony wzorzec na tym <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Obiekt wzorzec, jeśli określony wzorzec jest obecnie obsługiwane przez <see cref="T:System.Windows.Automation.AutomationElement" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> pobiera określony wzorzec na podstawie jego dostępności w momencie wywołania.  
  
 Dla niektórych form [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], ta metoda będzie powodowało zapasu wydajności między procesami. Aplikacje można skoncentrować się narzut przez buforowanie wzorców i pobieranie ich przy użyciu <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób używania tej metody do pobierania <xref:System.Windows.Automation.SelectionItemPattern>, który jest następnie używany do wybierz element w polu listy.  
  
 [!code-csharp[UIAClient_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#103)]
 [!code-vb[UIAClient_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#103)]  
  
> [!NOTE]
>  Często powtarzane wykonywanie zadań takich jak podano w przykładzie, bardziej efektywne buforowanie wzorzec, użyj byłoby <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wzorzec nie jest obsługiwana przez element.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentPropertyValue">
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera bieżącą wartość określonej właściwości z <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> metoda jest aktualna w chwili, jest ona wywoływana. Wartość można następnie zmienić przez inne aplikacje, interakcji z [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Dla niektórych form [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], ta metoda będzie powodowało zapasu wydajności między procesami. Aplikacje można skoncentrować się narzut właściwości buforowania i pobierania ich przy użyciu <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.AutomationElement.Current" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
      </Parameters>
      <Docs>
        <param name="property">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Określania właściwości, które można pobrać identyfikator właściwości.</param>
        <summary>Pobiera wartość określonej właściwości na tym <see cref="T:System.Windows.Automation.AutomationElement" />. Zwrócono odpowiednią wartość domyślną dla typu właściwości dla właściwości nie jest jawnie obsługiwany przez element docelowy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu.</summary>
        <returns>Obiekt zawierający wartość określonej właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> metoda jest aktualna w chwili, jest ona wywoływana. Wartość można następnie zmienić przez inne aplikacje, interakcji z [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Jeśli dostawcy automatyzacji interfejsu użytkownika dla elementu obsługuje właściwość, jest zwracana wartość właściwości. W przeciwnym razie wartość właściwości domyślnej określony przez [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] jest zwracany. Uzyskać informacji o domyślnych właściwości, zobacz pola Identyfikator właściwości <xref:System.Windows.Automation.AutomationElement>, takich jak <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Dla niektórych form [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], ta metoda będzie powodowało zapasu wydajności między procesami. Położony nacisk obciążenie przez właściwości buforowania i pobierania ich przy użyciu <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentPropertyValue">
      <MemberSignature Language="C#" Value="public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetCurrentPropertyValue(class System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentPropertyValue (property As AutomationProperty, ignoreDefaultValue As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetCurrentPropertyValue(System::Windows::Automation::AutomationProperty ^ property, bool ignoreDefaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.Automation.AutomationProperty" />
        <Parameter Name="ignoreDefaultValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="property">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Określania właściwości, które można pobrać identyfikator właściwości.</param>
        <param name="ignoreDefaultValue">Wartość, która określa, czy należy ją ignorować wartość domyślną, jeśli określona właściwość jest obsługiwana.</param>
        <summary>Pobiera wartość określonej właściwości na tym <see cref="T:System.Windows.Automation.AutomationElement" />, opcjonalnie ignoruje wszystkie właściwości domyślnej.</summary>
        <returns>Obiekt zawierający wartość określonej właściwości lub <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> Jeśli element nie dostarcza wartość i <paramref name="ignoreDefaultValue" /> jest <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przekazywanie `false` w `ignoreDefaultValue` jest odpowiednikiem wywołania <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=nameWithType>.  
  
 Jeśli dostawcy automatyzacji interfejsu użytkownika dla elementu obsługuje właściwość, jest zwracana wartość właściwości. W przeciwnym razie, jeśli `ignoreDefaultValue` jest `false`, domyślna określona przez właściwość [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] jest zwracany. Uzyskać informacji o domyślnych właściwości, zobacz pola Identyfikator właściwości <xref:System.Windows.Automation.AutomationElement>, takich jak <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>.  
  
 Wartość zwrócona przez <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> metoda jest aktualna w chwili, jest ona wywoływana. Wartość można następnie zmienić przez inne aplikacje, interakcji z [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].  
  
 Dla niektórych form [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)], ta metoda będzie powodowało zapasu wydajności między procesami. Aplikacje można skoncentrować się narzut właściwości buforowania i pobierania ich przy użyciu <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> właściwość określa, że ale jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera wartość skrótu dla tego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <returns>Wartość skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera unikatowy identyfikator przypisany do [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu.</summary>
        <returns>Tablica liczb całkowitych reprezentujący identyfikator środowiska wykonawczego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikator jest tylko musi być unikatowy, aby [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] pulpitu, na którym został wygenerowany. Identyfikatory mogą być ponownie używane wraz z upływem czasu.  
  
 Format czasu wykonywania identyfikatory mogą ulec zmianie w przyszłych wersjach. Zwrócony identyfikator powinien traktowane jako wartości nieprzezroczystej i używane tylko w przypadku porównanie. na przykład, aby określić, czy <xref:System.Windows.Automation.AutomationElement> znajduje się w pamięci podręcznej.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pobrać identyfikator środowiska wykonawczego <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#111](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#111)]
 [!code-vb[UIAClient_snip#111](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetSupportedPatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera formant wzorce tego <see cref="T:System.Windows.Automation.AutomationElement" /> obsługuje.</summary>
        <returns>Tablica <see cref="T:System.Windows.Automation.AutomationPattern" /> obiekty reprezentujące wzorce obsługiwanych formantu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda zazwyczaj będzie służyć do debugowania. Wywoływanie jej wymaga dużą przetwarzania, wysyła zapytanie <xref:System.Windows.Automation.AutomationElement> dla każdego możliwe wzorca. Normalnie należy użyć <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> można pobrać określonego formantu wzorca z <xref:System.Windows.Automation.AutomationElement>. Aby ustalić, czy obsługiwane jest określony sposób, sprawdź właściwość odpowiednie; na przykład <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pobrać wzorce formantu obsługiwane przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#114](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#114)]
 [!code-vb[UIAClient_snip#114](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#114)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetSupportedProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetSupportedProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSupportedProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetSupportedProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera identyfikatory właściwości obsługiwanych przez element.</summary>
        <returns>Tablica identyfikatorów obsługiwanych właściwości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tablica zwrócona identyfikuje wszystkie właściwości, które są obsługiwane przez ten element; jednak może również zawierać zduplikowane wpisy lub właściwości, które zawierają `null` lub nie ma podanej wartości. W większości przypadków warto użyć <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A> do określenia, czy właściwość jest obecnie obsługiwany, a także aby uzyskać bieżącą wartość.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak można pobrać właściwości obsługiwanych przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#115](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#115)]
 [!code-vb[UIAClient_snip#115](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#115)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedCache">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationElement GetUpdatedCache(class System.Windows.Automation.CacheRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdatedCache (request As CacheRequest) As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::AutomationElement ^ GetUpdatedCache(System::Windows::Automation::CacheRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Automation.CacheRequest" />
      </Parameters>
      <Docs>
        <param name="request">Wzorce i właściwości, aby uwzględnić w zaktualizowanych pamięci podręcznej.</param>
        <summary>Pobiera nową <see cref="T:System.Windows.Automation.AutomationElement" /> z zaktualizowano pamięci podręcznej.</summary>
        <returns>Nowy <see cref="T:System.Windows.Automation.AutomationElement" /> mający zaktualizowano pamięci podręcznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oryginalna <xref:System.Windows.Automation.AutomationElement> niezmieniona. <xref:System.Windows.Automation.AutomationElement.GetUpdatedCache%2A> Zwraca nowy <xref:System.Windows.Automation.AutomationElement>, który odwołuje się do tej samej [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] i ma tę samą <xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak mogą być aktualizowane pamięci podręcznej w każdym przypadku, gdy zmieni się zaznaczenie w polu kombi.  
  
 [!code-csharp[UIAClient_snip#109](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#109)]
 [!code-vb[UIAClient_snip#109](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#109)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeyboardFocusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasKeyboardFocusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HasKeyboardFocusProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#140](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#140)]
 [!code-vb[UIAClient_snip#140](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty HelpTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.HelpTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpTextProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ HelpTextProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Te informacje zazwyczaj są uzyskiwane z określonego przez dostawców etykietek narzędzi.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartość domyślna właściwości jest pustym ciągiem.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#126](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#126)]
 [!code-vb[UIAClient_snip#126](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#126)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsContentElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsContentElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsContentElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsContentElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Widok zawartości [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] drzewa udostępnia widok [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] zawiera tylko elementy, które zawierają dane w ramach [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Element musi być formantem możliwość przechowywania zawartości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `true`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#141](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#141)]
 [!code-vb[UIAClient_snip#141](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#141)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#142](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#142)]
 [!code-vb[UIAClient_snip#142](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#142)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ContentViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsControlElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsControlElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsControlElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsControlElementProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsControlElementProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Formanty są elementy, które użytkownik przewiduje jako interakcyjnego lub zawierający informacje [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `true`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#143](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#143)]
 [!code-vb[UIAClient_snip#143](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#143)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#144](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#144)]
 [!code-vb[UIAClient_snip#144](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#144)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Automation.Automation.ControlViewCondition" />
      </Docs>
    </Member>
    <Member MemberName="IsDockPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDockPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsDockPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.DockPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> właściwość, która określa, czy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] odwołuje się element <see cref="T:System.Windows.Automation.AutomationElement" /> jest włączona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
 Gdy jest włączony stan formantu `false`, zakłada się, że formanty podrzędne również nie jest włączona. Nie należy oczekiwać zdarzenia zmiany właściwości z elementów podrzędnych podczas zmiany kontrolować stan elementu nadrzędnego.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#146](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#146)]
 [!code-vb[UIAClient_snip#146](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpandCollapsePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsExpandCollapsePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsExpandCollapsePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.ExpandCollapsePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład pobiera wartość określającą, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.GridItemPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGridPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsGridPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsGridPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.GridPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvokePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInvokePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsInvokePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.InvokePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemContainerPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsItemContainerPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsItemContainerPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.ItemContainerPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsKeyboardFocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Właściwość zawiera informacje niezbędne do prawidłowego funkcjonowania <xref:System.Windows.Automation.AutomationElement.SetFocus%2A> metody.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#147](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#147)]
 [!code-vb[UIAClient_snip#147](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultipleViewPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMultipleViewPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsMultipleViewPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.MultipleViewPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffscreenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsOffscreenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsOffscreenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOffscreenProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsOffscreenProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen" /> właściwość, która wskazuje, czy [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] element jest widoczny na ekranie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwracana wartość jest typu <xref:System.Boolean>, a wartość domyślna to `false`.  
  
 Aby uzyskać więcej informacji o tym, gdy ta właściwość jest `true`, zobacz <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#148](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#148)]
 [!code-vb[UIAClient_snip#148](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#148)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#149](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#149)]
 [!code-vb[UIAClient_snip#149](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPasswordProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsPasswordProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsPasswordProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPasswordProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsPasswordProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Wartość zwracana dla tej właściwości jest <xref:System.Boolean>. Zwraca `true` wskazująca, czy zawartość jest chroniony, a w przeciwnym `false`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości.  
  
 [!code-csharp[UIAClient_snip#150](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#150)]
 [!code-vb[UIAClient_snip#150](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRangeValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRangeValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRangeValuePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.RangeValuePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequiredForFormProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsRequiredForFormProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsRequiredForFormProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsRequiredForFormProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsRequiredForFormProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Wartość zwracana dla tej właściwości jest typu <xref:System.Boolean>, a wartość domyślna to `false`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#151](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#151)]
 [!code-vb[UIAClient_snip#151](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.ScrollItemPattern" /> — wzorzec formantu jest dostępna dla tego <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsScrollPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsScrollPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.ScrollPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.SelectionItemPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSelectionPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.SelectionPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronizedInputPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSynchronizedInputPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsSynchronizedInputPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.SynchronizedInputPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTableItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTableItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTableItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.TableItemPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTablePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTablePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTablePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.TablePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTextPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTextPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.TextPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTogglePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTogglePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTogglePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.TogglePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransformPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTransformPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsTransformPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.TransformPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValuePatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsValuePatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsValuePatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.ValuePattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVirtualizedItemPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVirtualizedItemPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsVirtualizedItemPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.VirtualizedItemPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWindowPatternAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsWindowPatternAvailableProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsWindowPatternAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która wskazuje, czy <see cref="T:System.Windows.Automation.WindowPattern" /> — wzorzec formantu jest dostępny w <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Zwraca czy wartości właściwości typu <xref:System.Boolean>. Wartość domyślna właściwości to `false`.  
  
   
  
## Examples  
 Poniższy przykład sprawdza, czy wzorzec określony formant jest obsługiwana przez <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#145](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#145)]
 [!code-vb[UIAClient_snip#145](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStatusProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemStatusProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemStatusProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemStatusProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemStatusProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus" /> właściwość, która określa stan wizualną reprezentację złożonych elementów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Wartość zwracana jest zdefiniowane przez formant <xref:System.String>. Wartością domyślną jest ciąg pusty.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#152](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#152)]
 [!code-vb[UIAClient_snip#152](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#152)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#153](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#153)]
 [!code-vb[UIAClient_snip#153](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ItemTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Wartość zwracana jest zdefiniowane przez formant <xref:System.String>. Wartością domyślną jest ciąg pusty.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#154](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#154)]
 [!code-vb[UIAClient_snip#154](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#154)]  
  
 W poniższym przykładzie pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, ciągiem określonym przez aplikację do zwrócenia zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#155](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#155)]
 [!code-vb[UIAClient_snip#155](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabeledByProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LabeledByProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LabeledByProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LabeledByProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LabeledByProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy" /> właściwość, która identyfikuje etykiety skojarzonej z formantem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Windows.Automation.AutomationElement>. Wartość domyślna właściwości to `null`.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#156](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#156)]
 [!code-vb[UIAClient_snip#156](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#156)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#157](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#157)]
 [!code-vb[UIAClient_snip#157](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInvalidatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutInvalidatedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ LayoutInvalidatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy układ zostało unieważnione.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 To zdarzenie jest wywoływane przez kontener elementów zmianie informacji widoczność wiele elementów.  To zdarzenie jest używany przez klienta jako wskaźnik należy odświeżyć <xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty> i <xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty> informacje, które mogą być buforowane dla elementów w obrębie drzewa. Zalecane liczbę zmian, które wyzwala to zdarzenie jest 25.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LocalizedControlTypeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ LocalizedControlTypeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType" /> właściwości w języku lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Dostawca jest wymagana do udostępnienia tej właściwości, gdy reprezentuje kontrolki niestandardowej, która nie ma typu dobrze zdefiniowany.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartość domyślna właściwości jest pustym ciągiem.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#158](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#158)]
 [!code-vb[UIAClient_snip#158](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#158)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#159](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#159)]
 [!code-vb[UIAClient_snip#159](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy menu jest zamknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MenuOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent MenuOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.MenuOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ MenuOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy menu jest otwarty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.String>. Wartość domyślna właściwości jest pustym ciągiem.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#160](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#160)]
 [!code-vb[UIAClient_snip#160](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#160)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#161](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#161)]
 [!code-vb[UIAClient_snip#161](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NativeWindowHandleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty NativeWindowHandleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NativeWindowHandleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NativeWindowHandleProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ NativeWindowHandleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Int32>. Wartość domyślna właściwości to 0.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#162](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#162)]
 [!code-vb[UIAClient_snip#162](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#162)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#163](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#163)]
 [!code-vb[UIAClient_snip#163](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotSupported">
      <MemberSignature Language="C#" Value="public static readonly object NotSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object NotSupported" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.NotSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NotSupported As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ NotSupported;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wskazuje, że właściwość nie jest obsługiwana.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
   
  
## Examples  
 Poniższy przykład pobiera właściwość tekst pomocy <xref:System.Windows.Automation.AutomationElement>, określania który <xref:System.Windows.Automation.AutomationElement.NotSupported> ma zostać zwrócony, jeśli formant nie obsługuje tej właściwości.  
  
 [!code-csharp[UIAClient_snip#123](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#123)]
 [!code-vb[UIAClient_snip#123](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">Pierwszy <see cref="T:System.Windows.Automation.AutomationElement" /> do porównania.</param>
        <param name="right">Drugi <see cref="T:System.Windows.Automation.AutomationElement" /> do porównania.</param>
        <summary>Zwraca wartość wskazującą czy określonego <see cref="T:System.Windows.Automation.AutomationElement" /> obiektów odwoływać się do tej samej [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli dwa <see cref="T:System.Windows.Automation.AutomationElement" /> obiektów odwoływać się do tej samej [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dwa <xref:System.Windows.Automation.AutomationElement> obiektów, które porównania jako równe mogą zawierać różne buforowanych informacji z różnych punktach w czasie. <xref:System.Windows.Automation.AutomationElement.op_Equality%2A> tylko testy, że obiekty odwołują się do tego samego podstawowego [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementu.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Automation.AutomationElement left, class System.Windows.Automation.AutomationElement right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As AutomationElement, right As AutomationElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Automation::AutomationElement ^ left, System::Windows::Automation::AutomationElement ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Automation.AutomationElement" />
        <Parameter Name="right" Type="System.Windows.Automation.AutomationElement" />
      </Parameters>
      <Docs>
        <param name="left">Pierwszy <see cref="T:System.Windows.Automation.AutomationElement" /> do porównania.</param>
        <param name="right">Drugi <see cref="T:System.Windows.Automation.AutomationElement" /> do porównania.</param>
        <summary>Zwraca wartość wskazującą czy określonego <see cref="T:System.Windows.Automation.AutomationElement" /> obiektów odwoływać się do różnych [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elementów.</summary>
        <returns>
          <see langword="true" /> Jeśli dwa obiekty odwołują się do różnych [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elementy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.Equals(System.Object)" />
        <altmember cref="M:System.Windows.Automation.Automation.Compare(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Wartość właściwości jest typu <xref:System.Windows.Automation.OrientationType>. Wartość domyślna to <xref:System.Windows.Automation.OrientationType.None>.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#164](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#164)]
 [!code-vb[UIAClient_snip#164](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#164)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#165](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#165)]
 [!code-vb[UIAClient_snip#165](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ProcessIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ProcessIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProcessIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ProcessIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Tej właściwości można również pobrać z <xref:System.Windows.Automation.AutomationElement.Current%2A> lub <xref:System.Windows.Automation.AutomationElement.Cached%2A> właściwości.  
  
 Zwraca czy wartości właściwości typu <xref:System.Int32>. Wartość domyślna właściwości to 0.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości. Wartością domyślną jest zwracany, jeśli element nie zawiera.  
  
 [!code-csharp[UIAClient_snip#167](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#167)]
 [!code-vb[UIAClient_snip#167](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#167)]  
  
 W poniższym przykładzie, pobiera bieżącą wartość właściwości, ale Określa, że jeśli samego elementu nie zawiera wartości dla właściwości, <xref:System.Windows.Automation.AutomationElement.NotSupported> jest zwracana zamiast wartości domyślnej.  
  
 [!code-csharp[UIAClient_snip#168](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#168)]
 [!code-vb[UIAClient_snip#168](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#168)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.AutomationElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Automation.AutomationElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.AutomationElement.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RootElement As AutomationElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Automation::AutomationElement ^ RootElement { System::Windows::Automation::AutomationElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera głównego <see cref="T:System.Windows.Automation.AutomationElement" /> dla bieżącego komputera stacjonarnego.</summary>
        <value>Element główny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Służy element główny jako punktu wyjścia do znajdowania innych elementów za pomocą <xref:System.Windows.Automation.AutomationElement.FindAll%2A> i <xref:System.Windows.Automation.AutomationElement.FindFirst%2A> metody.  
  
 Podczas wyszukiwania z elementem głównym, należy określić <xref:System.Windows.Automation.TreeScope.Children> w zakresie wyszukiwania, nie <xref:System.Windows.Automation.TreeScope.Descendants>. Wyszukiwanie za pomocą Całe poddrzewo pulpitu można iteracji tysięcy elementów i prowadzić do przepełnienia stosu.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera zbiór wszystkich bezpośrednie elementy podrzędne pulpitu.  
  
 [!code-csharp[UIAClient_snip#201](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#201)]
 [!code-vb[UIAClient_snip#201](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#201)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeIdProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty RuntimeIdProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.RuntimeIdProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RuntimeIdProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ RuntimeIdProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa właściwość, która zawiera identyfikator środowiska uruchomieniowego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Właściwość Identyfikatora środowiska uruchomieniowego Określa identyfikator <xref:System.Windows.Automation.AutomationElement> jest unikatowa na pulpicie.  
  
 Zwracane wartości właściwości jest tablicą typu <xref:System.Int32>. Nie ma żadnej wartości domyślnej.  
  
   
  
## Examples  
 Poniższy przykład pobiera bieżącą wartość właściwości.  
  
 [!code-csharp[UIAClient_snip#169](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/PropertySnips.cs#169)]
 [!code-vb[UIAClient_snip#169](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/PropertySnips.vb#169)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.WindowClosedEventArgs.GetRuntimeId" />
        <altmember cref="M:System.Windows.Automation.StructureChangedEventArgs.GetRuntimeId" />
        <altmember cref="F:System.Windows.Automation.AutomationElement.AutomationIdProperty" />
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia priorytet dla <see cref="T:System.Windows.Automation.AutomationElement" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zachowanie tej metody zależy od implementacji dostawcy automatyzacji interfejsu użytkownika dla elementu. Ustawianie fokusu niekoniecznie Przenieś element na pierwszy plan lub widoczny.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">Interfejs użytkownika dla <see cref="T:System.Windows.Automation.AutomationElement" /> już nie istnieje.</exception>
      </Docs>
    </Member>
    <Member MemberName="StructureChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent StructureChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.StructureChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StructureChangedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ StructureChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] struktury drzewa zostanie zmieniona.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipClosedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy etykietka narzędzia jest zamknięty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent ToolTipOpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.AutomationElement.ToolTipOpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpenedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ ToolTipOpenedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje zdarzenie, które jest wywoływane, gdy etykietka narzędzia jest otwarty.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać równoważne identyfikatorowi <xref:System.Windows.Automation.AutomationElementIdentifiers>.  
  
 Etykietki narzędzi są przejściowymi na pulpicie i etykietka narzędzia, być może został zamknięty w czasie klient odbiera zdarzenia.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.AutomationEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCachedPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCachedPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCachedPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCachedPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">Identyfikator wzorca kontrolki do pobrania.</param>
        <param name="patternObject">Przy powrocie zawiera wzorzec, jeśli znajduje się w pamięci podręcznej; w przeciwnym razie <see langword="null" />.</param>
        <summary>Pobiera wzorzec formantu z pamięci podręcznej.</summary>
        <returns>
          <see langword="true" /> Jeśli wzorzec znajduje się w pamięci podręcznej; <see langword="false" /> Jeśli go nie ma w pamięci podręcznej lub nie obsługiwane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje, jak do buforowania i pobierania wzorca formantu.  
  
 [!code-csharp[UIAClient_snip#107](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#107)]
 [!code-vb[UIAClient_snip#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#107)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="TryGetClickablePoint">
      <MemberSignature Language="C#" Value="public bool TryGetClickablePoint (out System.Windows.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetClickablePoint([out] valuetype System.Windows.Point&amp; pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetClickablePoint (ByRef pt As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetClickablePoint([Runtime::InteropServices::Out] System::Windows::Point % pt);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Windows.Point&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pt">Po powrocie z tej metody zawiera współrzędne ekranu fizycznego elementu do kliknięcia.</param>
        <summary>Pobiera punkt w elemencie, które można kliknąć.</summary>
        <returns>
          <see langword="true" /> Jeśli istnieje punkt, który jest aktywne; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.AutomationElement> Nie jest aktywne, jeśli jest ona całkowicie zasłonięty przez inne okno.  
  
   
  
## Examples  
 Poniższy przykład podejmie próbę pobrania do kliknięcia na <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAClient_snip#112](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#112)]
 [!code-vb[UIAClient_snip#112](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#112)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetClickablePoint" />
      </Docs>
    </Member>
    <Member MemberName="TryGetCurrentPattern">
      <MemberSignature Language="C#" Value="public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCurrentPattern(class System.Windows.Automation.AutomationPattern pattern, [out] object&amp; patternObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCurrentPattern (pattern As AutomationPattern, ByRef patternObject As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetCurrentPattern(System::Windows::Automation::AutomationPattern ^ pattern, [Runtime::InteropServices::Out] System::Object ^ % patternObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.Windows.Automation.AutomationPattern" />
        <Parameter Name="patternObject" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pattern">Identyfikator wzorca kontrolki do pobrania.</param>
        <param name="patternObject">Przy powrocie, wzorca formantu, jeśli jest obsługiwana; w przeciwnym razie <see langword="null" />.</param>
        <summary>Pobiera obiekt, który implementuje wzorca formantu.</summary>
        <returns>
          <see langword="true" /> Jeśli wzorzec jest obsługiwany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla niektórych form [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], ta metoda będzie powodowało zapasu wydajności między procesami. Aplikacje można skoncentrować się narzut przez buforowanie wzorców i pobieranie ich przy użyciu <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak do używania tej metody do pobierania wzorca formantu.  
  
 [!code-csharp[UIAClient_snip#113](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#113)]
 [!code-vb[UIAClient_snip#113](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#113)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)" />
        <altmember cref="M:System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)" />
      </Docs>
    </Member>
  </Members>
</Type>