<Type Name="ValuePattern" FullName="System.Windows.Automation.ValuePattern">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c20175b8367ac9621e3b2335fbfd3fbc84cf1a54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36369761" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ValuePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValuePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ValuePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class ValuePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValuePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type ValuePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontrolkę, która ma wewnętrznej wartości, które nie obejmuje zakres i może być reprezentowany jako ciąg. Ten ciąg może lub nie może być edytowalny, w zależności od formantu i jego ustawień.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IValueProvider" />
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ValuePattern.ValuePatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ValuePattern/ValuePatternInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As ValuePattern.ValuePatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ValuePattern::ValuePatternInformation Cached { System::Windows::Automation::ValuePattern::ValuePatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.ValuePattern.ValuePatternInformation" Usage="System.Windows.Automation.ValuePattern.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ValuePattern+ValuePatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera buforowany [! Wartości właściwości include[TLA2#tla_uiautomation](~/includes/tla2sharptla-UIAutomation-MD.MD)] dla tego <see cref="T:System.Windows.Automation.ValuePattern" />.</summary>
        <value>Wartości właściwości pamięci podręcznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartości właściwości pamięci podręcznej musi wcześniej żądano przy użyciu <xref:System.Windows.Automation.CacheRequest>. Pobrać wartości właściwości w bieżącym punkcie w czasie, należy pobrać za pomocą właściwości <xref:System.Windows.Automation.ValuePattern.Current%2A>.  
  
 Informacje dotyczące dostępnych właściwości i ich użycia, zobacz <xref:System.Windows.Automation.ValuePattern.ValuePatternInformation>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądana właściwość nie jest w pamięci podręcznej.</exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.ValuePattern.ValuePatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.ValuePattern/ValuePatternInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ValuePattern.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As ValuePattern.ValuePatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::ValuePattern::ValuePatternInformation Current { System::Windows::Automation::ValuePattern::ValuePatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.ValuePattern.ValuePatternInformation" Usage="System.Windows.Automation.ValuePattern.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ValuePattern+ValuePatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżący [! Wartości właściwości include[TLA2#tla_uiautomation](~/includes/tla2sharptla-UIAutomation-MD.MD)] dla tego <see cref="T:System.Windows.Automation.ValuePattern" />.</summary>
        <value>Bieżące wartości właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten wzorzec musi pochodzić z <xref:System.Windows.Automation.AutomationElement> z <xref:System.Windows.Automation.AutomationElementMode.Full> odwołania, aby uzyskać bieżące wartości. Jeśli <xref:System.Windows.Automation.AutomationElement> został uzyskany przy użyciu <xref:System.Windows.Automation.AutomationElementMode.None>, zawiera tylko dane z pamięci podręcznej i podjęto próbę uzyskania bieżącej wartości dowolnej właściwości zgłasza wyjątek. Użyj <xref:System.Windows.Automation.ValuePattern.Cached%2A> można pobrać wartość w pamięci podręcznej, który został wcześniej określony za pomocą właściwości <xref:System.Windows.Automation.CacheRequest>.  
  
 Informacje dotyczące dostępnych właściwości i ich użycia, zobacz <xref:System.Windows.Automation.ValuePattern.ValuePatternInformation>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ValuePattern.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.ValuePattern.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.IsReadOnly" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać odpowiadającego mu pola w <xref:System.Windows.Automation.ValuePatternIdentifiers>.  
  
 Formant powinny mieć jego <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> ustawioną `true` i jego <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> ustawioną `false` zanim klienci podejmują wywołania <xref:System.Windows.Automation.ValuePattern.SetValue%2A>.  
  
   
  
## Examples  
 W poniższym przykładzie element główny jest przekazywany do funkcji, która zwraca kolekcję elementów automatyzacji interfejsu użytkownika, które są elementami podrzędnymi głównego i spełniają z zestawem warunków właściwości.  
  
 [!code-csharp[UIAValuePattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#100)]
 [!code-vb[UIAValuePattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ValuePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.ValuePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="T:System.Windows.Automation.ValuePattern" /> — wzorzec formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać odpowiadającego mu pola w <xref:System.Windows.Automation.ValuePatternIdentifiers>.  
  
 Identyfikator — wzorzec jest przekazywany do metody, takie jak <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> można pobrać z określonego wzorca formantu zainteresowania <xref:System.Windows.Automation.AutomationElement>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.ValuePattern> — wzorzec kontrolki są uzyskiwane z <xref:System.Windows.Automation.AutomationElement>.  
  
 [!code-csharp[UIAValuePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#101)]
 [!code-vb[UIAValuePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ValuePattern.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string -&gt; unit" Usage="valuePattern.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do ustawienia. Dostawca automatyzacji interfejsu użytkownika jest odpowiedzialny za konwertowania wartości na odpowiedni typ danych.</param>
        <summary>Ustawia wartość formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jednowierszowy edycyjnym obsługuje programowy dostęp do ich zawartości za pośrednictwem <xref:System.Windows.Automation.ValuePattern>. Jednak nie obsługują wiele wierszy edycyjnym <xref:System.Windows.Automation.ValuePattern>; zamiast tego zapewniają dostęp do ich zawartości za pomocą <xref:System.Windows.Automation.TextPattern> — wzorzec formantu.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.AutomationElement> obsługującej <xref:System.Windows.Automation.ValuePattern> — wzorzec formantu ma jego <xref:System.Windows.Automation.ValuePattern.ValueProperty> ustawioną wartość określone przez użytkownika.  
  
 [!code-csharp[UIAValuePattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#103)]
 [!code-vb[UIAValuePattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Formant jest tylko do odczytu.</exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">Formant nie jest włączony.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty ValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty ValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ValuePattern.ValueProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ValueProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ ValueProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ValueProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.ValuePattern.ValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.Automation.ValuePattern.ValuePatternInformation.Value" /> właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika należy używać odpowiadającego mu pola w <xref:System.Windows.Automation.ValuePatternIdentifiers>.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.ValuePattern> obiektu uzyskane z formantem docelowym została przekazana do funkcji, która pobiera bieżącą <xref:System.Windows.Automation.ValuePattern> wartości właściwości.  
  
 [!code-csharp[UIAValuePattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAValuePattern_snip/CSharp/UIAValuePattern_snippets.cs#102)]
 [!code-vb[UIAValuePattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAValuePattern_snip/VisualBasic/UIAValuePattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>