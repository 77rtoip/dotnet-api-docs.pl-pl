<Type Name="TransformPattern" FullName="System.Windows.Automation.TransformPattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27df18d099a02bbec776cdb386221c3d1b24e2f9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69222252" /></Metadata><TypeSignature Language="C#" Value="public class TransformPattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TransformPattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.TransformPattern" />
  <TypeSignature Language="VB.NET" Value="Public Class TransformPattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransformPattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type TransformPattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje kontrolkę, która może zostać przeniesiona, zmieniono rozmiar lub obrócona w przestrzeni dwuwymiarowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa tego wzorca kontroli nie jest ograniczona do obiektów na pulpicie. Ten wzorzec kontrolki musi być również obsługiwany przez elementy podrzędne obiektu kontenera, o ile elementy podrzędne można przenosić, zmieniać rozmiar lub obracać się swobodnie w granicach kontenera.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.ITransformProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">Wzorce formantów automatyzacji interfejsu użytkownika — omówienie</related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md">Wzorce kontrolek automatyzacji interfejsu użytkownika dla klientów</related>
  </Docs>
  <Members>
    <Member MemberName="Cached">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TransformPattern.TransformPatternInformation Cached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TransformPattern/TransformPatternInformation Cached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.Cached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cached As TransformPattern.TransformPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TransformPattern::TransformPatternInformation Cached { System::Windows::Automation::TransformPattern::TransformPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Cached : System.Windows.Automation.TransformPattern.TransformPatternInformation" Usage="System.Windows.Automation.TransformPattern.Cached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TransformPattern+TransformPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartości właściwości [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] pamięci podręcznej <see cref="T:System.Windows.Automation.TransformPattern" />dla tego elementu.</summary>
        <value>Struktura zawierająca wartości właściwości [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] pamięci podręcznej dla wzorca kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:System.Windows.Automation.CacheRequest>pamięci podręcznej wartości właściwości muszą zostać wcześniej zażądane przy użyciu. Użyj <xref:System.Windows.Automation.TransformPattern.Current%2A> , aby uzyskać bieżącą wartość właściwości.  
  
 Aby uzyskać informacje na temat dostępnych właściwości i ich użycia, <xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>Zobacz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Żądana właściwość nie znajduje się w pamięci podręcznej.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanMoveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanMoveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanMoveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPattern.CanMoveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanMoveProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanMoveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanMoveProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPattern.CanMoveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> Identyfikuje właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika powinni używać równoważnego pola <xref:System.Windows.Automation.TransformPatternIdentifiers>w.  
  
   
  
## Examples  
 W poniższym przykładzie element główny jest przesyłany do funkcji, która zwraca kolekcję [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów, które są elementami podrzędnymi elementu głównego i spełniają zestaw warunków właściwości.  
  
 [!code-csharp[UIATransformPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#100)]
 [!code-vb[UIATransformPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanResizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanResizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPattern.CanResizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanResizeProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanResizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanResizeProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPattern.CanResizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> Identyfikuje właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika powinni używać równoważnego pola <xref:System.Windows.Automation.TransformPatternIdentifiers>w.  
  
   
  
## Examples  
 W poniższym przykładzie element główny jest przesyłany do funkcji, która zwraca kolekcję [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów, które są elementami podrzędnymi elementu głównego i spełniają zestaw warunków właściwości.  
  
 [!code-csharp[UIATransformPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#100)]
 [!code-vb[UIATransformPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationProperty CanRotateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationProperty CanRotateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPattern.CanRotateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CanRotateProperty As AutomationProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationProperty ^ CanRotateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CanRotateProperty : System.Windows.Automation.AutomationProperty" Usage="System.Windows.Automation.TransformPattern.CanRotateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> Identyfikuje właściwość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika powinni używać równoważnego pola <xref:System.Windows.Automation.TransformPatternIdentifiers>w.  
  
   
  
## Examples  
 W poniższym przykładzie element główny jest przesyłany do funkcji, która zwraca kolekcję [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] elementów, które są elementami podrzędnymi elementu głównego i spełniają zestaw warunków właściwości.  
  
 [!code-csharp[UIATransformPattern_snip#100](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#100)]
 [!code-vb[UIATransformPattern_snip#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.TransformPattern.TransformPatternInformation Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.TransformPattern/TransformPatternInformation Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.TransformPattern.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TransformPattern.TransformPatternInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::TransformPattern::TransformPatternInformation Current { System::Windows::Automation::TransformPattern::TransformPatternInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Automation.TransformPattern.TransformPatternInformation" Usage="System.Windows.Automation.TransformPattern.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.TransformPattern+TransformPatternInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera bieżące [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wartości <see cref="T:System.Windows.Automation.TransformPattern" />właściwości.</summary>
        <value>Struktura zawierająca bieżące [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] wartości właściwości wzorca kontrolki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten wzorzec musi znajdować się <xref:System.Windows.Automation.AutomationElement> na podstawie <xref:System.Windows.Automation.AutomationElementMode.Full> odwołania, aby można było pobrać bieżące wartości. Jeśli został uzyskany przy <xref:System.Windows.Automation.AutomationElementMode.None>użyciu, zawiera tylko dane w pamięci podręcznej i próba pobrania bieżącej wartości dowolnej właściwości zgłasza wyjątek. <xref:System.Windows.Automation.AutomationElement> Użyj <xref:System.Windows.Automation.TransformPattern.Cached%2A> polecenia, aby uzyskać buforowaną wartość właściwości, która została wcześniej określona <xref:System.Windows.Automation.CacheRequest>przy użyciu.  
  
 Aby uzyskać informacje na temat dostępnych właściwości i ich użycia, <xref:System.Windows.Automation.TransformPattern.TransformPatternInformation>Zobacz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TransformPattern.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Move : double * double -&gt; unit" Usage="transformPattern.Move (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">Współrzędne ekranu bezwzględnego po lewej stronie kontrolki.</param>
        <param name="y">Współrzędne ekranu absolutnego górnej części formantu.</param>
        <summary>Przenosi formant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można przenieść, zmienić rozmiaru ani obrócić obiektu, ponieważ jego lokalizacja ekranu będzie całkowicie poza współrzędnymi jego kontenera i niedostępnym dla klawiatury lub myszy. Na przykład gdy okno najwyższego poziomu jest przenoszone całkowicie poza ekranem lub obiekt podrzędny jest przenoszony poza granice okienka ekranu kontenera. W takich przypadkach obiekt jest umieszczany w pobliżu żądanych współrzędnych ekranu, a współrzędne górne lub lewe są zastępowane w granicach kontenera.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.TransformPattern> wzorzec kontrolki jest uzyskiwany <xref:System.Windows.Automation.AutomationElement> z i <xref:System.Windows.Automation.AutomationElement>następnie używany do przenoszenia.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#103)]
[!code-vb[UIATransformPattern_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove" /> Właściwość ma wartość false.</exception>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.TransformPattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.TransformPattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje wzorzec <see cref="T:System.Windows.Automation.TransformPattern" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten identyfikator jest używany przez aplikacje klienckie automatyzacji interfejsu użytkownika. Dostawcy automatyzacji interfejsu użytkownika powinni używać równoważnego pola <xref:System.Windows.Automation.TransformPatternIdentifiers>w.  
  
 Identyfikator wzorca jest przesyłany do metod, takich <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> jak aby pobrać wzorzec kontroli zainteresowania z określonego <xref:System.Windows.Automation.AutomationElement>elementu.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.TransformPattern> wzorzec kontrolki jest uzyskiwany <xref:System.Windows.Automation.AutomationElement>z.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TransformPattern.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Resize : double * double -&gt; unit" Usage="transformPattern.Resize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">Nowa szerokość okna (w pikselach).</param>
        <param name="height">Nowa wysokość okna (w pikselach).</param>
        <summary>Zmienia rozmiar kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy wywoływana dla kontrolki obsługującej okienka podzielone, ta metoda może mieć efekt uboczny zmiany rozmiarów innych ciągłych okienek.  
  
 Nie można przenieść, zmienić rozmiaru ani obrócić obiektu, ponieważ jego lokalizacja ekranu będzie całkowicie poza współrzędnymi jego kontenera i niedostępnym dla klawiatury lub myszy. Na przykład gdy okno najwyższego poziomu jest przenoszone całkowicie poza ekranem lub obiekt podrzędny jest przenoszony poza granice okienka ekranu kontenera. W takich przypadkach obiekt jest umieszczany w pobliżu żądanych współrzędnych ekranu, a współrzędne górne lub lewe są zastępowane w granicach kontenera.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.TransformPattern> wzorzec kontrolki jest uzyskiwany <xref:System.Windows.Automation.AutomationElement> z i <xref:System.Windows.Automation.AutomationElement>następnie używany do zmiany rozmiaru.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#104)]
[!code-vb[UIATransformPattern_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize" /> Właściwość ma wartość false.</exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.TransformPattern.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="transformPattern.Rotate degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">Liczba stopni do obrócenia elementu. Liczba dodatnia obraca się w prawo; liczba ujemna obraca się w lewo.</param>
        <summary>Obraca formant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie można przenieść, zmienić rozmiaru ani obrócić obiektu, ponieważ jego lokalizacja ekranu będzie całkowicie poza współrzędnymi jego kontenera i niedostępnym dla klawiatury lub myszy. Na przykład gdy okno najwyższego poziomu jest przenoszone całkowicie poza ekranem lub obiekt podrzędny jest przenoszony poza granice okienka ekranu kontenera. W takich przypadkach obiekt jest umieszczany w pobliżu żądanych współrzędnych ekranu, a współrzędne górne lub lewe są zastępowane w granicach kontenera.  
  
   
  
## Examples  
 W poniższym przykładzie <xref:System.Windows.Automation.TransformPattern> wzorzec kontrolki jest uzyskiwany <xref:System.Windows.Automation.AutomationElement> z i <xref:System.Windows.Automation.AutomationElement>następnie używany do obracania.  
  
 [!code-csharp[UIATransformPattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#101)]
 [!code-vb[UIATransformPattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#101)]  
[!code-csharp[UIATransformPattern_snip#102](~/samples/snippets/csharp/VS_Snippets_Wpf/UIATransformPattern_snip/CSharp/UIATransformPattern_snippets.cs#102)]
[!code-vb[UIATransformPattern_snip#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIATransformPattern_snip/VisualBasic/UIATransformPattern_snippets.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate" /> Właściwość ma wartość false.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
