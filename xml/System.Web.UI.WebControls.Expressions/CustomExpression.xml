<Type Name="CustomExpression" FullName="System.Web.UI.WebControls.Expressions.CustomExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17db7e3d3d19a952255fe18e90834c8469a837ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30688103" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CustomExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.CustomExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Parameters")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia możliwość określenia niestandardowych zapytania LINQ, która jest wywoływana w odpowiedzi na zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.CustomExpression> Klasa jest używana z <xref:System.Web.UI.WebControls.QueryExtender> formantu. <xref:System.Web.UI.WebControls.QueryExtender> Sterowanie obsługuje różne opcje, które mogą być używane do filtrowania danych. <xref:System.Web.UI.WebControls.QueryExtender> Sterowanie obsługuje filtry, które pozwalają na wyszukiwanie ciągów, wartości z zakresu wyszukiwania porównania wartości właściwości w tabela, która ma określoną wartość i sortowanie danych. Te opcje są przekazywane jako wyrażenia LINQ w <xref:System.Web.UI.WebControls.QueryExtender> formantu. Można użyć tych wyrażeń filtrów lub zapewniają używaną w wyrażeniu niestandardowym <xref:System.Web.UI.WebControls.QueryExtender> formantu. <xref:System.Web.UI.WebControls.Expressions.CustomExpression> Klasa pozwala na określenie wyrażenia niestandardowego w aplikacji i wywołać go w obsłudze zdarzeń.  
  
> [!NOTE]
>  Możesz podać kwerendę niestandardowej, która jest wywoływana przez metodę zamiast przez program obsługi zdarzeń za pomocą <xref:System.Web.UI.WebControls.Expressions.MethodExpression> klasy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.UI.WebControls.Expressions.CustomExpression> obiektu, który jest używany przez <xref:System.Web.UI.WebControls.QueryExtender> formantu. Niestandardowe wyrażenie wywołania `FilterProducts` metodę, która zawiera niestandardowe wyrażenia LINQ. Wynik operacji filtrowania jest wyświetlany w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
  
  
 W poniższym przykładzie przedstawiono obsługi zdarzeń, który zawiera niestandardowe zapytania LINQ. Wyrażenie tabeli produktu w bazie danych AdventureWorks filtry i wyświetla produkty, które mają cennika większa niż lub równa 3,500.00 $.  
  
 [!code-csharp[QueryExtenderCustomFiltering#2](~/samples/snippets/csharp/VS_Snippets_WebNet/queryextendercustomfiltering/cs/queryextendercustomfiltering.cs#2)]
 [!code-vb[QueryExtenderCustomFiltering#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/queryextendercustomfiltering/vb/queryextendercustomfiltering.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.CustomExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Źródła danych <see cref="T:System.Linq.IQueryable" /> obiekt zastosowań.</param>
        <summary>Zapewnia dostęp do modyfikacji <see cref="T:System.Linq.IQueryable" /> obiektów, że używa źródła danych.</summary>
        <returns>Wystąpienie źródła danych zmodyfikowane.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Querying">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs&gt; Querying;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs&gt; Querying" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Expressions.CustomExpression.Querying" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Querying As EventHandler(Of CustomExpressionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::Expressions::CustomExpressionEventArgs ^&gt; ^ Querying;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Linq.IQueryable" /> ustawiono wartość źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.CustomExpression> Obiektu można określić niestandardowe wyrażenie w obsłudze zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>