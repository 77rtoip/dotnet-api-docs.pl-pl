<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e685f73380227e6219b245378bce97261ca727bd" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53333901" /></Metadata><TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia wyszukiwanie pól, lub wartości ciągu i porównaj je z określonej wartości ciągu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender> Kontroli umożliwia filtrowanie danych na stronie sieci Web za pomocą <xref:System.Web.UI.WebControls.Expressions.SearchExpression> klasy. <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Klasy porównuje określonego ciągu w pole lub pola wartość, przez użytkownika. Wyrażenie wykonuje "zaczyna się od", "contains" lub "kończy się na" wyszukiwania. Należy określić wartości dla <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> i <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> właściwości, aby wskazać typ wyszukiwania, które mają być wykonywane i pola danych, które chcesz przeszukać. Jeśli dostawcy LINQ, którego używasz w <xref:System.Web.UI.WebControls.QueryExtender> kontrolka obsługuje rozróżnianie wielkości liter, można użyć <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> właściwości, aby włączyć lub zignorować wielkość liter.  
  
 Wartość do wyszukiwania mogą być zapewniane przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] kontroli. Aby to określić, należy ustawić <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwość <xref:System.Web.UI.WebControls.ControlParameter> klasy w <xref:System.Web.UI.WebControls.Expressions.SearchExpression> obiektu identyfikator [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] kontroli. Na przykład, jeśli podano wartość do wyszukiwania w polu tekstowym <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwość musi być ustawiona na identyfikator formantu pola tekstowego. Możesz użyć <xref:System.Web.UI.WebControls.Expressions.SearchExpression> klasy w połączeniu z innymi wyrażeniami, <xref:System.Web.UI.WebControls.QueryExtender> obsługuje takie jak <xref:System.Web.UI.WebControls.Expressions.RangeExpression> filtru. Na przykład możesz wyszukać nazwy produktów, które zawierają ciąg "herbaty" i cenę listy w przedziale od 100 do 200.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak wyszukiwanie tabeli Produkty bazy danych AdventureWorks, produktów, których, które rozpoczyna się od ciągu, który jest określony w kolumnie Nazwa `SearchTextBox` kontroli. Wynik, który jest zwracany z <xref:System.Web.UI.WebControls.LinqDataSource> formant jest wyświetlany w <xref:System.Web.UI.WebControls.GridView> kontroli.  
  
 Ten przykład kodu jest częścią większego przykładu, który znajduje się w [instruktażu: Filtrowanie danych na stronie sieci Web za pomocą składni deklaratywnej](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic)</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Omówienie kontrolki serwera sieci Web QueryExtender</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ porównania ciągów do wykonania.</summary>
        <value>Typ porównania ciągów do wykonania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia użycie <xref:System.StringComparison> wyliczeniu, aby określić, jak wyszukiwanie jest wykonywane. <xref:System.StringComparison> Wyliczenia jest używany do określenia, czy porównania ciągu używa bieżącej kultury lub niezmiennej kultury, przy czym tego, czy tekst lub reguły porządkowe sortowania. Jeśli dostawca danych, <xref:System.Web.UI.WebControls.QueryExtender> używa obsługuje rozróżnianie wielkości liter, używasz jednej z właściwości Typ porównania do włączania lub zignorować wielkość liter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pojedynczego pola lub rozdzielaną przecinkami listę pól do przeszukiwania.</summary>
        <value>Pole lub pola wyszukiwania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Klasa wykonuje wyszukiwanie w jeden lub więcej pól danych w określonej tabeli. Pole danych co najmniej jeden musi być określona w <xref:System.Web.UI.WebControls.Expressions.SearchExpression> wystąpienia. Jeśli określisz więcej niż jedno pole danych, należy rozdzielić pola za pomocą przecinka.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak do wyszukania nazwy i pola danych ProductNumber w tabeli Produkty bazy danych AdventureWorks, produktów, których nazwa rozpoczyna się od określonego ciągu. Ten przykład kodu jest częścią większego przykładu przewidzianego w [instruktażu: Filtrowanie danych na stronie sieci Web za pomocą składni deklaratywnej](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt do użycia.</param>
        <summary>Stosuje <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> obiektu do określonego <see cref="T:System.Linq.IQueryable" /> na podstawie obiektu <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> obiektu.</summary>
        <returns>Wystąpienie <see cref="T:System.Linq.IQueryable" /> obiekt <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> została zastosowana do.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ocenia kolekcję parametrów, które są używane w <xref:System.Web.UI.WebControls.Expressions.SearchExpression> obiektu i stosuje wyrażenie które ma <xref:System.Linq.IQueryable> obiektu. Jeśli określono wiele pól danych `AND` operator jest stosowany do pola danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> wartość, która określa, gdzie w ciąg wyszukiwania występuje.</summary>
        <value>Typ wyszukiwania do wykonania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.SearchType> Używa właściwości <xref:System.Web.UI.WebControls.Expressions.SearchType> wyliczenie, które zawiera typy wyszukiwania do użycia w wystąpieniu <xref:System.Web.UI.WebControls.Expressions.SearchExpression> klasy.  
  
 Poniższa tabela zawiera listę możliwych wartości wyliczania.  
  
|Wyliczenie|Opis|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|Wskazuje, która rozpoczyna się w dowolnym miejscu w polu wyszukiwania.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|Wskazuje wyszukiwania, który rozpoczyna się od początku pola.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|Wskazuje wyszukiwania, na końcu pola.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>