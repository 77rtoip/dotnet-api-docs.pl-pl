<Type Name="SearchExpression" FullName="System.Web.UI.WebControls.Expressions.SearchExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78b7af51247d62f3709dc8e326c043bb0b6d5cee" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402096" /></Metadata><TypeSignature Language="C#" Value="public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.SearchExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type SearchExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia przeszukiwanie pola lub pól dla wartości ciągów i porównanie ich z określoną wartością ciągu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrolka umożliwia filtrowanie danych na stronie sieci Web przy <xref:System.Web.UI.WebControls.Expressions.SearchExpression> użyciu klasy. <xref:System.Web.UI.WebControls.QueryExtender> <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Klasa porównuje określony ciąg w polu lub polach z podaną wartością. Wyrażenie wykonuje operację "zaczyna się od", "zawiera" lub "kończyć się ciągiem" Search. Należy określić wartości <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> właściwości i, <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> aby wskazać typ wyszukiwania, które ma zostać wykonane, oraz pola danych, które mają być wyszukiwane. Jeśli dostawca LINQ używany w <xref:System.Web.UI.WebControls.QueryExtender> formancie obsługuje uwzględnianie wielkości liter, można <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> użyć właściwości, aby włączyć lub zignorować wielkość liter.  
  
 Wartość do wyszukania może być określona przez [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] formant. Aby to określić, należy <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> ustawić właściwość <xref:System.Web.UI.WebControls.ControlParameter> klasy w <xref:System.Web.UI.WebControls.Expressions.SearchExpression> obiekcie na identyfikator [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] kontrolki. Na przykład, jeśli wartość do wyszukania zostanie wprowadzona w polu tekstowym, <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> właściwość musi być ustawiona na identyfikator kontrolki pola tekstowego. <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Klasy można użyć w połączeniu z innymi wyrażeniami <xref:System.Web.UI.WebControls.QueryExtender> <xref:System.Web.UI.WebControls.Expressions.RangeExpression> obsługiwanymi, takimi jak filtr. Można na przykład wyszukać nazwy produktów, które zawierają ciąg "herbata", oraz cenę listy z zakresu od 100 do 200.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przeszukać kolumnę Name w tabeli Products bazy danych AdventureWorks dla produktów, których rozpoczyna się od ciągu określonego w `SearchTextBox` formancie. Wynik zwrócony z <xref:System.Web.UI.WebControls.LinqDataSource> formantu jest wyświetlany <xref:System.Web.UI.WebControls.GridView> w kontrolce.  
  
 Ten przykład kodu jest częścią większego przykładu, który jest dostępny [w instruktażu: Filtrowanie danych na stronie sieci Web przy użyciu składni](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)deklaracyjnej.  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">Właściwość jest <see langword="null" /> (<see langword="Nothing" />wVisualBasic) <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /></exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">QueryExtender — informacje o formancie serwera sieci Web</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SearchExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SearchExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComparisonType">
      <MemberSignature Language="C#" Value="public StringComparison ComparisonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.StringComparison ComparisonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberSignature Language="VB.NET" Value="Public Property ComparisonType As StringComparison" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property StringComparison ComparisonType { StringComparison get(); void set(StringComparison value); };" />
      <MemberSignature Language="F#" Value="member this.ComparisonType : StringComparison with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.StringComparison</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ porównania ciągów do wykonania.</summary>
        <value>Typ porównania ciągów do wykonania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość umożliwia określenie sposobu wykonywania wyszukiwania <xref:System.StringComparison> przy użyciu wyliczenia. <xref:System.StringComparison> Wyliczenie służy do określenia, czy porównanie ciągów używa bieżącej kultury, czy niezmiennej kultury, oraz czy używa reguł sortowania tekstu lub liczby porządkowej. Jeśli dostawca danych, którego <xref:System.Web.UI.WebControls.QueryExtender> używa, obsługuje uwzględnianie wielkości liter, można użyć jednej z właściwości typu porównania, aby włączyć lub zignorować czułość wielkości liter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DataFields">
      <MemberSignature Language="C#" Value="public string DataFields { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFields As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFields { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFields : string with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pojedyncze pole lub listę pól, które mają być wyszukiwane.</summary>
        <value>Pole lub pola do wyszukania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.SearchExpression> Klasa wykonuje wyszukiwanie w co najmniej jednym polu danych w określonej tabeli. W <xref:System.Web.UI.WebControls.Expressions.SearchExpression> wystąpieniu musi być określone co najmniej jedno pole danych. W przypadku określenia więcej niż jednego pola danych należy oddzielić pola przy użyciu przecinka.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak przeszukać nazwę i pola danych ProductNumber w tabeli Products bazy danych AdventureWorks dla produktów o nazwach rozpoczynających się od określonego ciągu. Ten przykład kodu jest częścią większego przykładu dostępnego [w przewodniku: Filtrowanie danych na stronie sieci Web przy użyciu składni](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)deklaracyjnej.  
  
```  
<asp:SearchExpression SearchType="StartsWith"   
      DataFields="Name","ProductNumber" >  
  <asp:ControlParameter ControlID="SearchTextBox" />  
</asp:SearchExpression>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="searchExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Obiekt, który ma być używany.</param>
        <summary>Stosuje obiekt do określonego <see cref="T:System.Linq.IQueryable" /> obiektu na podstawie <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> obiektu. <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /></summary>
        <returns>Wystąpienie <see cref="T:System.Linq.IQueryable" /> obiektu<see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> , do którego został zastosowany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość szacuje kolekcję parametrów, które są używane w <xref:System.Web.UI.WebControls.Expressions.SearchExpression> obiekcie i stosuje wyrażenie <xref:System.Linq.IQueryable> do obiektu. Jeśli określono wiele pól danych, `AND` operator jest stosowany do pól danych.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> Właściwość jest<see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SearchType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.SearchType SearchType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchType As SearchType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::SearchType SearchType { System::Web::UI::WebControls::Expressions::SearchType get(); void set(System::Web::UI::WebControls::Expressions::SearchType value); };" />
      <MemberSignature Language="F#" Value="member this.SearchType : System.Web.UI.WebControls.Expressions.SearchType with get, set" Usage="System.Web.UI.WebControls.Expressions.SearchExpression.SearchType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.SearchType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> wartość określającą miejsce w ciągu, w którym odbywa się wyszukiwanie.</summary>
        <value>Typ wyszukiwania do wykonania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość używa wyliczenia, które zawiera typy wyszukiwania do użycia <xref:System.Web.UI.WebControls.Expressions.SearchExpression> w wystąpieniu klasy. <xref:System.Web.UI.WebControls.Expressions.SearchType> <xref:System.Web.UI.WebControls.Expressions.SearchType>  
  
 Poniższa tabela zawiera listę możliwych wartości wyliczania.  
  
|Wyliczenie|Opis|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.StartsWith>|Wskazuje wyszukiwanie, które jest uruchamiane w dowolnym miejscu pola.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.Contains>|Wskazuje wyszukiwanie, które rozpoczyna się na początku pola.|  
|<xref:System.Web.UI.WebControls.Expressions.SearchType.EndsWith>|Wskazuje wyszukiwanie, które na końcu pola.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
