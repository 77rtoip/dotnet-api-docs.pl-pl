<Type Name="PropertyExpression" FullName="System.Web.UI.WebControls.Expressions.PropertyExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="738d3342e9113481195e9244788a88f7010d41df" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585486" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.PropertyExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type PropertyExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0d9be-101">Umożliwia tworzenie <see langword="Where" /> klauzuli z parametrów w <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> kolekcji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d9be-101">Provides a way to create a <see langword="Where" /> clause from parameters in a <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9be-102"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Klasa jest używana z <xref:System.Web.UI.WebControls.QueryExtender> formantu, aby filtrować dane w polach danych.</span><span class="sxs-lookup"><span data-stu-id="0d9be-102">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control to filter data in data fields.</span></span> <span data-ttu-id="0d9be-103"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Klasy porównuje wartości właściwości do określonej kolumny.</span><span class="sxs-lookup"><span data-stu-id="0d9be-103">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class compares a property value of a column to a specified value.</span></span> <span data-ttu-id="0d9be-104">Na przykład można porównać wartość logiczną na wartość w kolumnie wycofane tabeli Produkty, w bazie danych.</span><span class="sxs-lookup"><span data-stu-id="0d9be-104">For example, you can compare a Boolean value to the value in the discontinued column of a Products table in a database.</span></span>  
  
 <span data-ttu-id="0d9be-105"><xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Klasy tworzy porównania równości (==) wartość każdego parametru i z odpowiednią właściwością <xref:System.Linq.IQueryable> obiektu danych.</span><span class="sxs-lookup"><span data-stu-id="0d9be-105">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class creates an equals (==) comparison for the value of each parameter and the corresponding property of the <xref:System.Linq.IQueryable> data object.</span></span> <span data-ttu-id="0d9be-106">Jeśli podasz więcej niż jeden parametr parametry są łączone za pomocą logicznym `AND` operatora.</span><span class="sxs-lookup"><span data-stu-id="0d9be-106">If you provide more than one parameter, the parameters are combined using the logical `AND` operator.</span></span> <span data-ttu-id="0d9be-107">Parametry, które zawiera puste wartości nie są dodawane do `Where` klauzuli.</span><span class="sxs-lookup"><span data-stu-id="0d9be-107">Parameters that contain an empty value are not added to the `Where` clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d9be-108">Poniższy przykład przedstawia sposób wyszukiwania tabeli Produkty AdventureWorks bazy danych dla produktów którego `MakeFlag` ma ustawioną właściwość (wartość logiczna kolumny) `true`.</span><span class="sxs-lookup"><span data-stu-id="0d9be-108">The following example shows how to search the Products table of the AdventureWorks database for products whose `MakeFlag` property (a Boolean column) is set to `true`.</span></span> <span data-ttu-id="0d9be-109">Parametr wartość logiczna ma wartość w pole wyboru.</span><span class="sxs-lookup"><span data-stu-id="0d9be-109">The Boolean value parameter is set in a check box.</span></span> <span data-ttu-id="0d9be-110">Wynik kwerendy, która jest zwracana z <xref:System.Web.UI.WebControls.LinqDataSource> formant jest wyświetlany w <xref:System.Web.UI.WebControls.GridView> formantu.</span><span class="sxs-lookup"><span data-stu-id="0d9be-110">The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="0d9be-111">Ten przykładowy kod jest częścią większego przykładu znajduje się w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).</span><span class="sxs-lookup"><span data-stu-id="0d9be-111">This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0d9be-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d9be-112">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="propertyExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="0d9be-113">Obiekt do użycia dla zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d9be-113">The object to use for the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0d9be-114">Stosuje <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> obiektu przy użyciu określonego <see cref="T:System.Linq.IQueryable" /> obiektu źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d9be-114">Applies a <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> object by using the specified <see cref="T:System.Linq.IQueryable" /> data source object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0d9be-115">Wystąpienia obiektu, który zostały zastosowane wyrażeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d9be-115">An instance of the object that the expressions were applied to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d9be-116">Ta metoda łączy określonego <xref:System.Linq.IQueryable> obiektu z wyrażeń w <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> kolekcji przy użyciu logicznym `AND` operatora.</span><span class="sxs-lookup"><span data-stu-id="0d9be-116">This method combines the specified <xref:System.Linq.IQueryable> object with the expressions in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection by using the logical `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>