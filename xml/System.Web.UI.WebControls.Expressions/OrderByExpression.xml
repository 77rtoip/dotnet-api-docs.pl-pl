<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e19ed0b09564e1291919b59b5ca82c7a36e08e48" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386154" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia zastosowanie wyrażenie sortowania do <see cref="T:System.Linq.IQueryable" /> obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Klasa jest używana w <xref:System.Web.UI.WebControls.QueryExtender> formantu, aby posortować dane w kolejności rosnącej lub malejącej. Sortowanie jest wykonywane przez domyślna funkcja porównująca dla typu elementu.  
  
 <xref:System.Web.UI.WebControls.QueryExtender> Sterowanie obsługuje różne opcje, które mogą być używane do filtrowania danych. Po użyciu opcji filtru, można użyć <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> obiekt, aby posortować dane.  
  
 Określ w polu danych, aby posortować przy użyciu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> właściwości. Określ kierunek sortowania za pomocą <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> właściwości. Po <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> zastosowano obiekt ze źródłem danych, możesz użyć <xref:System.Web.UI.WebControls.Expressions.ThenBy> wyrażenia do wykonania kolejnych sortowania według innego pola danych.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób wyszukiwania tabeli Produkty bazy danych AdventureWorks produktów, których nazwa rozpoczyna się od ciągu, który jest określony w `SearchTextBox` pola tekstowego. <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Obiektu sortuje dane według pola danych ListPrice w kolejności malejącej, a następnie w polu Identyfikatora produktu w kolejności rosnącej. Wynik kwerendy, która jest zwracana z <xref:System.Web.UI.WebControls.LinqDataSource> formant jest wyświetlany w <xref:System.Web.UI.WebControls.GridView> formantu.  
  
 Ten przykładowy kod jest częścią większego przykładu znajduje się w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">
      <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> Jest właściwość <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość <see cref="T:System.Linq.IQueryable" /> obiektu, aby posortować według.</summary>
        <value>Właściwość <see cref="T:System.Linq.IQueryable" /> obiektu źródła danych, aby posortować według.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Obiektu sortuje dane w polu danych. Operacja sortowania kolejnych można wykonać na innego pola danych przy użyciu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak sortować dane według pola ListPrice w kolejności malejącej, a następnie w polu Identyfikatora produktu w kolejności rosnącej. Ten przykładowy kod jest częścią większego przykładu znajduje się w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia kierunek sortowania <see cref="T:System.Linq.IQueryable" /> obiektu źródła danych.</summary>
        <value>Kierunek sortowania obiektu źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Klasa jest używana w <xref:System.Web.UI.WebControls.QueryExtender> formantu, aby posortować dane w kolejności rosnącej lub malejącej. Kierunek operacja sortowania jest określana za pomocą <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak sortować dane według pola ListPrice w kolejności malejącej, a następnie według pola ProductID w kolejności rosnącej. Ten przykładowy kod jest częścią większego przykładu udostępnionego w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Określa źródło danych, aby zastosować sortowania.</param>
        <summary>Stosuje wyrażenie sortowania do <see cref="T:System.Linq.IQueryable" /> na podstawie obiektu <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> wartość i <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" /> wartość.</summary>
        <returns>Wystąpienie źródła danych, które zostało zastosowane wyrażenie.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolekcję <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> wyrażenia po <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> wartość jest stosowana do źródła danych.</summary>
        <value>Kolekcja <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> wyrażenia po <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> jest stosowany do źródła danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po sortowania jest wykonywane przy użyciu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> w <xref:System.Web.UI.WebControls.QueryExtender> kontrolować sortowania kolejne operacje mogą być wykonywane przy użyciu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> właściwości.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób sortować dane według pola ListPrice w kolejności malejącej, a następnie w polu Identyfikatora produktu w rosnącej kolejności przy użyciu <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>. Ten przykładowy kod jest częścią większego przykładu znajduje się w [wskazówki: filtrowanie danych w strony sieci Web za pomocą składni deklaratywnej](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>