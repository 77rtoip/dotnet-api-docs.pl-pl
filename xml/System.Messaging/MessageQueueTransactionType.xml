<Type Name="MessageQueueTransactionType" FullName="System.Messaging.MessageQueueTransactionType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e2506dfd9e2c4bd29de0eb0af3200d181b7d7d5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30457302" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MessageQueueTransactionType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed MessageQueueTransactionType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueTransactionType" />
  <TypeSignature Language="VB.NET" Value="Public Enum MessageQueueTransactionType" />
  <TypeSignature Language="C++ CLI" Value="public enum class MessageQueueTransactionType" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa typ transakcję usługi kolejkowania komunikatów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas odczytu lub zapisu wiadomości przy użyciu przeciążenia <xref:System.Messaging.MessageQueue> klasy <xref:System.Messaging.MessageQueue.Send%2A> lub <xref:System.Messaging.MessageQueue.Receive%2A> metod (w tym <xref:System.Messaging.MessageQueue.ReceiveById%2A> i <xref:System.Messaging.MessageQueue.ReceiveByCorrelationId%2A>) pobierającej `transactionType` parametru, można określić, jak użytkownik pracuje z kolejki. `Automatic` Umożliwia wysyłanie i odbieranie przez transakcje zewnętrzne (na przykład gdy użytkownik korzysta z aplikacji bazy danych), podczas gdy `Single` jest używany dla pojedynczego wewnętrznej transakcji usługi kolejkowania komunikatów.  
  
 `None` pozwala na komunikat o błędzie z kolejką transakcyjną poza transakcją lub wysyłać wiadomości transakcyjne do kolejki nietransakcyjnej. Jest to przydatne, na przykład w routingu komunikaty wysyłane w ramach jednej transakcji.  
  
 Jeśli chcesz wysyłać ani odbierać wiadomości przy użyciu wewnętrzną transakcję usługi kolejkowania komunikatów, ale nie pojedynczy wewnętrzną transakcję, Utwórz wystąpienie <xref:System.Messaging.MessageQueueTransaction> klasy, a następnie przekaż go do przeciążenia <xref:System.Messaging.MessageQueue.Send%2A> lub <xref:System.Messaging.MessageQueue.Receive%2A> metody, która przyjmuje `transaction` parametru a nie przyjmuje `transactionType` parametru.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Messaging.MessageQueue.Send(System.Object)" />
    <altmember cref="M:System.Messaging.MessageQueue.Receive" />
    <altmember cref="T:System.Messaging.MessageQueueTransaction" />
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Automatic = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Typ transakcji Microsoft Transaction Server (MTS) lub usług COM + 1.0. Jeśli istnieje już Kontekst MTS transaction, będzie używany przy wysyłaniu lub odbieraniu wiadomości.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Operacja nie zostanie transakcyjnych.</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Messaging.MessageQueueTransactionType Single = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Messaging.MessageQueueTransactionType.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.MessageQueueTransactionType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Typ transakcji używany dla jednej transakcji wewnętrznej.</summary>
      </Docs>
    </Member>
  </Members>
</Type>