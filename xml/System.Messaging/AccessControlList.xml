<Type Name="AccessControlList" FullName="System.Messaging.AccessControlList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="21f7df4741ced5c287c40a0a357d64bb0afa552e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36553711" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AccessControlList : System.Collections.CollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccessControlList extends System.Collections.CollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.AccessControlList" />
  <TypeSignature Language="VB.NET" Value="Public Class AccessControlList&#xA;Inherits CollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class AccessControlList : System::Collections::CollectionBase" />
  <TypeSignature Language="F#" Value="type AccessControlList = class&#xA;    inherit CollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.CollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera listę wpisów kontroli dostępu, określając praw dostępu dla jednego lub więcej stron zaufanych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Messaging.AccessControlList> klasy, aby określić wiele stron zaufanych, a prawa do dodawania przy użyciu jednego wywołania podczas ustawiania uprawnień dostępu. Listy kontroli dostępu należy utworzyć przez dodanie wpisu kontroli dostępu dla każdego zarządca i kombinacji praw dostępu.  
  
 A <xref:System.Messaging.AccessControlList> identyfikuje stron zaufanych, które ma być dozwolony lub odmówiono dostępu do obiektu zabezpieczanego. Gdy proces podejmie próbę uzyskania dostępu do obiektu zabezpieczanego, system sprawdza wpisów kontroli dostępu w obiektu listy kontroli dostępu do określenia, czy udzielić dostępu do niego. Jeśli obiekt nie ma listy kontroli dostępu, system daje pełny dostęp do wszystkich składników. Jeśli lista kontroli dostępu do obiektu nie ma żadnych wpisów, systemu nie zezwala na wszystkie próby dostępu do tego obiektu.  
  
 System sprawdza wpisów kontroli dostępu w sekwencji, aż do odnalezienia co najmniej jednego, umożliwiająca wszystkie prawa dostępu do żądanego lub żadnych praw dostępu do żądanego odmowa dostępu.  
  
 System sprawdza, czy każdy <xref:System.Messaging.AccessControlEntry> w sekwencji, dopóki nie wystąpi jedno z następujących zdarzeń:  
  
-   Odmowa dostępu <xref:System.Messaging.AccessControlEntry> wyraźnie zabrania żadnych praw żądany dostęp do jednej z stron zaufanych, wymienione w wątku tokenu dostępu.  
  
-   Co najmniej jeden dostępu dozwolone <xref:System.Messaging.AccessControlEntry> elementów dla stron zaufanych, jawnie wymieniony w tokenie dostępu wątku przyznać prawa dostępu do żądanej.  
  
-   Wszystkie <xref:System.Messaging.AccessControlEntry> elementy zostały sprawdzone i jest nadal co najmniej jeden żądanego prawo dostępu, który nie został jawnie zezwolił, w takim przypadku niejawnie odmowa dostępu.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.AccessControlEntry" />
    <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccessControlList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AccessControlList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.AccessControlList" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.Add entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> do dołączenia do końca listy kontroli dostępu.</param>
        <summary>Dołącza wpisu kontroli dostępu do listy kontroli dostępu.</summary>
        <returns>Pozycja, do którego dodano nowego wpisu kontroli dostępu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entry" /> Parametr jest <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entry As AccessControlEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Messaging.AccessControlEntry -&gt; bool" Usage="accessControlList.Contains entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> Można znaleźć na liście kontroli dostępu.</param>
        <summary>Określa, czy listy kontroli dostępu zawiera określonego wpisu kontroli dostępu.</summary>
        <returns>
          <see langword="true" /> w przypadku znalezienia wpisu kontroli dostępu w liście kontroli dostępu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Messaging.AccessControlEntry[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Messaging.AccessControlEntry[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.CopyTo(System.Messaging.AccessControlEntry[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As AccessControlEntry(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Messaging::AccessControlEntry ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Messaging.AccessControlEntry[] * int -&gt; unit" Usage="accessControlList.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Messaging.AccessControlEntry[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Tablica typu <see cref="T:System.Messaging.AccessControlEntry" /> , do którego zostaną skopiowane pozycji listy kontroli dostępu. Tablica musi mieć indeksowane zaczynające od zera.</param>
        <param name="index">Indeks w tablicy, od którego należy zacząć Kopiowanie wpisów listy kontroli dostępu.</param>
        <summary>Kopie listy kontroli dostępu w całej z tablicą jednowymiarową zgodne dostępu kontrolować wpisów, zaczynając od określonego indeksu tablicy docelowej.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="array" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametru jest mniejszy od zera.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="index" /> Parametr jest większa niż lub równa długości <paramref name="array" /> parametru.  - lub - liczba elementów na liście kontroli dostępu do źródła jest większa niż dostępne miejsce od <paramref name="index" /> do końca tablicy docelowej wpisów kontroli dostępu.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="T:System.Messaging.AccessControlEntry" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.IndexOf(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (entry As AccessControlEntry) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Messaging.AccessControlEntry -&gt; int" Usage="accessControlList.IndexOf entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> Można znaleźć na liście kontroli dostępu.</param>
        <summary>Określa indeks określonego wpisu kontroli dostępu na liście kontroli dostępu.</summary>
        <returns>Indeks wpisu, jeśli został odnaleziony na liście; w przeciwnym razie wartość -1</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Messaging.AccessControlList.Contains(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Insert (index, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="index">Liczony od zera indeks, w którym powinien zostać wstawiony wpisu kontroli dostępu.</param>
        <param name="entry">A <see cref="T:System.Messaging.AccessControlEntry" /> do wstawienia do listy kontroli dostępu.</param>
        <summary>Wstawia wpisu kontroli dostępu do listy kontroli dostępu w określonej pozycji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `index` parametru jest równa liczbie elementów na liście kontroli dostępu, a następnie wpis jest dołączany na końcu. W przeciwnym razie wpisy od punktu wstawiania Przenieś w dół pomieścić nowy element na liście.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> Parametr nie jest prawidłowym indeksem w tej listy kontroli dostępu.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entry" /> Parametr jest <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Messaging.AccessControlEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Messaging.AccessControlEntry entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.AccessControlList.Remove(System.Messaging.AccessControlEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (entry As AccessControlEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Messaging::AccessControlEntry ^ entry);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Messaging.AccessControlEntry -&gt; unit" Usage="accessControlList.Remove entry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Messaging.AccessControlEntry" />
      </Parameters>
      <Docs>
        <param name="entry">
          <see cref="T:System.Messaging.AccessControlEntry" /> Można usunąć z listy kontroli dostępu.</param>
        <summary>Usuwa pierwsze wystąpienie określonego wpisu kontroli dostępu z listy kontroli dostępu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpisy kontroli dostępu, które należy wykonać usunięty element Przenieś w górę zajmować vacated miejscu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entry" /> Parametr jest <see langword="null" />.</exception>
        <altmember cref="M:System.Messaging.AccessControlList.Add(System.Messaging.AccessControlEntry)" />
        <altmember cref="M:System.Messaging.AccessControlList.Insert(System.Int32,System.Messaging.AccessControlEntry)" />
      </Docs>
    </Member>
  </Members>
</Type>