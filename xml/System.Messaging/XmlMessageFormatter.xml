<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcf03214bd0e54119fc99b044459a67f8df68556" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68396451" /></Metadata><TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="99e15-101">Serializować i deserializacji obiektów do lub z treści wiadomości przy użyciu formatu XML na podstawie definicji schematu XSD.</span><span class="sxs-lookup"><span data-stu-id="99e15-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-102">Jest to domyślny program formatujący, którego <xref:System.Messaging.MessageQueue> wystąpienie używa do serializacji wiadomości zapisanych do kolejki. <xref:System.Messaging.XmlMessageFormatter></span><span class="sxs-lookup"><span data-stu-id="99e15-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="99e15-103">Po utworzeniu wystąpienia programu <xref:System.Messaging.MessageQueue> <xref:System.Messaging.XmlMessageFormatter> wystąpienie jest tworzone dla <xref:System.Messaging.MessageQueue>Ciebie i skojarzone z.</span><span class="sxs-lookup"><span data-stu-id="99e15-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="99e15-104">Możesz określić inny program formatujący, tworząc go w kodzie i przypisując go do <xref:System.Messaging.MessageQueue.Formatter%2A> właściwości. <xref:System.Messaging.MessageQueue></span><span class="sxs-lookup"><span data-stu-id="99e15-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="99e15-105">Domyślnego <xref:System.Messaging.XmlMessageFormatter> wystąpienia kolejki można użyć do zapisu w kolejce, ale nie można go użyć do odczytu z kolejki do momentu ustawienia <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości lub <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> w programie formatującego.</span><span class="sxs-lookup"><span data-stu-id="99e15-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="99e15-106">Można ustawić jedną lub obie te wartości w domyślnym wystąpieniu programu formatującego lub utworzyć nowe wystąpienie programu formatującego i ustawić wartości automatycznie przez przekazanie ich jako argumentów do odpowiedniego <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="99e15-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="99e15-107">Kiedy określasz <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, zamiast, typ istnienia jest sprawdzany w czasie kompilacji zamiast czasu odczytu, zmniejszenie możliwości błędu.</span><span class="sxs-lookup"><span data-stu-id="99e15-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="99e15-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>wymaga, aby każdy wpis był w pełni kwalifikowany, określając jego nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="99e15-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="99e15-109">Ponadto w przypadku pracy z wieloma współbieżnymi wersjami numer wersji również musi być dołączony do nazwy typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="99e15-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="99e15-110">Właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-111">Dzięki temu program formatujący interpretuje treść wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="99e15-112">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-113">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-114">Podczas odczytywania z kolejki należy ustawić tylko jedną z tych właściwości, ale można ustawić oba typy.</span><span class="sxs-lookup"><span data-stu-id="99e15-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="99e15-115">Zestaw typów jest zestawem połączonym z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="99e15-116">Decyzja o tym, która właściwość powinna zostać użyta, jest specyficzna dla Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="99e15-117">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla jednej z tych właściwości, zostanie zgłoszony wyjątek podczas odczytywania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="99e15-118"><xref:System.Messaging.XmlMessageFormatter> Jest kluczowym składnikiem luźno sprzężonych komunikatów opartych na języku XML.</span><span class="sxs-lookup"><span data-stu-id="99e15-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="99e15-119">Narzędzie XSD. exe używa formatu XML do generowania schematu XML, na przykład podczas korzystania z narzędzia do serializacji klasy używanej przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="99e15-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="99e15-120">Klasa musi mieć konstruktora bez parametrów.</span><span class="sxs-lookup"><span data-stu-id="99e15-120">The class must have a parameterless constructor.</span></span>  
  
 <span data-ttu-id="99e15-121">Ten format jest używany ponownie w procesie wycofywania, gdy narzędzie generuje klasę na podstawie dystrybuowanego schematu, aby opisać dane klasy.</span><span class="sxs-lookup"><span data-stu-id="99e15-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="99e15-122">Użycie narzędzia i schematu XML, który generuje, umożliwia uniknięcie redystrybucji plików DLL przy każdym ponownym skompilowaniu klasy po zmianie implementacji klasy.</span><span class="sxs-lookup"><span data-stu-id="99e15-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="99e15-123">Dopóki schemat nie ulegnie zmianie na kliencie lub serwerze, inne zmiany po obu stronach nie wpływają na inne.</span><span class="sxs-lookup"><span data-stu-id="99e15-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99e15-124">Poniższy przykład kodu zawiera trzy fragmenty kodu: składnik serwera, klasy zamówienia i kod klienta.</span><span class="sxs-lookup"><span data-stu-id="99e15-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="99e15-125">Klasa Order może być używana przez narzędzie XSD. exe do generowania schematu rozpoznawanego przez serwer w wiadomościach przychodzących.</span><span class="sxs-lookup"><span data-stu-id="99e15-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="99e15-126">Schemat jest plikiem w formacie XML, który opisuje "kształt" klasy.</span><span class="sxs-lookup"><span data-stu-id="99e15-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="99e15-127">Tego schematu można następnie użyć po stronie klienta do wygenerowania klasy kolejności specyficznej dla klienta, która współużytkuje ten sam schemat, co Klasa serwera.</span><span class="sxs-lookup"><span data-stu-id="99e15-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="99e15-128">Poniższy przykład kodu reprezentuje składnik serwera, który odbiera zamówienia za pomocą kolejki komunikatów.</span><span class="sxs-lookup"><span data-stu-id="99e15-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="99e15-129">Treść wiadomości powinna być obiektem Order, którego schemat pasuje do klasy Order.cs poniżej.</span><span class="sxs-lookup"><span data-stu-id="99e15-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="99e15-130">Proces serwera lub aplikacja deserializacji zamówienie.</span><span class="sxs-lookup"><span data-stu-id="99e15-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="99e15-131">Poniższy przykład kodu reprezentuje klasę Order, która udostępnia schemat dla obiektów Order, które aplikacja na serwerze odbiera i deserializacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="99e15-132">Wszystkie aplikacje klienckie, które współdziałają z aplikacją na serwerze programu, muszą wysyłać komunikaty do serwera przez Serializowanie informacji we zdefiniowanej lokalnie klasie Order w treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="99e15-133">Klasa kolejności zdefiniowana lokalnie musi mieć ten sam schemat jak Klasa kolejności zdefiniowana przez serwer, w której aplikacja na serwerze podejmie próbę deserializacji treści komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="99e15-134">Narzędzie XSD. exe umożliwia menedżerowi aplikacji na serwerze tworzenie i dystrybuowanie schematu, którego klient musi użyć do serializacji komunikatów wysyłanych do serwera.</span><span class="sxs-lookup"><span data-stu-id="99e15-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="99e15-135">Gdy Menedżer aplikacji klienckiej odbierze schemat klasy Order, narzędzie XSD. exe jest używane ponownie w celu wygenerowania klasy kolejności specyficznej dla klienta ze schematu.</span><span class="sxs-lookup"><span data-stu-id="99e15-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="99e15-136">Jest to Klasa, która jest używana w poniższym przykładzie kodu klienta, a nie Klasa kolejności serwera (Narzędzie XSD. exe powoduje, że Klasa wygenerowana przez schemat ma taką samą nazwę jak oryginalna Klasa).</span><span class="sxs-lookup"><span data-stu-id="99e15-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="99e15-137">Ta nowa klasa Order służy do serializacji kolejności w treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="99e15-138">Poniższy przykład kodu jest przetwarzaniem po stronie klienta używanym do serializacji zamówienia i wysyłania informacji skojarzonych z kolejnością do kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="99e15-139">Kod kojarzy element, ilość i informacje o adresie z elementami schematu, które zostały wygenerowane dla klasy Order.cs przez narzędzie XSD. exe.</span><span class="sxs-lookup"><span data-stu-id="99e15-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="99e15-140">Zamówienie jest wysyłane do kolejki Orders na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="99e15-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="99e15-141">Po wygenerowaniu schematu z klasy Order na serwerze można zmodyfikować klasę.</span><span class="sxs-lookup"><span data-stu-id="99e15-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="99e15-142">Dopóki schemat nie ulegnie zmianie, nie trzeba ponownie rozpowszechniać schematu.</span><span class="sxs-lookup"><span data-stu-id="99e15-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="99e15-143">Po przeprowadzeniu dystrybucji schematu i wygenerowaniu klasy kolejności po stronie klienta Ta klasa klienta może być również modyfikowana niezależnie od klasy kolejności serwera, o ile sam schemat nie jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="99e15-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="99e15-144">Dwie klasy stają się luźno sprzężone.</span><span class="sxs-lookup"><span data-stu-id="99e15-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99e15-145">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="99e15-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e15-146">Inicjuje nowe wystąpienie <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy, bez ustawionego typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="99e15-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-147">To przeciążenie konstruktora jest najczęściej używane podczas zapisywania do kolejki, ponieważ typy docelowe nie są wymagane podczas pisania.</span><span class="sxs-lookup"><span data-stu-id="99e15-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="99e15-148">Aby odczytać komunikat z kolejki przy użyciu wystąpienia <xref:System.Messaging.XmlMessageFormatter> utworzonego za pomocą tego konstruktora, należy <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> ustawić właściwości lub <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> , aby program formatujący wie, jakie typy próbują deserializować.</span><span class="sxs-lookup"><span data-stu-id="99e15-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="99e15-149">Podczas tworzenia nowego <xref:System.Messaging.MessageQueue>wystąpienia zostanie utworzone wystąpienie domyślne <xref:System.Messaging.XmlMessageFormatter> bez ustawionego typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="99e15-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="99e15-150">Podobnie jak w przypadku programu formatującego utworzonego za pomocą tego konstruktora, należy ustawić typy docelowe dla tego wystąpienia programu formatującego, jeśli chcesz odczytywać z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames"><span data-ttu-id="99e15-151">Tablica typu <see cref="T:System.String" /> , która określa zestaw możliwych typów, które zostaną rozszeregowane przez program formatujący z podanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span> <span data-ttu-id="99e15-152">Te wartości muszą być w pełni kwalifikowane, na przykład "Moja przestrzeń nazw. weborders, MyOrdersAssemblyName".</span><span class="sxs-lookup"><span data-stu-id="99e15-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span></span></param>
        <summary><span data-ttu-id="99e15-153">Inicjuje nowe wystąpienie <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy, ustawiając typy docelowe przenoszone jako tablica wartości ciągu (w pełni kwalifikowanych).</span><span class="sxs-lookup"><span data-stu-id="99e15-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-154">Konstruktory z parametrami typu docelowego są najczęściej używane podczas odczytywania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="99e15-155">Podczas pisania nie trzeba określać typów docelowych.</span><span class="sxs-lookup"><span data-stu-id="99e15-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="99e15-156">To Przeciążenie <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> konstruktora <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> ustawia właściwość na `targetTypeNames` wartości tablicy przekazaną za pomocą parametru.</span><span class="sxs-lookup"><span data-stu-id="99e15-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="99e15-157">Ustawienie tej właściwości umożliwia <xref:System.Messaging.MessageQueue> używanie tego <xref:System.Messaging.XmlMessageFormatter> wystąpienia do odczytu komunikatów zawierających obiekty danego typu.</span><span class="sxs-lookup"><span data-stu-id="99e15-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="99e15-158">Obie właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> i informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-159">Dzięki temu program formatujący interpretuje treść wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="99e15-160">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-161">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-162">Podczas odczytywania z kolejki należy ustawić tylko jedną z tych właściwości, ale można ustawić oba typy.</span><span class="sxs-lookup"><span data-stu-id="99e15-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="99e15-163">Zestaw typów jest zestawem połączonym z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="99e15-164">Decyzja, która ma zostać użyta, jest specyficzna dla Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="99e15-165">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla jednej z tych właściwości, zostanie zgłoszony wyjątek w czasie odczytywania.</span><span class="sxs-lookup"><span data-stu-id="99e15-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-166">Parametr ma wartość <see langword="null" />. <paramref name="targetTypeNames" /></span><span class="sxs-lookup"><span data-stu-id="99e15-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes"><span data-ttu-id="99e15-167">Tablica typu <see cref="T:System.Type" /> , która określa zestaw możliwych typów, które zostaną rozszeregowane przez program formatujący z podanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></param>
        <summary><span data-ttu-id="99e15-168">Inicjuje nowe wystąpienie <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy, ustawiając typy docelowe przenoszone jako tablica typów obiektów.</span><span class="sxs-lookup"><span data-stu-id="99e15-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-169">Konstruktory z parametrami typu docelowego są najczęściej używane podczas odczytywania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="99e15-170">Podczas pisania nie trzeba określać typów docelowych.</span><span class="sxs-lookup"><span data-stu-id="99e15-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="99e15-171">To Przeciążenie <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> konstruktora <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> ustawia właściwość na `targetTypes` wartości tablicy przekazaną za pomocą parametru.</span><span class="sxs-lookup"><span data-stu-id="99e15-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="99e15-172">Ustawienie tej właściwości umożliwia <xref:System.Messaging.MessageQueue> używanie tego <xref:System.Messaging.XmlMessageFormatter> wystąpienia do odczytu komunikatów zawierających obiekty danego typu.</span><span class="sxs-lookup"><span data-stu-id="99e15-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="99e15-173">Obie właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> i informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-174">Dzięki temu program formatujący interpretuje treść wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="99e15-175">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-176">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-177">Podczas odczytywania z kolejki należy ustawić tylko jedną z tych właściwości, ale można ustawić oba typy.</span><span class="sxs-lookup"><span data-stu-id="99e15-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="99e15-178">Zestaw typów jest zestawem połączonym z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="99e15-179">Decyzja, która ma zostać użyta, jest specyficzna dla Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="99e15-180">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla jednej z tych właściwości, zostanie zgłoszony wyjątek w czasie odczytywania.</span><span class="sxs-lookup"><span data-stu-id="99e15-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="99e15-181">Kiedy określasz <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, zamiast, typ istnienia jest sprawdzany w czasie kompilacji zamiast czasu odczytu, zmniejszenie możliwości błędu.</span><span class="sxs-lookup"><span data-stu-id="99e15-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="99e15-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>wymaga, aby każdy wpis był w pełni kwalifikowany, określając jego nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="99e15-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="99e15-183">Ponadto w przypadku pracy z wieloma współbieżnymi wersjami numer wersji również musi być dołączony do nazwy typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="99e15-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="99e15-184">Korzystając <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>z programu, można dodać każdy obiekt (na `MyClass`przykład) do listy w sposób pokazany przez Poniższy C# kod.</span><span class="sxs-lookup"><span data-stu-id="99e15-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-185">Parametr ma wartość <see langword="null" />. <paramref name="targetTypes" /></span><span class="sxs-lookup"><span data-stu-id="99e15-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="99e15-186"><see cref="T:System.Messaging.Message" /> Do inspekcji.</span><span class="sxs-lookup"><span data-stu-id="99e15-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span></span></param>
        <summary><span data-ttu-id="99e15-187">Określa, czy program formatujący może deserializować komunikat.</span><span class="sxs-lookup"><span data-stu-id="99e15-187">Determines whether the formatter can deserialize the message.</span></span></summary>
        <returns><span data-ttu-id="99e15-188"><see langword="true" />Jeśli program formatujący XML może deserializować komunikat; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="99e15-188"><see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-189">Gdy <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> jest wywoływana, program formatujący próbuje określić, czy zawartość komunikatu jest coś, którego może deserializować.</span><span class="sxs-lookup"><span data-stu-id="99e15-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="99e15-190">Program formatujący może deserializować komunikat tylko wtedy, gdy typ w treści komunikatu ma taki sam schemat jak jeden z typów w tablicy reprezentowane przez <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> właściwości i. <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="99e15-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A>zwraca `false` w następujących dwóch okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="99e15-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="99e15-192">Komunikat nie został sformatowany przy użyciu <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="99e15-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="99e15-193">Schemat treści komunikatu nie należy do tych wymienionych w <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> właściwości lub. <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="99e15-194">Właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> informują program formatujący o typach obiektów, które muszą być w stanie deserializować.</span><span class="sxs-lookup"><span data-stu-id="99e15-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="99e15-195">Jeśli na liście nie ma żadnego typu, jest on jeszcze znaleziony w komunikacie <xref:System.Messaging.XmlMessageFormatter.CanRead%2A>. `false`</span><span class="sxs-lookup"><span data-stu-id="99e15-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99e15-196">Nie ustawiono ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> właściwości ani.<see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /></span><span class="sxs-lookup"><span data-stu-id="99e15-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-197">Parametr ma wartość <see langword="null" />. <paramref name="message" /></span><span class="sxs-lookup"><span data-stu-id="99e15-197">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e15-198">Tworzy wystąpienie <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy, której właściwości odczytu/zapisu (zestawy typów docelowych) są takie same jak bieżące <see cref="T:System.Messaging.XmlMessageFormatter" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="99e15-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span></span></summary>
        <returns><span data-ttu-id="99e15-199">Obiekt, którego właściwości są identyczne z tymi <see cref="T:System.Messaging.XmlMessageFormatter" /> wystąpieniami, ale których metadane nie określają, jako wystąpienia klasy programu formatującego.</span><span class="sxs-lookup"><span data-stu-id="99e15-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-200">Ta metoda tworzy kopię programu formatującego i inicjuje wszystkie jej właściwości do wartości tego <xref:System.Messaging.XmlMessageFormatter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="99e15-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="99e15-201"><see cref="T:System.Messaging.Message" />, W formacie XML, do deserializacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span></span></param>
        <summary><span data-ttu-id="99e15-202">Odczytuje zawartość z danego komunikatu i tworzy obiekt, który zawiera deserializowany komunikat.</span><span class="sxs-lookup"><span data-stu-id="99e15-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span></span></summary>
        <returns><span data-ttu-id="99e15-203">Komunikat z deserializowanym.</span><span class="sxs-lookup"><span data-stu-id="99e15-203">The deserialized message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-204">Obie właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> i informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-205">Aby można było deserializować komunikat, należy ustawić jedną z tych właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="99e15-206">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-207">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-208">Nie trzeba określać typów docelowych w celu zapisu do kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99e15-209">Nie ustawiono ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> właściwości ani.<see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /></span><span class="sxs-lookup"><span data-stu-id="99e15-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span></span>  
  
<span data-ttu-id="99e15-210">—lub—</span><span class="sxs-lookup"><span data-stu-id="99e15-210">-or-</span></span> 
<span data-ttu-id="99e15-211">Serializacja wystąpienia w treści komunikatu nie jest zgodna z żadnym schematem reprezentowanym przez typy we <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> właściwościach i. <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /></span><span class="sxs-lookup"><span data-stu-id="99e15-211">The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-212">Parametr ma wartość <see langword="null" />. <paramref name="message" /></span><span class="sxs-lookup"><span data-stu-id="99e15-212">The <paramref name="message" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e15-213">Określa zestaw możliwych typów, które zostaną rozszeregowane przez program formatujący z podanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-213">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="99e15-214">Tablica typu <see cref="T:System.String" /> , która określa typy obiektów do deserializacji z treści wiadomości podczas odczytywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-214">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-215">Obie właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> i informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-215">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-216">Dzięki temu program formatujący interpretuje treść wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-216">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="99e15-217">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-217">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-218">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-218">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-219">Podczas odczytywania z kolejki należy ustawić tylko jedną z tych właściwości, ale można ustawić oba typy.</span><span class="sxs-lookup"><span data-stu-id="99e15-219">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="99e15-220">Zestaw typów jest zestawem połączonym z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-220">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="99e15-221">Decyzja o tym, która właściwość powinna zostać użyta, jest specyficzna dla Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-221">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="99e15-222">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla jednej z tych właściwości, zostanie zgłoszony wyjątek podczas odczytywania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-222">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="99e15-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>wymaga, aby każdy wpis był w pełni kwalifikowany, określając jego nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="99e15-223"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="99e15-224">Ponadto w przypadku pracy z wieloma współbieżnymi wersjami numer wersji również musi być dołączony do nazwy typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="99e15-224">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="99e15-225">Typy docelowe są wymagane tylko podczas odczytywania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-225">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="99e15-226">Właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> nie muszą być ustawione do zapisu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="99e15-226">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-227"><see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> Właściwość jest<see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99e15-227">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e15-228">Określa zestaw możliwych typów, które zostaną rozszeregowane przez program formatujący z podanej wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-228">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span></span></summary>
        <value><span data-ttu-id="99e15-229">Tablica typu <see cref="T:System.Type" /> , która określa typy obiektów do deserializacji z treści wiadomości podczas odczytywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-229">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-230">Obie właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> i informują program formatujący, jakie schematy próbują dopasować podczas deserializacji komunikatu. <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A></span><span class="sxs-lookup"><span data-stu-id="99e15-230">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="99e15-231">Dzięki temu program formatujący interpretuje treść wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-231">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="99e15-232">Serializacja wystąpienia w treści komunikatu musi być zgodna z jednym ze schematów przedstawionych w tablicy typów.</span><span class="sxs-lookup"><span data-stu-id="99e15-232">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="99e15-233">Gdy odczytujesz komunikat przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada określonemu schematowi i odczytuje do niego treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-233">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="99e15-234">Podczas odczytywania z kolejki należy ustawić tylko jedną z tych właściwości, ale można ustawić oba typy.</span><span class="sxs-lookup"><span data-stu-id="99e15-234">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="99e15-235">Zestaw typów jest zestawem połączonym z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="99e15-235">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="99e15-236">Decyzja o tym, która właściwość powinna zostać użyta, jest specyficzna dla Twojej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="99e15-236">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="99e15-237">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla jednej z tych właściwości, zostanie zgłoszony wyjątek podczas odczytywania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-237">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="99e15-238">Typy docelowe są wymagane tylko podczas odczytywania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-238">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="99e15-239">Właściwości <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> nie muszą być ustawione do zapisu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="99e15-239">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="99e15-240">Kiedy określasz <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, zamiast, typ istnienia jest sprawdzany w czasie kompilacji zamiast czasu odczytu, zmniejszenie możliwości błędu.</span><span class="sxs-lookup"><span data-stu-id="99e15-240">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="99e15-241">Korzystając <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>z programu, można dodać każdy obiekt (na `MyClass`przykład) do listy w sposób pokazany przez `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};` C# kod.</span><span class="sxs-lookup"><span data-stu-id="99e15-241">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99e15-242">Poniższy przykład kodu wysyła i odbiera komunikat zawierający zamówienie do i z kolejki.</span><span class="sxs-lookup"><span data-stu-id="99e15-242">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-243"><see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> Właściwość jest<see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="99e15-243">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="99e15-244">Właściwość, która <see cref="T:System.Messaging.Message" /> będzie zawierać serializowany obiekt. <see cref="P:System.Messaging.Message.Body" /></span><span class="sxs-lookup"><span data-stu-id="99e15-244">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span></span></param>
        <param name="obj"><span data-ttu-id="99e15-245"><see cref="T:System.Object" /> Aby można było zserializować do treści komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-245">The <see cref="T:System.Object" /> to be serialized into the message body.</span></span></param>
        <summary><span data-ttu-id="99e15-246">Serializacja obiektu w treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="99e15-246">Serializes an object into the body of the message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e15-247">Nie trzeba określać typów docelowych do zapisu w kolejce, ponieważ muszą one znajdować się podczas odczytu.</span><span class="sxs-lookup"><span data-stu-id="99e15-247">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="99e15-248">Właściwość <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or<xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> jest używana przez program formatujący tylko podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="99e15-248">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="99e15-249"><xref:System.Messaging.XmlMessageFormatter> Używa<xref:System.Xml.Serialization.XmlSerializer> klasy, która definiuje, co może być serializowane.</span><span class="sxs-lookup"><span data-stu-id="99e15-249">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="99e15-250">Tylko pola publiczne i właściwości publiczne mogą być serializowane.</span><span class="sxs-lookup"><span data-stu-id="99e15-250">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="99e15-251">Struktury, struktury z tablicami i tablice struktur są możliwe do serializacji, o ile nie używają stylu zakodowanego w protokole SOAP.</span><span class="sxs-lookup"><span data-stu-id="99e15-251">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e15-252">Parametr ma wartość <see langword="null" />. <paramref name="message" /></span><span class="sxs-lookup"><span data-stu-id="99e15-252">The <paramref name="message" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="99e15-253">—lub—</span><span class="sxs-lookup"><span data-stu-id="99e15-253">-or-</span></span> 
<span data-ttu-id="99e15-254">Parametr ma wartość <see langword="null" />. <paramref name="obj" /></span><span class="sxs-lookup"><span data-stu-id="99e15-254">The <paramref name="obj" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>