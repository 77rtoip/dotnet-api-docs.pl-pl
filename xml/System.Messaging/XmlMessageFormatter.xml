<Type Name="XmlMessageFormatter" FullName="System.Messaging.XmlMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee5a5741956a72eeb2506ea2845bf9ab2f1f66a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36553204" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.XmlMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type XmlMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1fb91-101">Serializuje i deserializuje obiekty do lub z treści wiadomości, w formacie XML na podstawie definicji schematu XSD.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fb91-101">Serializes and deserializes objects to or from the body of a message, using the XML format based on the XSD schema definition.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-102"><xref:System.Messaging.XmlMessageFormatter> Jest domyślny element formatujący który wystąpienia <xref:System.Messaging.MessageQueue> używa do serializacji komunikatów zapisywanych w kolejce.</span><span class="sxs-lookup"><span data-stu-id="1fb91-102">The <xref:System.Messaging.XmlMessageFormatter> is the default formatter that an instance of <xref:System.Messaging.MessageQueue> uses to serialize messages written to the queue.</span></span> <span data-ttu-id="1fb91-103">Podczas tworzenia wystąpienia <xref:System.Messaging.MessageQueue>, wystąpienie <xref:System.Messaging.XmlMessageFormatter> jest tworzony i skojarzone z <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="1fb91-103">When you create an instance of <xref:System.Messaging.MessageQueue>, an instance of <xref:System.Messaging.XmlMessageFormatter> is created for you and associated with the <xref:System.Messaging.MessageQueue>.</span></span> <span data-ttu-id="1fb91-104">Możesz określić inny element formatujący, tworząc go w kodzie i przypisywania go do <xref:System.Messaging.MessageQueue.Formatter%2A> właściwości użytkownika <xref:System.Messaging.MessageQueue>.</span><span class="sxs-lookup"><span data-stu-id="1fb91-104">You can specify a different formatter by creating it in your code and assigning it to the <xref:System.Messaging.MessageQueue.Formatter%2A> property of your <xref:System.Messaging.MessageQueue>.</span></span>  
  
 <span data-ttu-id="1fb91-105">Domyślne kolejki <xref:System.Messaging.XmlMessageFormatter> wystąpienie może być używane do zapisu w kolejce, ale nie można użyć do odczytu z kolejki, dopóki nie zostanie ustawiony <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> lub <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> właściwości elementu formatującego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-105">A queue's default <xref:System.Messaging.XmlMessageFormatter> instance can be used to write to the queue, but it cannot be used to read from the queue until you set either the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property on the formatter.</span></span> <span data-ttu-id="1fb91-106">Można ustawić jedną lub obie te wartości na domyślne wystąpienie elementu formatującego lub Utwórz nowe wystąpienie elementu formatującego i ustaw wartości automatycznie, przekazując je jako argumenty do odpowiedniej <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="1fb91-106">You can either set one or both of these values on the default formatter instance, or you can create a new instance of the formatter and set the values automatically by passing them as arguments into the appropriate <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="1fb91-107">Podczas określania <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> zamiast <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, istnienia typu zaznaczono w czasie kompilacji, a nie czas odczytu, zmniejszając prawdopodobieństwo błędu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-107">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="1fb91-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> wymaga każdy wpis, aby być w pełni kwalifikowana, określając jej nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-108"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="1fb91-109">Co więcej podczas pracy z wieloma wersjami jednoczesnych, numer wersji musi również dołączony do również nazwę typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-109">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="1fb91-110"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-110">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-111">Dzięki temu program formatujący interpretować treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-111">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="1fb91-112">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-112">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-113">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-113">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-114">Tylko jeden z dwóch właściwości musi być ustawiona podczas czytania z kolejki, ale można ustawić jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1fb91-114">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="1fb91-115">Zestaw typów jest połączony zestaw z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-115">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="1fb91-116">Decyzja o którym właściwość do użycia jest specyficzne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-116">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="1fb91-117">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla każdej właściwości, zostanie wygenerowany wyjątek podczas odczytywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-117">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="1fb91-118"><xref:System.Messaging.XmlMessageFormatter> Jest kluczowym składnikiem wiadomości luźno powiązanych opartych na języku XML.</span><span class="sxs-lookup"><span data-stu-id="1fb91-118">The <xref:System.Messaging.XmlMessageFormatter> is a crucial component of loosely coupled XML-based messaging.</span></span> <span data-ttu-id="1fb91-119">Używa narzędzia XSD.exe XML format jest używany do generowania schematu XML, na przykład przy użyciu narzędzia do serializacji klasą używaną przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="1fb91-119">The XSD.exe utility uses the XML format is used to generate XML schema, such as when you use the utility to serialize a class used by your application.</span></span> <span data-ttu-id="1fb91-120">Klasa musi mieć konstruktora domyślnego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-120">The class must have a default constructor.</span></span>  
  
 <span data-ttu-id="1fb91-121">Format jest używany ponownie w procesu narzędzie generuje klasę na podstawie schematu można dystrybuować do opisywania klasy danych.</span><span class="sxs-lookup"><span data-stu-id="1fb91-121">The format is used again in the reverse process when the utility generates a class based on the schema you distribute to describe your class data.</span></span> <span data-ttu-id="1fb91-122">Korzystanie z narzędzia i schematu XML, który generuje pozwala uniknąć redistributing.dll pliki, zawsze skompiluj klasy po zmianie implementacji klasy.</span><span class="sxs-lookup"><span data-stu-id="1fb91-122">The use of the utility and the XML schema it generates enables you to avoid redistributing.dll files every time you recompile a class after the implementation of your class has changed.</span></span> <span data-ttu-id="1fb91-123">Tak długo, jak schemat nie zmienia się po stronie klienta lub serwerze, inne zmiany po obu stronach nie wpływają na drugi.</span><span class="sxs-lookup"><span data-stu-id="1fb91-123">As long as the schema does not change on the client or the server, other changes on either side do not affect the other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fb91-124">Poniższy przykładowy kod zawiera trzy fragmentów kodu: składnik serwera, klasa kolejności i kodu klienta.</span><span class="sxs-lookup"><span data-stu-id="1fb91-124">The following code example includes three pieces of code: a server component, an order class, and client code.</span></span> <span data-ttu-id="1fb91-125">Klasa kolejności można za pomocą narzędzia XSD.exe do generowania schematu rozpoznawany przez serwer w komunikatach przychodzących.</span><span class="sxs-lookup"><span data-stu-id="1fb91-125">The order class can be used by the XSD.exe utility to generate schema that the server recognizes within incoming messages.</span></span> <span data-ttu-id="1fb91-126">Schemat jest sformatowany plik XML, który opisuje "kształtu" klasy.</span><span class="sxs-lookup"><span data-stu-id="1fb91-126">The schema is an XML formatted file that describes the "shape" of the class.</span></span> <span data-ttu-id="1fb91-127">Ten schemat mogą być następnie używane po stronie klienta do generowania klasy kolejności specyficzne dla klienta, które współużytkują ten sam schemat jako klasa serwera.</span><span class="sxs-lookup"><span data-stu-id="1fb91-127">This schema can then be used on the client side to generate a client-specific order class that shares the same schema as the server class.</span></span>  
  
 <span data-ttu-id="1fb91-128">Poniższy przykładowy kod przedstawia składnika serwera służącą do odbierania zamówień za pośrednictwem kolejki komunikatów.</span><span class="sxs-lookup"><span data-stu-id="1fb91-128">The following code example represents a server component that receives orders through a message queue.</span></span> <span data-ttu-id="1fb91-129">Treść wiadomości powinna być obiekt kolejności którego schemat odpowiada klasie Order.cs poniżej.</span><span class="sxs-lookup"><span data-stu-id="1fb91-129">The body of the message should be an order object whose schema matches the Order.cs class below.</span></span> <span data-ttu-id="1fb91-130">Proces serwera lub aplikacji deserializuje kolejności.</span><span class="sxs-lookup"><span data-stu-id="1fb91-130">The server process or application deserializes the order.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlMessageFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source.cs#1)]
 [!code-vb[Classic XmlMessageFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1fb91-131">Poniższy przykład kodu reprezentuje klasę kolejność, która zapewnia schematu dla obiektów zlecenia, które otrzymuje i deserializuje aplikacji na serwerze.</span><span class="sxs-lookup"><span data-stu-id="1fb91-131">The following code example represents the order class that provides a schema for the order objects that the application on the server receives and deserializes.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic XmlMessageFormatter Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source2.cs#2)]
 [!code-vb[Classic XmlMessageFormatter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="1fb91-132">Wszelkie aplikacji klienckiej, która współdziała z aplikacją na serwerze musi wysyłać wiadomości do serwera przez serializacji informacji w klasie lokalnie zdefiniowanej kolejności w treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-132">Any client application that interacts with the application on the server must send messages to the server by serializing information in a locally defined order class into the message body.</span></span> <span data-ttu-id="1fb91-133">Klasa lokalnie zdefiniowanej kolejności musi mieć ten sam schemat jako klasa kolejności zdefiniowanej na serwerze, do którego aplikacji na serwerze podejmie próbę deserializacji treści komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-133">The locally defined order class must have the same schema as the server-defined order class into which the application on the server will attempt to deserialize the message body.</span></span> <span data-ttu-id="1fb91-134">Narzędzie XSD.exe umożliwia Menedżera aplikacji na serwerze utworzyć i dystrybuować schematu, które klient musi używać do serializacji komunikatów do serwera.</span><span class="sxs-lookup"><span data-stu-id="1fb91-134">The XSD.exe utility lets the manager of the application on the server create and distribute the schema the client must use to serialize messages going to the server.</span></span>  
  
 <span data-ttu-id="1fb91-135">Menedżer aplikacji klienckiej odbiera schemat dla klasy kolejności, narzędzie XSD.exe jest używane ponownie do generowania klasy specyficzne dla klienta kolejności ze schematu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-135">When the manager of the client application receives the schema for the order class, the XSD.exe utility is used again to generate a client-specific order class from the schema.</span></span> <span data-ttu-id="1fb91-136">Jest tej klasy, która jest używana w przykładzie kodu klient poniżej nie klasy kolejności serwera (narzędzie XSD.exe powoduje, że schemat wygenerowany klasy mają taką samą nazwę jak oryginalny klasy).</span><span class="sxs-lookup"><span data-stu-id="1fb91-136">It is this class that is used in the client code example below, not the server's order class (the XSD.exe utility causes the schema-generated class to have the same name as the original class).</span></span> <span data-ttu-id="1fb91-137">Ta nowa klasa zlecenia służy do serializacji kolejności w treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-137">This new order class is used to serialize the order into the message body.</span></span>  
  
 <span data-ttu-id="1fb91-138">Poniższy przykładowy kod jest po stronie klienta przetwarzanie, używany do serializacji kolejności i wysyłania informacji skojarzonych z kolejnością do kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-138">The following code example is the client-side processing, used to serialize an order and send the information associated with the order to a queue.</span></span> <span data-ttu-id="1fb91-139">Kod kojarzy elementu, ilość i adres informacje z elementy schematu, które zostały wygenerowane klasy Order.cs przez narzędzie XSD.exe.</span><span class="sxs-lookup"><span data-stu-id="1fb91-139">The code associates Item, Quantity, and Address information with elements of the schema that were generated for the Order.cs class by the XSD.exe utility.</span></span> <span data-ttu-id="1fb91-140">Kolejność jest wysyłany do kolejki zleceń na komputerze lokalnym.</span><span class="sxs-lookup"><span data-stu-id="1fb91-140">An order is sent to the Orders queue on the local computer.</span></span>  
  
 [!code-cpp[Classic XmlMessageFormatter Example#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CPP/source3.cpp#3)]
 [!code-csharp[Classic XmlMessageFormatter Example#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/CS/source3.cs#3)]
 [!code-vb[Classic XmlMessageFormatter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlMessageFormatter Example/VB/source3.vb#3)]  
  
 <span data-ttu-id="1fb91-141">Po schematu jest generowany na podstawie klasy kolejności na serwerze, można zmodyfikować tej klasy.</span><span class="sxs-lookup"><span data-stu-id="1fb91-141">After the schema is generated from the order class on the server, you can modify the class.</span></span> <span data-ttu-id="1fb91-142">Jeśli zmiany schematu, nie trzeba przeprowadzać ponownej dystrybucji schematu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-142">Unless the schema changes, you do not need to redistribute the schema.</span></span> <span data-ttu-id="1fb91-143">Po rozproszonych schematu i wygenerowane klasy klienta kolejności tej klasy klienta można także modyfikować niezależnie od serwera kolejności klasy, tak długo, jak sam schematu nie jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="1fb91-143">After you have distributed the schema and generated a client-side order class, that client class can also be modified independently of the server's order class, as long as the schema itself is not modified.</span></span> <span data-ttu-id="1fb91-144">Dwie klasy stają się luźno powiązane.</span><span class="sxs-lookup"><span data-stu-id="1fb91-144">The two classes have become loosely coupled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
    <altmember cref="T:System.Messaging.IMessageFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1fb91-145">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-145">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fb91-146">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy bez docelowego typy zestawu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-146">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, without target types set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-147">Tego przeciążenia konstruktora jest najczęściej używana podczas zapisywania w kolejce, jak typy elementów docelowych nie są wymagane podczas zapisywania.</span><span class="sxs-lookup"><span data-stu-id="1fb91-147">This overload of the constructor is used most frequently when writing to the queue, as target types are not required when writing.</span></span>  
  
 <span data-ttu-id="1fb91-148">Aby odczytać wiadomość z kolejki przy użyciu wystąpienia <xref:System.Messaging.XmlMessageFormatter> utworzony za pomocą tego konstruktora, należy ustawić <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> lub <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości będzie wówczas traktował program formatujący, jakie typy aby podjąć próbę deserializacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-148">To read a message from a queue using an instance of <xref:System.Messaging.XmlMessageFormatter> created using this constructor, you must set the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties so the formatter knows what types to attempt to deserialize.</span></span>  
  
 <span data-ttu-id="1fb91-149">Podczas tworzenia nowego <xref:System.Messaging.MessageQueue>, domyślny <xref:System.Messaging.XmlMessageFormatter> jest tworzone wystąpienie, bez zestaw typów obiektów docelowych.</span><span class="sxs-lookup"><span data-stu-id="1fb91-149">When you create a new <xref:System.Messaging.MessageQueue>, a default <xref:System.Messaging.XmlMessageFormatter> instance is created, without the target types set.</span></span> <span data-ttu-id="1fb91-150">Podobnie jak w przypadku elementu formatującego utworzone za pomocą tego konstruktora musi ustawić typy elementów docelowych dla tego wystąpienia programu formatującego, jeśli czytania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-150">As with a formatter created using this constructor, you must set target types for that formatter instance if you want to read from the queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (string[] targetTypeNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] targetTypeNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypeNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;System::String ^&gt; ^ targetTypeNames);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : string[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypeNames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypeNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetTypeNames">
          <span data-ttu-id="1fb91-151">Tablica typu <see cref="T:System.String" /> , który określa zestaw możliwych typów, które będą deserializowane przez program formatujący z dostarczonej wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-151">An array of type <see cref="T:System.String" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
          <span data-ttu-id="1fb91-152">Te wartości muszą być w pełni kwalifikowana, na przykład "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-152">These values must be fully qualified, for example, "MyNamespace.MyOrders, MyOrdersAssemblyName".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fb91-153">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy ustawienie typy elementów docelowych przekazany jako tablica wartości typu string (FQDN).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-153">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of (fully qualified) string values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-154">Konstruktorów z parametrami typu docelowego najczęściej używanych podczas czytania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-154">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="1fb91-155">Podczas zapisywania, nie jest konieczne określić typy elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="1fb91-155">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="1fb91-156">To przeciążenie metody <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> ustawia konstruktora <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> właściwości tablicy wartości przekazane za pośrednictwem `targetTypeNames` parametru.</span><span class="sxs-lookup"><span data-stu-id="1fb91-156">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> property to the array values passed in through the `targetTypeNames` parameter.</span></span> <span data-ttu-id="1fb91-157">Ta właściwość umożliwia ustawienie <xref:System.Messaging.MessageQueue> za pomocą tej <xref:System.Messaging.XmlMessageFormatter> wystąpienie do czytania wiadomości zawiera obiekty z danego typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-157">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of given types.</span></span>  
  
 <span data-ttu-id="1fb91-158">Zarówno <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-158">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-159">Dzięki temu program formatujący interpretować treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-159">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="1fb91-160">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-160">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-161">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-161">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-162">Tylko jeden z dwóch właściwości musi być ustawiona podczas czytania z kolejki, ale można ustawić jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1fb91-162">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="1fb91-163">Zestaw typów jest połączony zestaw z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-163">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="1fb91-164">Wybór rodzaju, należy użyć jest specyficzne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-164">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="1fb91-165">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla każdej właściwości, zostanie wygenerowany wyjątek w czasie odczytu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-165">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-166">
            <paramref name="targetTypeNames" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-166">The <paramref name="targetTypeNames" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlMessageFormatter (Type[] targetTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type[] targetTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.#ctor(System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetTypes As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlMessageFormatter(cli::array &lt;Type ^&gt; ^ targetTypes);" />
      <MemberSignature Language="F#" Value="new System.Messaging.XmlMessageFormatter : Type[] -&gt; System.Messaging.XmlMessageFormatter" Usage="new System.Messaging.XmlMessageFormatter targetTypes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="targetTypes">
          <span data-ttu-id="1fb91-167">Tablica typu <see cref="T:System.Type" /> , który określa zestaw możliwych typów, które będą deserializowane przez program formatujący z dostarczonej wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-167">An array of type <see cref="T:System.Type" /> that specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fb91-168">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy ustawienie typy elementów docelowych przekazany jako tablicę typów obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-168">Initializes a new instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class, setting target types passed in as an array of object types.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-169">Konstruktorów z parametrami typu docelowego najczęściej używanych podczas czytania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-169">The constructors with target type parameters are most frequently used when reading from the queue.</span></span> <span data-ttu-id="1fb91-170">Podczas zapisywania, nie jest konieczne określić typy elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="1fb91-170">When writing, it is not necessary to specify target types.</span></span>  
  
 <span data-ttu-id="1fb91-171">To przeciążenie metody <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> ustawia konstruktora <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości tablicy wartości przekazane za pośrednictwem `targetTypes` parametru.</span><span class="sxs-lookup"><span data-stu-id="1fb91-171">This overload of the <xref:System.Messaging.XmlMessageFormatter.%23ctor%2A> constructor sets the <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property to the array values passed in through the `targetTypes` parameter.</span></span> <span data-ttu-id="1fb91-172">Ta właściwość umożliwia ustawienie <xref:System.Messaging.MessageQueue> za pomocą tej <xref:System.Messaging.XmlMessageFormatter> wystąpienie do czytania wiadomości zawierające obiekty danych typów.</span><span class="sxs-lookup"><span data-stu-id="1fb91-172">Setting this property enables a <xref:System.Messaging.MessageQueue> using this <xref:System.Messaging.XmlMessageFormatter> instance to read messages containing objects of the given types.</span></span>  
  
 <span data-ttu-id="1fb91-173">Zarówno <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-173">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-174">Dzięki temu program formatujący interpretować treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-174">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="1fb91-175">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-175">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-176">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-176">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-177">Tylko jeden z dwóch właściwości musi być ustawiona podczas czytania z kolejki, ale można ustawić jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1fb91-177">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="1fb91-178">Zestaw typów jest połączony zestaw z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-178">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="1fb91-179">Wybór rodzaju, należy użyć jest specyficzne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-179">The decision of which one to use is specific to your application.</span></span> <span data-ttu-id="1fb91-180">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla każdej właściwości, zostanie wygenerowany wyjątek w czasie odczytu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-180">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown at read time.</span></span>  
  
 <span data-ttu-id="1fb91-181">Podczas określania <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> zamiast <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, istnienia typu zaznaczono w czasie kompilacji, a nie czas odczytu, zmniejszając prawdopodobieństwo błędu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-181">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span> <span data-ttu-id="1fb91-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> wymaga każdy wpis, aby być w pełni kwalifikowana, określając jej nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-182"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="1fb91-183">Co więcej podczas pracy z wieloma wersjami jednoczesnych, numer wersji musi również dołączony do również nazwę typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-183">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="1fb91-184">Korzystając z <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, można dodać każdego obiektu (na przykład `MyClass`) do listy w sposób dowodzą następujący kod C#.</span><span class="sxs-lookup"><span data-stu-id="1fb91-184">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the following C# code.</span></span>  
  
```  
TargetTypes = new Type[]{typeof(MyClass)}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-185">
            <paramref name="targetTypes" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-185">The <paramref name="targetTypes" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="xmlMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1fb91-186">
            <see cref="T:System.Messaging.Message" /> Do zbadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-186">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fb91-187">Określa, czy element formatujący może wykonywać deserializację komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-187">Determines whether the formatter can deserialize the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fb91-188">
            <see langword="true" /> Jeśli element formatujący XML może wykonywać deserializację komunikatu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-188">
              <see langword="true" /> if the XML formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-189">Gdy <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> po wywołaniu elementu formatującego próby ustalenia, czy zawartość wiadomości są coś może wykonywać deserializację.</span><span class="sxs-lookup"><span data-stu-id="1fb91-189">When <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> is called, the formatter attempts to determine if the contents of the message are something it can deserialize.</span></span> <span data-ttu-id="1fb91-190">Program formatujący tylko może wykonywać deserializację komunikatu, jeśli typ w treści wiadomości ma ten sam schemat jako jeden z typów w tablicy reprezentowany przez <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-190">The formatter can only deserialize the message if the type in the message body has the same schema as one of the types in the array represented by the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties.</span></span> <span data-ttu-id="1fb91-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> Zwraca `false` w dwóch następujących okolicznościach:</span><span class="sxs-lookup"><span data-stu-id="1fb91-191"><xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false` under the following two circumstances:</span></span>  
  
-   <span data-ttu-id="1fb91-192">Komunikat nie został sformatowany przy użyciu <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="1fb91-192">The message was not formatted using the <xref:System.Messaging.XmlMessageFormatter>.</span></span>  
  
-   <span data-ttu-id="1fb91-193">Schemat treść komunikatu nie jest wymienionych w albo <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> lub <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-193">The schema of the message body is not among those listed in either the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property.</span></span>  
  
 <span data-ttu-id="1fb91-194"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości program formatujący uzyskuje jakie typy obiektów musi być w stanie do deserializacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-194">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what types of objects it must be able to deserialize.</span></span> <span data-ttu-id="1fb91-195">Jeśli dowolny typ brakuje listy jeszcze znajduje się w komunikacie, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> zwraca `false`.</span><span class="sxs-lookup"><span data-stu-id="1fb91-195">If any type is missing from the list, yet is found within the message, <xref:System.Messaging.XmlMessageFormatter.CanRead%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1fb91-196">Ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> właściwość została ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-196">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-197">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-197">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="T:System.Messaging.BinaryMessageFormatter" />
        <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="xmlMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fb91-198">Tworzy wystąpienie <see cref="T:System.Messaging.XmlMessageFormatter" /> klasy odczytu/zapisu, którego właściwości (zestawy typy elementów docelowych) są takie same jak bieżące <see cref="T:System.Messaging.XmlMessageFormatter" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-198">Creates an instance of the <see cref="T:System.Messaging.XmlMessageFormatter" /> class whose read/write properties (the sets of target types) are the same as the current <see cref="T:System.Messaging.XmlMessageFormatter" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fb91-199">Obiekt, którego właściwości są identyczne z to <see cref="T:System.Messaging.XmlMessageFormatter" /> wystąpienia, ale których metadanych nie określa się do wystąpienia klasy elementu formatującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-199">An object whose properties are identical to those of this <see cref="T:System.Messaging.XmlMessageFormatter" /> instance, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-200">Ta metoda tworzy kopię elementu formatującego i inicjuje wszystkie właściwości z wartościami <xref:System.Messaging.XmlMessageFormatter> obiektu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-200">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.XmlMessageFormatter> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="xmlMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1fb91-201">
            <see cref="T:System.Messaging.Message" />, W formacie XML, do deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-201">The <see cref="T:System.Messaging.Message" />, in XML format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fb91-202">Odczytuje zawartość z podanym komunikatem i tworzy obiekt, który zawiera komunikat zdeserializowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-202">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1fb91-203">Zdeserializowana komunikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-203">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-204">Zarówno <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-204">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-205">Jeden z tych właściwości musi być ustawiony przed można przeprowadzić deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-205">One of these properties must be set before the message can be deserialized.</span></span>  
  
 <span data-ttu-id="1fb91-206">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-206">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-207">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-207">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-208">Aby można było zapisać do kolejki nie masz typy elementów docelowych.</span><span class="sxs-lookup"><span data-stu-id="1fb91-208">The target types do not have to be specified in order to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1fb91-209">Ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> ani <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> właściwość została ustawiona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-209">Neither the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> nor <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property has been set.</span>
          </span>
          <span data-ttu-id="1fb91-210">- lub - wystąpienie serializacji w treści wiadomości nie jest zgodne ze wszystkimi schematów reprezentowany przez typy w <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> i <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-210">-or-  The instance serialized in the message body does not comply with any of the schemas represented by the types in the <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> and <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> properties.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-211">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-211">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypeNames">
      <MemberSignature Language="C#" Value="public string[] TargetTypeNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] TargetTypeNames" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypeNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ TargetTypeNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypeNames : string[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypeNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypeNames")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fb91-212">Określa zestaw możliwych typów, które będą deserializowane przez program formatujący z dostarczonej wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-212">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fb91-213">Tablica typu <see cref="T:System.String" /> , który określa typów obiektów do deserializacji z treści komunikatu podczas odczytywania wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-213">An array of type <see cref="T:System.String" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-214">Zarówno <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-214">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-215">Dzięki temu program formatujący interpretować treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-215">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="1fb91-216">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-216">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-217">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-217">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-218">Tylko jeden z dwóch właściwości musi być ustawiona podczas czytania z kolejki, ale można ustawić jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1fb91-218">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="1fb91-219">Zestaw typów jest połączony zestaw z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-219">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="1fb91-220">Decyzja o którym właściwość do użycia jest specyficzne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-220">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="1fb91-221">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla każdej właściwości, zostanie wygenerowany wyjątek podczas odczytywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-221">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="1fb91-222"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> wymaga każdy wpis, aby być w pełni kwalifikowana, określając jej nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-222"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> requires every entry to be fully qualified, specifying its assembly name.</span></span> <span data-ttu-id="1fb91-223">Co więcej podczas pracy z wieloma wersjami jednoczesnych, numer wersji musi również dołączony do również nazwę typu docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-223">Further, when working with multiple concurrent versions, the version number must also be appended to the target type name as well.</span></span>  
  
 <span data-ttu-id="1fb91-224">Typy elementów docelowych to tylko wymagane podczas czytania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-224">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="1fb91-225"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości nie muszą należeć do zapisu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="1fb91-225">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-226">
            <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> Jest właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-226">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="TargetTypes">
      <MemberSignature Language="C#" Value="public Type[] TargetTypes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type[] TargetTypes" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetTypes As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Type ^&gt; ^ TargetTypes { cli::array &lt;Type ^&gt; ^ get(); void set(cli::array &lt;Type ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetTypes : Type[] with get, set" Usage="System.Messaging.XmlMessageFormatter.TargetTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("XmlMsgTargetTypes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1fb91-227">Określa zestaw możliwych typów, które będą deserializowane przez program formatujący z dostarczonej wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-227">Specifies the set of possible types that will be deserialized by the formatter from the message provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1fb91-228">Tablica typu <see cref="T:System.Type" /> , który określa typów obiektów do deserializacji z treści komunikatu podczas odczytywania wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-228">An array of type <see cref="T:System.Type" /> that specifies the types of objects to deserialize from the message body when reading the message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-229">Zarówno <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> program formatujący uzyskuje właściwości, jakie schematów, aby podjąć próbę dopasowania, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-229">Both the <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties tell the formatter what schemas to attempt to match when deserializing a message.</span></span> <span data-ttu-id="1fb91-230">Dzięki temu program formatujący interpretować treść komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-230">This allows the formatter to interpret the message body.</span></span>  
  
 <span data-ttu-id="1fb91-231">Wystąpienie serializacji w treści wiadomości musi być zgodne z jednym ze schematów reprezentowane w tablicy typu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-231">The instance serialized in the message body must comply with one of the schemas represented in the type array.</span></span> <span data-ttu-id="1fb91-232">Podczas odczytu wiadomości przy użyciu <xref:System.Messaging.MessageQueue.Receive%2A> metody, metoda tworzy obiekt typu, który odpowiada schematu zidentyfikowane i odczytuje treść komunikatu do niego.</span><span class="sxs-lookup"><span data-stu-id="1fb91-232">When you read the message using the <xref:System.Messaging.MessageQueue.Receive%2A> method, the method creates an object of the type that corresponds to the schema identified and reads the message body into it.</span></span>  
  
 <span data-ttu-id="1fb91-233">Tylko jeden z dwóch właściwości musi być ustawiona podczas czytania z kolejki, ale można ustawić jednocześnie.</span><span class="sxs-lookup"><span data-stu-id="1fb91-233">Only one of the two properties needs to be set when reading from the queue, but you can set both.</span></span> <span data-ttu-id="1fb91-234">Zestaw typów jest połączony zestaw z dwóch właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-234">The set of types is the combined set from the two properties.</span></span> <span data-ttu-id="1fb91-235">Decyzja o którym właściwość do użycia jest specyficzne dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1fb91-235">The decision of which property to use is specific to your application.</span></span> <span data-ttu-id="1fb91-236">Jeśli treść wiadomości zawiera typ, którego schemat nie pasuje do żadnego z typów w tablicy dla każdej właściwości, zostanie wygenerowany wyjątek podczas odczytywania wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1fb91-236">If the message body contains a type whose schema does not match any of the types in the array for either property, an exception will be thrown when the message is read.</span></span>  
  
 <span data-ttu-id="1fb91-237">Typy elementów docelowych to tylko wymagane podczas czytania z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-237">The target types are only required when reading from the queue.</span></span> <span data-ttu-id="1fb91-238"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> i <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwości nie muszą należeć do zapisu w kolejce.</span><span class="sxs-lookup"><span data-stu-id="1fb91-238">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> and <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> properties do not need to be set to write to the queue.</span></span>  
  
 <span data-ttu-id="1fb91-239">Podczas określania <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> zamiast <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, istnienia typu zaznaczono w czasie kompilacji, a nie czas odczytu, zmniejszając prawdopodobieństwo błędu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-239">When specifying <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> rather than <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A>, type existence is checked at compile time rather than read time, reducing possibility for error.</span></span>  
  
 <span data-ttu-id="1fb91-240">Korzystając z <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, można dodać każdego obiektu (na przykład `MyClass`) do listy w sposób przedstawiona w kodzie C# `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span><span class="sxs-lookup"><span data-stu-id="1fb91-240">When using <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A>, you can add each object (for example, `MyClass`) to the list in a way demonstrated by the C# code `TargetTypes = new Type[]{typeof(MyClass), typeof (MyOtherClass)};`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fb91-241">Poniższy przykład kodu wysyła i odbiera wiadomość zawierającą kolejność do i z kolejki.</span><span class="sxs-lookup"><span data-stu-id="1fb91-241">The following code example sends and receives a message that contains an order to and from a queue.</span></span>  
  
 [!code-cpp[Message.Body#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Message.Body/CPP/message_sendreceive.cpp#1)]
 [!code-csharp[Message.Body#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Message.Body/CS/message_sendreceive.cs#1)]
 [!code-vb[Message.Body#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Message.Body/VB/message_sendreceive.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-242">
            <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> Jest właściwość <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-242">The <see cref="P:System.Messaging.XmlMessageFormatter.TargetTypes" /> property is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Messaging.XmlMessageFormatter.TargetTypeNames" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.XmlMessageFormatter.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.XmlMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="xmlMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1fb91-243">
            <see cref="T:System.Messaging.Message" /> Których <see cref="P:System.Messaging.Message.Body" /> właściwości będzie zawierać Zserializowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-243">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="1fb91-244">
            <see cref="T:System.Object" /> Do serializacji w treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-244">The <see cref="T:System.Object" /> to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1fb91-245">Serializuje obiektu na treść komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-245">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fb91-246">Typy elementów docelowych nie musi być określony do zapisu do kolejki, ponieważ muszą one być podczas odczytu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-246">The target types need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="1fb91-247"><xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> Lub <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> właściwość jest używana przez program formatujący tylko wtedy, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1fb91-247">The <xref:System.Messaging.XmlMessageFormatter.TargetTypeNames%2A> or <xref:System.Messaging.XmlMessageFormatter.TargetTypes%2A> property is used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="1fb91-248"><xref:System.Messaging.XmlMessageFormatter> Sprawia, że użycie <xref:System.Xml.Serialization.XmlSerializer> klasy, która definiuje, jakie można serializować.</span><span class="sxs-lookup"><span data-stu-id="1fb91-248">The <xref:System.Messaging.XmlMessageFormatter> makes use of the <xref:System.Xml.Serialization.XmlSerializer> class, which defines what can be serialized.</span></span> <span data-ttu-id="1fb91-249">Tylko publiczne pola i właściwości publiczne może być Zserializowany.</span><span class="sxs-lookup"><span data-stu-id="1fb91-249">Only public fields and public properties can be serialized.</span></span> <span data-ttu-id="1fb91-250">Struktury, struktury z tablicami i tablice struktur są wszystkie serializacji, pod warunkiem, nie używaj styl zakodowany przy użyciu protokołu SOAP.</span><span class="sxs-lookup"><span data-stu-id="1fb91-250">Structures, structures with arrays, and arrays of structures are all serializable, as long as they do not use the encoded style with the SOAP protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1fb91-251">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-251">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="1fb91-252">- lub - <paramref name="obj" /> parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fb91-252">-or-  The <paramref name="obj" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.XmlMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>