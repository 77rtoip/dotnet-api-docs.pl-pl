<Type Name="SecurityContext" FullName="System.Messaging.SecurityContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8603ce5f07fd6e5af55344297829a0937d45e5a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SecurityContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.SecurityContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SecurityContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContext sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="0bf1d-101">Reprezentuje kontekst zabezpieczeń dla wiadomości w kolejce.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bf1d-101">Represents the security context for a message in a queue.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bf1d-102">Kontekst zabezpieczeń zawiera informacje buforowane zabezpieczeń, takie jak certyfikatu wewnętrznego, odpowiedni klucz prywatny, identyfikator SID użytkownika, potrzebne do dołączenia certyfikatu i identyfikator nadawcy wiadomości podczas żądania uwierzytelniania.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-102">The security context contains cached security information such as an internal certificate, the corresponding private key, the user's SID, needed to attach a certificate and the sender identifier to a message when requesting authentication.</span></span>  
  
 <span data-ttu-id="0bf1d-103">Jeśli klient, np. aplikację ASP.NET personifikuje użytkownika, aby wysłać wiadomość do kolejki, tożsamość użytkownika służy do dostępu do kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-103">If a client, such as an ASP.NET application, impersonates a user to send a message to a queue, the identity of the user is used to access the queue.</span></span> <span data-ttu-id="0bf1d-104">Jeśli kolejka jest zdalny, te poświadczenia są buforowane i używane do wiadomości, które następnie są wysyłane do kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-104">If the queue is remote, these credentials are cached and used for messages that are subsequently sent to the queue.</span></span> <span data-ttu-id="0bf1d-105">W związku z tym identyfikator SID w kolejnych komunikatów, będzie buforowana tożsamość pierwszy użytkownik, który wysłał wiadomość do kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-105">Therefore, the SID in subsequent messages will be the cached identity of the first user that sent a message to the queue.</span></span> <span data-ttu-id="0bf1d-106">Umożliwi to buforowana tożsamość pierwszy użytkownik, który wysłał wiadomość do kolejki kolejnych użytkowników.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-106">The cached identity of the first user that sent a message to the queue will be used for subsequent users.</span></span>  
  
 <span data-ttu-id="0bf1d-107">Aby rozwiązać ten problem, należy ustawić przy użyciu kontekstu zabezpieczeń <xref:System.Messaging.Message.SecurityContext%2A> przed wysłaniem wiadomości do kolejki zdalnej, aby upewnić się, że poświadczenia bieżącego użytkownika są używane do uzyskania dostępu do kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-107">To overcome this problem, set the security context using <xref:System.Messaging.Message.SecurityContext%2A> before sending a message to a remote queue to ensure that the current user's credentials are used to gain access to the queue.</span></span> <span data-ttu-id="0bf1d-108">Jednak sugerowane najlepszym rozwiązaniem jest:</span><span class="sxs-lookup"><span data-stu-id="0bf1d-108">However, the suggested best practice is to:</span></span>  
  
1.  <span data-ttu-id="0bf1d-109">Należy uwierzytelnieni kolejki kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-109">Make the queue an authenticated queue.</span></span>  
  
2.  <span data-ttu-id="0bf1d-110">Uruchom aplikację ASP.NET jako tożsamość domeny i zezwolić tej aplikacji można zapisać do kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-110">Run the ASP.NET application as a domain identity and authorize that application to write to the queue.</span></span>  
  
3.  <span data-ttu-id="0bf1d-111">Nie Personifikuj użytkownika, korzystając z kolejki.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-111">Do not impersonate the user when using the queue.</span></span> <span data-ttu-id="0bf1d-112">Zamiast tego Pobierz tożsamości obiektu wywołującego i przeprowadzić autoryzacji sprawdzanie w aplikacji ASP.NET lub zawierać tożsamości obiektu wywołującego jako część komunikatu i wykonaj sprawdzanie w aplikacji odbiornika autoryzacji.</span><span class="sxs-lookup"><span data-stu-id="0bf1d-112">Instead, get the caller’s identity and either perform authorization checking in the ASP.NET application or include the caller’s identity as part of the message and perform authorization checking in the receiver application.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.SecurityContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0bf1d-113">Zwalnia wszelkie zasoby używane przez <see cref="T:System.Messaging.SecurityContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bf1d-113">Releases all resources used by the <see cref="T:System.Messaging.SecurityContext" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>