<Type Name="ActiveXMessageFormatter" FullName="System.Messaging.ActiveXMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faadf8481cd3fb72c4c4e7cd4f515c7c94f12924" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37647420" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveXMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ActiveXMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveXMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveXMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <TypeSignature Language="F#" Value="type ActiveXMessageFormatter = class&#xA;    interface IMessageFormatter&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c79dc-101">Serializuje lub deserializuje pierwotne typy danych i innych obiektów do i z treści wiadomości usługi kolejkowania komunikatów, przy użyciu formatu, który jest zgodny z składnik ActiveX usługi MSMQ.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c79dc-101">Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c79dc-102"><xref:System.Messaging.ActiveXMessageFormatter> Jest zgodny z komunikaty wysyłane za pomocą składników COM usługi kolejkowania komunikatów, umożliwiając współdziałanie z aplikacji, które używają kontrolki COM usługi MSMQ.</span><span class="sxs-lookup"><span data-stu-id="c79dc-102">The <xref:System.Messaging.ActiveXMessageFormatter> is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.</span></span>  
  
 <span data-ttu-id="c79dc-103"><xref:System.Messaging.ActiveXMessageFormatter> Może wykonywać serializację większość podstawowych, a także obiekty, które implementują `IPersistStream` interfejsu OLE.</span><span class="sxs-lookup"><span data-stu-id="c79dc-103">The <xref:System.Messaging.ActiveXMessageFormatter> can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface.</span></span> <span data-ttu-id="c79dc-104">Może wykonywać deserializację tego samego zestawu elementów podstawowych, ale wymaga więcej nakładu pracy, podczas deserializacji obiektu COM (na przykład obiekt utworzony za pomocą języka Visual Basic 6.0), który implementuje `IPersistStream`.</span><span class="sxs-lookup"><span data-stu-id="c79dc-104">It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`.</span></span> <span data-ttu-id="c79dc-105">Obiekt do deserializacji musi być w pamięci, importując pierwszy obiekt do aplikacji autonomicznej .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c79dc-105">The object to deserialize must be in memory by first importing the object into a .NET Framework application.</span></span>  
  
 <span data-ttu-id="c79dc-106">Gdy aplikacja wysyła komunikat do kolejki za pomocą wystąpienia <xref:System.Messaging.MessageQueue> klasy, element formatujący serializuje obiekt w strumieniu i wstawia je do treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="c79dc-106">When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="c79dc-107">Podczas czytania z kolejki za pomocą <xref:System.Messaging.MessageQueue>, element formatujący deserializuje dane wiadomości do <xref:System.Messaging.Message.Body%2A> właściwość <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="c79dc-107">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="c79dc-108">Serializacja ActiveX jest bardzo niewielki, co sprawia, że za pomocą <xref:System.Messaging.ActiveXMessageFormatter> i MSMQ COM kontrolować bardzo szybkie metody serializacji.</span><span class="sxs-lookup"><span data-stu-id="c79dc-108">ActiveX serialization is very compact, which makes using the <xref:System.Messaging.ActiveXMessageFormatter> and MSMQ COM control a very fast method of serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveXMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveXMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c79dc-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.ActiveXMessageFormatter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-109">Initializes a new instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Messaging.Message -&gt; bool&#xA;override this.CanRead : System.Messaging.Message -&gt; bool" Usage="activeXMessageFormatter.CanRead message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c79dc-110">
            <see cref="T:System.Messaging.Message" /> Do wglądu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-110">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c79dc-111">Określa, czy element formatujący może wykonywać deserializację treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-111">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c79dc-112">
            <see langword="true" /> Jeśli <see cref="T:System.Messaging.ActiveXMessageFormatter" /> może wykonywać deserializację wiadomości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-112">
              <see langword="true" /> if the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c79dc-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> Zwraca `false` czy treść komunikatu nie jest elementu podstawowego, który formant ActiveX usługi kolejkowania komunikatów może wykonywać deserializację, czy nie zawiera implementacji `IPersistStream` interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c79dc-113"><xref:System.Messaging.ActiveXMessageFormatter.CanRead%2A> returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c79dc-114">
            <paramref name="message" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-114">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="activeXMessageFormatter.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c79dc-115">Tworzy wystąpienie <see cref="T:System.Messaging.ActiveXMessageFormatter" /> klasę, która jest taka sama jak bieżący <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-115">Creates an instance of the <see cref="T:System.Messaging.ActiveXMessageFormatter" /> class that is identical to the current <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c79dc-116">Obiekt, którego właściwości są identyczne z tymi tego <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-116">An object whose properties are identical to those of this <see cref="T:System.Messaging.ActiveXMessageFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c79dc-117">Ta metoda jest używana przez <xref:System.Messaging.MessageQueue> klasy, aby odbierać wiele wiadomości w tym samym czasie (na przykład, jeśli aplikacja otrzymuje asynchronicznie).</span><span class="sxs-lookup"><span data-stu-id="c79dc-117">This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously).</span></span> <span data-ttu-id="c79dc-118">Zazwyczaj nie trzeba wywołać tę metodę w kodzie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="c79dc-118">You typically do not need to call this method in your application code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="InitStreamedObject">
      <MemberSignature Language="C#" Value="public static void InitStreamedObject (object streamedObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InitStreamedObject(object streamedObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InitStreamedObject (streamedObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InitStreamedObject(System::Object ^ streamedObject);" />
      <MemberSignature Language="F#" Value="static member InitStreamedObject : obj -&gt; unit" Usage="System.Messaging.ActiveXMessageFormatter.InitStreamedObject streamedObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamedObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="streamedObject">
          <span data-ttu-id="c79dc-119">Obiekt OLE, który implementuje <see langword="IPersistStreamInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-119">An OLE object that implements <see langword="IPersistStreamInit" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c79dc-120">Zapewnia narzędzia pomagające serializacji COM obiekty, które implementują <see langword="IPersistStream" /> i wymagają <see langword="IPersistStreamInit" /> do wywołania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-120">Provides a utility to help serialize COM objects that implement <see langword="IPersistStream" /> and require <see langword="IPersistStreamInit" /> to be called.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.Messaging.Message -&gt; obj&#xA;override this.Read : System.Messaging.Message -&gt; obj" Usage="activeXMessageFormatter.Read message" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c79dc-121">
            <see cref="T:System.Messaging.Message" />, W formacie formantu MSMQ ActiveX do deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-121">The <see cref="T:System.Messaging.Message" />, in MSMQ ActiveX control format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c79dc-122">Odczytuje zawartość z podanym komunikatem i tworzy obiekt, który zawiera komunikat po deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-122">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c79dc-123">Komunikat po deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-123">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c79dc-124">Jeśli treść komunikatu reprezentuje typ pierwotny, komunikat firmy <xref:System.Messaging.Message.BodyType%2A> właściwość musi być jednym z typami zarządzanymi w poniższej tabeli.</span><span class="sxs-lookup"><span data-stu-id="c79dc-124">If the body of the message represents a primitive type, the message's <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.</span></span>  
  
|<span data-ttu-id="c79dc-125">Wartość BodyType</span><span class="sxs-lookup"><span data-stu-id="c79dc-125">BodyType value</span></span>|<span data-ttu-id="c79dc-126">Typ zarządzany</span><span class="sxs-lookup"><span data-stu-id="c79dc-126">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="c79dc-127">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="c79dc-127">VT_LPSTR</span></span>|<span data-ttu-id="c79dc-128"><xref:System.Char> Tablica (deserializacji za pomocą kodu ASCII)</span><span class="sxs-lookup"><span data-stu-id="c79dc-128"><xref:System.Char> array (deserialized using ASCII encoding)</span></span>|  
|<span data-ttu-id="c79dc-129">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="c79dc-129">VT_BSTR, VT_LPWSTR</span></span>|<span data-ttu-id="c79dc-130"><xref:System.String> (przeprowadzona przy użyciu kodowania Unicode)</span><span class="sxs-lookup"><span data-stu-id="c79dc-130"><xref:System.String> (deserialized using Unicode encoding)</span></span>|  
|<span data-ttu-id="c79dc-131">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="c79dc-131">VT_VECTOR &#124; VT_UI1</span></span>|<span data-ttu-id="c79dc-132"><xref:System.Byte> Tablica</span><span class="sxs-lookup"><span data-stu-id="c79dc-132"><xref:System.Byte> array</span></span>|  
|<span data-ttu-id="c79dc-133">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="c79dc-133">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="c79dc-134">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="c79dc-134">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="c79dc-135">VT_CY</span><span class="sxs-lookup"><span data-stu-id="c79dc-135">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="c79dc-136">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="c79dc-136">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="c79dc-137">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="c79dc-137">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="c79dc-138">VT_I2</span><span class="sxs-lookup"><span data-stu-id="c79dc-138">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="c79dc-139">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="c79dc-139">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="c79dc-140">VT_I4</span><span class="sxs-lookup"><span data-stu-id="c79dc-140">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="c79dc-141">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="c79dc-141">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="c79dc-142">VT_I8</span><span class="sxs-lookup"><span data-stu-id="c79dc-142">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="c79dc-143">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="c79dc-143">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="c79dc-144">VT_R4</span><span class="sxs-lookup"><span data-stu-id="c79dc-144">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="c79dc-145">VT_R8</span><span class="sxs-lookup"><span data-stu-id="c79dc-145">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="c79dc-146">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="c79dc-146">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="c79dc-147">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="c79dc-147">VT_STREAMED_OBJECT</span></span>|<xref:System.Object>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c79dc-148">
            <see cref="P:System.Messaging.Message.BodyType" /> Właściwość <paramref name="message" /> przekazany jako parametr, nie można zamapować na typ pierwotny, ani nie reprezentuje obiekt przesyłane strumieniowo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-148">The <see cref="P:System.Messaging.Message.BodyType" /> property of the <paramref name="message" /> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="c79dc-149">Jednostka reprezentuje przechowywany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-149">The body represents a stored object.</span>
          </span>
          <span data-ttu-id="c79dc-150">
            <see cref="T:System.Messaging.ActiveXMessageFormatter" /> Nie obsługuje deserializacji obiektu danych przechowywanych obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-150">The <see cref="T:System.Messaging.ActiveXMessageFormatter" /> does not support deserialization of stored objects.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c79dc-151">
            <paramref name="message" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-151">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Messaging.Message * obj -&gt; unit&#xA;override this.Write : System.Messaging.Message * obj -&gt; unit" Usage="activeXMessageFormatter.Write (message, obj)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="c79dc-152">
            <see cref="T:System.Messaging.Message" /> Którego <see cref="P:System.Messaging.Message.Body" /> właściwość będzie zawierać Zserializowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-152">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="c79dc-153">Obiekt do zserializowania do treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-153">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c79dc-154">Serializuje obiekt w treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-154">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c79dc-155">W poniższej tabeli przedstawiono związek między typami zarządzanymi i <xref:System.Messaging.Message.BodyType%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="c79dc-155">The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property.</span></span> <span data-ttu-id="c79dc-156">Obiekt, który można serializować musi mieć jedną z następujących typów zarządzanych lub musi implementować OLE `IPersistStream` interfejsu.</span><span class="sxs-lookup"><span data-stu-id="c79dc-156">The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.</span></span>  
  
|<span data-ttu-id="c79dc-157">Wartość BodyType</span><span class="sxs-lookup"><span data-stu-id="c79dc-157">BodyType value</span></span>|<span data-ttu-id="c79dc-158">Typ zarządzany</span><span class="sxs-lookup"><span data-stu-id="c79dc-158">Managed type</span></span>|  
|--------------------|------------------|  
|<span data-ttu-id="c79dc-159">VT_LPSTR</span><span class="sxs-lookup"><span data-stu-id="c79dc-159">VT_LPSTR</span></span>|<xref:System.Char>|  
|<span data-ttu-id="c79dc-160">VT_BSTR, VT_LPWSTR</span><span class="sxs-lookup"><span data-stu-id="c79dc-160">VT_BSTR, VT_LPWSTR</span></span>|<xref:System.String>|  
|<span data-ttu-id="c79dc-161">VT_VECTOR &AMP;#124; VT_UI1</span><span class="sxs-lookup"><span data-stu-id="c79dc-161">VT_VECTOR &#124; VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="c79dc-162">VT_BOOL</span><span class="sxs-lookup"><span data-stu-id="c79dc-162">VT_BOOL</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="c79dc-163">VT_CLSID</span><span class="sxs-lookup"><span data-stu-id="c79dc-163">VT_CLSID</span></span>|<xref:System.Guid>|  
|<span data-ttu-id="c79dc-164">VT_CY</span><span class="sxs-lookup"><span data-stu-id="c79dc-164">VT_CY</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="c79dc-165">VT_DATE</span><span class="sxs-lookup"><span data-stu-id="c79dc-165">VT_DATE</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="c79dc-166">VT_I1, VT_UI1</span><span class="sxs-lookup"><span data-stu-id="c79dc-166">VT_I1, VT_UI1</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="c79dc-167">VT_I2</span><span class="sxs-lookup"><span data-stu-id="c79dc-167">VT_I2</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="c79dc-168">VT_UI2</span><span class="sxs-lookup"><span data-stu-id="c79dc-168">VT_UI2</span></span>|<xref:System.UInt16>|  
|<span data-ttu-id="c79dc-169">VT_I4</span><span class="sxs-lookup"><span data-stu-id="c79dc-169">VT_I4</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="c79dc-170">VT_UI4</span><span class="sxs-lookup"><span data-stu-id="c79dc-170">VT_UI4</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="c79dc-171">VT_I8</span><span class="sxs-lookup"><span data-stu-id="c79dc-171">VT_I8</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="c79dc-172">VT_UI8</span><span class="sxs-lookup"><span data-stu-id="c79dc-172">VT_UI8</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="c79dc-173">VT_R4</span><span class="sxs-lookup"><span data-stu-id="c79dc-173">VT_R4</span></span>|<xref:System.Single>|  
|<span data-ttu-id="c79dc-174">VT_R8</span><span class="sxs-lookup"><span data-stu-id="c79dc-174">VT_R8</span></span>|<xref:System.Double>|  
|<span data-ttu-id="c79dc-175">VT_NULL</span><span class="sxs-lookup"><span data-stu-id="c79dc-175">VT_NULL</span></span>|`null`|  
|<span data-ttu-id="c79dc-176">VT_STREAMED_OBJECT</span><span class="sxs-lookup"><span data-stu-id="c79dc-176">VT_STREAMED_OBJECT</span></span>|<span data-ttu-id="c79dc-177">`IPersistStream` (OLE) <xref:System.Object></span><span class="sxs-lookup"><span data-stu-id="c79dc-177">`IPersistStream` (OLE) <xref:System.Object></span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c79dc-178">Obiekt do zserializowania nie jest podstawowy ani przesyłane strumieniowo obiekt, który implementuje OLE <see langword="IPersistStream" /> interfejsu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-178">The object to serialize is neither a primitive nor a streamed object that implements the OLE <see langword="IPersistStream" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c79dc-179">
            <paramref name="message" /> Parametr <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c79dc-179">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>