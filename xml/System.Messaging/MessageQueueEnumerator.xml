<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageQueueEnumerator.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52dd645dcfd97fa2036ad0395acbbbf3e86c2865e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2dd645dcfd97fa2036ad0395acbbbf3e86c2865e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Provides a forward-only cursor to enumerate through messages in a message queue.</source>
          <target state="translated">Zawiera tylko do przodu kursora do sortowania wiadomości z kolejki wiadomości.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> for dynamic interaction with queues on the network.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> dynamiczne interakcji z kolejki w sieci.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Methods available through the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class can return either a <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> containing a dynamic list of queues, or an array that contains a snapshot of the queue collection at the time the specified method was called.</source>
          <target state="translated">Dostępne za pośrednictwem metody <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> klasy mogą zwracać <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> zawierającego listę dynamicznej kolejki lub tablica zawierająca migawki kolekcji kolejki w czasie określonym metoda została wywołana.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>There is no defined ordering of queues in a network.</source>
          <target state="translated">Nie ma zdefiniowanej kolejności kolejek w sieci.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>They are not ordered, for example, by computer, label, public or private status, or other user-accessible criteria.</source>
          <target state="translated">Nie są one uporządkowane, na przykład przez komputer, etykiety, stan publicznych lub prywatnych lub innych kryteriów dostępne dla użytkownika.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> is a cursor, initialized to the head of a dynamic list.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> jest kursor, zainicjować nagłówek listy dynamicznych.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>You can move the cursor to the first queue of the enumeration by calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">Kursor można przenieść do pierwszej kolejki wyliczenia, wywołując <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>After the enumerator has been initialized, you can use <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to step forward through the remaining queues.</source>
          <target state="translated">Po zainicjowaniu modułu wyliczającego można użyć <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> do krok do przodu w pozostałych kolejek.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>It is not possible to step backward with a <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</source>
          <target state="translated">Nie jest możliwe krok wstecz z <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A cursor only allows forward movement through the queue enumeration.</source>
          <target state="translated">Kursor umożliwia tylko ruch do przodu przez wyliczenie kolejki.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>However, you can call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to reset the enumeration and put the cursor at the beginning of the list again.</source>
          <target state="translated">Jednak możesz wywołać <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> zresetować wyliczenia i umieść kursor na początku listy ponownie.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Because the enumerator is dynamic, a queue that is appended beyond the cursor's current position can be accessed by the enumerator.</source>
          <target state="translated">Ponieważ moduł wyliczający jest dynamiczny, kolejki, która jest dołączana poza bieżącej pozycji kursora są dostępne przez moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>A queue that is inserted before the cursor's current position cannot be accessed without first calling Reset.</source>
          <target state="translated">Kolejki, która dodaje się przed bieżącej pozycji kursora nie można uzyskać dostęp bez pierwsze wywołanie resetowania.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>The following code example iterates through all the message queues in the network, and examines the path for each queue.</source>
          <target state="translated">Poniższy przykład kodu iteruje kolejek wiadomości w sieci i sprawdza, czy ścieżka do każdej kolejki.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Finally, it displays the number of public queues on the network.</source>
          <target state="translated">Na koniec Wyświetla liczbę kolejek publicznych w sieci.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>Frees the resources associated with the enumerator.</source>
          <target state="translated">Zwalnia zasoby skojarzone z modułu wyliczającego.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>The operating system retains an open handle, <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, to the queue enumerator during the lifetime of the cursor.</source>
          <target state="translated">System operacyjny ma zachowywać otwarte dojście <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.LocatorHandle%2A&gt;</ph>, aby moduł wyliczający kolejki przez cały okres istnienia kursora.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Close">
          <source>When you finish working with the enumerator, call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to release the resources associated with the handle.</source>
          <target state="translated">Po zakończeniu pracy z modułu wyliczającego, wywołaj <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> aby zwolnić zasoby skojarzone z dojścia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Pobiera bieżący <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">Kolejka, w którym aktualnie znajduje się kursor.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>When the enumerator is created, it does not point to anything, so <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> is not valid and will throw an exception if it is accessed.</source>
          <target state="translated">Po utworzeniu modułu wyliczającego nie wskazuje on na niczego, więc <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> nie jest prawidłowy i zgłosi wyjątek, jeśli jest on dostępny.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You must call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> to position the cursor at the first queue in the enumeration.</source>
          <target state="translated">Należy wywołać <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> aby umieść kursor w pierwszym kolejką w wyliczeniu.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>Multiple calls to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> with no intervening calls to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> object.</source>
          <target state="translated">Wiele wywołań <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> nie pośredniczące wywołania <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> , którą będzie zwracać taki sam <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> before the first call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</source>
          <target state="translated">Należy wywołać <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> przed pierwszym wywołaniu <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>The cursor is located before the first queue in the enumeration.</source>
          <target state="translated">Kursor znajduje się przed pierwszym kolejką w wyliczeniu.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.Current">
          <source>You called <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> after a call to <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> had returned false (indicating the cursor is located after the last queue in the enumeration).</source>
          <target state="translated">Należy wywołać <ph id="ph1">&lt;see cref="P:System.Messaging.MessageQueueEnumerator.Current" /&gt;</ph> po wywołaniu <ph id="ph2">&lt;see cref="M:System.Messaging.MessageQueueEnumerator.MoveNext" /&gt;</ph> zwrócił wartość false, (wskazujący, gdy kursor znajduje się za ostatnią kolejką w wyliczeniu).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Messaging.MessageQueueEnumerator">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Zwalnia zasoby używane przez <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</source>
          <target state="translated">Zwalnia wszelkie zasoby używane przez <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Wywoływanie <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> umożliwia zasoby używane przez <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> odbiorczego do innych celów.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph>, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby zwolnić zasoby zarządzane i niezarządzane; <ph id="ph2">&lt;see langword="false" /&gt;</ph> aby zwolnić tylko zasoby niezarządzane.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Zwalnia zasoby niezarządzane używane przez <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueueEnumerator" /&gt;</ph> i opcjonalnie zwalnia zasoby zarządzane.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Ta metoda jest wywoływana przez metodę publiczną <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Dispose%2A&gt;</ph> — metoda i <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> metody.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> wywołuje chronioną metodę <ph id="ph2">`Dispose(Boolean)`</ph> metody z <ph id="ph3">`disposing`</ph> ustawiono parametr <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> wywołuje <ph id="ph2">`Dispose`</ph> z <ph id="ph3">`disposing`</ph> ustawioną <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> references.</source>
          <target state="translated">Gdy <ph id="ph1">`disposing`</ph> parametr jest <ph id="ph2">`true`</ph>, ta metoda zwalnia wszystkie zasoby zajmowane przez wszelkie obiekty zarządzane przez to <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> odwołania.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">Ta metoda wywołuje <ph id="ph1">`Dispose`</ph> metody każdego odwołuje się do obiektu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> można wywoływać wielokrotnie przez inne obiekty.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">W przypadku przesłaniania <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat sposobu wdrażania <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>implementacja metody Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> i <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, zobacz <bpt id="p1">[</bpt>czyszczenie zasobów niezarządzanych<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> i <bpt id="p2">[</bpt>przesłaniania metody Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>Gets the native Message Queuing handle used to locate queues in a network.</source>
          <target state="translated">Pobiera usługę kolejkowania komunikatów uchwyt macierzysty używany do lokalizowania kolejek w sieci.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The native handle to the current queue.</source>
          <target state="translated">Uchwyt macierzysty do bieżącego kolejki.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>When you no longer need this <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> instance, call <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> to free this handle to the resource.</source>
          <target state="translated">Jeśli nie są już potrzebne to <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator&gt;</ph> wystąpienia, należy wywołać <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Close%2A&gt;</ph> zwolnienia ta dojścia do zasobu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The handle does not exist.</source>
          <target state="translated">Dojście nie istnieje.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.LocatorHandle">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Kod wywołujący nie ma uprawnień do przeglądania.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Advances the enumerator to the next queue of the enumeration, if one is currently available.</source>
          <target state="translated">Przechodzi do następnego kolejki wyliczenia, moduł wyliczający, jeśli jest obecnie dostępny.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next queue; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has reached the end of the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli moduł wyliczający został pomyślnie poprawionym do kolejki dalej; <ph id="ph2">&lt;see langword="false" /&gt;</ph> Jeśli moduł wyliczający osiągnął koniec wyliczenia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph> immediately if there are no queues associated with the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> Zwraca <ph id="ph2">`false`</ph> natychmiast, jeśli istnieją kolejek skojarzonych z wyliczenia.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> will return <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> Zwraca <ph id="ph2">`true`</ph> dopóki osiągnie koniec kolekcji.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>It will then return <ph id="ph1">`false`</ph> for each successive call.</source>
          <target state="translated">Następnie zwróci <ph id="ph1">`false`</ph> dla każdego kolejne wywołania.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>However once <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> property will throw an exception.</source>
          <target state="translated">Jednak po <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> zwrócił <ph id="ph2">`false`</ph>, podczas uzyskiwania dostępu do <ph id="ph3">&lt;xref:System.Messaging.MessageQueueEnumerator.Current%2A&gt;</ph> właściwość spowoduje zgłoszenie wyjątku.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>Upon creation, an enumerator is conceptually positioned before the first <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> of the enumeration, and the first call to <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> brings the first queue of the enumeration into view.</source>
          <target state="translated">Po utworzeniu, moduł wyliczający jest koncepcyjnie ustawiony przed pierwszym <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> wyliczenia i w pierwszym wywołaniu <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> przełącza pierwszej kolejki wyliczenia do widoku.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.MoveNext">
          <source>The calling code does not have browse permissions.</source>
          <target state="translated">Kod wywołujący nie ma uprawnień do przeglądania.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Resets the cursor, so it points to the beginning of the enumeration.</source>
          <target state="translated">Resetuje kursora, więc wskazuje na początku wyliczenia.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>An enumerator moves in a forward-only direction.</source>
          <target state="translated">Moduł wyliczający przenosi kierunku tylko do przodu.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>Use this method to return to the beginning of the enumeration of queues.</source>
          <target state="translated">Ta metoda umożliwia powrót do początku wyliczenie kolejek.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> positions the cursor at the first queue in the list.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> kursor zostanie umieszczony w kolejce pierwszy na liście.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.MessageQueueEnumerator.Reset">
          <source>You do not need to call <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> after calling <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> to move the cursor forward to the first queue in the enumeration.</source>
          <target state="translated">Nie należy wywołać <ph id="ph1">&lt;xref:System.Messaging.MessageQueueEnumerator.MoveNext%2A&gt;</ph> po wywołaniu <ph id="ph2">&lt;xref:System.Messaging.MessageQueueEnumerator.Reset%2A&gt;</ph> Aby przesunąć kursor do przodu do pierwszego kolejką w wyliczeniu.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> of the enumeration.</source>
          <target state="translated">Pobiera bieżący <ph id="ph1">&lt;see cref="T:System.Messaging.MessageQueue" /&gt;</ph> wyliczenia.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.MessageQueueEnumerator.System#Collections#IEnumerator#Current">
          <source>The queue at which the cursor is currently positioned.</source>
          <target state="translated">Kolejka, w którym aktualnie znajduje się kursor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>