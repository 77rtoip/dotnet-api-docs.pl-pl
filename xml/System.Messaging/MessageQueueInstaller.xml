<Type Name="MessageQueueInstaller" FullName="System.Messaging.MessageQueueInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2169da977692b3e7ae0fe99175aa7991d83a31df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30558787" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MessageQueueInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageQueueInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.MessageQueueInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class MessageQueueInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageQueueInstaller : System::Configuration::Install::ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia zainstalowanie i skonfigurowanie kolejki, która aplikacja wymaga, aby można było uruchomić. Ta klasa jest wywoływana przez narzędzie instalacji na przykład InstallUtil.exe, instalując <see cref="T:System.Messaging.MessageQueue" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller> Jest używany przez narzędzie instalacji można zapisać wartości rejestru, które są skojarzone z kolejki. Aby uzyskać więcej informacji na temat instalacji narzędzia, zobacz [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md).  
  
 Aby zainstalować kolejki, Utwórz klasę Instalatora projektu dziedziczący z <xref:System.Configuration.Install.Installer>i ustaw <xref:System.ComponentModel.RunInstallerAttribute> dla klasy do `true`. W projekcie, Utwórz <xref:System.Messaging.MessageQueueInstaller> wystąpienia dla każdej kolejki w instalacji i dodaj je do projektu klasy Instalatora.  
  
 Podczas tworzenia <xref:System.Messaging.MessageQueueInstaller> wystąpienia, można opcjonalnie przekazać istniejące <xref:System.Messaging.MessageQueue> (na przykład z to serwer testowy) do <xref:System.Messaging.MessageQueueInstaller.%23ctor%2A> konstruktora. Takie podejście automatycznie zawiera ustawienia konfiguracji dla nowej kolejki Dublując ustawienia kolejki przekazany. Możesz też ręcznie można ustawić właściwości w <xref:System.Messaging.MessageQueueInstaller> wystąpienia stanów mają i wywołania konstruktora domyślnego.  
  
 Po instalacji narzędzie szuka <xref:System.ComponentModel.RunInstallerAttribute>. Jeśli jest `true`, narzędzie instaluje wszystkie kolejki w <xref:System.Configuration.Install.Installer.Installers%2A> kolekcję skojarzoną z Instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest `false`, narzędzie ignoruje Instalator projektu.  
  
 Zmodyfikuj inne właściwości <xref:System.Messaging.MessageQueueInstaller> wystąpienia przed lub po dodaniu wystąpienia <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji Instalatorem projektu. Na przykład kolejki <xref:System.Messaging.MessageQueue.Path%2A> musi być ustawiona przed wykonaniem narzędzie instalacji.  
  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie installutil.exe instalacji. Narzędzie automatycznie wywołuje <xref:System.Messaging.MessageQueueInstaller.Install%2A> metody podczas procesu instalacji i wywołania <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Jeśli instalacja nie zgłosiła wyjątek. Go utworzyć kopię zapasową limit niepowodzeń, jeśli to konieczne, przez wywołanie metody <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> dla obiektu, który wygenerował wyjątek.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatycznie zachowywane informacji o składnikach, które zostały już zainstalowane. Informacje o stanie jest stale aktualizowany, ponieważ do każdego <xref:System.Messaging.MessageQueueInstaller> przez narzędzie jest zainstalowane wystąpienie. Nie jest zazwyczaj konieczne dla swój kod, aby jawnie modyfikować informacje o stanie.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.MessageQueueInstaller" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.MessageQueueInstaller" /> klasy. Nie Ustaw właściwości wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageQueueInstaller (System.Messaging.MessageQueue componentToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Messaging.MessageQueue componentToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.#ctor(System.Messaging.MessageQueue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (componentToCopy As MessageQueue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageQueueInstaller(System::Messaging::MessageQueue ^ componentToCopy);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="componentToCopy" Type="System.Messaging.MessageQueue" />
      </Parameters>
      <Docs>
        <param name="componentToCopy">
          <see cref="T:System.Messaging.MessageQueue" /> Składników, których ustawienia określają ustawienia właściwości nowej kolejki zainstalowane.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.MessageQueueInstaller" /> klasy inicjowania ustawień instalacji tych istniejącego <see cref="T:System.Messaging.MessageQueue" /> wystąpienia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public bool Authenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Authenticate" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Authenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property Authenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Authenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kolejka instalowanego akceptuje tylko wiadomości uwierzytelnione.</summary>
        <value>
          <see langword="true" /> Jeśli kolejka akceptuje tylko wiadomości uwierzytelnione; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas wysyłania nieuwierzytelnionych wiadomości do kolejki, która akceptuje tylko wiadomości uwierzytelnione, wiadomość jest odrzucana. Aplikacja wysyłająca może zażądać powiadomienia o odrzucenie wiadomości przez ustawienie <xref:System.Messaging.Message.AcknowledgeType%2A> dla wiadomości. W przeciwnym razie nie nie wskazuje, czy wiadomość została odrzucona, więc wiadomości mogą zostać utracone, jeśli nie zostanie wysłana do kolejki utraconych wiadomości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePriority">
      <MemberSignature Language="C#" Value="public short BasePriority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 BasePriority" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.BasePriority" />
      <MemberSignature Language="VB.NET" Value="Public Property BasePriority As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short BasePriority { short get(); void set(short value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podstawowy priorytet, który służy do kierowania wiadomości z kolejki publicznej za pośrednictwem sieci.</summary>
        <value>Pojedynczy podstawowy priorytet dla wszystkich wiadomości wysłanych do kolejki publicznej. Wartość domyślna to zero (0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Jest używany dla routingu wiadomości z kolejki przez sieć. Użyj <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> umożliwiają komunikaty wysłane do kolejki wyższy lub niższy priorytet niż w przypadku wiadomości wysyłanych do innych kolejek. Priorytet podstawowy kolejki jest ustawiona, wszystkie komunikaty wysyłane do niego otrzymuje wyższy priorytet niż komunikaty wysłane do kolejki z niższym priorytetem podstawowy. Priorytet podstawowy kolejki nie ma znaczenia rzędu wiadomości w kolejce lub w sposób są odczytywane wiadomości z kolejki.  
  
 <xref:System.Messaging.MessageQueueInstaller.BasePriority%2A> Ma zastosowanie tylko do publicznej kolejki, które są dostępne za pośrednictwem kontrolera domeny (innymi słowy, przy użyciu nazwy formatu publicznej). Priorytet podstawowy kolejek prywatnych i bezpośrednio dostęp do kolejek publicznych to zawsze zero.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public Guid Category { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Category" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Category" />
      <MemberSignature Language="VB.NET" Value="Public Property Category As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Category { Guid get(); void set(Guid value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.GuidConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ kolejki konkretnej implementacji.</summary>
        <value>A <see cref="T:System.Guid" /> reprezentujący kategorii kolejki (lub identyfikator typu usługi kolejkowania komunikatów), który umożliwia aplikacjom kategoryzowanie kolejek według sposobu ich używania. Wartość domyślna to <see langword="Guid.empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kategoria kolejki umożliwia aplikacjom kategoryzowanie skojarzone kolejek według sposobu ich użycia. <xref:System.Messaging.MessageQueue.Category%2A> Może być odwołaniem o wartości null. Można również zdefiniować nową kategorię.  
  
 <xref:System.Messaging.MessageQueue.Category%2A> Właściwości zapewnia dostęp do usługi kolejkowania komunikatów typu identyfikatora właściwości, która jest skojarzona z określonej kolejki i odczytu/zapisu. Można użyć <xref:System.Guid.NewGuid%2A> metodę w celu utworzenia wartość kategorię, która jest musi być unikatowy dla wszystkich <xref:System.Guid> wartości. Jednak jest niezbędne tylko w przypadku wartości kategorii się różnić od innych kategoriach, nie za wszystkie inne <xref:System.Guid> wartości. Na przykład można ustawić <xref:System.Messaging.MessageQueue.Category%2A> dla jednej grupy kolejki, aby {00000000-0000-0000-0000-000000000001} i <xref:System.Messaging.MessageQueue.Category%2A> do innej grupy do {00000000-0000-0000-0000-000000000002}.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public override void Commit (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Commit(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Commit (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Commit(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> zawierający stan komputera po instalacji.</param>
        <summary>Kończy proces instalacji zatwierdzania <see cref="T:System.Messaging.MessageQueue" /> informacji o instalacji który <see cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" /> metody zapisano w rejestrze. Ta metoda jest przeznaczona do użycia przez instalacji narzędzia, które automatycznie wywoływać metod odpowiednie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie installutil.exe instalacji. Narzędzie automatycznie wywołuje <xref:System.Messaging.MessageQueueInstaller.Install%2A> metody w ramach procesu instalacji. Instalacja jest transakcyjna, więc jeśli nastąpiło uszkodzenie instalacji części projektu podczas instalacji, wszystkie wcześniej zainstalowane składniki są z powrotem obniżyć do stanu przed instalacją. Jest to osiągane przez wywołanie każdego składnika <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> metody.  
  
 Po pomyślnym zainstalowaniu wszystkich składników, które są skojarzone z projektem instalacji wystąpił, narzędzie instalacji zatwierdza instalacji. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> ukończy instalację programu <xref:System.Messaging.MessageQueue> przez ustawienie kolejki odpowiedni stan początkowy. Jeśli kolejka określony przez <xref:System.Messaging.MessageQueueInstaller.Path%2A> właściwość już istnieje i zawiera komunikaty, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Czyści wiadomości. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, a nie <xref:System.Messaging.MessageQueueInstaller.Install%2A>, czyści wiadomości, ponieważ czynność przeczyszczanie komunikaty nie zostaną wycofane.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatycznie zachowywane informacji o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Messaging.MessageQueueInstaller.Commit%2A> jako `savedState` jako narzędzie zatwierdza każdego parametru jest stale aktualizowany <xref:System.Messaging.MessageQueueInstaller> wystąpienia. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie. Po wyczyszczeniu kolejki <xref:System.Messaging.MessageQueueInstaller.Commit%2A> ogłoszeń Wpis dziennika w celu `savedState` skojarzonego z instalacją.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">A <see cref="T:System.ComponentModel.IComponent" /> do użycia jako szablon dla <see cref="T:System.Messaging.MessageQueueInstaller" />.</param>
        <summary>Kopiuje wartości właściwości <see cref="T:System.Messaging.MessageQueue" /> składników, które są wymagane w czasie instalacji kolejki wiadomości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie installutil.exe instalacji. <xref:System.Messaging.MessageQueueInstaller.CopyFromComponent%2A> jest używany przez narzędzie instalacji można ustawić wartości właściwości <xref:System.Messaging.MessageQueueInstaller> wartości istniejącej <xref:System.Messaging.MessageQueue>.  
  
 Jeśli <xref:System.Messaging.MessageQueue.Path%2A> z <xref:System.Messaging.MessageQueue> czyli przekazano to ciąg pusty (""), należy ustawić <xref:System.Messaging.MessageQueue.Path%2A> właściwości na wartość pusta, przed wykonaniem Instalator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Składnik skojarzony z tym <see cref="T:System.Messaging.MessageQueueInstaller" /> nie jest <see cref="T:System.Messaging.MessageQueue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionRequired">
      <MemberSignature Language="C#" Value="public System.Messaging.EncryptionRequired EncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Messaging.EncryptionRequired EncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.EncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Property EncryptionRequired As EncryptionRequired" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::EncryptionRequired EncryptionRequired { System::Messaging::EncryptionRequired get(); void set(System::Messaging::EncryptionRequired value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.EncryptionRequired</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kolejka akceptuje tylko lub zaszyfrowany, prywatnych wiadomości.</summary>
        <value>Jeden z <see cref="T:System.Messaging.EncryptionRequired" /> wartości, które wskazuje szyfrowania wymagany poziom komunikatów wysłanych do kolejki. Wartość domyślna to <see langword="Optional" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy szyfrowania jest określona, tylko <xref:System.Messaging.Message.Body%2A> wiadomości są szyfrowane. Inne właściwości, takie jak <xref:System.Messaging.Message.Label%2A>, nie są szyfrowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">A <see cref="T:System.Collections.IDictionary" /> używany do zapisywania informacji niezbędnych do przeprowadzenia operacji zatwierdzania, wycofywania lub odinstalować operacji.</param>
        <summary>Przeprowadza instalację i zapisuje informacje kolejki komunikatów w rejestrze. Ta metoda jest przeznaczona do użycia przez instalacji narzędzia, które automatycznie wywoływać metod odpowiednie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Install%2A> Metody zapisuje informacje kolejki komunikatów w rejestrze i kojarzy <xref:System.Messaging.MessageQueue> wystąpienia z kolejki, która znajduje się w ścieżce określonej przez <xref:System.Messaging.MessageQueueInstaller.Path%2A> właściwości. Jeśli kolejka nie istnieje, <xref:System.Messaging.MessageQueueInstaller.Install%2A> tworzy kolejką transakcyjną. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Ustawia właściwości nowej lub istniejącej kolejki do tych, które zostały określone w <xref:System.Messaging.MessageQueueInstaller>. Jeśli kolejka już istnieje, jego właściwości są resetowane do tych <xref:System.Messaging.MessageQueueInstaller>. Jeśli istniejącej kolejki nie jest transakcyjna, usunięte i jest tworzony ponownie jako kolejką transakcyjną.  
  
> [!CAUTION]
>  Jeśli jest konieczne ponowne utworzenie kolejki komunikatów w kolejce zostaną utracone.  
  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie installutil.exe instalacji. Narzędzie automatycznie wywołuje <xref:System.Messaging.MessageQueueInstaller.Install%2A> metody w ramach procesu instalacji można zapisać informacji rejestru, który jest skojarzony z kolejki wiadomości instalowane. Instalacja jest transakcyjna, więc jeśli nastąpiło uszkodzenie instalacji części projektu podczas instalacji, wszystkie wcześniej zainstalowane składniki są z powrotem obniżyć do stanu przed instalacją. Jest to osiągane przez wywołanie każdego składnika <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> metody.  
  
 Po pomyślnym zainstalowaniu wszystkich składników, które są skojarzone z projektem instalacji wystąpił, narzędzie instalacji zatwierdza instalacji. <xref:System.Messaging.MessageQueueInstaller.Commit%2A> ukończy instalację programu <xref:System.Messaging.MessageQueue> przez ustawienie kolejki odpowiedni stan początkowy. Jeśli kolejka określony przez <xref:System.Messaging.MessageQueueInstaller.Path%2A> właściwość już istnieje i zawiera komunikaty, <xref:System.Messaging.MessageQueueInstaller.Commit%2A> Czyści wiadomości. <xref:System.Messaging.MessageQueueInstaller.Commit%2A>, a nie <xref:System.Messaging.MessageQueueInstaller.Install%2A>, czyści wiadomości, ponieważ czynność przeczyszczanie komunikaty nie zostaną wycofane.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatycznie zachowywane informacji o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Messaging.MessageQueueInstaller.Install%2A> jako `stateSaver` jako narzędzie instaluje każdego parametru jest stale aktualizowany <xref:System.Messaging.MessageQueueInstaller> wystąpienia. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Instalator do porównania.</param>
        <summary>Określa, czy określony Instalator może obsłużyć tego samego rodzaju instalację tego Instalatora.</summary>
        <returns>
          <see langword="true" /> Jeśli tego Instalatora i Instalator określonego przez <paramref name="otherInstaller" /> parametru może obsłużyć taki sam rodzaj instalacji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj <xref:System.Configuration.Install.ComponentInstaller.IsEquivalentInstaller%2A> zwraca `true` tylko wtedy, gdy tego Instalatora i Instalator określonego przez `otherInstaller` parametru są tego samego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opis kolejki.</summary>
        <value>Etykieta opisujący kolejki wiadomości. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueue.Label%2A> Właściwości muszą być unikatowe kolejek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Label" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumJournalSize">
      <MemberSignature Language="C#" Value="public long MaximumJournalSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumJournalSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumJournalSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumJournalSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumJournalSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar dziennika, który jest skojarzony z kolejką.</summary>
        <value>Maksymalny rozmiar w kilobajtach kolejki dziennika, który rejestruje komunikaty, które zostały usunięte z kolejki. Domyślnie usługi kolejkowania komunikatów nie ma żadnych ograniczeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia kolejki usługi kolejkowania komunikatów automatycznie tworzy dziennika kolejki w tej samej lokalizacji co nowej kolejki. Dziennik kolejki jest używane do śledzenia komunikatów, które są usuwane z kolejki.  
  
 Dwa typy komunikatów pozostają nieśledzonych: te, które są usuwane z kolejki, ponieważ wygasła ważność zegara ich czas do odbioru oraz te, które zostaną usunięte z kolejki.  
  
 Aplikacje nie mogą wysyłać wiadomości do kolejki dziennika. Jednak należy okresowo czyścić kolejki, aby usunąć wiadomości, które nie są już potrzebne. Przechowywane liczby kolejek dziennika w limicie przydziału dla komputera, na którym znajdują się kolejki wiadomości. (Przydział komputera jest ustawiany przez administratora).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumQueueSize">
      <MemberSignature Language="C#" Value="public long MaximumQueueSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumQueueSize" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MaximumQueueSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumQueueSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumQueueSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar kolejki.</summary>
        <value>Maksymalny rozmiar w kilobajtach kolejki. Domyślnie usługi kolejkowania komunikatów nie ma żadnych ograniczeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Maksymalny rozmiar kolejki jest zwykle ustawiana podczas tworzenia kolejki, mimo że można je zresetować później.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MulticastAddress">
      <MemberSignature Language="C#" Value="public string MulticastAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MulticastAddress" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.MulticastAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MulticastAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wprowadzono w usłudze MSMQ 3.0. Pobiera lub ustawia adres multiemisji skojarzony z kolejką.</summary>
        <value>A <see cref="T:System.String" /> zawiera nieprawidłowy adres multiemisji (w postaci pokazano poniżej) lub <see langword="null" />, co oznacza, że kolejka nie jest skojarzony z adresem multiemisji.  
  
```  
&lt;address&gt;:&lt;port&gt;  
```</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">Usługa MSMQ 3.0 nie jest zainstalowany.</exception>
        <altmember cref="P:System.Messaging.MessageQueue.MulticastAddress" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Messaging.Design.QueuePathEditor", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia lokalizację kolejki, do której odwołuje się ten obiekt.</summary>
        <value>Ścieżka, który reprezentuje lokalizację kolejki w sieci.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnia <xref:System.Messaging.MessageQueue.Path%2A> właściwości zależy od typu kolejki on odwołania. W poniższej tabeli przedstawiono składnię, musi być używane dla kolejek różnych typów.  
  
|Typ kolejki|Składnia|  
|----------------|------------|  
|Kolejki publicznej|`machineName`\\`queueName`|  
|Kolejki prywatnej|`machineName`\\`Private$`\\`queueName`|  
|Kolejki dziennika|`machineName`\\`queueName`\\`Journal$`|  
|Kolejki dziennika komputera|`machineName`\\`Journal$`|  
|Kolejki utraconych wiadomości maszyny|`machineName`\\`Deadletter$`|  
|Kolejka utraconych wiadomości transakcyjnych komputera|`machineName`\\`XactDeadletter$`|  
  
 Użyj "." na komputerze lokalnym.  
  
 Można również użyć <xref:System.Messaging.MessageQueue.FormatName%2A> lub <xref:System.Messaging.MessageQueue.Label%2A> obiektu aplikacji usługi kolejkowania komunikatów do opisywania na ścieżkę kolejki. W poniższej tabeli przedstawiono składnię właściwe dla każdego typu odwołania.  
  
|Tematy pomocy|Składnia|  
|---------------|------------|  
|Nazwa formatu|FormatName: [ *nazwy formatu* ]|  
|Etykieta|Etykiety: [ *etykiety* ]|  
  
 Jeśli pracujesz w trybie offline, należy użyć nazwy formatu do definiowania kolejki <xref:System.Messaging.MessageQueue.Path%2A>. W przeciwnym razie aplikacji spowoduje zgłoszenie wyjątku, ponieważ podstawowy kontroler domeny jest niedostępna do rozpoznania <xref:System.Messaging.MessageQueue.Path%2A> do <xref:System.Messaging.MessageQueue.FormatName%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> Ustawiono nieprawidłową wartość, prawdopodobnie ponieważ składnia jest nieprawidłowa.  
  
 —lub—  
  
 <see cref="P:System.Messaging.MessageQueueInstaller.Path" /> Jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Permissions">
      <MemberSignature Language="C#" Value="public System.Messaging.AccessControlList Permissions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.AccessControlList Permissions" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Permissions" />
      <MemberSignature Language="VB.NET" Value="Public Property Permissions As AccessControlList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::AccessControlList ^ Permissions { System::Messaging::AccessControlList ^ get(); void set(System::Messaging::AccessControlList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Messaging.AccessControlList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia uprawnienia skojarzony z kolejką.</summary>
        <value>A <see cref="T:System.Messaging.AccessControlList" /> zawiera jeden lub więcej wpisów kontroli dostępu, określające stron zaufanych, a uprawnienia można przyznać dla kolejki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie twórca kolejki publicznej lub prywatnej ma pełną kontrolę i grupy domeny każdy ma uprawnienia do pobrania właściwości kolejki, uprawnienia i zapisu do kolejki. Usługa kolejkowania komunikatów uzyskuje dostęp do każdego wpisu listy uprawnień z kolei aż do znalezienia dla bieżącego użytkownika, a próba bieżącej akcji. Zgodnie z uprawnieniami systemu operacyjnego, uprawnień, które jawnie odmówiono użytkownikowi pierwszeństwo umożliwia.  
  
 Podczas konstruowania <xref:System.Messaging.MessageQueueInstaller.Permissions%2A> właściwości, Dodaj <xref:System.Messaging.AccessControlEntry> wystąpień do Twojej <xref:System.Messaging.AccessControlList> kolekcji. Podczas tworzenia każdego wpisu kontroli dostępu, można określić prawa dostępu ogólnego lub standard. Prawa do kolejki może być dowolną kombinacją z następujących czynności:  
  
-   Usuwanie  
  
-   Odczyt zabezpieczeń  
  
-   Zapis zabezpieczeń  
  
-   Synchronizuj  
  
-   Modyfikacja właściciela  
  
-   Odczyt  
  
-   Write  
  
-   Wykonanie  
  
-   Wymagane  
  
-   Wszystkie  
  
-   Brak  
  
 Zestaw flagi bitów, które można łączyć przy użyciu wartości bitowe lub są one:  
  
-   Pełna kontrola  
  
-   Usuwanie wiadomości  
  
-   Komunikat  
  
-   Wgląd do wiadomości  
  
-   Odbieranie wiadomości dziennika  
  
-   Pobierz właściwości kolejki  
  
-   Ustaw właściwości kolejki  
  
-   Uzyskaj uprawnienia  
  
-   Ustawianie uprawnień  
  
-   Przejmowanie na własność kolejki  
  
-   Napisz wiadomość  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.SetPermissions(System.String,System.Messaging.MessageQueueAccessRights)" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> zawierający stanu przed instalacją komputera.</param>
        <summary>Przywraca stan sprzed przed rozpoczęciem instalacji, przez wycofanie informacji kolejki, która zarejestrowała procedury instalacji w rejestrze komputera. Ta metoda jest przeznaczona do użycia przez instalacji narzędzia, które automatycznie wywoływać metod odpowiednie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Metody cofa skutków <xref:System.Messaging.MessageQueueInstaller.Install%2A> metody. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> jest wywoływana, gdy instalacja każdego składnika w projekcie instalacja nie powiedzie się. <xref:System.Messaging.MessageQueueInstaller.Install%2A> Metoda tworzy lub ustawia właściwości dla kolejki. <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> Usuwa kolejkę albo resetuje właściwości kolejki istniejące wartości przed instalacją.  
  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie InstallUtil.exe instalacji. Narzędzie automatycznie wywołuje <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> metody po błąd instalacji do Cofnij wszelkie zmiany, które proces instalacji został już wykonane.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatycznie zachowywane informacji o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Messaging.MessageQueueInstaller.Rollback%2A> jako `savedState` parametru jest stale aktualizowany, ponieważ narzędzie przedstawia kopii każdego <xref:System.Messaging.MessageQueueInstaller> wystąpienia. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Transactional">
      <MemberSignature Language="C#" Value="public bool Transactional { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Transactional" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.Transactional" />
      <MemberSignature Language="VB.NET" Value="Public Property Transactional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Transactional { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy kolejka akceptuje tylko wiadomości wysyłane jako część transakcji.</summary>
        <value>
          <see langword="true" /> Jeśli kolejka może akceptować tylko wiadomości wysyłane jako część transakcji; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można pobrać wiadomości z kolejki transakcji lokalnej lub bez przy użyciu transakcji. Jeśli nie określisz kontekst transakcji usługi kolejkowania komunikatów tworzy pojedynczy wewnętrzną transakcję.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.MessageQueueInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Collections.IDictionary" /> zawierający stan komputera po instalacji.</param>
        <summary>Usuwa instalacji przez usunięcie kolejki informacji z rejestru. Ta metoda jest przeznaczona do użycia przez narzędzia dezinstalacji, które automatycznie wywoływać odpowiednich metod.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Messaging.MessageQueueInstaller.UninstallAction%2A> jest `Remove`, <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> spowoduje również usunięcie kolejki skojarzone z <xref:System.Messaging.MessageQueue>.  
  
 Zwykle nie należy wywoływać metody <xref:System.Messaging.MessageQueueInstaller> od w kodzie; zwykle nazywane są tylko przez narzędzie InstallUtil.exe instalacji (w tryb dezinstalacji). Narzędzie automatycznie wywołuje <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> metoda przywracania części systemu, które miały wpływ na ich stany przed instalacją instalacji. Dotyczy to również usunięcie informacji rejestru, który jest skojarzony z MessageQueue odinstalowywane.  
  
 Aplikacji odinstalować rutynowych korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> automatycznie zachowywane informacji o składnikach, które już został odinstalowany. Tych informacji o stanie, który jest przekazywany do <xref:System.Messaging.MessageQueueInstaller.Uninstall%2A> jako `savedState` jako narzędzie odinstalowuje każdego parametru jest stale aktualizowany <xref:System.Messaging.MessageQueueInstaller> wystąpienia. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueueInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, jakie Instalator z kolejką w dezinstalacji: Usuń go, przywrócić go do stanu przed instalacją lub pozostawić ją w jego bieżącym stanie zainstalowane.</summary>
        <value>Jeden z <see cref="T:System.Configuration.Install.UninstallAction" /> wartości, które wskazuje stan co pozostaw kolejki w przypadku <see cref="T:System.Messaging.MessageQueue" /> zostanie odinstalowana. Wartość domyślna to <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas instalowania kolejki, można opcjonalnie użyć istniejącej kolejki. Jeśli tak zrobisz, należy zdecydować, czy kolejki należy przywrócić stan przed instalacją lub pozostają w jego stan bieżący, po instalacji. W przypadku wybrania powrócić do stanu przed instalacją kolejki komunikatów, które zostały usunięte z kolejki w czasie instalacji nie są przywracane. Można resetować tylko właściwości kolejki, które są skojarzone z <xref:System.Messaging.MessageQueueInstaller> wartości przed instalacją.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.Install.UninstallAction" />
      </Docs>
    </Member>
    <Member MemberName="UseJournalQueue">
      <MemberSignature Language="C#" Value="public bool UseJournalQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseJournalQueue" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.MessageQueueInstaller.UseJournalQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property UseJournalQueue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseJournalQueue { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wiadomości pobierane z kolejki są również kopiowane do kolejki dziennika skojarzone.</summary>
        <value>
          <see langword="true" /> Aby skopiować wiadomości, które są pobierane z kolejki do kolejki dziennika; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kolejki dziennika umożliwia użytkownikowi śledzenie wiadomości nawet po zostały pobrane z kolejki. Jednak nieśledzonych pozostaną dwa typy komunikatów: te, które są usuwane z kolejki, po wygaśnięciu czasomierza ich czas do odbioru oraz te, które zostaną usunięte z kolejki.  
  
 Kolejki powinny zostać wyczyszczone okresowo, aby usunąć wiadomości, które nie są już potrzebne. Wiadomości przechowywanych w liczbie kolejki dziennika w limicie przydziału dla komputera, na którym znajduje się dziennika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>