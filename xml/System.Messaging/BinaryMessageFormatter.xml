<Type Name="BinaryMessageFormatter" FullName="System.Messaging.BinaryMessageFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BinaryMessageFormatter : ICloneable, System.Messaging.IMessageFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BinaryMessageFormatter extends System.Object implements class System.ICloneable, class System.Messaging.IMessageFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.BinaryMessageFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Class BinaryMessageFormatter&#xA;Implements ICloneable, IMessageFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BinaryMessageFormatter : ICloneable, System::Messaging::IMessageFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Messaging.IMessageFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1808e-101">Serializuje i deserializuje obiekt lub całego grafu połączonych obiektów, do lub z treści wiadomości MSMQ, przy użyciu formatu binarnego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1808e-101">Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-102"><xref:System.Messaging.BinaryMessageFormatter> Jest bardzo wydajny i może służyć do serializacji większość obiektów.</span><span class="sxs-lookup"><span data-stu-id="1808e-102">The <xref:System.Messaging.BinaryMessageFormatter> is very efficient and can be used to serialize most objects.</span></span> <span data-ttu-id="1808e-103">Wynik jest bardzo compact i szybkie do analizy, ale nie jest możliwe w dla luźno wiadomości jako <xref:System.Messaging.XmlMessageFormatter> jest.</span><span class="sxs-lookup"><span data-stu-id="1808e-103">The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <xref:System.Messaging.XmlMessageFormatter> does.</span></span> <span data-ttu-id="1808e-104">Luźno powiązanych oznacza, że klient i serwer niezależnie można wersja typu, które są wysyłane i odbierane.</span><span class="sxs-lookup"><span data-stu-id="1808e-104">Loosely coupled means that the client and the server can independently version the type that is sent and received.</span></span>  
  
 <span data-ttu-id="1808e-105">Gdy aplikacja wysyła komunikat do kolejki, używając wystąpienia <xref:System.Messaging.MessageQueue> klasy, program formatujący serializuje obiekt do strumienia i wstawia je do treści wiadomości.</span><span class="sxs-lookup"><span data-stu-id="1808e-105">When the application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body.</span></span> <span data-ttu-id="1808e-106">Podczas czytania z kolejki przy użyciu <xref:System.Messaging.MessageQueue>, element formatujący deserializuje dane wiadomości do <xref:System.Messaging.Message.Body%2A> właściwość <xref:System.Messaging.Message>.</span><span class="sxs-lookup"><span data-stu-id="1808e-106">When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.</span></span>  
  
 <span data-ttu-id="1808e-107"><xref:System.Messaging.BinaryMessageFormatter> zapewnia większą przepustowość, niż <xref:System.Messaging.XmlMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="1808e-107"><xref:System.Messaging.BinaryMessageFormatter> provides faster throughput than the <xref:System.Messaging.XmlMessageFormatter>.</span></span> <span data-ttu-id="1808e-108">Użyj <xref:System.Messaging.BinaryMessageFormatter> podczas czystej szybkości zamiast luźno wiadomości jest pożądane.</span><span class="sxs-lookup"><span data-stu-id="1808e-108">Use the <xref:System.Messaging.BinaryMessageFormatter> when pure speed rather than loosely coupled messaging is desired.</span></span>  
  
   
  
## Examples  
 [!code-cpp[MessagingBinaryFormatter#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessagingBinaryFormatter/CPP/message_binaryformatter.cpp#1)]
 [!code-csharp[MessagingBinaryFormatter#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessagingBinaryFormatter/CS/message_binaryformatter.cs#1)]
 [!code-vb[MessagingBinaryFormatter#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessagingBinaryFormatter/VB/message_binaryformatter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.XmlMessageFormatter" />
    <altmember cref="T:System.Messaging.ActiveXMessageFormatter" />
    <altmember cref="P:System.Messaging.Message.Formatter" />
    <altmember cref="P:System.Messaging.MessageQueue.Formatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1808e-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.BinaryMessageFormatter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-109">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1808e-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.BinaryMessageFormatter" /> klasy bez określania stylu typu lub zestawu obiektu najwyższego poziomu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-110">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class without specifying a type style or top object assembly style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-111">Musisz określić wartości dla <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> właściwości (który określa układ obiekt główny na wykresie) i <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> właściwości (który określa sposób umieszczenia opisów typów obiektu układ) przed rozpoczęciem korzystania z wystąpienia <xref:System.Messaging.BinaryMessageFormatter> klasa do serializować i wysłać wiadomość.</span><span class="sxs-lookup"><span data-stu-id="1808e-111">You must specify values for the <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> property (which defines how the root object in a graph is laid out) and the <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> property (which defines how object type descriptions are laid out) before using an instance of the <xref:System.Messaging.BinaryMessageFormatter> class to serialize and send a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryMessageFormatter (System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle topObjectFormat, valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle typeFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (topObjectFormat As FormatterAssemblyStyle, typeFormat As FormatterTypeStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BinaryMessageFormatter(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle topObjectFormat, System::Runtime::Serialization::Formatters::FormatterTypeStyle typeFormat);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="topObjectFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        <Parameter Name="typeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Parameters>
      <Docs>
        <param name="topObjectFormat">
          <span data-ttu-id="1808e-112">Określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest w strumieniu serializowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-112">Determines how the top (root) object of a graph is laid out in the serialized stream.</span>
          </span>
        </param>
        <param name="typeFormat">
          <span data-ttu-id="1808e-113">Określa sposób umieszczenia opisów typów są w strumieniu serializowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-113">Determines how type descriptions are laid out in the serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1808e-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Messaging.BinaryMessageFormatter" /> klasy, określając formatów obiekt główny i opisy typów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-114">Initializes a new instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class, specifying the formats of the root object and the type descriptions.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public bool CanRead (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.CanRead(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1808e-115">
            <see cref="T:System.Messaging.Message" /> Do zbadania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-115">The <see cref="T:System.Messaging.Message" /> to inspect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1808e-116">Określa, czy element formatujący może wykonywać deserializację treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-116">Determines whether the formatter can deserialize the contents of the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1808e-117">
            <see langword="true" /> Jeśli element formatujący komunikatu binarnego może zdeserializować wiadomości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-117">
              <see langword="true" /> if the binary message formatter can deserialize the message; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> Zwraca `false` Jeśli treść komunikatu nie jest obiektem binarnego.</span><span class="sxs-lookup"><span data-stu-id="1808e-118"><xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `false` if the message body is not a binary object.</span></span>  
  
 <span data-ttu-id="1808e-119">Na komputer odbierający <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> zwraca `true` Jeśli zestawu dla klasy próba wykonania deserializacji istnieje lokalnie.</span><span class="sxs-lookup"><span data-stu-id="1808e-119">On the receiving computer, <xref:System.Messaging.BinaryMessageFormatter.CanRead%2A> returns `true` if the assembly for the class to be deserialized exists locally.</span></span> <span data-ttu-id="1808e-120">Zestaw musi znajdować się w globalnej pamięci podręcznej zestawów lub powiązać aplikacji (na przykład, jeśli obiekt reprezentuje niestandardowej klasy).</span><span class="sxs-lookup"><span data-stu-id="1808e-120">The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1808e-121">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-121">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1808e-122">Tworzy wystąpienie <see cref="T:System.Messaging.BinaryMessageFormatter" /> klasy odczytu/zapisu, którego właściwości (główny obiekt i wpisz opis formatów) są takie same jak bieżące <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-122">Creates an instance of the <see cref="T:System.Messaging.BinaryMessageFormatter" /> class whose read/write properties (the root object and type description formats) are the same as the current <see cref="T:System.Messaging.BinaryMessageFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1808e-123">Obiekt, którego właściwości są identyczne z to <see cref="T:System.Messaging.BinaryMessageFormatter" />, ale których metadanych nie określa się do wystąpienia klasy elementu formatującego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-123">An object whose properties are identical to those of this <see cref="T:System.Messaging.BinaryMessageFormatter" />, but whose metadata does not specify it to be a formatter class instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-124">Ta metoda tworzy kopię elementu formatującego i inicjuje wszystkie właściwości z wartościami <xref:System.Messaging.BinaryMessageFormatter>.</span><span class="sxs-lookup"><span data-stu-id="1808e-124">This method creates a copy of the formatter and initializes all its properties to the values of this <xref:System.Messaging.BinaryMessageFormatter>.</span></span> <span data-ttu-id="1808e-125">Jest używany w przypadku skalowalności, ale nie gwarancji odczytu lub zapisu bezpieczeństwa wątków.</span><span class="sxs-lookup"><span data-stu-id="1808e-125">It is used for scalability, but does not guarantee read or write thread safety.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Messaging.IMessageFormatter" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public object Read (System.Messaging.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Read(class System.Messaging.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Read(System::Messaging::Message ^ message);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Read(System.Messaging.Message)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1808e-126">
            <see cref="T:System.Messaging.Message" />, W formacie binarnym, służącego do deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-126">The <see cref="T:System.Messaging.Message" />, in binary format, to deserialize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1808e-127">Odczytuje zawartość z podanym komunikatem i tworzy obiekt, który zawiera komunikat zdeserializowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-127">Reads the contents from the given message and creates an object that contains the deserialized message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1808e-128">Zdeserializowana komunikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-128">The deserialized message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1808e-129">Wywołanie tej metody za pomocą niezaufanego danych stanowi zagrożenie bezpieczeństwa.</span><span class="sxs-lookup"><span data-stu-id="1808e-129">Calling this method with untrusted data is a security risk.</span></span> <span data-ttu-id="1808e-130">Wywołanie tej metody tylko z zaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="1808e-130">Call this method only with trusted data.</span></span> <span data-ttu-id="1808e-131">Aby uzyskać więcej informacji, zobacz [sprawdzanie poprawności danych](https://www.owasp.org/index.php/Data_Validation).</span><span class="sxs-lookup"><span data-stu-id="1808e-131">For more information, see [Data Validation](https://www.owasp.org/index.php/Data_Validation).</span></span>  
  
 <span data-ttu-id="1808e-132">Treści wiadomości musi być w formacie binarnym, a sam serializator musi być używany do deserializacji komunikatu jak te, które początkowo serializowane go.</span><span class="sxs-lookup"><span data-stu-id="1808e-132">The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</span></span> <span data-ttu-id="1808e-133">Jeśli treść reprezentuje klasę niestandardową, musi istnieć lokalnie zestawu dla tej klasy.</span><span class="sxs-lookup"><span data-stu-id="1808e-133">If the body represents a custom class, the assembly for that class must exist locally.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1808e-134">Komunikat <see cref="P:System.Messaging.Message.BodyType" /> właściwości nie wskazuje obiekt binarny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-134">The message's <see cref="P:System.Messaging.Message.BodyType" /> property does not indicate a binary object.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1808e-135">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-135">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)" />
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
    <Member MemberName="TopObjectFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle TopObjectFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObjectFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle TopObjectFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTopObjectFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1808e-136">Pobiera lub ustawia wartość, która określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest zdeserializować w odniesieniu do znajdowania i ładowanie jego zestaw.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-136">Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1808e-137">Jeden z <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> wartości, które definiuje zachowanie deserializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-137">One of the <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> values that defines the deserialization behavior.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-138">Obecnie, należy zaakceptować wartości domyślne `AssemblyStyle`.</span><span class="sxs-lookup"><span data-stu-id="1808e-138">Currently, you should accept the default value, `AssemblyStyle`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.BinaryMessageFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Messaging.MessagingDescription("MsgTypeFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1808e-139">Pobiera lub ustawia wartość, która określa sposób umieszczenia opisów typów są wyświetlane w strumieniu serializowanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-139">Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1808e-140">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> definiuje format opisu typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-140">A <see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /> that defines the type description format.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-141">Obecnie, należy zaakceptować wartości domyślne `TypesWhenNeeded`.</span><span class="sxs-lookup"><span data-stu-id="1808e-141">Currently, you should accept the default value, `TypesWhenNeeded`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.Messaging.Message message, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Messaging.Message message, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(System::Messaging::Message ^ message, System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Messaging.IMessageFormatter.Write(System.Messaging.Message,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.Messaging.Message" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1808e-142">
            <see cref="T:System.Messaging.Message" /> Których <see cref="P:System.Messaging.Message.Body" /> właściwości będzie zawierać Zserializowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-142">The <see cref="T:System.Messaging.Message" /> whose <see cref="P:System.Messaging.Message.Body" /> property will contain the serialized object.</span>
          </span>
        </param>
        <param name="obj">
          <span data-ttu-id="1808e-143">Obiekt do serializacji w treści wiadomości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-143">The object to be serialized into the message body.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1808e-144">Serializuje obiektu na treść komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-144">Serializes an object into the body of the message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1808e-145">Typ i format obiektu najwyższego poziomu nie muszą być określane do zapisu do kolejki, ponieważ muszą one być podczas odczytu.</span><span class="sxs-lookup"><span data-stu-id="1808e-145">The top object format and type format need not be specified to write to the queue as they must be when reading.</span></span> <span data-ttu-id="1808e-146"><xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> i <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> właściwości są używane przez program formatujący tylko wtedy, gdy podczas deserializacji komunikatu.</span><span class="sxs-lookup"><span data-stu-id="1808e-146">The <xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A> and <xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A> properties are used by the formatter only when deserializing a message.</span></span>  
  
 <span data-ttu-id="1808e-147"><xref:System.Messaging.BinaryMessageFormatter> Może serializować obiektów większości, ale wynik nie jest luźno powiązane.</span><span class="sxs-lookup"><span data-stu-id="1808e-147">The <xref:System.Messaging.BinaryMessageFormatter> can serialize most objects, but the result is not loosely coupled.</span></span> <span data-ttu-id="1808e-148">Jednak jest niewielki, więc program formatujący to efektywne w przypadku dużych obiektów.</span><span class="sxs-lookup"><span data-stu-id="1808e-148">However, it is compact, so the formatter is efficient for large objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1808e-149">
            <paramref name="message" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1808e-149">The <paramref name="message" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)" />
      </Docs>
    </Member>
  </Members>
</Type>