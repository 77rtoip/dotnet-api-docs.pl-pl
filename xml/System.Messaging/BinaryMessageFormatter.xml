<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BinaryMessageFormatter.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9220f5130f7d9cf8c72cc71ccc34de42e5e8ede</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Serializes or deserializes an object, or an entire graph of connected objects, to or from the body of a Message Queuing message, using a binary format.</source>
          <target state="translated">Serializuje i deserializuje obiekt lub całego grafu połączonych obiektów, do lub z treści wiadomości MSMQ, przy użyciu formatu binarnego.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> is very efficient and can be used to serialize most objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> Jest bardzo wydajny i może służyć do serializacji większość obiektów.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>The result is very compact and fast to parse, but does not allow for loosely coupled messaging as the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> does.</source>
          <target state="translated">Wynik jest bardzo compact i szybkie do analizy, ale nie jest możliwe w dla luźno wiadomości jako <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> jest.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Loosely coupled means that the client and the server can independently version the type that is sent and received.</source>
          <target state="translated">Luźno powiązanych oznacza, że klient i serwer niezależnie można wersja typu, które są wysyłane i odbierane.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>When the application sends a message to the queue using an instance of the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class, the formatter serializes the object into a stream and inserts it into the message body.</source>
          <target state="translated">Gdy aplikacja wysyła komunikat do kolejki, używając wystąpienia <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> klasy, program formatujący serializuje obiekt do strumienia i wstawia je do treści wiadomości.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>When reading from a queue using a <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the formatter deserializes the message data into the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
          <target state="translated">Podczas czytania z kolejki przy użyciu <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, element formatujący deserializuje dane wiadomości do <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> właściwość <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> provides faster throughput than the <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> zapewnia większą przepustowość, niż <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> when pure speed rather than loosely coupled messaging is desired.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> podczas czystej szybkości zamiast luźno wiadomości jest pożądane.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Messaging.BinaryMessageFormatter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class without specifying a type style or top object assembly style.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> klasy bez określania stylu typu lub zestawu obiektu najwyższego poziomu.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.#ctor">
          <source>You must specify values for the <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> property (which defines how the root object in a graph is laid out) and the <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> property (which defines how object type descriptions are laid out) before using an instance of the <ph id="ph3">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> class to serialize and send a message.</source>
          <target state="translated">Musisz określić wartości dla <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> właściwości (który określa układ obiekt główny na wykresie) i <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> właściwości (który określa sposób umieszczenia opisów typów obiektu układ) przed rozpoczęciem korzystania z wystąpienia <ph id="ph3">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> klasa do serializować i wysłać wiadomość.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Determines how the top (root) object of a graph is laid out in the serialized stream.</source>
          <target state="translated">Określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest w strumieniu serializowanym.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Determines how type descriptions are laid out in the serialized stream.</source>
          <target state="translated">Określa sposób umieszczenia opisów typów są w strumieniu serializowanym.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.#ctor(System.Runtime.Serialization.Formatters.FormatterAssemblyStyle,System.Runtime.Serialization.Formatters.FormatterTypeStyle)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class, specifying the formats of the root object and the type descriptions.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> klasy, określając formatów obiekt główny i opisy typów.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> to inspect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> Do zbadania.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>Determines whether the formatter can deserialize the contents of the message.</source>
          <target state="translated">Określa, czy element formatujący może wykonywać deserializację treści wiadomości.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary message formatter can deserialize the message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli element formatujący komunikatu binarnego może zdeserializować wiadomości; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if the message body is not a binary object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> Zwraca <ph id="ph2">`false`</ph> Jeśli treść komunikatu nie jest obiektem binarnego.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>On the receiving computer, <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> returns <ph id="ph2">`true`</ph> if the assembly for the class to be deserialized exists locally.</source>
          <target state="translated">Na komputer odbierający <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.CanRead%2A&gt;</ph> zwraca <ph id="ph2">`true`</ph> Jeśli zestawu dla klasy próba wykonania deserializacji istnieje lokalnie.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The assembly must be found in the global assembly cache, or be linked to the application (for example, if the object represents a custom class).</source>
          <target state="translated">Zestaw musi znajdować się w globalnej pamięci podręcznej zestawów lub powiązać aplikacji (na przykład, jeśli obiekt reprezentuje niestandardowej klasy).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.CanRead(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>Creates an instance of the <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> class whose read/write properties (the root object and type description formats) are the same as the current <ph id="ph2">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>.</source>
          <target state="translated">Tworzy wystąpienie <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph> klasy odczytu/zapisu, którego właściwości (główny obiekt i wpisz opis formatów) są takie same jak bieżące <ph id="ph2">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>An object whose properties are identical to those of this <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>, but whose metadata does not specify it to be a formatter class instance.</source>
          <target state="translated">Obiekt, którego właściwości są identyczne z to <ph id="ph1">&lt;see cref="T:System.Messaging.BinaryMessageFormatter" /&gt;</ph>, ale których metadanych nie określa się do wystąpienia klasy elementu formatującego.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>This method creates a copy of the formatter and initializes all its properties to the values of this <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>.</source>
          <target state="translated">Ta metoda tworzy kopię elementu formatującego i inicjuje wszystkie właściwości z wartościami <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Clone">
          <source>It is used for scalability, but does not guarantee read or write thread safety.</source>
          <target state="translated">Jest używany w przypadku skalowalności, ale nie gwarancji odczytu lub zapisu bezpieczeństwa wątków.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, in binary format, to deserialize.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph>, W formacie binarnym, służącego do deserializacji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Reads the contents from the given message and creates an object that contains the deserialized message.</source>
          <target state="translated">Odczytuje zawartość z podanym komunikatem i tworzy obiekt, który zawiera komunikat zdeserializowany.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The deserialized message.</source>
          <target state="translated">Zdeserializowana komunikat.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Calling this method with untrusted data is a security risk.</source>
          <target state="translated">Wywołanie tej metody za pomocą niezaufanego danych stanowi zagrożenie bezpieczeństwa.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>Call this method only with trusted data.</source>
          <target state="translated">Wywołanie tej metody tylko z zaufanych danych.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Validation<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>sprawdzanie poprawności danych<ept id="p1">](https://www.owasp.org/index.php/Data_Validation)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The body of the message must be in binary format, and the same serializer must be used to deserialize the message as that which initially serialized it.</source>
          <target state="translated">Treści wiadomości musi być w formacie binarnym, a sam serializator musi być używany do deserializacji komunikatu jak te, które początkowo serializowane go.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>If the body represents a custom class, the assembly for that class must exist locally.</source>
          <target state="translated">Jeśli treść reprezentuje klasę niestandardową, musi istnieć lokalnie zestawu dla tej klasy.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The message's <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> property does not indicate a binary object.</source>
          <target state="translated">Komunikat <ph id="ph1">&lt;see cref="P:System.Messaging.Message.BodyType" /&gt;</ph> właściwości nie wskazuje obiekt binarny.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Read(System.Messaging.Message)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>Gets or sets a value that defines how the top (root) object of a graph is deserialized with regards to finding and loading its assembly.</source>
          <target state="translated">Pobiera lub ustawia wartość, która określa sposób umieszczenia najwyższego (głównego) obiektu wykresu jest zdeserializować w odniesieniu do znajdowania i ładowanie jego zestaw.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> values that defines the deserialization behavior.</source>
          <target state="translated">Jeden z <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /&gt;</ph> wartości, które definiuje zachowanie deserializacji.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TopObjectFormat">
          <source>Currently, you should accept the default value, <ph id="ph1">`AssemblyStyle`</ph>.</source>
          <target state="translated">Obecnie, należy zaakceptować wartości domyślne <ph id="ph1">`AssemblyStyle`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>Gets or sets a value that defines how type descriptions are laid out in the serialized stream.</source>
          <target state="translated">Pobiera lub ustawia wartość, która określa sposób umieszczenia opisów typów są wyświetlane w strumieniu serializowanym.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /&gt;</ph> that defines the type description format.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" /&gt;</ph> definiuje format opisu typu.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Messaging.BinaryMessageFormatter.TypeFormat">
          <source>Currently, you should accept the default value, <ph id="ph1">`TypesWhenNeeded`</ph>.</source>
          <target state="translated">Obecnie, należy zaakceptować wartości domyślne <ph id="ph1">`TypesWhenNeeded`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> whose <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> property will contain the serialized object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Messaging.Message" /&gt;</ph> Których <ph id="ph2">&lt;see cref="P:System.Messaging.Message.Body" /&gt;</ph> właściwości będzie zawierać Zserializowany obiekt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The object to be serialized into the message body.</source>
          <target state="translated">Obiekt do serializacji w treści wiadomości.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>Serializes an object into the body of the message.</source>
          <target state="translated">Serializuje obiektu na treść komunikatu.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The top object format and type format need not be specified to write to the queue as they must be when reading.</source>
          <target state="translated">Typ i format obiektu najwyższego poziomu nie muszą być określane do zapisu do kolejki, ponieważ muszą one być podczas odczytu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> properties are used by the formatter only when deserializing a message.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter.TopObjectFormat%2A&gt;</ph> i <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter.TypeFormat%2A&gt;</ph> właściwości są używane przez program formatujący tylko wtedy, gdy podczas deserializacji komunikatu.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> can serialize most objects, but the result is not loosely coupled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> Może serializować obiektów większości, ale wynik nie jest luźno powiązane.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>However, it is compact, so the formatter is efficient for large objects.</source>
          <target state="translated">Jednak jest niewielki, więc program formatujący to efektywne w przypadku dużych obiektów.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Messaging.BinaryMessageFormatter.Write(System.Messaging.Message,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="message" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="message" /&gt;</ph> Parametr jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>