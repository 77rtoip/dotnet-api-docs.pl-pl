<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd9738e92d7b8a310ccbfc821359163880970679" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="75b14-101">Udostępnia dane dla <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> zdarzeń.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75b14-101">Provides data for the <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> event.</span>
      </span>
      <span data-ttu-id="75b14-102">Podczas operacji asynchronicznych peek wywołuje program obsługi zdarzeń, wystąpienie tej klasy są przekazywane do programu obsługi.</span>
      <span class="sxs-lookup">
        <span data-stu-id="75b14-102">When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75b14-103">Gdy używasz powiadomienie o zdarzeniu do wglądu (odczytana bez usuwania) wiadomości asynchronicznie z kolejki, należy utworzyć metoda, która obsługuje przetwarzania komunikatu.</span><span class="sxs-lookup"><span data-stu-id="75b14-103">When you use event notification to peek (read without removing) messages asynchronously from the queue, you must create a method that handles your message processing.</span></span> <span data-ttu-id="75b14-104">Kod musi wywoływać <xref:System.Messaging.MessageQueue.BeginPeek%2A> celu rozpoczęcia asynchronicznego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="75b14-104">Your code must call <xref:System.Messaging.MessageQueue.BeginPeek%2A> to begin the asynchronous processing.</span></span> <span data-ttu-id="75b14-105">Gdy komunikat jest przybywającej, aplikacja ma otrzymywać powiadomienia za pośrednictwem <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="75b14-105">When a message is peeked, your application is notified through the <xref:System.Messaging.MessageQueue.PeekCompleted> event.</span></span> <span data-ttu-id="75b14-106">Wystąpienie <xref:System.Messaging.PeekCompletedEventArgs> została przekazana do delegata zdarzenia, który wywołuje obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="75b14-106">An instance of <xref:System.Messaging.PeekCompletedEventArgs> is passed into the event delegate that calls your event handler.</span></span> <span data-ttu-id="75b14-107">Dane skojarzone z <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń jest zawarty w elemencie delegowanym <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parametru.</span><span class="sxs-lookup"><span data-stu-id="75b14-107">The data associated with the <xref:System.Messaging.MessageQueue.PeekCompleted> event is contained in the delegate's <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.</span></span>  
  
 <span data-ttu-id="75b14-108">Istnieją dwa sposoby zapewnienia powiadomienia o zakończeniu zdarzenia: powiadamianie o zdarzeniach i wywołania zwrotne.</span><span class="sxs-lookup"><span data-stu-id="75b14-108">There are two ways to provide notification of event completion: event notification and callbacks.</span></span> <span data-ttu-id="75b14-109"><xref:System.Messaging.PeekCompletedEventArgs> jest używana tylko z powiadomienie o zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="75b14-109"><xref:System.Messaging.PeekCompletedEventArgs> is used only with event notification.</span></span> <span data-ttu-id="75b14-110">Informacji dotyczących porównania wywołania zwrotne i powiadamianie o zdarzeniach zobacz "vs zdarzenia. Wywołania zwrotne"w witrynie MSDN.</span><span class="sxs-lookup"><span data-stu-id="75b14-110">For information comparing callbacks and event notification, see "Events vs. Callbacks" on MSDN.</span></span>  
  
 <span data-ttu-id="75b14-111"><xref:System.Messaging.PeekCompletedEventArgs> zapewnia dostęp do wiadomości, który zainicjował koniec operacji asynchronicznych peek za pośrednictwem <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> elementu członkowskiego.</span><span class="sxs-lookup"><span data-stu-id="75b14-111"><xref:System.Messaging.PeekCompletedEventArgs> provides access to the message that initiated the end of the asynchronous peek operation, through the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> member.</span></span> <span data-ttu-id="75b14-112">To jest alternatywny dostęp do tej wiadomości i zachowuje się znacznie taki sam, jak wywołanie <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="75b14-112">This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="75b14-113">Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń i skojarzy ją ze zdarzeniem delegować za pomocą <xref:System.Messaging.PeekCompletedEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="75b14-113">The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.PeekCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.PeekCompletedEventHandler>.</span></span> <span data-ttu-id="75b14-114">Program obsługi zdarzeń, `MyPeekCompleted`, dokonuje wiadomości i zapisuje etykiety do ekranu.</span><span class="sxs-lookup"><span data-stu-id="75b14-114">The event handler, `MyPeekCompleted`, peeks a message and writes its label to the screen.</span></span>  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75b14-115">Pobiera lub ustawia wynik żądanej operacji asynchronicznej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-115">Gets or sets the result of the asynchronous operation requested.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75b14-116">A <see cref="T:System.IAsyncResult" /> zawierający dane skojarzone z operacji podglądu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-116">A <see cref="T:System.IAsyncResult" /> that contains the data associated with the peek operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75b14-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identyfikuje bieżących lub zakończonych operacji asynchronicznych.</span><span class="sxs-lookup"><span data-stu-id="75b14-117"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identifies ongoing or completed asynchronous operations.</span></span> <span data-ttu-id="75b14-118">Właściwość zawiera dane, które ułatwia określenie kilka potencjalnych asynchronicznych operacji do wykonania, i po przekazywane do programu obsługi zdarzeń, umożliwia <xref:System.Messaging.MessageQueue.EndPeek%2A> dostępu do wiadomości, skojarzone z ukończoną operację.</span><span class="sxs-lookup"><span data-stu-id="75b14-118">The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndPeek%2A> to access the message associated with the completed operation.</span></span>  
  
 <span data-ttu-id="75b14-119">Podczas wywoływania <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.IAsyncResult> zwrócił natychmiast, nawet jeśli komunikat, jeśli istnieje, nie jeszcze został pobrany, ponieważ operacja nie została wykonana.</span><span class="sxs-lookup"><span data-stu-id="75b14-119">When you call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed.</span></span> <span data-ttu-id="75b14-120"><xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> Wskazuje stan operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="75b14-120">The <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> indicates the state of the asynchronous operation.</span></span> <span data-ttu-id="75b14-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> Tworzy obiekt, który jest modyfikowany podczas operacji do czasu <xref:System.Messaging.MessageQueue.EndPeek%2A> wykonuje je.</span><span class="sxs-lookup"><span data-stu-id="75b14-121"><xref:System.Messaging.MessageQueue.BeginPeek%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndPeek%2A> completes it.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="75b14-122">Pobiera komunikat skojarzony z operacji asynchronicznych podglądu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-122">Gets the message associated with the asynchronous peek operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="75b14-123">A <see cref="T:System.Messaging.Message" /> reprezentujący wynik końcowy operacji asynchronicznych podglądu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-123">A <see cref="T:System.Messaging.Message" /> that represents the end result of the asynchronous peek operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75b14-124"><xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Właściwości umożliwia pobieranie wiadomości, który zainicjował koniec operacji asynchronicznych podglądu.</span><span class="sxs-lookup"><span data-stu-id="75b14-124">The <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property provides a means for retrieving the message that initiated the end of the asynchronous peek operation.</span></span>  
  
 <span data-ttu-id="75b14-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> jest wywoływana po raz pierwszy <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> właściwości jest do odczytu, więc nie można wywołać <xref:System.Messaging.MessageQueue.EndPeek%2A> przed pobierania wartości tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="75b14-125"><xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> is called the first time the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndPeek%2A> prior to getting the value of this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <span data-ttu-id="75b14-126">
            <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> Nie można pobrać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-126">The <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> could not be retrieved.</span>
          </span>
          <span data-ttu-id="75b14-127">Upłynął limit czasu na operację asynchroniczną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="75b14-127">The time-out on the asynchronous operation might have expired.</span>
          </span>
        </exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>