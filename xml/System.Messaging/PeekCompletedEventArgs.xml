<Type Name="PeekCompletedEventArgs" FullName="System.Messaging.PeekCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22d5d541c128ecfd35240c46666234a37dc16382" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36476858" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PeekCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.PeekCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class PeekCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeekCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type PeekCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Messaging.MessageQueue.PeekCompleted" /> zdarzeń. Podczas operacji asynchronicznych peek wywołuje program obsługi zdarzeń, wystąpienie tej klasy są przekazywane do programu obsługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy używasz powiadomienie o zdarzeniu do wglądu (odczytana bez usuwania) wiadomości asynchronicznie z kolejki, należy utworzyć metoda, która obsługuje przetwarzania komunikatu. Kod musi wywoływać <xref:System.Messaging.MessageQueue.BeginPeek%2A> celu rozpoczęcia asynchronicznego przetwarzania. Gdy komunikat jest przybywającej, aplikacja ma otrzymywać powiadomienia za pośrednictwem <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń. Wystąpienie <xref:System.Messaging.PeekCompletedEventArgs> została przekazana do delegata zdarzenia, który wywołuje obsługi zdarzenia. Dane skojarzone z <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń jest zawarty w elemencie delegowanym <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parametru.  
  
 Istnieją dwa sposoby zapewnienia powiadomienia o zakończeniu zdarzenia: powiadamianie o zdarzeniach i wywołania zwrotne. <xref:System.Messaging.PeekCompletedEventArgs> jest używana tylko z powiadomienie o zdarzeniu. Informacji dotyczących porównania wywołania zwrotne i powiadamianie o zdarzeniach zobacz "vs zdarzenia. Wywołania zwrotne"w witrynie MSDN.  
  
 <xref:System.Messaging.PeekCompletedEventArgs> zapewnia dostęp do wiadomości, który zainicjował koniec operacji asynchronicznych peek za pośrednictwem <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> elementu członkowskiego. To jest alternatywny dostęp do tej wiadomości i zachowuje się znacznie taki sam, jak wywołanie <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Messaging.MessageQueue.PeekCompleted> zdarzeń i skojarzy ją ze zdarzeniem delegować za pomocą <xref:System.Messaging.PeekCompletedEventHandler>. Program obsługi zdarzeń, `MyPeekCompleted`, dokonuje wiadomości i zapisuje etykiety do ekranu.  
  
 [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CPP/mqbeginpeek_noparms.cpp#1)]
 [!code-csharp[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/CS/mqbeginpeek_noparms.cs#1)]
 [!code-vb[MessageQueue.BeginPeek_noparms#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.BeginPeek_noparms/VB/mqbeginpeek_noparms.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.PeekCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
    <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.PeekCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wynik żądanej operacji asynchronicznej.</summary>
        <value>A <see cref="T:System.IAsyncResult" /> zawierający dane skojarzone z operacji podglądu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> identyfikuje bieżących lub zakończonych operacji asynchronicznych. Właściwość zawiera dane, które ułatwia określenie kilka potencjalnych asynchronicznych operacji do wykonania, i po przekazywane do programu obsługi zdarzeń, umożliwia <xref:System.Messaging.MessageQueue.EndPeek%2A> dostępu do wiadomości, skojarzone z ukończoną operację.  
  
 Podczas wywoływania <xref:System.Messaging.MessageQueue.BeginPeek%2A>, <xref:System.IAsyncResult> zwrócił natychmiast, nawet jeśli komunikat, jeśli istnieje, nie jeszcze został pobrany, ponieważ operacja nie została wykonana. <xref:System.Messaging.PeekCompletedEventArgs.AsyncResult%2A> Wskazuje stan operacji asynchronicznej. <xref:System.Messaging.MessageQueue.BeginPeek%2A> Tworzy obiekt, który jest modyfikowany podczas operacji do czasu <xref:System.Messaging.MessageQueue.EndPeek%2A> wykonuje je.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.PeekCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat skojarzony z operacji asynchronicznych podglądu.</summary>
        <value>A <see cref="T:System.Messaging.Message" /> reprezentujący wynik końcowy operacji asynchronicznych podglądu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> Właściwości umożliwia pobieranie wiadomości, który zainicjował koniec operacji asynchronicznych podglądu.  
  
 <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=nameWithType> jest wywoływana po raz pierwszy <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> właściwości jest do odczytu, więc nie można wywołać <xref:System.Messaging.MessageQueue.EndPeek%2A> przed pobierania wartości tej właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <see cref="P:System.Messaging.PeekCompletedEventArgs.Message" /> Nie można pobrać. Upłynął limit czasu na operację asynchroniczną.</exception>
        <altmember cref="T:System.Messaging.PeekCompletedEventHandler" />
        <altmember cref="M:System.Messaging.MessageQueue.BeginPeek" />
        <altmember cref="M:System.Messaging.MessageQueue.EndPeek(System.IAsyncResult)" />
        <altmember cref="T:System.Messaging.Message" />
      </Docs>
    </Member>
  </Members>
</Type>