<Type Name="ReceiveCompletedEventArgs" FullName="System.Messaging.ReceiveCompletedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40fb7c4c36e8a9ddbae569f24bf33f51c4c52063" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37479106" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReceiveCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Messaging.ReceiveCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ReceiveCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ReceiveCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Messaging</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Messaging.MessageQueue.ReceiveCompleted" /> zdarzeń. Po otrzymaniu swoje asynchronicznych operacji wywołuje program obsługi zdarzeń, wystąpienia tej klasy jest przekazywana do programu obsługi.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Korzystając z powiadomień o zdarzeniach asynchronicznie odbierać komunikaty z kolejki, należy utworzyć metodę, która obsługuje przetwarzanie komunikatów. Kod musi wywoływać <xref:System.Messaging.MessageQueue.BeginReceive%2A> do rozpoczęcia przetwarzania asynchronicznego. Gdy wiadomość zostaje odebrana, usługi aplikacji zostanie wysłane powiadomienie za pośrednictwem <xref:System.Messaging.MessageQueue.ReceiveCompleted> zdarzeń. Wystąpienie <xref:System.Messaging.ReceiveCompletedEventArgs> jest przekazywana do programu obsługi zdarzeń wywołuje delegata zdarzenia. Dane skojarzone z <xref:System.Messaging.MessageQueue.ReceiveCompleted> zdarzenia znajduje się w pełnomocnika <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parametru.  
  
 Istnieją dwa sposoby zapewnienia powiadomienie o zakończeniu zdarzenia: powiadomienie o zdarzeniu i wywołania zwrotne. <xref:System.Messaging.ReceiveCompletedEventArgs> jest używany tylko z powiadomień o zdarzeniach. Uzyskać porównanie wywołania zwrotne i powiadomień o zdarzeniach zobacz "vs zdarzenia. Wywołania zwrotne"w witrynie MSDN.  
  
 <xref:System.Messaging.ReceiveCompletedEventArgs> zapewnia dostęp do wiadomości, która zainicjowała koniec asynchroniczną otrzymywać operacji za pośrednictwem <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> elementu członkowskiego. To jest alternatywny dostęp do tej wiadomości i zachowuje się bardzo podobne do wywołania <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy program obsługi zdarzeń dla <xref:System.Messaging.MessageQueue.ReceiveCompleted> zdarzeń i kojarzy go ze zdarzeniem delegowanie przy użyciu <xref:System.Messaging.ReceiveCompletedEventHandler>. Program obsługi zdarzeń `MyReceiveCompleted`, otrzymuje komunikat z kolejki i zapisuje jego treść na ekranie.  
  
 [!code-cpp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/cpp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CPP/mqreceivecompletedeventhandler.cpp#1)]
 [!code-csharp[MessageQueue.ReceiveCompleted#1](~/samples/snippets/csharp/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/CS/mqreceivecompletedeventhandler.cs#1)]
 [!code-vb[MessageQueue.ReceiveCompleted#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/MessageQueue.ReceiveCompleted/VB/mqreceivecompletedeventhandler.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Messaging.MessageQueue" />
    <altmember cref="T:System.Messaging.ReceiveCompletedEventHandler" />
    <altmember cref="E:System.Messaging.MessageQueue.ReceiveCompleted" />
    <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
    <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
    <altmember cref="T:System.Messaging.Message" />
  </Docs>
  <Members>
    <Member MemberName="AsyncResult">
      <MemberSignature Language="C#" Value="public IAsyncResult AsyncResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IAsyncResult AsyncResult" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncResult As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IAsyncResult ^ AsyncResult { IAsyncResult ^ get(); void set(IAsyncResult ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncResult : IAsyncResult with get, set" Usage="System.Messaging.ReceiveCompletedEventArgs.AsyncResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wynik żądanej operacji asynchronicznej.</summary>
        <value>Element <see cref="T:System.IAsyncResult" /> zawierający dane skojarzone z operacji odbierania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> identyfikuje bieżących lub ukończonych operacji asynchronicznych. Ta właściwość zawiera dane, które pomagają określić, które kilka potencjalnych operacji asynchronicznych, aby ukończyć, i przekazane do narzędzia obsługi zdarzeń, umożliwia <xref:System.Messaging.MessageQueue.EndReceive%2A> dostępu do wiadomości skojarzonych z ukończoną operację.  
  
 Gdy wywołujesz <xref:System.Messaging.MessageQueue.BeginReceive%2A>, <xref:System.IAsyncResult> zwracany jest natychmiast, nawet jeśli wiadomość, jeśli istnieje, nie jeszcze został pobrany, ponieważ operacja nie jest ukończona. <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> Wskazuje stan operacji asynchronicznej. <xref:System.Messaging.MessageQueue.BeginReceive%2A> Tworzy obiekt, który jest modyfikowany podczas operacji do momentu <xref:System.Messaging.MessageQueue.EndReceive%2A> przetwarza je.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Messaging.MessageQueue.BeginReceive" />
        <altmember cref="M:System.Messaging.MessageQueue.EndReceive(System.IAsyncResult)" />
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public System.Messaging.Message Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Messaging.Message Message" />
      <MemberSignature Language="DocId" Value="P:System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Message As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Messaging::Message ^ Message { System::Messaging::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : System.Messaging.Message" Usage="System.Messaging.ReceiveCompletedEventArgs.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Messaging</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Messaging.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera komunikat skojarzony asynchronicznych operacji odbioru.</summary>
        <value>A <see cref="T:System.Messaging.Message" /> reprezentujący koniec operacji odbioru wynik asynchroniczny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> Właściwość umożliwia pobieranie wiadomości, która zainicjowała koniec asynchroniczną operacji odbioru.  
  
 <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=nameWithType> jest wywoływana po raz pierwszy <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> odczytana właściwość, więc nie wywołać <xref:System.Messaging.MessageQueue.EndReceive%2A> przed pobieranie wartości tej właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Messaging.MessageQueueException">
          <see cref="P:System.Messaging.ReceiveCompletedEventArgs.Message" /> Nie można pobrać. Limit czasu dla operacji asynchronicznej mogły wygasnąć.</exception>
      </Docs>
    </Member>
  </Members>
</Type>