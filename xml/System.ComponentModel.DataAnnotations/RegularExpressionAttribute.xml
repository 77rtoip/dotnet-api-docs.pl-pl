<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aca8e466fa480d9f0150271f476a9937c201f2a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30439944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="12998-101">Określa, czy wartości pola danych w danych dynamicznych platformy ASP.NET musi odpowiada określonemu wyrażeniu regularnemu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="12998-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12998-102">Należy zastosować atrybut RegularExpressionAttribute do właściwości, gdy trzeba sprawdzić poprawności wartości dla właściwości do wyrażenia regularnego.</span><span class="sxs-lookup"><span data-stu-id="12998-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="12998-103">Wyrażenie regularne umożliwia bardzo dokładnie służy do określania prawidłowych wartości.</span><span class="sxs-lookup"><span data-stu-id="12998-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="12998-104">Właściwość wzorzec zawiera wyrażenie regularne. Jeśli wartość właściwości jest równa null lub pustego ciągu (""), wartość automatycznie pozytywnej weryfikacji dla atrybutu RegularExpressionAttribute.</span><span class="sxs-lookup"><span data-stu-id="12998-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="12998-105">Aby sprawdzić, czy wartość nie jest `null` lub pusty ciąg, użyj **RequiredAttribute** atrybutu.</span><span class="sxs-lookup"><span data-stu-id="12998-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12998-106">Poniższy przykład przedstawia użycie <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> atrybut do zweryfikowania imię i nazwisko pól danych.</span><span class="sxs-lookup"><span data-stu-id="12998-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="12998-107">Wyrażenie regularne umożliwia maksymalnie 40 wielkich i małych liter.</span><span class="sxs-lookup"><span data-stu-id="12998-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="12998-108">Przykład wykonuje następujące zadania:</span><span class="sxs-lookup"><span data-stu-id="12998-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="12998-109">Implementuje klasę częściową metadanych i klasa skojarzone metadane.</span><span class="sxs-lookup"><span data-stu-id="12998-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="12998-110">W klasie skojarzone metadane stosuje <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> atrybutu pola danych imię i nazwisko, określając wzorca i niestandardowych komunikatów o błędach.</span><span class="sxs-lookup"><span data-stu-id="12998-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">
          <span data-ttu-id="12998-111">Wyrażenie regularne, który służy do sprawdzania poprawności wartości pola danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-111">The regular expression that is used to validate the data field value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12998-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="12998-113">Poniższy przykład przedstawia sposób zastosowania <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> do pola danych.</span><span class="sxs-lookup"><span data-stu-id="12998-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="12998-114">Jeśli weryfikacja zakończy się niepowodzeniem, kod w przykładzie wyświetla komunikat o błędzie weryfikacji zapewnianej przez dane dynamiczne.</span><span class="sxs-lookup"><span data-stu-id="12998-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="12998-115">
            <paramref name="pattern" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-115">
              <paramref name="pattern" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="12998-116">Nazwa pola, które spowodowało Niepowodzenie weryfikacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-116">The name of the field that caused the validation failure.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12998-117">Formatuje komunikat o błędzie wyświetlany w przypadku niepowodzenia weryfikacji wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-117">Formats the error message to display if the regular expression validation fails.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12998-118">Sformatowany komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-118">The formatted error message.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12998-119"><xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> Tworzy komunikat o błędzie, używając nazwy pola danych, które spowodowało Niepowodzenie weryfikacji.</span><span class="sxs-lookup"><span data-stu-id="12998-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="12998-120">Należy przesłonić tę metodę w niestandardowego sprawdzania poprawności atrybutów, aby dostosować sposób tworzenia błędów lub w celu zapewnienia bardziej złożonych komunikat, który zawiera parametry, które można ocenić w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="12998-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="12998-121">Wartość pola danych do zweryfikowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-121">The data field value to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12998-122">Sprawdza, czy wartości wprowadzonej przez użytkownika jest zgodny ze wzorcem wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-122">Checks whether the value entered by the user matches the regular expression pattern.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="12998-123">
            <see langword="true" /> Jeśli weryfikacja zakończy się pomyślnie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-123">
              <see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">
          <span data-ttu-id="12998-124">Wartość pola danych nie był zgodny ze wzorcem wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-124">The data field value did not match the regular expression pattern.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12998-125">Pobiera lub ustawia czas w milisekundach wykonanie jednej operacji dopasowywania przed operacją upłynie limit czasu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-125">Gets or set the amount of time in milliseconds to execute a single matching operation before the operation times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12998-126">Ilość czasu w milisekundach wykonanie jednej operacji dopasowywania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-126">The amount of time in milliseconds to execute a single matching operation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12998-127">Pobiera wzorzec wyrażenia regularnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-127">Gets the regular expression pattern.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12998-128">Wzorzec do dopasowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="12998-128">The pattern to match.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>