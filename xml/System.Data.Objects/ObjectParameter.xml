<Type Name="ObjectParameter" FullName="System.Data.Objects.ObjectParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06efc60e5a1f7331a4df2519751005fb7125f2da" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameter sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje parametr zapytania przekazywany do obiektu query.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Reprezentuje parametr zapytania, który jest przekazywany do <xref:System.Data.Objects.ObjectQuery%601> lub metody konstruktora zapytań. Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Parametry obiektu obejmować nazwę, typ i wartość.  
  
 Klasa ta nie może być dziedziczona. Aby uzyskać więcej informacji, zobacz <xref:System.Data.Objects.ObjectParameterCollection>.  
  
   
  
## Examples  
 Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). W przykładzie dodano nowe parametry w kolekcji. Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.ObjectParameter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru. Ta nazwa nie może zawierać "@" znacznika parametr, który jest używany w [!INCLUDE[esql](~/includes/esql-md.md)] instrukcje, rzeczywistą nazwą. Pierwszy znak wyrażenia musi być literą. Wszystkie kolejne znaki w wyrażeniu musi być litery, cyfry i znak podkreślenia (_).</param>
        <param name="value">Wartość początkowa (i z założenia, typ) parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.ObjectParameter" /> klasy z określoną nazwą i wartością.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor tworzy parametr z określoną nazwą i wartością. Typ parametru jest wywnioskowany na podstawie wartości.  
  
 Po dodaniu do <xref:System.Data.Objects.ObjectParameterCollection>, nie można zmienić nazwy parametru. Wartość parametru można zmieniać za pomocą <xref:System.Data.Objects.ObjectParameter.Value%2A> właściwości. Po skompilowaniu zapytania, nie można zmienić wartości. Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). W przykładzie dodano nowe parametry w kolekcji. Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli wartość albo argument ma wartość null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Jeśli wartość argumentu Nazwa jest nieprawidłowa. Nazwy parametrów muszą zaczynać się od litery i może zawierać tylko litery, cyfry i znaki podkreślenia.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectParameter (string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectParameter(System::String ^ name, Type ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa parametru. Ta nazwa nie może zawierać "@" znacznika parametr, który jest używany w [!INCLUDE[esql](~/includes/esql-md.md)] instrukcje, rzeczywistą nazwą. Pierwszy znak wyrażenia musi być literą. Wszystkie kolejne znaki w wyrażeniu musi być litery, cyfry i znak podkreślenia (_).</param>
        <param name="type">Wspólnego języka środowiska uruchomieniowego (języka wspólnego CLR) typ parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.ObjectParameter" /> z określoną nazwą i typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uruchomione, nie można zmienić nazwy parametru. Wartość parametru można ustawić lub zmienić za pomocą <xref:System.Data.Objects.ObjectParameter.Value%2A> właściwości. Po skompilowaniu zapytania, nie można zmienić wartości. Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Jeśli wartość albo argument ma wartość null.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Jeśli wartość argumentu Nazwa jest nieprawidłowa. Nazwy parametrów muszą zaczynać się od litery i może zawierać tylko litery, cyfry i znaki podkreślenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę parametru, które można ustawić tylko za pośrednictwem konstruktora.</summary>
        <value>Nazwa parametru można ustawić tylko za pośrednictwem konstruktora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uruchomione, nie można zmienić nazwy parametru. Wartość parametru można ustawić lub zmienić za pomocą <xref:System.Data.Objects.ObjectParameter.Value%2A> właściwości. Po skompilowaniu zapytania, nie można zmienić wartości. Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
   
  
## Examples  
 Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). W przykładzie dodano nowe parametry w kolekcji. Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterType">
      <MemberSignature Language="C#" Value="public Type ParameterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ParameterType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.ParameterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ParameterType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ parametru.</summary>
        <value>
          <see cref="T:System.Type" /> Parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ parametru można ustawić tylko za pośrednictwem konstruktora.  
  
   
  
## Examples  
 Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). W przykładzie dodano nowe parametry w kolekcji. Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameter.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość parametru.</summary>
        <value>Wartość parametru.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po skompilowaniu zapytania, nie można zmienić wartości. Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).  
  
 Nowa wartość jest niezgodny z typem zadeklarowanego w konstruktorze, może spowodować wyjątek czasu wykonywania. Dostawca musi ustalić, czy wartość jest niezgodna z typem zadeklarowanym. Na przykład, jeśli jest typu początkowej <xref:System.Int32> i nowa wartość jest <xref:System.Guid>, zostanie zgłoszony wyjątek.  
  
   
  
## Examples  
 Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). W przykładzie dodano nowe parametry w kolekcji. Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>