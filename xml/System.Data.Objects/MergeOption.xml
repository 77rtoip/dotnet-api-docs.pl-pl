<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="241270882eb7e5fd870958237fb4ef890e6eb940" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30445863" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, jak obiekty ładowany w kontekście obiektu są łączone z obiektami już w kontekście obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] Tylko obsługuje pojedyncze wystąpienie obiektu z kluczem jednostki określonych w pamięci podręcznej. <xref:System.Data.EntityKey> Obiekty są niezmienne obiektów czy reprezentują tożsamość obiektu. Jednostki klucze są używane do wykonywania rozpoznawania tożsamości w kontekście obiektu. Aby uzyskać więcej informacji, zobacz [Praca z kluczy jednostek](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f). Jeśli jest już śledzony jednostki o tej samej tożsamości, danych z źródła danych i danych już w stanie Menedżera są łączone zgodnie z <xref:System.Data.Objects.MergeOption> zapytania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu. Jeśli obiekt jest już w kontekście, bieżących i oryginalnych wartości właściwości obiektu we wpisie nie zostaną zastąpione wartościami źródła danych. Stan obiektu pozycji i stan właściwości obiektu we wpisie nie należy zmieniać. <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> jest domyślną opcją scalania.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Obiekty są obsługiwane w <see cref="F:System.Data.EntityState.Detached" /> stanu i nie są śledzone w <see cref="T:System.Data.Objects.ObjectStateManager" />. Jednak [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]-wygenerowanego jednostek i jednostki POCO z serwerów proxy utrzymywać odwołania do kontekstu obiektów, aby ułatwić ładowanie powiązanych obiektów.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu. Jeśli obiekt jest już w kontekście, wartości źródła danych zostaną zastąpione bieżące i oryginalne wartości właściwości obiektu we wpisie. Stan wpisu obiektu ma ustawioną wartość <see cref="F:System.Data.EntityState.Unchanged" />, Brak właściwości są oznaczane jako zmodyfikowane.</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli stan obiektu jest <xref:System.Data.EntityState.Unchanged>, bieżących i oryginalnych wartości w pozycji zostaną zastąpione wartości źródła danych. Stan pozostaje jednostki <xref:System.Data.EntityState.Unchanged> i właściwości nie są oznaczane jako zmodyfikowane.  
  
 Jeśli stan obiektu jest <xref:System.Data.EntityState.Modified>, bieżące wartości właściwości modyfikacji nie zostaną zastąpione wartościami źródła danych. Oryginalnej wartości właściwości zostały zmodyfikowane zostaną zastąpione wartościami ze źródła danych.  
  
 W [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] w wersji 4, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] porównuje bieżące wartości właściwości niezmodyfikowanego wartościami, które zostały zwrócone ze źródła danych. Jeśli wartości nie są takie same, właściwość jest oznaczona jako zmodyfikowana.  
  
 W [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] w wersji 3.5 z dodatkiem SP1, [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)] nie oznacza właściwość zmodyfikowane, nawet jeśli różni się wartość źródła danych.  
  
 Tylko zmodyfikowane właściwości są zachowywane w źródle danych podczas wywoływania <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>.  
  
 Aby zachować zachowanie 3.5 z dodatkiem SP1, należy ustawić <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A> do `true`. Opcja PreserveChanges może służyć do rozpoznawania optymistycznych wyjątków współbieżności przy zachowaniu zmiany w kontekście lokalnego. Aby uzyskać więcej informacji, zobacz [zapisywania zmian i zarządzanie współbieżności](http://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>