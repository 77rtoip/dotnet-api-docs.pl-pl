<Type Name="MergeOption" FullName="System.Data.Objects.MergeOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a293338991ef78298771270dfb73a3f393ab030" /><Meta Name="ms.sourcegitcommit" Value="9a6da88bd5455e8274257ca7ad259b42f1de114f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/22/2019" /><Meta Name="ms.locfileid" Value="66006389" /></Metadata><TypeSignature Language="C#" Value="public enum MergeOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MergeOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.MergeOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum MergeOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class MergeOption" />
  <TypeSignature Language="F#" Value="type MergeOption = " />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Określa, jak obiekty są ładowane do kontekstu obiektów są scalane z obiektami już w kontekście obiektu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entity Framework obsługuje tylko jedno wystąpienie obiektu przy użyciu klucza określonej jednostki w pamięci podręcznej. <xref:System.Data.EntityKey> Obiekty są niezmienne obiektów, które reprezentują tożsamość obiektu. Klucze jednostek są używane do rozpoznawania tożsamości w kontekście obiektu. Aby uzyskać więcej informacji, zobacz [Praca z kluczami jednostki](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/dd283139(v=vs.100)). Jeśli jest już śledzony jednostki o tej samej tożsamości, dane pochodzące ze źródła danych i danych już w Menedżer stanów są scalane zgodnie z opisem w <xref:System.Data.Objects.MergeOption> zapytania.  

### <a name="additional-information-on-mergeoptionpreservechanges"></a>Dodatkowe informacje na temat `MergeOption.PreserveChanges`

 Jeśli stan obiektu jest <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType>, bieżących i oryginalnych wartości we wpisie zostaną zastąpione wartościami źródła danych. Stan pozostaje jednostki <xref:System.Data.EntityState.Unchanged?displayProperty=nameWithType> i właściwości nie jest oznaczona jako zmodyfikowana.  
  
 Jeśli stan obiektu jest <xref:System.Data.EntityState.Modified?displayProperty=nameWithType>, bieżące wartości zmodyfikowane właściwości nie są zastępowane wartościami źródła danych. Oryginalne wartości, które zostały zmodyfikowane właściwości zostaną zastąpione wartościami ze źródła danych.  
  
 W programie .NET Framework 4 platformy Entity Framework porównuje bieżące wartości właściwości zostały zmodyfikowane za pomocą wartości, które zostały zwrócone ze źródła danych. Jeśli wartości nie są takie same, właściwość jest oznaczona jako zmodyfikowana.  
  
 W .NET Framework 3.5 z dodatkiem SP1 platformy Entity Framework nie oznacza właściwość zmodyfikowane, nawet jeśli wartość w źródle danych jest inny.  
  
 Tylko zmodyfikowane właściwości zostaną utrwalone w źródle danych, po wywołaniu <xref:System.Data.Objects.ObjectContext.SaveChanges%2A?displayProperty=nameWithType>.  
  
 Aby zachować zachowanie programu .NET Framework 3.5 z dodatkiem SP1, należy ustawić <xref:System.Data.Objects.ObjectContextOptions.UseLegacyPreserveChangesBehavior%2A?displayProperty=nameWithType> do `true`. `PreserveChanges` Opcja może służyć do rozpoznania wyjątków optymistycznej współbieżności przy jednoczesnym zachowaniu zmiany w lokalnym kontekście. Aby uzyskać więcej informacji, zobacz [zapisywanie zmian i zarządzanie współbieżnością](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/bb738618(v=vs.100)).
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AppendOnly">
      <MemberSignature Language="C#" Value="AppendOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption AppendOnly = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.AppendOnly" />
      <MemberSignature Language="VB.NET" Value="AppendOnly" />
      <MemberSignature Language="C++ CLI" Value="AppendOnly" />
      <MemberSignature Language="F#" Value="AppendOnly = 0" Usage="System.Data.Objects.MergeOption.AppendOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu. Jeśli obiekt jest już w kontekście, w bieżących i oryginalnych wartości właściwości obiektu we wpisie nie są zastępowane wartości źródła danych. Nie zmieniaj stan pozycji obiektu i stan właściwości obiektu we wpisie. <see cref="F:System.Data.Objects.MergeOption.AppendOnly" /> jest domyślną opcją scalania.</summary>
      </Docs>
    </Member>
    <Member MemberName="NoTracking">
      <MemberSignature Language="C#" Value="NoTracking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption NoTracking = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.NoTracking" />
      <MemberSignature Language="VB.NET" Value="NoTracking" />
      <MemberSignature Language="C++ CLI" Value="NoTracking" />
      <MemberSignature Language="F#" Value="NoTracking = 3" Usage="System.Data.Objects.MergeOption.NoTracking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Obiekty są obsługiwane w <see cref="F:System.Data.EntityState.Detached" /> stan i nie są śledzone w <see cref="T:System.Data.Objects.ObjectStateManager" />. Jednak [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]-wygenerowanych obiektów i jednostki POCO z serwerów proxy utrzymywać odwołania do kontekstu obiektów, aby ułatwić ładowanie powiązanych obiektów.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption OverwriteChanges = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 1" Usage="System.Data.Objects.MergeOption.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu. Jeśli obiekt jest już w kontekście, bieżących i oryginalnych wartości właściwości obiektu we wpisie są zastępowane wartościami źródła danych. Stan obiektu wejścia jest ustawiony na <see cref="F:System.Data.EntityState.Unchanged" />, Brak właściwości są oznaczane jako zmodyfikowane.</summary>
      </Docs>
    </Member>
    <Member MemberName="PreserveChanges">
      <MemberSignature Language="C#" Value="PreserveChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.Objects.MergeOption PreserveChanges = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberSignature Language="VB.NET" Value="PreserveChanges" />
      <MemberSignature Language="C++ CLI" Value="PreserveChanges" />
      <MemberSignature Language="F#" Value="PreserveChanges = 2" Usage="System.Data.Objects.MergeOption.PreserveChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Obiekty, które nie istnieją w kontekście obiektu są dołączone do kontekstu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>