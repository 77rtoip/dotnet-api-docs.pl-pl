<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cfa35b1135a2cea11e58ef4e49ceb0984b48e613" /><Meta Name="ms.sourcegitcommit" Value="f9e71795ba0f9c2dfaa74bec233343ed0f3ffd99" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="03/14/2019" /><Meta Name="ms.locfileid" Value="57925019" /></Metadata><TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przechowuje obiekt stanu i zarządzania tożsamościami dla wystąpień typów jednostek i relacji wystąpień.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> Śledzi wyniki zapytania i udostępnia logikę do scalenia wielu nakładających się wyniki zapytania. Wykonuje także śledzenie po użytkownik wstawia, usuwa, lub modyfikuje obiekty i zapewnia zmian dla aktualizacji zmian w pamięci. Ten zestaw zmian jest używany przez procesor zmiany do utrwalenia zmian.  
  
 Ta klasa jest zwykle używana przez <xref:System.Data.Objects.ObjectContext> bezpośrednio w aplikacji.  
  
   
  
## Examples  
 Te przykłady są oparte na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Poniższy przykład pobiera <xref:System.Data.Objects.ObjectStateManager> z <xref:System.Data.Objects.ObjectContext> i używa Menedżera stanu, aby uzyskać dostęp do obiektu w kontekście.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 W poniższym przykładzie użyto <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> zwracanego metody <xref:System.Data.Objects.ObjectStateManager> pobierania obiektu na podstawie jego klucza jednostki.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />, Który dostarcza informacje mapowania i metadanych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.ObjectStateManager" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityState" Type="System.Data.EntityState" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">Obiekt, dla której należy zmienić stan.</param>
        <param name="entityState">Nowy stan obiektu.</param>
        <summary>Zmienia stan <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla konkretnego obiektu do określonego <paramref name="entityState" />.</summary>
        <returns><see cref="T:System.Data.Objects.ObjectStateEntry" /> Na podanie <paramref name="entity" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A> metodę, aby zmienić stan obiektu <xref:System.Data.EntityState.Deleted> nie powoduje obiekty powiązane relacją ograniczone do usunięcia.  
  
 Zmiana stanu obiektu nie wpływa na powiązane obiekty na grafie obiektu.  
  
 Po zmianie <xref:System.Data.EntityState> pozycji obiektu jednostki mają <xref:System.Data.EntityState.Modified>, właściwości obiektu są oznaczane jako zmodyfikowane, niezależnie od wartości bieżącej lub oryginalnej.  
  
 Gdy <xref:System.Data.EntityState> obiektu jednostki wpisu jest zmieniana na <xref:System.Data.EntityState.Added>, <xref:System.Data.EntityState.Deleted>, lub <xref:System.Data.EntityState.Detached>, wpisów relacji dla obiektu, również są aktualizowane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy obiekt nie jest odłączony i nie ma wpisu w Menedżer stanów.  
  
—lub— 
Podczas próby zmiany stanu do <see cref="F:System.Data.EntityState.Detached" /> od innych <see cref="T:System.Data.EntityState" />  
  
—lub— 
Gdy <paramref name="state" /> nie jest prawidłowym <see cref="T:System.Data.EntityState" /> wartość.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zmienia stan określonej relacji między dwa obiekty jednostki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie jest obsługiwana w przypadku relacji oparte na skojarzenie klucza obcego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> encji źródłowej na jednym końcu relacji.</param>
        <param name="targetEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> jednostki docelowej po drugiej stronie relacji.</param>
        <param name="navigationProperty">Nazwa właściwości nawigacji na <paramref name="sourceEntity" /> zwraca wartość określonego <paramref name="targetEntity" />.</param>
        <param name="relationshipState">Żądany <see cref="T:System.Data.EntityState" /> określonej relacji.</param>
        <summary>Zmiany stanu relacji między dwa obiekty jednostki, które są określone na podstawie dwa obiekty powiązane i nazwa właściwości nawigacji.</summary>
        <returns><see cref="T:System.Data.Objects.ObjectStateEntry" /> Dla relacji, który został zmieniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpisy dla obiektów na obu końcach określonej relacji muszą istnieć w <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Ta metoda nie jest obsługiwana w przypadku relacji oparte na skojarzenie klucza obcego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" /> lub <paramref name="target" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Deleted" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Deleted" /> stanu.  
  
—lub— 
Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Added" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Added" /> stanu.  
  
—lub— 
Gdy <paramref name="state" /> nie jest prawidłowym <see cref="T:System.Data.EntityState" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetRoleName" Type="System.String" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> encji źródłowej na jednym końcu relacji.</param>
        <param name="targetEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> jednostki docelowej po drugiej stronie relacji.</param>
        <param name="relationshipName">Nazwa relacji.</param>
        <param name="targetRoleName">Nazwa roli w <paramref name="targetEntity" /> end relacji.</param>
        <param name="relationshipState">Żądany <see cref="T:System.Data.EntityState" /> określonej relacji.</param>
        <summary>Zmiany stan relacji między dwa obiekty jednostki, które są określone na podstawie dwóch powiązanych obiektów i właściwości relacji.</summary>
        <returns><see cref="T:System.Data.Objects.ObjectStateEntry" /> Dla relacji, który został zmieniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpisy dla obiektów na obu końcach określonej relacji muszą istnieć w <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Ta metoda nie jest obsługiwana w przypadku relacji, które są oparte na skojarzenie klucza obcego. Aby uzyskać więcej informacji, zobacz [definiujący i zarządzanie relacjami](https://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" /> lub <paramref name="target" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Deleted" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Deleted" /> stanu.  
  
—lub— 
Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Added" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Added" /> stanu.  
  
—lub— 
Gdy <paramref name="state" /> nie jest prawidłowym <see cref="T:System.Data.EntityState" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetEntity" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">Typ jednostki <paramref name="sourceEntity" /> obiektu.</typeparam>
        <param name="sourceEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> encji źródłowej na jednym końcu relacji.</param>
        <param name="targetEntity">Wystąpienie obiektu lub <see cref="T:System.Data.EntityKey" /> jednostki docelowej po drugiej stronie relacji.</param>
        <param name="navigationPropertySelector">Wyrażenie LINQ, która wybiera właściwość nawigacji na <paramref name="sourceEntity" /> zwraca wartość określonego <paramref name="targetEntity" />.</param>
        <param name="relationshipState">Żądany <see cref="T:System.Data.EntityState" /> określonej relacji.</param>
        <summary>Zmienia stan relacji między dwa obiekty jednostki, które określono w oparciu o dwa obiekty powiązane i wyrażenie LINQ, która definiuje właściwości nawigacji.</summary>
        <returns><see cref="T:System.Data.Objects.ObjectStateEntry" /> Dla relacji, który został zmieniony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wpisy dla obiektów na obu końcach określonej relacji muszą istnieć w <xref:System.Data.Objects.ObjectStateManager>.  
  
> [!NOTE]
>  Ta metoda nie jest obsługiwana w przypadku relacji, które są oparte na skojarzenie klucza obcego.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="source" />, <paramref name="target" />, lub <paramref name="selector" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="selector" /> jest źle sformułowany lub nie ma zwracać właściwość nawigacji.</exception>
        <exception cref="T:System.InvalidOperationException">Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Deleted" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Deleted" /> stanu.  
  
—lub— 
Podczas próby zmiany stanu relacji stan inny niż <see cref="F:System.Data.EntityState.Added" /> lub <see cref="F:System.Data.EntityState.Detached" /> podczas albo <paramref name="source" /> lub <paramref name="target" /> znajduje się w <see cref="F:System.Data.EntityState.Added" /> stanu.  
  
—lub— 
Gdy <paramref name="state" /> nie jest prawidłowym <see cref="T:System.Data.EntityState" /> wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state"><see cref="T:System.Data.EntityState" /> Używane do filtrowania zwracanego <see cref="T:System.Data.Objects.ObjectStateEntry" /> obiektów.</param>
        <summary>Zwraca kolekcję <see cref="T:System.Data.Objects.ObjectStateEntry" /> obiektów dla obiektów lub relację z danym stanie.</summary>
        <returns>Kolekcja <see cref="T:System.Data.Objects.ObjectStateEntry" /> obiektów w danym <see cref="T:System.Data.EntityState" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityState> Jest polem bitowym, więc wpisy stanu dla wielu stanów mogą być pobierane w jednym wywołaniu, wykonując logiczny lub więcej niż jednej <xref:System.Data.EntityState> wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Gdy <paramref name="state" /> jest <see cref="F:System.Data.EntityState.Detached" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwraca <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla określonego wpisu obiektu lub relacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key"><see cref="T:System.Data.EntityKey" />.</param>
        <summary>Zwraca <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla obiektu lub relacji wpis z określonym kluczem.</summary>
        <returns>Odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla danego <see cref="T:System.Data.EntityKey" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> metodę, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry> obiektu bez konieczności obsługi <xref:System.InvalidOperationException> wygenerowane przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> metody.  
  
   
  
## Examples  
 W przykładzie w tym temacie opiera się na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Przykład pobiera <xref:System.Data.Objects.ObjectStateEntry> dla danego <xref:System.Data.EntityKey> z <xref:System.Data.Objects.ObjectStateManager>. Następnie pobiera bieżącą wartość `SalesOrderHeader.PurchaseOrderNumber` właściwość zmienia wartość właściwości i wylicza zbiór zmodyfikowane właściwości.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="key" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Jeśli określony <paramref name="key" /> w Menedżer stanu nie można odnaleźć.</exception>
        <exception cref="T:System.InvalidOperationException">Brak jednostki z określonym <see cref="T:System.Data.EntityKey" /> istnieje w <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="T:System.Object" /> Do którego pobrano <see cref="T:System.Data.Objects.ObjectStateEntry" /> należy.</param>
        <summary>Zwraca <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla określonego obiektu.</summary>
        <returns>Odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla danego <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> metodę, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry> obiektu bez konieczności obsługi <xref:System.InvalidOperationException> wygenerowane przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Brak jednostki dla określonego <see cref="T:System.Object" /> istnieje w <see cref="T:System.Data.Objects.ObjectStateManager" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">Obiekt, dla której ma zostać zwrócone <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <summary>Zwraca <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> używanego przez określony obiekt.</summary>
        <returns><see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> Dla określonego obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywoływanie <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> metody jest taka sama jak wywołanie <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metody, z tą różnicą, że ta metoda zgłasza wyjątek, zamiast zwracać `false`.  
  
 Wywołaj <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metody w celu uniknięcia obsługi <xref:System.InvalidOperationException> występuje podczas <xref:System.Data.Objects.DataClasses.RelationshipManager> nie może być zwracany dla podanej jednostki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> nie może być zwracany w określonym <paramref name="entity" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> skojarzony z tym Menedżer stanów.</summary>
        <value><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> Skojarzony z tym <see cref="T:System.Data.Objects.ObjectStateManager" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Metadata.Edm.MetadataWorkspace> Klasa jest interfejsem programowania centralnej, który służy do interakcji z Entity Data Model (EDM) struktury metadanych w czasie wykonywania oraz w kontekście aplikacji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jednostki są dodawane do lub usunięte z przez menedżera stanu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Próbuje zwrócić <see cref="T:System.Data.Objects.ObjectStateEntry" /> obiektu dla określonego wpisu obiektu lub relacji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Dany <see cref="T:System.Data.EntityKey" />.</param>
        <param name="entry">Po powrocie z tej metody zawiera <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla danego <see cref="T:System.Data.EntityKey" /> ten parametr jest przekazywany jako niezainicjowany.</param>
        <summary>Próbuje pobrać odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla obiektu lub relację z danym <see cref="T:System.Data.EntityKey" />.</summary>
        <returns>Wartość logiczna, która jest <see langword="true" /> w przypadku odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla danego <see cref="T:System.Data.EntityKey" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> do zwrócenia <xref:System.Data.Objects.ObjectStateEntry> bez konieczności obsługi <xref:System.InvalidOperationException> wygenerowane przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> metody.  
  
   
  
## Examples  
 Przykłady w tym temacie są oparte na [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).  
  
 Próbuje pobrać odpowiedni przykład <xref:System.Data.Objects.ObjectStateEntry> dla danego <xref:System.Data.EntityKey>.  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 W poniższym przykładzie użyto <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> zwracanego metody <xref:System.Data.Objects.ObjectStateManager> pobierania obiektu na podstawie jego klucza jednostki.  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">A <see langword="null" /> (<see langword="Nothing" /> w języku Visual Basic) podana dla <paramref name="key" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity"><see cref="T:System.Object" /> Do którego pobrano <see cref="T:System.Data.Objects.ObjectStateEntry" /> należy.</param>
        <param name="entry">Po powrocie z tej metody zawiera <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla danego <see cref="T:System.Data.EntityKey" /> ten parametr jest przekazywany jako niezainicjowany.</param>
        <summary>Próbuje pobrać odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla określonego <see cref="T:System.Object" />.</summary>
        <returns>Wartość logiczna, która jest <see langword="true" /> w przypadku odpowiedni <see cref="T:System.Data.Objects.ObjectStateEntry" /> dla podanego obiektu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> metodę, aby zwrócić <xref:System.Data.Objects.ObjectStateEntry> bez konieczności obsługi <xref:System.InvalidOperationException> wygenerowane przez <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entity">Obiekt, dla której ma zostać zwrócone <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</param>
        <param name="relationshipManager">Po powrocie z tej metody zawiera <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> dla <paramref name="entity" />.</param>
        <summary>Zwraca <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> używanego przez określony obiekt.</summary>
        <returns><see langword="true" /> Jeśli <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> zwrócił wystąpienie na podanie <paramref name="entity" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> Metoda jest używana do uzyskania <xref:System.Data.Objects.DataClasses.RelationshipManager> obiektów, które są trwałości zakresu. Gdy obiekty implementują <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> lub dziedziczyć <xref:System.Data.Objects.DataClasses.EntityObject>, <xref:System.Data.Objects.DataClasses.RelationshipManager> jest dostępny z <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> właściwości.  
  
 <xref:System.Data.Objects.DataClasses.RelationshipManager> Nie można zwrócić, gdy obiekt jest w <xref:System.Data.EntityState.Detached> stanu.  
  
 Wywoływanie <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A> metody jest taka sama jak wywołanie <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> metody, z tą różnicą, że ta metoda zwraca `false` zamiast zgłaszania wyjątku.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>