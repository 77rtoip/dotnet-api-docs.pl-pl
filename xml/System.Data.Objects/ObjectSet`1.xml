<Type Name="ObjectSet&lt;TEntity&gt;" FullName="System.Data.Objects.ObjectSet&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0e00a28ac150ec1016a5a4fc90cd24c4c5711fc2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectSet&lt;TEntity&gt; : System.Data.Objects.ObjectQuery&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Data.Objects.IObjectSet&lt;TEntity&gt; where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectSet`1&lt;class TEntity&gt; extends System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.Data.Objects.IObjectSet`1&lt;!TEntity&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!TEntity&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectSet`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectSet(Of TEntity)&#xA;Inherits ObjectQuery(Of TEntity)&#xA;Implements IEnumerable(Of TEntity), IObjectSet(Of TEntity)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class ObjectSet : System::Data::Objects::ObjectQuery&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::Data::Objects::IObjectSet&lt;TEntity&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">TEntity</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Objects.IObjectSet&lt;TEntity&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">
      <span data-ttu-id="187e8-101">Typ jednostki.</span>
      <span class="sxs-lookup">
        <span data-stu-id="187e8-101">The entity type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="187e8-102">Reprezentuje zestaw typów jednostek, który służy do tworzenia, odczytu, aktualizacji i operacji usunięcia.</span>
      <span class="sxs-lookup">
        <span data-stu-id="187e8-102">Represents a typed entity set that is used to perform create, read, update, and delete operations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-103"><xref:System.Data.Objects.ObjectSet%601> Klasa umożliwia działać na typów jednostek, bez konieczności określania nazwy zestawu jednostek jako argument dla każdego wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-103">The <xref:System.Data.Objects.ObjectSet%601> class allows you to operate on a typed entity set without having to specify the entity set name as an argument to each method call.</span></span> <span data-ttu-id="187e8-104"><xref:System.Data.Objects.ObjectSet%601> Klasa rozszerza funkcjonalność <xref:System.Data.Objects.ObjectQuery%601> klasy, aby zapewnić funkcji kontekst obiektu, takie jak dodawanie i usuwanie obiektów, w kontekście typów jednostek zestawu jest dostępny z <xref:System.Data.Objects.ObjectContext>.</span><span class="sxs-lookup"><span data-stu-id="187e8-104">The <xref:System.Data.Objects.ObjectSet%601> class extends the functionality of the <xref:System.Data.Objects.ObjectQuery%601> class to provide object context functionality, such as adding and deleting objects, in the context of a typed entity set that is accessed from the <xref:System.Data.Objects.ObjectContext>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public void AddObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.AddObject(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddObject (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddObject(TEntity entity);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.AddObject(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="187e8-105">Obiekt do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-105">The object to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-106">Dodaje obiekt do kontekstu obiektów w bieżącym zestawie jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-106">Adds an object to the object context in the current entity set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-107">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.AddObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-107">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AddObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyCurrentValues">
      <MemberSignature Language="C#" Value="public TEntity ApplyCurrentValues (TEntity currentEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity ApplyCurrentValues(!TEntity currentEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyCurrentValues (currentEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity ApplyCurrentValues(TEntity currentEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentEntity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="currentEntity">
          <span data-ttu-id="187e8-108">Odłączony obiekt, który ma właściwość aktualizuje, aby zastosować do oryginalnego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-108">The detached object that has property updates to apply to the original object.</span>
          </span>
          <span data-ttu-id="187e8-109">Klucz jednostki <c>currentEntity</c> musi odpowiadać <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> właściwości wpisu w <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-109">The entity key of <c>currentEntity</c> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-110">Kopiuje wartości skalarnych podanego obiektu do obiektu w <see cref="T:System.Data.Objects.ObjectContext" /> mający ten sam klucz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-110">Copies the scalar values from the supplied object into the object in the <see cref="T:System.Data.Objects.ObjectContext" /> that has the same key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="187e8-111">Zaktualizowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-111">The updated object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-112">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-112">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyCurrentValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyCurrentValues(System.Object)" />
        <altmember cref="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyOriginalValues">
      <MemberSignature Language="C#" Value="public TEntity ApplyOriginalValues (TEntity originalEntity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity ApplyOriginalValues(!TEntity originalEntity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyOriginalValues (originalEntity As TEntity) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity ApplyOriginalValues(TEntity originalEntity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalEntity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="originalEntity">
          <span data-ttu-id="187e8-113">Odłączony obiekt, który ma właściwość aktualizuje, aby zastosować do oryginalnego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-113">The detached object that has property updates to apply to the original object.</span>
          </span>
          <span data-ttu-id="187e8-114">Klucz jednostki <c>originalEntity</c> musi odpowiadać <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> właściwości wpisu w <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-114">The entity key of <c>originalEntity</c> must match the <see cref="P:System.Data.Objects.ObjectStateEntry.EntityKey" /> property of an entry in the <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-115">Ustawia <see cref="P:System.Data.Objects.ObjectStateEntry.OriginalValues" /> właściwość <see cref="T:System.Data.Objects.ObjectStateEntry" /> do dopasowania wartości właściwości dostarczonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-115">Sets the <see cref="P:System.Data.Objects.ObjectStateEntry.OriginalValues" /> property of an <see cref="T:System.Data.Objects.ObjectStateEntry" /> to match the property values of a supplied object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="187e8-116">Zaktualizowany obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-116">The updated object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-117">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-117">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.ApplyOriginalValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectStateEntry.ApplyOriginalValues(System.Object)" />
        <altmember cref="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)" />
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Attach(TEntity entity);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.Attach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="187e8-118">Obiekt można dołączyć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-118">The object to attach.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-119">Dołącza obiektu lub wykres obiektu do kontekstu obiektów w bieżącym zestawie jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-119">Attaches an object or object graph to the object context in the current entity set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-120">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.AttachTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-120">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.AttachTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public TEntity CreateObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TEntity CreateObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.CreateObject" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject () As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TEntity CreateObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="187e8-121">Tworzy nowy obiekt typu jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-121">Creates a new entity type object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="187e8-122">Nowy obiekt typu jednostki lub wystąpienie typu serwera proxy, który odpowiada typu jednostki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-122">The new entity type object, or an instance of a proxy type that corresponds to the entity type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObject&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T CreateObject&lt;T&gt; () where T : class, TEntity;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T CreateObject&lt;class (!TEntity) T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.CreateObject``1" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject(Of T As {Class, TEntity}) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class, TEntity T CreateObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <BaseTypeName>TEntity</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="187e8-123">Typ obiektu do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-123">Type of object to be returned.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="187e8-124">Tworzy wystąpienie określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-124">Creates an instance of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="187e8-125">Wystąpienia o żądanym typie <paramref name="T" />, lub wystąpienia typu serwera proxy, który odpowiada typowi <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-125">An instance of the requested type <paramref name="T" />, or an instance of a proxy type that corresponds to the type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public void DeleteObject (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteObject(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.DeleteObject(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteObject (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteObject(TEntity entity);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.DeleteObject(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="187e8-126">Obiekt, który reprezentuje jednostkę do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-126">An object that represents the entity to delete.</span>
          </span>
          <span data-ttu-id="187e8-127">Obiekt może być w dowolnym stanie, z wyjątkiem <see cref="F:System.Data.EntityState.Detached" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-127">The object can be in any state except <see cref="F:System.Data.EntityState.Detached" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-128">Oznacza obiekt do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-128">Marks an object for deletion.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-129">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-129">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.DeleteObject%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Detach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectSet`1.Detach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Detach(TEntity entity);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.IObjectSet`1.Detach(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="187e8-130">Obiekt odłączenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-130">Object to be detached.</span>
          </span>
          <span data-ttu-id="187e8-131">Tylko <c>jednostki</c> zostanie usunięta; Jeśli istnieją powiązane obiekty, które są śledzone przez ten sam <see cref="T:System.Data.Objects.ObjectStateManager" />, te będą nie można odłączyć automatycznie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-131">Only the <c>entity</c> is removed; if there are any related objects that are being tracked by the same <see cref="T:System.Data.Objects.ObjectStateManager" />, those will not be detached automatically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="187e8-132">Usuwa obiekt z kontekstu obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-132">Removes the object from the object context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="187e8-133">Ta metoda jest otokę <xref:System.Data.Objects.ObjectContext.Detach%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="187e8-133">This method is a wrapper around the <xref:System.Data.Objects.ObjectContext.Detach%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Objects.ObjectContext.Detach(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EntitySet">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntitySet EntitySet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.EntitySet EntitySet" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectSet`1.EntitySet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySet As EntitySet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::EntitySet ^ EntitySet { System::Data::Metadata::Edm::EntitySet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="187e8-134">Pobiera metadane zestaw jednostek reprezentowanych przez to <see cref="T:System.Data.Objects.ObjectSet`1" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-134">Gets the metadata of the entity set represented by this <see cref="T:System.Data.Objects.ObjectSet`1" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="187e8-135">
            <see cref="T:System.Data.Metadata.Edm.EntitySet" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="187e8-135">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>