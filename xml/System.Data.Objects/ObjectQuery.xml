<Type Name="ObjectQuery" FullName="System.Data.Objects.ObjectQuery">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c398eace325505a4cefff3ada136c0d660d5f82e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446400" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ObjectQuery : System.Collections.IEnumerable, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectQuery extends System.Object implements class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectQuery&#xA;Implements IEnumerable, IListSource, IOrderedQueryable, IQueryable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectQuery abstract : System::Collections::IEnumerable, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable, System::Linq::IQueryable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8e3a5-101">Implementuje typowe funkcje dla zapytań dotyczących model koncepcyjny przy użyciu zarówno składnik LINQ to Entities i <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8e3a5-101">Implements common functionality for queries against a conceptual model using both LINQ to Entities and <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-102"><xref:System.Data.Objects.ObjectQuery> jest klasą bazową dla zapytań dotyczących modelu koncepcyjnego.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-102"><xref:System.Data.Objects.ObjectQuery> is the base class for queries against a conceptual model.</span></span> <span data-ttu-id="8e3a5-103"><xref:System.Data.Objects.ObjectQuery> jest dostępne, aby upewnić się, że składnika LINQ to Entities zapytania mają te same funkcje co zapytania są wykonywane przy użyciu <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-103"><xref:System.Data.Objects.ObjectQuery> is provided to ensure that LINQ to Entities queries have the same functionality as queries executed using <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="8e3a5-104">Należy użyć <xref:System.Data.Objects.ObjectQuery%601> z określonym typem kwerendy modelu koncepcyjnego.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-104">You must use <xref:System.Data.Objects.ObjectQuery%601> with a specified type to query a conceptual model.</span></span> <span data-ttu-id="8e3a5-105">Aby uzyskać więcej informacji, zobacz [zapytań obiektu](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-105">For more information, see [Object Queries](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-106">Zwraca tekst polecenia dla zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-106">Returns the command text for the query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-107">A <see langword="string" /> wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-107">A <see langword="string" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ObjectContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectContext ^ Context { System::Data::Objects::ObjectContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-108">Pobiera kontekst skojarzony z tym zapytaniem obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-108">Gets the object context associated with this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-109">
            <see cref="T:System.Data.Objects.ObjectContext" /> Skojarzony z tym <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-109">The <see cref="T:System.Data.Objects.ObjectContext" /> associated with this <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-110">Kontekst dla zapytania obejmuje połączenie pamięci podręcznej i metadanych.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-110">The context for the query includes the connection, cache, and metadata.</span></span> <span data-ttu-id="8e3a5-111">Aby uzyskać więcej informacji, zobacz [obiektu usługi — omówienie (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-111">For more information, see [Object Services Overview (Entity Framework)](http://msdn.microsoft.com/library/43014cf9-c9cb-4538-bfbb-197820b60038).</span></span>  
  
 <span data-ttu-id="8e3a5-112">Właściwość połączenia jest modyfikowalna i musi być ustawiona, można było wykonać kwerendę.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-112">The connection property is mutable and must be set before a query can be executed.</span></span> <span data-ttu-id="8e3a5-113">Aby uzyskać więcej informacji, zobacz [Zarządzanie połączeń w usługach obiektu (Entity Framework)](http://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-113">For more information, see [Managing Connections in Object Services (Entity Framework)](http://msdn.microsoft.com/library/a1df87ef-6441-417d-b264-bb58360e5d67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e3a5-114">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-114">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="8e3a5-115">Pobiera przykładzie <xref:System.Data.Objects.ObjectContext> obiekt skojarzony z tym <xref:System.Data.Objects.ObjectQuery%601> obiektu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-115">The example gets the <xref:System.Data.Objects.ObjectContext> object associated with this <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_context)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Context](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_context)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePlanCaching">
      <MemberSignature Language="C#" Value="public bool EnablePlanCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePlanCaching" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.EnablePlanCaching" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePlanCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePlanCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-116">Pobiera lub ustawia wartość wskazującą, czy mają być buforowane planu zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-116">Gets or sets a value that indicates whether the query plan should be cached.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-117">Wartość, która wskazuje, czy mają być buforowane planu zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-117">A value that indicates whether the query plan should be cached.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-118">Aby uzyskać więcej informacji, zobacz [buforowanie Plan zapytania](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-118">For more information, see [Query Plan Caching](~/docs/framework/data/adonet/ef/language-reference/query-plan-caching-entity-sql.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">
          <span data-ttu-id="8e3a5-119">
            <see cref="T:System.Data.Objects.MergeOption" /> Do użycia podczas wykonywania zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-119">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span>
          </span>
          <span data-ttu-id="8e3a5-120">Wartość domyślna to <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-120">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8e3a5-121">Wykonuje zapytanie bez typu obiektu przy użyciu opcji scalania określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-121">Executes the untyped object query with the specified merge option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e3a5-122">
            <see cref="T:System.Data.Objects.ObjectResult`1" /> Zawierający kolekcję obiektów jednostek zwróconych przez kwerendę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-122">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-123">Domyślna opcja scalania dla obiekt zapytań jest <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-123">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="8e3a5-124">Aby uzyskać więcej informacji, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-124">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="8e3a5-125">Wywołanie <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> metoda <xref:System.Data.Objects.ObjectQuery%601> dla obiekt typu zapytań.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-125">Call the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method on <xref:System.Data.Objects.ObjectQuery%601> for typed object queries.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResultType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.TypeUsage GetResultType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.TypeUsage GetResultType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.GetResultType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResultType () As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::TypeUsage ^ GetResultType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-126">Zwraca informacje o typie wyniku zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-126">Returns information about the result type of the query.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e3a5-127">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> wartości, która zawiera informacje o typie wyniku zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-127">A <see cref="T:System.Data.Metadata.Edm.TypeUsage" /> value that contains information about the result type of the query.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e3a5-128">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-128">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="8e3a5-129">W przykładzie jest tworzony <xref:System.Data.Objects.ObjectQuery%601> typu <xref:System.Data.Common.DbDataRecord> i używa <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> do ustalenia, czy typ zwracany reprezentuje wiersz.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-129">The example creates an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord> and uses <xref:System.Data.Objects.ObjectQuery.GetResultType%2A> to determine whether the type returned represents a row.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#GetResultType](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#getresulttype)]
 [!code-vb[DP ObjectServices Concepts#GetResultType](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#getresulttype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeOption">
      <MemberSignature Language="C#" Value="public System.Data.Objects.MergeOption MergeOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.Objects.MergeOption MergeOption" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.MergeOption" />
      <MemberSignature Language="VB.NET" Value="Public Property MergeOption As MergeOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::MergeOption MergeOption { System::Data::Objects::MergeOption get(); void set(System::Data::Objects::MergeOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.MergeOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-130">Pobiera lub ustawia jak obiekty zwrócone w wyniku zapytania są dodawane do kontekstu obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-130">Gets or sets how objects returned from a query are added to the object context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-131">Zapytanie <see cref="T:System.Data.Objects.MergeOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-131">The query <see cref="T:System.Data.Objects.MergeOption" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-132">Jeśli nie <xref:System.Data.Objects.MergeOption> jest określony, wartością domyślną jest <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-132">If no <xref:System.Data.Objects.MergeOption> is specified, the default value is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="8e3a5-133">Aby uzyskać więcej informacji, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-133">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ObjectParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameterCollection ^ Parameters { System::Data::Objects::ObjectParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-134">Pobiera kolekcję parametrów dla tego zapytania obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-134">Gets the parameter collection for this object query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-135">Kolekcja parametrów dla tego <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-135">The parameter collection for this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-136">Użyj zwróconego <xref:System.Data.Objects.ObjectParameterCollection> podania parametrów, które są przekazywane do zapytania.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-136">Use the returned <xref:System.Data.Objects.ObjectParameterCollection> to specify parameters that are passed to the query.</span></span> <span data-ttu-id="8e3a5-137">Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-137">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e3a5-138">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-138">This example is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="8e3a5-139">W przykładzie dodaje nowe parametry do kolekcji, a następnie pobiera kolekcję parametrów dla tego <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-139">The example adds new parameters to the collection and then gets the parameter collection for this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="8e3a5-140">A następnie jego iterację <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-140">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_parameters)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Parameters](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_parameters)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-141">Zwraca moduł wyliczający, który dokonuje iteracji w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-141">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e3a5-142">
            <see cref="T:System.Collections.IEnumerator" /> Który może służyć do iterowania po kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-142">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-143">Wywoływanie <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> wykonuje zapytanie przy użyciu opcji scalania, określonej przez <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-143">Calling <xref:System.Data.Objects.ObjectQuery.System%23Collections%23IEnumerable%23GetEnumerator%2A> executes the query with the merge option that is specified by the <xref:System.Data.Objects.ObjectQuery.MergeOption%2A> property.</span></span>  
  
 <span data-ttu-id="8e3a5-144">`foreach` Instrukcji języka C# (`For Each` w języku Visual Basic) ukrywa złożoność wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-144">The `foreach` statement of the C# language (`For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="8e3a5-145">W związku z tym przy użyciu `foreach` jest zalecane, zamiast bezpośrednie manipulowanie modułu wyliczającego.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-145">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="8e3a5-146">Moduły wyliczające mogą służyć do odczytu danych w kolekcji, ale nie można za ich pomocą modyfikować kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-146">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-147">Pobiera wartość wskazującą, czy kolekcja zwróconych przez zapytanie zawiera kolekcję obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-147">Gets a value that indicates whether the collection returned by the query contains collection objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-148">Wartość logiczna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-148">A Boolean value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-149">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-149">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8e3a5-150">Można go używać tylko wtedy, gdy <xref:System.Data.Objects.ObjectQuery%601> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-150">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="8e3a5-151">Ta właściwość zawsze zwraca `false` , ponieważ kolekcja zwróconych przez zapytanie zawiera obiekty i kolekcje nie.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-151">This property always returns `false` because the collection returned by the query contains objects and not collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-152">Zwraca kolekcję jako <see cref="T:System.Collections.IList" /> używany do wiązania danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-152">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e3a5-153">
            <see cref="T:System.Collections.IList" /> Obiektów jednostek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-153">An <see cref="T:System.Collections.IList" /> of entity objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-154">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-154">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8e3a5-155">Można go używać tylko wtedy, gdy <xref:System.Data.Objects.ObjectQuery%601> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-155">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="8e3a5-156">Ta metoda umożliwia powiązanie danych w wyniku zapytania.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-156">This method enables data binding to the result of the query.</span></span> <span data-ttu-id="8e3a5-157">Jest ona wywoływana przez formant powiązany z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-157">It is called by the control bound to the collection.</span></span> <span data-ttu-id="8e3a5-158">Aby uzyskać więcej informacji, zobacz [powiązanie obiektów z formantami](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-158">For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.ElementType">
      <MemberSignature Language="C#" Value="Type System.Linq.IQueryable.ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Linq.IQueryable.ElementType" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ElementType As Type Implements IQueryable.ElementType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System.Linq.IQueryable.ElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-159">Pobiera typ elementu wyników dla tego wystąpienia zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-159">Gets the result element type for this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-160">A <see cref="T:System.Type" /> który jest typem elementu wyników dla tego wystąpienia zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-160">A <see cref="T:System.Type" /> that is the result element type for this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-161">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-161">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8e3a5-162">Można go używać tylko wtedy, gdy <xref:System.Data.Objects.ObjectQuery%601> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-162">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Expression">
      <MemberSignature Language="C#" Value="System.Linq.Expressions.Expression System.Linq.IQueryable.Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression System.Linq.IQueryable.Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Expression As Expression Implements IQueryable.Expression" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::Expressions::Expression ^ System.Linq.IQueryable.Expression { System::Linq::Expressions::Expression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-163">Pobiera wyrażenie opisujące tego zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-163">Gets the expression describing this query.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-164">LINQ <see cref="T:System.Linq.Expressions.Expression" /> opisujący tego zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-164">The LINQ <see cref="T:System.Linq.Expressions.Expression" /> that describes this query.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-165">Utworzony za pomocą LINQ wzorce konstruktora zapytań to zwraca pełny drzewa wyrażenia LINQ; w przeciwnym wypadku zwraca wyrażenie stałe, który opakowuje to zapytanie.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-165">For queries built by using LINQ builder patterns, this returns a full LINQ expression tree; otherwise, it returns a constant expression that wraps this query.</span></span> <span data-ttu-id="8e3a5-166">Należy pamiętać, że wyrażenie wartości domyślnej nie jest buforowana.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-166">Note that the default expression is not cached.</span></span> <span data-ttu-id="8e3a5-167">Dzięki temu framework w celu rozróżnienia zapytań LINQ i jednostki programu SQL.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-167">This allows the framework to differentiate between LINQ and Entity SQL queries.</span></span>  
  
 <span data-ttu-id="8e3a5-168">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-168">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8e3a5-169">Można go używać tylko wtedy, gdy <xref:System.Data.Objects.ObjectQuery%601> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-169">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Linq.IQueryable.Provider">
      <MemberSignature Language="C#" Value="System.Linq.IQueryProvider System.Linq.IQueryable.Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryProvider System.Linq.IQueryable.Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Provider As IQueryProvider Implements IQueryable.Provider" />
      <MemberSignature Language="C++ CLI" Value="property System::Linq::IQueryProvider ^ System.Linq.IQueryable.Provider { System::Linq::IQueryProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-170">Pobiera LINQ <see cref="T:System.Linq.IQueryProvider" /> skojarzony z tym wystąpieniem zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-170">Gets the LINQ <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8e3a5-171">
            <see cref="T:System.Linq.IQueryProvider" /> Skojarzony z tym wystąpieniem zapytania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-171">The <see cref="T:System.Linq.IQueryProvider" /> associated with this query instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e3a5-172">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-172">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8e3a5-173">Można go używać tylko wtedy, gdy <xref:System.Data.Objects.ObjectQuery%601> wystąpienia jest rzutowane na <xref:System.ComponentModel.IListSource> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="8e3a5-173">It can be used only when the <xref:System.Data.Objects.ObjectQuery%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTraceString">
      <MemberSignature Language="C#" Value="public string ToTraceString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToTraceString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery.ToTraceString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToTraceString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToTraceString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8e3a5-174">Zwraca poleceń do wykonania w źródle danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-174">Returns the commands to execute against the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8e3a5-175">A <see langword="string" /> reprezentujący poleceń, które wykonuje kwerendy względem źródła danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8e3a5-175">A <see langword="string" /> that represents the commands that the query executes against the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8e3a5-176">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="8e3a5-176">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_totracestring)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_ToTraceString](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_totracestring)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>