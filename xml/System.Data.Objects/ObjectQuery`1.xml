<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df93ee6f31a619abb00a22e57e96cf6f7f494978" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69372666" /></Metadata><TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IListSource, IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="06016-101">Typ jednostki zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-101">The entity type of the query.</span></span></typeparam>
    <summary><span data-ttu-id="06016-102">Reprezentuje typ zapytania względem modelu koncepcyjnego w danym kontekście obiektu.</span><span class="sxs-lookup"><span data-stu-id="06016-102">Represents a typed query against a conceptual model in a given object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-103">Klasa <xref:System.Data.Objects.ObjectQuery%601> generyczna reprezentuje zapytanie, które zwraca kolekcję zawierającą zero lub więcej obiektów określonego typu.</span><span class="sxs-lookup"><span data-stu-id="06016-103">The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type.</span></span> <span data-ttu-id="06016-104">Aby <xref:System.Data.Objects.ObjectContext> można było wykonać zapytanie obiektu, musi ono być zdefiniowane.</span><span class="sxs-lookup"><span data-stu-id="06016-104">The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed.</span></span> <span data-ttu-id="06016-105">Ten kontekst zapewnia informacje o połączeniu i metadanych, które są wymagane do tworzenia i wykonywania zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-105">This context provides the connection and metadata information that is required to compose and execute the query.</span></span> <span data-ttu-id="06016-106">Zapytanie obiektu jest wykonywane w następujących scenariuszach:</span><span class="sxs-lookup"><span data-stu-id="06016-106">An object query is executed in the following scenarios:</span></span>  
  
-   <span data-ttu-id="06016-107">Gdy jest ona podejmowana, na przykład podczas `foreach` wyliczania (C#) `For Each` lub (Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="06016-107">When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.</span></span>  
  
-   <span data-ttu-id="06016-108">Gdy jest przypisany do wypełnienia <xref:System.Collections.Generic.List%601> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06016-108">When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.</span></span>  
  
-   <span data-ttu-id="06016-109"><xref:System.Data.Objects.ObjectQuery%601.Execute%2A> Gdy metoda jest jawnie wywoływana.</span><span class="sxs-lookup"><span data-stu-id="06016-109">When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.</span></span>  
  
 <span data-ttu-id="06016-110">Zapytanie można utworzyć przy użyciu [!INCLUDE[esql](~/includes/esql-md.md)] instrukcji lub zapytania LINQ lub można je przyrostowo skompilować przy użyciu metod konstruktora zapytań zawartych w klasie.</span><span class="sxs-lookup"><span data-stu-id="06016-110">The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.</span></span> <span data-ttu-id="06016-111">W każdym przypadku wynik jest nowym <xref:System.Data.Objects.ObjectQuery%601> wystąpieniem, które po jawnym wykonaniu lub wyliczeniu, wyśle zapytanie do źródła danych w celu wykonania i zwróci wyniki.</span><span class="sxs-lookup"><span data-stu-id="06016-111">In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.</span></span>  
  
 <span data-ttu-id="06016-112">Jest często typem jednostki, ale może <xref:System.Data.Common.DbDataRecord> być również typu dla projekcji do typu anonimowego lub typu pierwotnego, takiego jak liczba całkowita lub ciąg. <xref:System.Data.Objects.ObjectQuery%601></span><span class="sxs-lookup"><span data-stu-id="06016-112">An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.</span></span> <span data-ttu-id="06016-113">Aby uzyskać więcej informacji, zobacz [zapytania dotyczące obiektów](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="06016-113">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-114">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-114">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="06016-115">W przykładzie pokazano, jak utworzyć wystąpienie <xref:System.Data.Objects.ObjectQuery%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="06016-115">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9e7d8837-28c5-429d-a824-7bafb59724cf"><span data-ttu-id="06016-116">Język Entity SQL</span><span class="sxs-lookup"><span data-stu-id="06016-116">Entity SQL Language</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/641f9b68-9046-47a1-abb0-1c8eaeda0e2d"><span data-ttu-id="06016-117">LINQ do Jednostek</span><span class="sxs-lookup"><span data-stu-id="06016-117">LINQ to Entities</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-118">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-118">Querying Data as Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06016-119">Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.ObjectQuery`1" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="06016-119">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-120"><xref:System.Data.Objects.ObjectQuery%601> Można zainicjować w taki sposób, aby reprezentuje pojedynczy wynik skalarny, a nie kolekcję wyników skalarnych.</span><span class="sxs-lookup"><span data-stu-id="06016-120">An <xref:System.Data.Objects.ObjectQuery%601> can be initialized in such a way that it represents a single scalar result and not a collection of scalar results.</span></span> <span data-ttu-id="06016-121">Niektóre metody rozszerzające wymagają wyników kolekcji jako dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="06016-121">Some extension methods require collection results as input.</span></span> <span data-ttu-id="06016-122">W tym przypadku <xref:System.ArgumentException> jest generowane, gdy jest wywoływana jedna z tych metod.</span><span class="sxs-lookup"><span data-stu-id="06016-122">In this case, an <xref:System.ArgumentException> is thrown when one of these methods is called.</span></span> <span data-ttu-id="06016-123">Aby uzyskać więcej informacji, zobacz [zapytania dotyczące obiektów](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="06016-123">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="06016-124">Gdy aplikacja generuje Entity SQL zapytania w czasie wykonywania, należy pamiętać o wszystkich ograniczeniach długości poleceń źródła danych.</span><span class="sxs-lookup"><span data-stu-id="06016-124">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="06016-125">Entity SQL nie wymusza ograniczeń długości tekstu polecenia w zapytaniach.</span><span class="sxs-lookup"><span data-stu-id="06016-125">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-126">Wykonywanie zapytań dotyczących danych jako obiektów i ich kształtowania (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-126">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="06016-127">[!INCLUDE[esql](~/includes/esql-md.md)] Zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-127">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="06016-128"><see cref="T:System.Data.Objects.ObjectContext" /> Na którym ma zostać wykonane zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-128">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <summary><span data-ttu-id="06016-129">Tworzy nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie przy użyciu określonego [!INCLUDE[esql](~/includes/esql-md.md)] polecenia jako wstępnego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-129">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-130">Gdy aplikacja generuje Entity SQL zapytania w czasie wykonywania, należy pamiętać o wszystkich ograniczeniach długości poleceń źródła danych.</span><span class="sxs-lookup"><span data-stu-id="06016-130">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="06016-131">Entity SQL nie wymusza ograniczeń długości tekstu polecenia w zapytaniach.</span><span class="sxs-lookup"><span data-stu-id="06016-131">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-132">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-132">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-133">W przykładzie pokazano, jak utworzyć wystąpienie <xref:System.Data.Objects.ObjectQuery%601> klasy.</span><span class="sxs-lookup"><span data-stu-id="06016-133">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-134">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-134">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="06016-135">[!INCLUDE[esql](~/includes/esql-md.md)] Zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-135">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="06016-136"><see cref="T:System.Data.Objects.ObjectContext" /> Na którym ma zostać wykonane zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-136">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="06016-137">Określa sposób, w jaki jednostki, które są pobierane za pośrednictwem tego zapytania, powinny być scalone z jednostkami, które zostały <see cref="T:System.Data.Objects.ObjectContext" />zwrócone z poprzednich zapytań względem tego samego.</span><span class="sxs-lookup"><span data-stu-id="06016-137">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="06016-138">Tworzy nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie przy użyciu określonego [!INCLUDE[esql](~/includes/esql-md.md)] polecenia jako wstępnego zapytania i określonej opcji scalania.</span><span class="sxs-lookup"><span data-stu-id="06016-138">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-139">Gdy aplikacja generuje Entity SQL zapytania w czasie wykonywania, należy pamiętać o wszystkich ograniczeniach długości poleceń źródła danych.</span><span class="sxs-lookup"><span data-stu-id="06016-139">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="06016-140">Entity SQL nie wymusza ograniczeń długości tekstu polecenia w zapytaniach.</span><span class="sxs-lookup"><span data-stu-id="06016-140">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-141">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-141">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-142">Jest inicjowany z określonym <xref:System.Data.Objects.ObjectContext>zapytaniem, i <xref:System.Data.Objects.MergeOption>. <xref:System.Data.Objects.ObjectQuery%601></span><span class="sxs-lookup"><span data-stu-id="06016-142">The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06016-143">Ogranicza zapytanie do unikatowych wyników.</span><span class="sxs-lookup"><span data-stu-id="06016-143">Limits the query to unique results.</span></span></summary>
        <returns><span data-ttu-id="06016-144">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z zastosowaniem <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-144">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-145">Ta metoda konstruktora zapytań zwraca <xref:System.Data.Objects.ObjectQuery%601> wystąpienie, które jest równoważne z oryginalnym zapytaniem z zastosowaniem [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) .</span><span class="sxs-lookup"><span data-stu-id="06016-145">This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</span></span>  
  
 <span data-ttu-id="06016-146">Nie można zastosować operatora do obiektu, który zawiera mapowanie do kolumny nieporównywalnej w źródle danych (np. ntext). `DISTINCT`</span><span class="sxs-lookup"><span data-stu-id="06016-146">The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-147">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-147">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-148">W przykładzie zastosowano <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> metodę, aby utworzyć <xref:System.Data.Objects.ObjectQuery%601> nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="06016-148">The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="06016-149">Następnie wywołuje <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> nowy <xref:System.Data.Objects.ObjectQuery%601> obiekt, aby uzyskać unikatowe wyniki tego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-149">Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-150">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-150">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="06016-151"><see cref="T:System.Data.Objects.ObjectQuery`1" /> Reprezentuje wyniki do wykluczenia z zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-151">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span></span></param>
        <summary><span data-ttu-id="06016-152">Ogranicza wyniki zapytania, wykluczając wyniki w oparciu o wyniki zapytania innego obiektu.</span><span class="sxs-lookup"><span data-stu-id="06016-152">Limits the query results by excluding results based on the results of another object query.</span></span></summary>
        <returns><span data-ttu-id="06016-153">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">wyjątkiem</see> zastosowania na podstawie określonego <paramref name="query" />.</span><span class="sxs-lookup"><span data-stu-id="06016-153">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-154">Dostarczone `query` , które definiuje wyniki do wykluczenia, muszą być tego samego typu lub typu, który jest zgodny <xref:System.Data.Objects.ObjectQuery%601>z.</span><span class="sxs-lookup"><span data-stu-id="06016-154">The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="06016-155">Parametry, które są zdefiniowane w dostarczonych `query` , są scalane z parametrami, które <xref:System.Data.Objects.ObjectQuery%601> są zdefiniowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="06016-155">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="06016-156">Parametry muszą być unikatowe w połączeniu <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="06016-156">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="06016-157">W połączonej kolekcji nie mogą istnieć dwa parametry o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="06016-157">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="06016-158">Aby uzyskać więcej informacji, zobacz [Konstruktor zapytań metod](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="06016-158">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="06016-159">Wyniki zapytania dziedziczą połączenie z wystąpienia, <xref:System.Data.Objects.ObjectQuery%601> na którym <xref:System.Data.Objects.ObjectQuery%601.Except%2A> został wywołany.</span><span class="sxs-lookup"><span data-stu-id="06016-159">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-160">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-160">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-161">W przykładzie zastosowano <xref:System.Data.Objects.ObjectQuery%601.Except%2A> metodę w celu utworzenia <xref:System.Data.Objects.ObjectQuery%601> nowego obiektu, a następnie iteracja przez wynik nowej kwerendy.</span><span class="sxs-lookup"><span data-stu-id="06016-161">The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-162"><paramref name="query" /> Parametr jest<see langword="null" /> lub ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="06016-162">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-163">Wykonywanie zapytań dotyczących danych jako obiektów i ich kształtowania (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-163">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="06016-164"><see cref="T:System.Data.Objects.MergeOption" /> Do użycia podczas wykonywania zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-164">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="06016-165">Wartość domyślna to <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span><span class="sxs-lookup"><span data-stu-id="06016-165">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="06016-166">Wykonuje kwerendę obiektu z określoną opcją scalania.</span><span class="sxs-lookup"><span data-stu-id="06016-166">Executes the object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="06016-167">Element <see cref="T:System.Data.Objects.ObjectResult`1" /> zawierający kolekcję obiektów jednostek zwróconych przez zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-167">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-168">Opcja scalania domyślnego dla kwerend obiektów to <xref:System.Data.Objects.MergeOption.AppendOnly>.</span><span class="sxs-lookup"><span data-stu-id="06016-168">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="06016-169">Aby uzyskać więcej informacji, zobacz [rozpoznawanie tożsamości, zarządzanie stanami i Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span><span class="sxs-lookup"><span data-stu-id="06016-169">For more information, see [Identity Resolution, State Management, and Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-170">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-170">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-171">Przykład zwraca <xref:System.Data.Objects.ObjectResult%601> metodę from <xref:System.Data.Objects.ObjectQuery.Execute%2A> .</span><span class="sxs-lookup"><span data-stu-id="06016-171">The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method.</span></span> <span data-ttu-id="06016-172">Następnie Pobiera moduł wyliczający i wykonuje iterację w wyniku zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-172">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="06016-173">Na końcu zwalnia moduł wyliczający i <xref:System.Data.Objects.ObjectResult%601> obiekt.</span><span class="sxs-lookup"><span data-stu-id="06016-173">At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-174">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-174">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="06016-175">Kolumny klucza, według których mają być grupowane wyniki.</span><span class="sxs-lookup"><span data-stu-id="06016-175">The key columns by which to group the results.</span></span></param>
        <param name="projection"><span data-ttu-id="06016-176">Lista wybranych właściwości, które definiują projekcję.</span><span class="sxs-lookup"><span data-stu-id="06016-176">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-177">Zero lub więcej parametrów, które są używane w tej metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-177">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="06016-178">Grupuje wyniki zapytania według określonych kryteriów.</span><span class="sxs-lookup"><span data-stu-id="06016-178">Groups the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="06016-179">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie typu <see cref="T:System.Data.Common.DbDataRecord" /> , które jest równoważne z oryginalnym wystąpieniem z zastosowanym <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">grupą</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-179">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A>stosuje projekcję określoną przez `projection` parametr.</span><span class="sxs-lookup"><span data-stu-id="06016-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="06016-181">Oznacza to, że <xref:System.Data.Objects.ObjectQuery%601> zwracany <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> przez metodę jest zawsze typu <xref:System.Data.Common.DbDataRecord>.</span><span class="sxs-lookup"><span data-stu-id="06016-181">This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="06016-182">Aby uzyskać więcej informacji, zobacz [zapytania dotyczące obiektów](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="06016-182">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-183">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-183">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="06016-184">Ten przykład tworzy nowy <xref:System.Data.Objects.ObjectQuery%601> obiekt, który zawiera wyniki istniejącej kwerendy pogrupowane według nazwy produktu.</span><span class="sxs-lookup"><span data-stu-id="06016-184">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  
  
 <span data-ttu-id="06016-185">Ten przykład zwraca zestaw zagnieżdżonych rekordów danych, które zawierają `Contact.LastName` kolumny pogrupowane i posortowane alfabetycznie według pierwszej `Contact.LastName`litery.</span><span class="sxs-lookup"><span data-stu-id="06016-185">This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-186"><paramref name="query" /> Parametr jest<see langword="null" /> lub ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="06016-186">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="06016-187">—lub—</span><span class="sxs-lookup"><span data-stu-id="06016-187">-or-</span></span> 
<span data-ttu-id="06016-188"><paramref name="projection" /> Parametr jest<see langword="null" /> lub ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="06016-188">The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-189">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-189">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="06016-190">Rozdzielana kropkami lista obiektów pokrewnych, które mają zostać zwrócone w wynikach zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-190">Dot-separated list of related objects to return in the query results.</span></span></param>
        <summary><span data-ttu-id="06016-191">Określa obiekty pokrewne do uwzględnienia w wynikach zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-191">Specifies the related objects to include in the query results.</span></span></summary>
        <returns><span data-ttu-id="06016-192">Nowy <see cref="T:System.Data.Objects.ObjectQuery`1" /> ze zdefiniowaną ścieżką zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-192">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-193">Ścieżki zapytań mogą być używane z zapytaniami Entity SQL i LINQ.</span><span class="sxs-lookup"><span data-stu-id="06016-193">Query paths can be used with Entity SQL and LINQ queries.</span></span>  
  
 <span data-ttu-id="06016-194">Ścieżki są wszystkie — włącznie.</span><span class="sxs-lookup"><span data-stu-id="06016-194">Paths are all-inclusive.</span></span> <span data-ttu-id="06016-195">Na przykład, jeśli wywołanie include wskazuje `Include("Orders.OrderLines")`, nie tylko zostanie `OrderLines` uwzględnione, ale również `Orders`.</span><span class="sxs-lookup"><span data-stu-id="06016-195">For example, if an include call indicates `Include("Orders.OrderLines")`, not only will `OrderLines` be included, but also `Orders`.</span></span> <span data-ttu-id="06016-196">Aby uzyskać więcej informacji, zobacz [ładowanie powiązanych obiektów](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="06016-196">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>  
  
 <span data-ttu-id="06016-197">Po wywołaniu <xref:System.Data.Objects.ObjectQuery%601.Include%2A> metody ścieżka zapytania jest prawidłowa tylko w zwracanym wystąpieniu <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="06016-197">When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="06016-198">Nie dotyczy to <xref:System.Data.Objects.ObjectQuery%601> innych wystąpień i samego kontekstu obiektu.</span><span class="sxs-lookup"><span data-stu-id="06016-198">Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.</span></span>  
  
 <span data-ttu-id="06016-199">Ponieważ metoda zwraca obiekt zapytania, można wywołać tę metodę wiele razy <xref:System.Data.Objects.ObjectQuery%601> w, aby określić wiele ścieżek dla zapytania, jak w poniższym przykładzie: <xref:System.Data.Objects.ObjectQuery%601.Include%2A></span><span class="sxs-lookup"><span data-stu-id="06016-199">Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-200"><paramref name="path" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-200"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-201"><paramref name="path" />jest <see langword="empty" />.</span><span class="sxs-lookup"><span data-stu-id="06016-201"><paramref name="path" /> is <see langword="empty" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-202">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-202">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="06016-203"><see cref="T:System.Data.Objects.ObjectQuery`1" /> Reprezentuje wyniki do uwzględnienia w zapytaniu.</span><span class="sxs-lookup"><span data-stu-id="06016-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span></span></param>
        <summary><span data-ttu-id="06016-204">Ogranicza wyniki zapytania przez uwzględnienie tylko wyników istniejących w kwerendzie innego obiektu.</span><span class="sxs-lookup"><span data-stu-id="06016-204">Limits the query results by including only the results that exist in another object query.</span></span></summary>
        <returns><span data-ttu-id="06016-205">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql"></see> zastosowaniem przecięcia, na <paramref name="query" />podstawie określonego.</span><span class="sxs-lookup"><span data-stu-id="06016-205">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-206">Dostarczone `query` , które definiuje wyniki do dołączenia, muszą być tego samego typu lub typu, który jest zgodny <xref:System.Data.Objects.ObjectQuery%601>z.</span><span class="sxs-lookup"><span data-stu-id="06016-206">The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="06016-207">Parametry, które są zdefiniowane w dostarczonych `query` , są scalane z parametrami, które <xref:System.Data.Objects.ObjectQuery%601> są zdefiniowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="06016-207">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="06016-208">Parametry muszą być unikatowe w połączeniu <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="06016-208">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="06016-209">W połączonej kolekcji nie mogą istnieć dwa parametry o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="06016-209">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="06016-210">Aby uzyskać więcej informacji, zobacz [Konstruktor zapytań metod](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="06016-210">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="06016-211">Wyniki zapytania dziedziczą połączenie z <xref:System.Data.Objects.ObjectQuery%601> wystąpienia, na <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> którym metoda została wywołana.</span><span class="sxs-lookup"><span data-stu-id="06016-211">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-212">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-212">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-213">Ten przykład tworzy nowy <xref:System.Data.Objects.ObjectQuery%601> obiekt, który zawiera wyniki dwóch innych zapytań.</span><span class="sxs-lookup"><span data-stu-id="06016-213">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-214"><paramref name="query" /> Parametr jest<see langword="null" /> lub jest ciągiem pustym.</span><span class="sxs-lookup"><span data-stu-id="06016-214">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-215">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-215">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06016-216">Pobiera lub ustawia nazwę tego zapytania obiektu.</span><span class="sxs-lookup"><span data-stu-id="06016-216">Gets or sets the name of this object query.</span></span></summary>
        <value><span data-ttu-id="06016-217">Wartość, która jest nazwą tego <see cref="T:System.Data.Objects.ObjectQuery`1" />elementu. <see langword="string" /></span><span class="sxs-lookup"><span data-stu-id="06016-217">A <see langword="string" /> value that is the name of this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-218">Nazwa zapytania obiektu identyfikuje bieżące zapytanie obiektu w sekwencji według nazwy podczas konstruowania metod konstruktora zapytań.</span><span class="sxs-lookup"><span data-stu-id="06016-218">The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.</span></span> <span data-ttu-id="06016-219">Domyślnie nazwa zapytania to `it`.</span><span class="sxs-lookup"><span data-stu-id="06016-219">By default, the query name is `it`.</span></span> <span data-ttu-id="06016-220">Może to być przydatne w przypadku odwoływania się do bieżącej sekwencji w sprzężeniach wewnątrz <xref:System.Data.Objects.ObjectQuery`1.Where*> metody lub <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> w metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-220">This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.ObjectQuery`1.Where*> method or in the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method.</span></span> <span data-ttu-id="06016-221">Aby uzyskać więcej informacji, zobacz [Konstruktor zapytań metod](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="06016-221">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="06016-222">Po ustawieniu <xref:System.Data.Objects.ObjectQuery%601.Name%2A> właściwości <xref:System.Data.Objects.ObjectQuery%601>, ta wartość zostanie aliasem w kolejnych metodach.</span><span class="sxs-lookup"><span data-stu-id="06016-222">When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.</span></span>  
  
 <span data-ttu-id="06016-223">Wartość <xref:System.Data.Objects.ObjectQuery%601.Name%2A> właściwości musi rozpoczynać się od litery i może zawierać litery, cyfry i znaki podkreślenia.</span><span class="sxs-lookup"><span data-stu-id="06016-223">The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-224">Ten przykład ustawia nazwę pierwszego <xref:System.Data.Objects.ObjectQuery%601> elementu na "Product", a następnie używa tego aliasu w <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> pomyślnej metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-224">This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to "product" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method.</span></span> <span data-ttu-id="06016-225">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-225">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-226">Wartość określona w ustawieniu jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="06016-226">The value specified on set is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-227">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-227">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="06016-228">Typ <see cref="T:System.Data.Objects.ObjectResult`1" /> zwracany, gdy zapytanie jest wykonywane z zastosowanym filtrem.</span><span class="sxs-lookup"><span data-stu-id="06016-228">The type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the query is executed with the applied filter.</span></span></typeparam>
        <summary><span data-ttu-id="06016-229">Ogranicza zapytanie tylko do wyników określonego typu.</span><span class="sxs-lookup"><span data-stu-id="06016-229">Limits the query to only results of a specific type.</span></span></summary>
        <returns><span data-ttu-id="06016-230">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z zastosowaniem <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-230">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="06016-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*>służy do filtrowania wyników zapytania według określonej jednostki lub typu złożonego.</span><span class="sxs-lookup"><span data-stu-id="06016-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> is used to filter query results by a specific entity or complex type.</span></span> <span data-ttu-id="06016-232">Obsługuje model koncepcyjny z dziedziczeniem obiektów.</span><span class="sxs-lookup"><span data-stu-id="06016-232">This supports a conceptual model with object inheritance.</span></span> <span data-ttu-id="06016-233">Aby uzyskać więcej informacji, [zobacz Entity Data Model: Dziedziczenie](~/docs/framework/data/adonet/entity-data-model-inheritance.md).</span><span class="sxs-lookup"><span data-stu-id="06016-233">For more information, see [Entity Data Model: Inheritance](~/docs/framework/data/adonet/entity-data-model-inheritance.md).</span></span>

<span data-ttu-id="06016-234">Metodę można stosować tylko <xref:System.Data.Objects.ObjectQuery%601> do typu jednostki lub typu złożonego, który jest zdefiniowany w modelu EDM. <xref:System.Data.Objects.ObjectQuery`1.OfType*></span><span class="sxs-lookup"><span data-stu-id="06016-234">The <xref:System.Data.Objects.ObjectQuery`1.OfType*> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException"><span data-ttu-id="06016-235">Określony typ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="06016-235">The type specified is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/be01614e-070e-41be-9746-bb674b41e488(v=vs.90)"><span data-ttu-id="06016-236">Instrukcje: Tworzenie i wykonywanie zapytań dotyczących obiektów przy użyciu dziedziczenia na poziomie tabeli (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-236">How to: Create and Execute Object Queries using Table-per-Hierarchy Inheritance (Entity Framework)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-237">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-237">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="06016-238">Kolumny klucza, według których mają być uporządkowane wyniki.</span><span class="sxs-lookup"><span data-stu-id="06016-238">The key columns by which to order the results.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-239">Zero lub więcej parametrów, które są używane w tej metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-239">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="06016-240">Porządkuje wyniki zapytania według określonych kryteriów.</span><span class="sxs-lookup"><span data-stu-id="06016-240">Orders the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="06016-241">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">kolejnością według</see> zastosowanej.</span><span class="sxs-lookup"><span data-stu-id="06016-241">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-242">Nie można zagwarantować kolejności wyników w zagnieżdżonym zapytaniu.</span><span class="sxs-lookup"><span data-stu-id="06016-242">The ordering of results in a nested query cannot be guaranteed.</span></span>  
  
 <span data-ttu-id="06016-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>zawsze powinna być ostatnią metodą konstruktora zapytań w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="06016-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-244">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-244">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-245">W przykładzie tworzony jest nowy <xref:System.Data.Objects.ObjectQuery%601> obiekt, który zawiera wyniki istniejącej `ProductID`kolejności zapytań.</span><span class="sxs-lookup"><span data-stu-id="06016-245">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-246">Parametr <paramref name="keys" /> lub <paramref name="parameters" /> jest .<see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="06016-246">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-247"><paramref name="key" /> Jest to pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="06016-247">The <paramref name="key" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-248">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-248">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection"><span data-ttu-id="06016-249">Lista wybranych właściwości, które definiują projekcję.</span><span class="sxs-lookup"><span data-stu-id="06016-249">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-250">Zero lub więcej parametrów, które są używane w tej metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-250">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="06016-251">Ogranicza wyniki zapytania tylko do właściwości, które są zdefiniowane w określonym projekcji.</span><span class="sxs-lookup"><span data-stu-id="06016-251">Limits the query results to only the properties that are defined in the specified projection.</span></span></summary>
        <returns><span data-ttu-id="06016-252">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie typu <see cref="T:System.Data.Common.DbDataRecord" /> , które jest równoważne z oryginalnym wystąpieniem z zastosowaniem <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A>stosuje projekcję określoną przez `projection` parametr.</span><span class="sxs-lookup"><span data-stu-id="06016-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="06016-254">Zwracany przez metodę jest zawsze typem wiersza. <xref:System.Data.Common.DbDataRecord> <xref:System.Data.Objects.ObjectQuery%601> <xref:System.Data.Objects.ObjectQuery%601.Select%2A></span><span class="sxs-lookup"><span data-stu-id="06016-254">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="06016-255"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> Użyj metody, aby zwracać wartości, które są typami prostymi, typami jednostek lub typami złożonymi.</span><span class="sxs-lookup"><span data-stu-id="06016-255">Use the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="06016-256">Aby uzyskać więcej informacji, zobacz [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md).</span><span class="sxs-lookup"><span data-stu-id="06016-256">For more information, see [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md).</span></span>  
  
 <span data-ttu-id="06016-257">Gdy właściwość nawigacji jest uwzględniona w projekcji, wyniki zapytania zawierają kolekcję zagnieżdżonych <xref:System.Data.Common.DbDataRecord> obiektów.</span><span class="sxs-lookup"><span data-stu-id="06016-257">When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects.</span></span> <span data-ttu-id="06016-258">Aby uzyskać więcej informacji, zobacz [jak: Nawigowanie po relacjach](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057)przy użyciu właściwości nawigacji.</span><span class="sxs-lookup"><span data-stu-id="06016-258">For more information, see [How to: Navigate Relationships Using Navigation Properties](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-259">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-259">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-260">W przykładzie tworzony jest nowy <xref:System.Data.Objects.ObjectQuery%601> , którego wyniki są rekordy `ProductID` danych zawierające pola wyników tego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-260">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-261"><paramref name="projection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-261"><paramref name="projection" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="06016-262">—lub—</span><span class="sxs-lookup"><span data-stu-id="06016-262">-or-</span></span> 
 <span data-ttu-id="06016-263"><paramref name="parameters" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-263"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-264"><paramref name="projection" /> Jest to pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="06016-264">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-265">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-265">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="06016-266">Typ <see cref="T:System.Data.Objects.ObjectQuery`1" /> zwracany<see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> przez metodę.</span><span class="sxs-lookup"><span data-stu-id="06016-266">The type of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> returned by the <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> method.</span></span></typeparam>
        <param name="projection"><span data-ttu-id="06016-267">Lista projekcji.</span><span class="sxs-lookup"><span data-stu-id="06016-267">The projection list.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-268">Opcjonalny zestaw parametrów zapytania, który powinien znajdować się w zakresie podczas analizowania.</span><span class="sxs-lookup"><span data-stu-id="06016-268">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="06016-269">Ogranicza wyniki zapytania tylko do właściwości określonej w projekcji.</span><span class="sxs-lookup"><span data-stu-id="06016-269">Limits the query results to only the property specified in the projection.</span></span></summary>
        <returns><span data-ttu-id="06016-270">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie typu zgodne z konkretną projekcją.</span><span class="sxs-lookup"><span data-stu-id="06016-270">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span></span> <span data-ttu-id="06016-271">Zwracana <see cref="T:System.Data.Objects.ObjectQuery`1" /> wartość jest równoważna z oryginalnym wystąpieniem z zastosowanym <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">wybieraniem wartości</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-271">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*>służy do zwracania wartości, które są typami prostymi, typami jednostek lub typami złożonymi.</span><span class="sxs-lookup"><span data-stu-id="06016-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> is used to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="06016-273"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> Użyj metody dla projekcji, które wymagają typu wiersza zamiast typu wartości.</span><span class="sxs-lookup"><span data-stu-id="06016-273">Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type.</span></span> <span data-ttu-id="06016-274">Aby uzyskać więcej informacji, zobacz [zapytania dotyczące obiektów](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span><span class="sxs-lookup"><span data-stu-id="06016-274">For more information, see [Object Queries](https://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276).</span></span>  
  
 <span data-ttu-id="06016-275">Metoda stosuje projekcję określoną `projection` przez parametr. <xref:System.Data.Objects.ObjectQuery`1.SelectValue*></span><span class="sxs-lookup"><span data-stu-id="06016-275">The <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="06016-276">Zwracany przez metodę musi być typu wartości, który jest zgodny z projekcją i musi być tym samym <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>typem co typ. <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> <xref:System.Data.Objects.ObjectQuery%601></span><span class="sxs-lookup"><span data-stu-id="06016-276">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-277">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-277">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-278">W przykładzie tworzony jest nowy <xref:System.Data.Objects.ObjectQuery%601> , który zawiera wyniki, które są `ProductID` sekwencją wartości rzutowanych od wyników istniejącego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-278">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-279"><paramref name="projection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-279"><paramref name="projection" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="06016-280">—lub—</span><span class="sxs-lookup"><span data-stu-id="06016-280">-or-</span></span> 
 <span data-ttu-id="06016-281"><paramref name="parameters" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-281"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-282"><paramref name="projection" /> Jest to pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="06016-282">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-283">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-283">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="06016-284">Kolumny klucza, według których mają być uporządkowane wyniki.</span><span class="sxs-lookup"><span data-stu-id="06016-284">The key columns by which to order the results.</span></span></param>
        <param name="count"><span data-ttu-id="06016-285">Liczba wyników do pominięcia.</span><span class="sxs-lookup"><span data-stu-id="06016-285">The number of results to skip.</span></span> <span data-ttu-id="06016-286">Musi to być stała lub odwołanie do parametru.</span><span class="sxs-lookup"><span data-stu-id="06016-286">This must be either a constant or a parameter reference.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-287">Opcjonalny zestaw parametrów zapytania, który powinien znajdować się w zakresie podczas analizowania.</span><span class="sxs-lookup"><span data-stu-id="06016-287">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="06016-288">Porządkuje wyniki zapytania według określonych kryteriów i pomija określoną liczbę wyników.</span><span class="sxs-lookup"><span data-stu-id="06016-288">Orders the query results by the specified criteria and skips a specified number of results.</span></span></summary>
        <returns><span data-ttu-id="06016-289">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z zastosowaniem <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">kolejności order by</see> i [Skip](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) .</span><span class="sxs-lookup"><span data-stu-id="06016-289">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-290">Nie można użyć <xref:System.Data.Objects.ObjectQuery%601.Top%2A>metodypometodzie <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> .</span><span class="sxs-lookup"><span data-stu-id="06016-290">The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method.</span></span> <span data-ttu-id="06016-291">Gdy używasz <xref:System.Data.Objects.ObjectQuery%601.Top%2A> po <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, działa on podobnie jak instrukcja [Limit](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) klauzuli.</span><span class="sxs-lookup"><span data-stu-id="06016-291">When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an  clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-292">Ten przykład pobiera pięć `Product` obiektów po pominięciu pierwszych trzech w wyniku zapytania, posortowane `Product.ListPrice`według.</span><span class="sxs-lookup"><span data-stu-id="06016-292">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-293">Każdy argument jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-293">Any argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-294"><paramref name="keys" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="06016-294"><paramref name="keys" /> is an empty string.</span></span>  
  
<span data-ttu-id="06016-295">—lub—</span><span class="sxs-lookup"><span data-stu-id="06016-295">-or-</span></span> 
 <span data-ttu-id="06016-296"><paramref name="count" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="06016-296"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-297">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-297">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06016-298">Zwraca moduł wyliczający, który wykonuje iterację w wyniku zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-298">Returns an enumerator that iterates through the results of the query.</span></span></summary>
        <returns><span data-ttu-id="06016-299"><see cref="T:System.Collections.Generic.IEnumerator`1" /> Obiekt, który może służyć do iteracji wyników.</span><span class="sxs-lookup"><span data-stu-id="06016-299">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-300">Wywołanie <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> wykonuje zapytanie.</span><span class="sxs-lookup"><span data-stu-id="06016-300">Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-301">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-301">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="06016-302">Liczba elementów w wynikach jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="06016-302">The number of items in the results as a string.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-303">Opcjonalny zestaw parametrów zapytania, który powinien znajdować się w zakresie podczas analizowania.</span><span class="sxs-lookup"><span data-stu-id="06016-303">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="06016-304">Ogranicza wyniki zapytania do określonej liczby elementów.</span><span class="sxs-lookup"><span data-stu-id="06016-304">Limits the query results to a specified number of items.</span></span></summary>
        <returns><span data-ttu-id="06016-305">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z zastosowaniem najwyższego <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">poziomu</see> .</span><span class="sxs-lookup"><span data-stu-id="06016-305">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A>jest niejednoznaczne, chyba że zapytanie jest sortowane.</span><span class="sxs-lookup"><span data-stu-id="06016-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.</span></span>  
  
 <span data-ttu-id="06016-307">Użycie <xref:System.Data.Objects.ObjectQuery%601.Top%2A> [](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) metody <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> po metodzie działa podobnie jak w przypadku instrukcji [order by](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) .</span><span class="sxs-lookup"><span data-stu-id="06016-307">When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) statement of an [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-308">Przykłady te są oparte na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-308">These examples are based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span>  
  
 <span data-ttu-id="06016-309">W tym przykładzie tworzony jest <xref:System.Data.Objects.ObjectQuery%601> nowy, który zawiera pierwsze dwa wyniki istniejącego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-309">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  
  
 <span data-ttu-id="06016-310">Ten przykład pobiera pięć `Product` obiektów po pominięciu pierwszych trzech w wyniku zapytania, posortowane `Product.ListPrice`według.</span><span class="sxs-lookup"><span data-stu-id="06016-310">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span> <span data-ttu-id="06016-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A>jest używany zamiast [limitu](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) stronicowania.</span><span class="sxs-lookup"><span data-stu-id="06016-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md) for paging.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-312"><paramref name="count" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-312"><paramref name="count" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-313"><paramref name="count" />jest pustym ciągiem.</span><span class="sxs-lookup"><span data-stu-id="06016-313"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-314">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-314">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="06016-315"><see cref="T:System.Data.Objects.ObjectQuery`1" /> Reprezentuje wyniki do dodania.</span><span class="sxs-lookup"><span data-stu-id="06016-315">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="06016-316">Łączy wyniki zapytania z wynikami zapytania innego obiektu, bez żadnych duplikatów.</span><span class="sxs-lookup"><span data-stu-id="06016-316">Combines the results of the query with the results of another object query, without any duplicates.</span></span></summary>
        <returns><span data-ttu-id="06016-317">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">Unią</see> zastosowano, aby dodać wyniki określonego <paramref name="query" />.</span><span class="sxs-lookup"><span data-stu-id="06016-317">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A>dodaje wyniki dostarczone `query` bez żadnych duplikatów.</span><span class="sxs-lookup"><span data-stu-id="06016-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.</span></span>  
  
 <span data-ttu-id="06016-319">Dostarczone `query` , które definiuje wyniki do dodania, muszą być tego samego typu lub typu, który można podwyższyć poziomu do tego <xref:System.Data.Objects.ObjectQuery%601>typu.</span><span class="sxs-lookup"><span data-stu-id="06016-319">The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="06016-320">Na przykład poniższe są prawidłowe, ponieważ `DiscontinuedProducts` można podwyższyć poziom do: `Products`</span><span class="sxs-lookup"><span data-stu-id="06016-320">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="06016-321">Poniższe elementy spowodują zgłoszenie wyjątku, ponieważ `Products` nie można podwyższyć poziomu do. `DiscontinuedProducts`</span><span class="sxs-lookup"><span data-stu-id="06016-321">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="06016-322"><xref:System.Data.Common.DbDataRecord> <xref:System.Data.Common.DbDataRecord> `query` W przypadku typu, rekordy w obu zapytaniach muszą mieć taką samą liczbę kolumn, a typy w kolumnach <xref:System.Data.Common.DbDataRecord> przenoszonej metody muszą być awansowane do typów kolumn w <xref:System.Data.Objects.ObjectQuery%601> <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="06016-322">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="06016-323">Parametry, które są zdefiniowane w dostarczonych `query` , są scalane z parametrami, które <xref:System.Data.Objects.ObjectQuery%601> są zdefiniowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="06016-323">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="06016-324">Parametry muszą być unikatowe w połączeniu <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="06016-324">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="06016-325">W połączonej kolekcji nie mogą istnieć dwa parametry o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="06016-325">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="06016-326">Aby uzyskać więcej informacji, zobacz [Konstruktor zapytań metod](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="06016-326">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="06016-327">Wyniki zapytania dziedziczą połączenie z wystąpienia, <xref:System.Data.Objects.ObjectQuery%601> na którym <xref:System.Data.Objects.ObjectQuery%601.Union%2A> został wywołany.</span><span class="sxs-lookup"><span data-stu-id="06016-327">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-328">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-328">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-329">W przykładzie zastosowano <xref:System.Data.Objects.ObjectQuery%601.Union%2A> metodę, aby utworzyć <xref:System.Data.Objects.ObjectQuery%601> nowy obiekt.</span><span class="sxs-lookup"><span data-stu-id="06016-329">The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-330">Parametr ma wartość <see langword="null" />. <paramref name="query" /></span><span class="sxs-lookup"><span data-stu-id="06016-330">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-331">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-331">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="06016-332"><see cref="T:System.Data.Objects.ObjectQuery`1" /> Reprezentuje wyniki do dodania.</span><span class="sxs-lookup"><span data-stu-id="06016-332">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="06016-333">Łączy wyniki zapytania z wynikami zapytania innego obiektu, w tym wszystkie duplikaty.</span><span class="sxs-lookup"><span data-stu-id="06016-333">Combines the results of the query with the results of another object query, including all duplicates.</span></span></summary>
        <returns><span data-ttu-id="06016-334">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem z zastosowaniem <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">Union All</see> w celu dodania wyników określonego <paramref name="query" />.</span><span class="sxs-lookup"><span data-stu-id="06016-334">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06016-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>dodaje wyniki dostarczonych `query` , w tym wszystkie duplikaty.</span><span class="sxs-lookup"><span data-stu-id="06016-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.</span></span>  
  
 <span data-ttu-id="06016-336">Dostarczone `query` , które definiuje wyniki do dodania, muszą być tego samego typu lub typu, który można podwyższyć poziomu do tego <xref:System.Data.Objects.ObjectQuery%601>typu.</span><span class="sxs-lookup"><span data-stu-id="06016-336">The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="06016-337">Na przykład poniższe są prawidłowe, ponieważ `DiscontinuedProducts` można podwyższyć poziom do: `Products`</span><span class="sxs-lookup"><span data-stu-id="06016-337">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 <span data-ttu-id="06016-338">Poniższe elementy spowodują zgłoszenie wyjątku, ponieważ `Products` nie można podwyższyć poziomu do. `DiscontinuedProducts`</span><span class="sxs-lookup"><span data-stu-id="06016-338">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <span data-ttu-id="06016-339"><xref:System.Data.Common.DbDataRecord> <xref:System.Data.Common.DbDataRecord> `query` W przypadku typu, rekordy w obu zapytaniach muszą mieć taką samą liczbę kolumn, a typy w kolumnach <xref:System.Data.Common.DbDataRecord> przenoszonej metody muszą być awansowane do typów kolumn w <xref:System.Data.Objects.ObjectQuery%601> <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="06016-339">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="06016-340">Parametry, które są zdefiniowane w dostarczonych `query` , są scalane z parametrami, które <xref:System.Data.Objects.ObjectQuery%601> są zdefiniowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="06016-340">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="06016-341">Parametry muszą być unikatowe w połączeniu <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="06016-341">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="06016-342">W połączonej kolekcji nie mogą istnieć dwa parametry o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="06016-342">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="06016-343">Aby uzyskać więcej informacji, zobacz [Konstruktor zapytań metod](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="06016-343">For more information, see [Query Builder Methods](https://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
 <span data-ttu-id="06016-344">Wyniki zapytania dziedziczą połączenie z wystąpienia, <xref:System.Data.Objects.ObjectQuery%601> na którym <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> został wywołany.</span><span class="sxs-lookup"><span data-stu-id="06016-344">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06016-345">Przykład w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-345">The example in this topic is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-346">W przykładzie zastosowano <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> metodę, aby utworzyć nowy <xref:System.Data.Objects.ObjectQuery%601> obiekt.</span><span class="sxs-lookup"><span data-stu-id="06016-346">The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="06016-347">Następnie wywołuje <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> metodę dla nowego <xref:System.Data.Objects.ObjectQuery%601> obiektu, aby uzyskać unikatowe wyniki tego zapytania.</span><span class="sxs-lookup"><span data-stu-id="06016-347">Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-348">Parametr ma wartość <see langword="null" />. <paramref name="query" /></span><span class="sxs-lookup"><span data-stu-id="06016-348">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-349">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-349">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="06016-350">Predykat filtru.</span><span class="sxs-lookup"><span data-stu-id="06016-350">The filter predicate.</span></span></param>
        <param name="parameters"><span data-ttu-id="06016-351">Zero lub więcej parametrów, które są używane w tej metodzie.</span><span class="sxs-lookup"><span data-stu-id="06016-351">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="06016-352">Ogranicza zapytanie do wyników, które pasują do określonych kryteriów filtrowania.</span><span class="sxs-lookup"><span data-stu-id="06016-352">Limits the query to results that match specified filtering criteria.</span></span></summary>
        <returns><span data-ttu-id="06016-353">Nowe <see cref="T:System.Data.Objects.ObjectQuery`1" /> wystąpienie, które jest równoważne z oryginalnym wystąpieniem, w <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">którym</see> zastosowano.</span><span class="sxs-lookup"><span data-stu-id="06016-353">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06016-354">Ten przykład jest oparty na [modelu sprzedaży AdventureWorks](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="06016-354">This example is based on the [AdventureWorks Sales Model](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="06016-355">W przykładzie tworzony jest nowy <xref:System.Data.Objects.ObjectQuery%601> , który zawiera wyniki istniejącej kwerendy przefiltrowanej według następujących kryteriów: `"it.ProductID = 900"`.</span><span class="sxs-lookup"><span data-stu-id="06016-355">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="06016-356"><paramref name="predicate" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-356"><paramref name="predicate" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="06016-357">—lub—</span><span class="sxs-lookup"><span data-stu-id="06016-357">-or-</span></span> 
 <span data-ttu-id="06016-358"><paramref name="parameters" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="06016-358"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="06016-359"><paramref name="predicate" /> Jest to pusty ciąg.</span><span class="sxs-lookup"><span data-stu-id="06016-359">The <paramref name="predicate" /> is an empty string.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md"><span data-ttu-id="06016-360">Wykonywanie zapytań dotyczących danych jako obiektów (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="06016-360">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
