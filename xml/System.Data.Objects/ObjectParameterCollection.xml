<Type Name="ObjectParameterCollection" FullName="System.Data.Objects.ObjectParameterCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76b9607d5132e5740d5761d1ea2d7b807c4771e2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectParameterCollection : System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;, System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectParameterCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectParameter&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectParameterCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectParameterCollection&#xA;Implements ICollection(Of ObjectParameter), IEnumerable(Of ObjectParameter)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectParameterCollection sealed : System::Collections::Generic::ICollection&lt;System::Data::Objects::ObjectParameter ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="36057-101">Reprezentuje parametry zapytania jako <see cref="T:System.Data.Objects.ObjectParameter" /> obiektów, które są zdefiniowane w <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="36057-101">Represents the query parameters as <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are defined in an <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-102">Reprezentuje parametry zapytania jako <xref:System.Data.Objects.ObjectParameter> obiektów zdefiniowanych w <xref:System.Data.Objects.ObjectQuery%601>.</span><span class="sxs-lookup"><span data-stu-id="36057-102">Represents the query parameters as <xref:System.Data.Objects.ObjectParameter> objects defined in an <xref:System.Data.Objects.ObjectQuery%601>.</span></span>  
  
 <span data-ttu-id="36057-103">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="36057-103">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="36057-104">Parametry, które są przekazywane do metody konstruktora zapytań są agregowane przez kolejne wystąpienia <xref:System.Data.Objects.ObjectQuery%601> w sekwencji.</span><span class="sxs-lookup"><span data-stu-id="36057-104">The parameters that are passed to query builder methods are aggregated by successive instances of an <xref:System.Data.Objects.ObjectQuery%601> in the sequence.</span></span> <span data-ttu-id="36057-105">Są one dostępne za pomocą <xref:System.Data.Objects.ObjectQuery.Parameters%2A> właściwość, która zwraca <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="36057-105">They can be accessed by using the <xref:System.Data.Objects.ObjectQuery.Parameters%2A> property, which returns the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="36057-106">Po dodaniu parametry, można je usunąć z kolekcji i kolekcji można wyczyścić, dopóki nie został skompilowany lub wykonywane zapytania.</span><span class="sxs-lookup"><span data-stu-id="36057-106">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="36057-107">Nie można zmienić nazwy parametrów, ale wartości można zmieniać w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="36057-107">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="36057-108">Parametry muszą być unikatowe w <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="36057-108">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="36057-109">Nie może być dwóch parametrów w kolekcji o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="36057-109">There cannot be two parameters in the collection with the same name.</span></span>  
  
 <span data-ttu-id="36057-110">Korzystając z metody kompozycji, takich jak <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> i <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, parametry są łączone ze sobą.</span><span class="sxs-lookup"><span data-stu-id="36057-110">When using composition methods, such as <xref:System.Data.Objects.ObjectQuery%601.Union%2A>, <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A>, <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> and <xref:System.Data.Objects.ObjectQuery%601.Except%2A>, the parameters are merged.</span></span> <span data-ttu-id="36057-111">Gdy zestawy parametrów są niezgodne lub niekompletne, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="36057-111">An exception is thrown when the sets of parameters are incompatible or incomplete.</span></span> <span data-ttu-id="36057-112">Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="36057-112">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36057-113">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-113">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-114">W przykładzie dodaje nowe parametry do kolekcji i pobiera liczba parametrów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-114">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="36057-115">A następnie jego iterację <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-115">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (parameter As ObjectParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="36057-116">Parametr do dodania do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-116">The parameter to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-117">Dodaje określony <see cref="T:System.Data.Objects.ObjectParameter" /> do kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-117">Adds the specified <see cref="T:System.Data.Objects.ObjectParameter" /> to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-118">Po dodaniu parametry, można je usunąć z kolekcji i kolekcji można wyczyścić, dopóki nie został skompilowany lub wykonywane zapytania.</span><span class="sxs-lookup"><span data-stu-id="36057-118">After parameters have been added, they can be removed from the collection and the collection can be cleared, as long as the query has not been compiled or executed.</span></span> <span data-ttu-id="36057-119">Nie można zmienić nazwy parametrów, ale wartości można zmieniać w dowolnym momencie.</span><span class="sxs-lookup"><span data-stu-id="36057-119">Parameter names cannot be changed, but values can be changed at any time.</span></span>  
  
 <span data-ttu-id="36057-120">Parametry muszą być unikatowe w <xref:System.Data.Objects.ObjectParameterCollection>.</span><span class="sxs-lookup"><span data-stu-id="36057-120">Parameters must be unique in the <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="36057-121">Nie może być dwóch parametrów w kolekcji o tej samej nazwie.</span><span class="sxs-lookup"><span data-stu-id="36057-121">There cannot be two parameters in the collection with the same name.</span></span> <span data-ttu-id="36057-122">Aby uzyskać więcej informacji, zobacz [metody konstruktora zapytań](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span><span class="sxs-lookup"><span data-stu-id="36057-122">For more information, see [Query Builder Methods](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36057-123">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-123">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-124">W przykładzie dodano nowe parametry w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-124">The example adds new parameters to the collection.</span></span> <span data-ttu-id="36057-125">Iteruje po jego <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-125">It iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36057-126">
            <paramref name="parameter" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-126">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="36057-127">
            <paramref name="parameter" /> Argument już istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-127">The <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="36057-128">To zachowanie różni się od większość kolekcji, które umożliwiają zduplikowane wpisy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-128">This behavior differs from that of most collections that allow duplicate entries.</span>
          </span>
          <span data-ttu-id="36057-129">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-129">-or-</span>
          </span>
          <span data-ttu-id="36057-130">Inny parametr z taką samą nazwę jak <paramref name="parameter" /> argument już istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-130">Another parameter with the same name as the <paramref name="parameter" /> argument already exists in the collection.</span>
          </span>
          <span data-ttu-id="36057-131">Należy pamiętać, że wyszukiwania bez uwzględniania wielkości liter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-131">Note that the lookup is case-insensitive.</span>
          </span>
          <span data-ttu-id="36057-132">To zachowanie różni się od większość kolekcji i jest bardziej przypominają te <see cref="T:System.Collections.Generic.Dictionary" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-132">This behavior differs from that of most collections, and is more like that of a <see cref="T:System.Collections.Generic.Dictionary" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36057-133">Typ <paramref name="parameter" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-133">The type of the <paramref name="parameter" /> is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36057-134">Usuwa wszystkie <see cref="T:System.Data.Objects.ObjectParameter" /> wystąpień z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-134">Deletes all <see cref="T:System.Data.Objects.ObjectParameter" /> instances from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="36057-135">Sprawdza obecność określonego <see cref="T:System.Data.Objects.ObjectParameter" /> w kolekcji przez odwołanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-135">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="36057-136">
            <see cref="T:System.Data.Objects.ObjectParameter" /> Można znaleźć w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-136">The <see cref="T:System.Data.Objects.ObjectParameter" /> to find in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-137">Sprawdza obecność określonego <see cref="T:System.Data.Objects.ObjectParameter" /> w kolekcji przez odwołanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-137">Checks for the existence of a specified <see cref="T:System.Data.Objects.ObjectParameter" /> in the collection by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36057-138">Zwraca <see langword="true" /> Jeśli obiektu parameter został znaleziony w kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-138">Returns <see langword="true" /> if the parameter object was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-139">Jest to sprawdzenie odwołania na.</span><span class="sxs-lookup"><span data-stu-id="36057-139">This is a reference-based check.</span></span> <span data-ttu-id="36057-140">Oznacza to, że jeśli <xref:System.Data.Objects.ObjectParameter> jest określony, który zawiera taką samą nazwę jak parametr obiektu w kolekcji, ta metoda zwróci tylko te `true` Jeśli tego samego obiektu.</span><span class="sxs-lookup"><span data-stu-id="36057-140">That is, if an <xref:System.Data.Objects.ObjectParameter> is specified that contains the same name as a parameter object in the collection, this method will only return `true` if it is the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36057-141">
            <paramref name="parameter" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-141">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36057-142">Nazwa parametru, który ma zostać wyszukane w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-142">The name of the parameter to look for in the collection.</span>
          </span>
          <span data-ttu-id="36057-143">Ta nazwa nie może zawierać "@" znacznika parametr, który jest używany w [!INCLUDE[esql](~/includes/esql-md.md)] instrukcje, rzeczywistą nazwą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-143">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-144">Określa, czy <see cref="T:System.Data.Objects.ObjectParameter" /> o określonej nazwie znajduje się w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-144">Determines whether an <see cref="T:System.Data.Objects.ObjectParameter" /> with the specified name is in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36057-145">Zwraca <see langword="true" /> Jeśli parametr o określonej nazwie został znaleziony w kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-145">Returns <see langword="true" /> if a parameter with the specified name was found in the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36057-146">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-146">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-147">W przykładzie użyto <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> metodę, aby określić, czy określony parametr w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-147">The example uses the <xref:System.Data.Objects.ObjectParameterCollection.Contains%2A> method to determine whether the specified parameter is in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_stringarg)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_StringArg](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_stringarg)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36057-148">
            <paramref name="name" /> Parametr jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-148">The <paramref name="name" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Data.Objects.ObjectParameter[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Data.Objects.ObjectParameter[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ObjectParameter(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Data.Objects.ObjectParameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="36057-149">Tablica, do którego można skopiować parametry.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-149">The array into which to copy the parameters.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="36057-150">Indeks w tablicy, od którego należy rozpocząć kopiowanie parametrów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-150">The index in the array at which to start copying the parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-151">Umożliwia parametrów w kolekcji można skopiować do podanej tablicy, zaczynając od obiektu pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-151">Allows the parameters in the collection to be copied into a supplied array, starting with the object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36057-152">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-152">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-153">Przykładowy kod kopiuje parametry do określonej tablicy.</span><span class="sxs-lookup"><span data-stu-id="36057-153">The example copies the parameters into the specified array.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_copyto)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_CopyTo](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_copyto)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36057-154">Obecnie pobiera liczba parametrów w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-154">Gets the number of parameters currently in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36057-155">Liczba <see cref="T:System.Data.Objects.ObjectParameter" /> obiektów, które są obecnie w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-155">The number of <see cref="T:System.Data.Objects.ObjectParameter" /> objects that are currently in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="36057-156">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-156">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-157">W przykładzie dodaje nowe parametry do kolekcji i pobiera liczba parametrów w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-157">The example adds new parameters to the collection and gets the count of the parameters in the collection.</span></span> <span data-ttu-id="36057-158">A następnie jego iterację <xref:System.Data.Objects.ObjectParameterCollection> i wyświetla nazwę, typ i wartość każdego parametru w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-158">Then it iterates through the <xref:System.Data.Objects.ObjectParameterCollection> and displays the name, type, and value of each parameter in the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_count_add_indexer)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Count_Add_Indexer](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_count_add_indexer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectParameter this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.ObjectParameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As ObjectParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Objects::ObjectParameter ^ default[System::String ^] { System::Data::Objects::ObjectParameter ^ get(System::String ^ name); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="36057-159">Nazwa parametru można znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-159">The name of the parameter to find.</span>
          </span>
          <span data-ttu-id="36057-160">Ta nazwa nie może zawierać "@" znacznika parametr, który jest używany w [!INCLUDE[esql](~/includes/esql-md.md)] instrukcje, rzeczywistą nazwą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-160">This name should not include the "@" parameter marker that is used in the [!INCLUDE[esql](~/includes/esql-md.md)] statements, only the actual name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-161">Udostępnia indeksatorze, który umożliwia elementom wywołującym na pobranie parametrów według nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-161">Provides an indexer that allows callers to retrieve parameters by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36057-162">
            <see cref="T:System.Data.Objects.ObjectParameter" /> Wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-162">The <see cref="T:System.Data.Objects.ObjectParameter" /> instance.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="36057-163">Brak parametru o określonej nazwie znajduje się w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-163">No parameter with the specified name is found in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Data.Objects.ObjectParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Data.Objects.ObjectParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (parameter As ObjectParameter) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Data::Objects::ObjectParameter ^ parameter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Objects.ObjectParameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="36057-164">Obiekt do usunięcia z kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-164">An object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="36057-165">Usuwa wystąpienie <see cref="T:System.Data.Objects.ObjectParameter" /> z kolekcji przez odwołanie, jeśli istnieje w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-165">Removes an instance of an <see cref="T:System.Data.Objects.ObjectParameter" /> from the collection by reference if it exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36057-166">Zwraca <see langword="true" /> Jeśli obiektu parameter znaleziono i usunięty z kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-166">Returns <see langword="true" /> if the parameter object was found and removed from the collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-167">To porównanie odwołania na.</span><span class="sxs-lookup"><span data-stu-id="36057-167">This is a reference-based comparison.</span></span> <span data-ttu-id="36057-168">Oznacza to jeśli obiekt parametru zapytania został określony, zawierający taką samą nazwę jak parametr obiektu w kolekcji, parametr w kolekcji tylko zostaną usunięte, jeśli jest ten sam obiekt.</span><span class="sxs-lookup"><span data-stu-id="36057-168">That is, if a query parameter object is specified that contains the same name as a parameter object in the collection, the parameter in the collection will only be removed if it is the same object.</span></span> <span data-ttu-id="36057-169">Aby usunąć obiekt według nazwy, najpierw użyj indeksatora, aby pobrać wystąpienia parametru, a następnie usuń go za pomocą tej metody.</span><span class="sxs-lookup"><span data-stu-id="36057-169">To remove an object by name, first use the indexer to retrieve the parameter instance, then remove it by using this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="36057-170">Przykład, w tym temacie jest oparty na [modelu sprzedaży AdventureWorks](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span><span class="sxs-lookup"><span data-stu-id="36057-170">The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832).</span></span> <span data-ttu-id="36057-171">Przykładzie dodaje dwa parametry do kolekcji, a następnie usuwa parametrów.</span><span class="sxs-lookup"><span data-stu-id="36057-171">The example adds two parameters to the collection and then removes the parameters.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectparametercollection_remove)]
 [!code-vb[DP ObjectServices Concepts#ObjectParameterCollection_Remove](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectparametercollection_remove)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="36057-172">
            <paramref name="parameter" /> Argument jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-172">The <paramref name="parameter" /> argument is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#ICollection&lt;System#Data#Objects#ObjectParameter&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of ObjectParameter).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;System.Data.Objects.ObjectParameter&gt;.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="36057-173">Pobiera wartość wskazującą, czy kolekcja jest tylko do odczytu lub może być modyfikowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-173">Gets a value that indicates whether the collection is read-only or can be modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="36057-174">Wartość logiczna, która jest <see langword="true" /> Jeśli kolekcja jest tylko do odczytu i <see langword="false" /> można modyfikować kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-174">A Boolean value that is <see langword="true" /> if the collection is read-only and <see langword="false" /> of the collection can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-175">Ta kolekcja jest zawsze odczytu/zapisu; Parametry można dodać, usunąć i modyfikować.</span><span class="sxs-lookup"><span data-stu-id="36057-175">This collection is always read/write; parameters can be added, removed, and modified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt; IEnumerable&lt;ObjectParameter&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Data.Objects.ObjectParameter&gt; System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable&lt;System#Data#Objects#ObjectParameter&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of ObjectParameter) Implements IEnumerable(Of ObjectParameter).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Data::Objects::ObjectParameter ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectParameter&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectParameter ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Data.Objects.ObjectParameter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36057-176">Zwraca wartość typu modułu wyliczającego w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-176">Returns a typed enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36057-177">
            <see cref="T:System.Collections.Generic.IEnumerator`1" /> Typu <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-177">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of type <see cref="T:System.Data.Objects.ObjectParameter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-178">Zwraca <xref:System.Collections.Generic.IEnumerator%601> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="36057-178">Returns an <xref:System.Collections.Generic.IEnumerator%601> instance.</span></span> <span data-ttu-id="36057-179">Umożliwia to zbieranie danych należy powtórzyć za pośrednictwem i przechodzić.</span><span class="sxs-lookup"><span data-stu-id="36057-179">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="36057-180">Zwraca moduł wyliczający, który w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-180">Returns an untyped enumerator over the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="36057-181">
            <see cref="T:System.Collections.IEnumerator" /> Wystąpienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="36057-181">An <see cref="T:System.Collections.IEnumerator" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="36057-182">Zwraca moduł wyliczający, który w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="36057-182">Returns an untyped enumerator over the collection.</span></span> <span data-ttu-id="36057-183">Umożliwia to zbieranie danych należy powtórzyć za pośrednictwem i przechodzić.</span><span class="sxs-lookup"><span data-stu-id="36057-183">This allows the collection to be iterated through and traversed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>