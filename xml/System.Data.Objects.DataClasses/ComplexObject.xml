<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a2fd3ba0eeff75278859dc1b47b688752a07d2a7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69373249" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Klasa bazowa dla typów złożonych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject>implementuje podstawowe funkcje dla typów złożonych. Aby uzyskać więcej informacji, zobacz [obiekty typu złożonego](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
 W przypadku implementowania niestandardowych klas danych przy użyciu modelu koncepcyjnego zalecamy, aby klasy danych, które reprezentują typy złożone <xref:System.Data.Objects.DataClasses.ComplexObject>dziedziczą z. Aby uzyskać więcej informacji, zobacz [Dostosowywanie obiektów](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).  
  
 Typ złożony może być właściwością typu jednostki lub innego typu złożonego.  
  
 Typy złożone są zwracane przez nieskalarne właściwości typów jednostek. Dzięki temu właściwości skalarne mogą być zorganizowane w obrębie jednostek. Podobnie jak jednostki, typy złożone składają się z właściwości skalarnych lub innych właściwości typu złożonego. Nie można użyć typu złożonego bez skojarzonego typu jednostki. Ponieważ typy złożone nie mają kluczy, obiekty typu złożonego nie mogą być zarządzane bez skojarzonego typu jednostki. Aby uzyskać więcej informacji, zobacz [obiekty typu złożonego](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
   
  
## Examples  
 W poniższym przykładzie Klasa `OrderInfo` danych niestandardowych dziedziczy z <xref:System.Data.Objects.DataClasses.ComplexObject> `OrderInfo` i jest zamapowana na typ złożony zdefiniowany w modelu koncepcyjnym.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md">Instrukcje: Wykonaj zapytanie zwracające typy złożone (EntityClient)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">Instrukcje: Zdefiniuj model z typami złożonymi (Entity Framework)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">Instrukcje: Dodawanie i modyfikowanie obiektów z typami złożonymi (Entity Framework)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa zmienionej właściwości.</param>
        <summary>Powiadamia moduł śledzący zmiany o zmianie właściwości obiektu złożonego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy typ złożony jest generowany przez narzędzia Entity Data Model, <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> Metoda jest wywoływana po zmianie właściwości <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> w celu zatwierdzenia zbuforowanej wartości w postaci jako oryginalnej wartości właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> metodę w monitorze zmian.  
  
 Podczas śledzenia zmian wprowadzonych w właściwości niestandardowego obiektu złożonego należy wywołać metodę <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>. Zrób to, gdy obiekt złożony dziedziczy <xref:System.Data.Objects.DataClasses.ComplexObject>po elemencie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa właściwości zmiany.</param>
        <summary>Powiadamia moduł śledzący zmiany, że zmiana właściwości jest oczekująca dla obiektu złożonego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy typ złożony jest generowany przez narzędzia Entity Data Model, <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> Metoda jest wywoływana przed zmianą właściwości <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> w celu buforowania bieżącej wartości właściwości w, tak aby ta wartość mogła być używana jako oryginalna wartość właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> metodę w monitorze zmian.  
  
 Podczas śledzenia zmian wprowadzonych w właściwości niestandardowego obiektu złożonego należy wywołać metodę <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>. Zrób to, gdy obiekt złożony dziedziczy <xref:System.Data.Objects.DataClasses.ComplexObject>po elemencie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
