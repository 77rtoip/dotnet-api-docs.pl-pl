<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04df848b1203f1b60ad08ee6bb0b30d5b8871b36" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30445692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Klasa podstawowa dla typów złożonych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject> implementuje podstawowe funkcje dla typów złożonych. Aby uzyskać więcej informacji, zobacz [obiektu złożonego typu](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
 Podczas implementowania klas danych niestandardowych z modelu koncepcyjnego, firma Microsoft zaleca, aby dziedziczyć z klas danych, które reprezentują typy złożone <xref:System.Data.Objects.DataClasses.ComplexObject>. Aby uzyskać więcej informacji, zobacz [Dostosowywanie obiektów](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).  
  
 Typ złożony można właściwości typu jednostki lub innego typu złożonego.  
  
 Typy złożone są zwracane przez nieskalarnego właściwości typów jednostek. Dzięki temu właściwości skalarne, które mają być organizowane w ramach jednostki. Podobnie jak jednostek typy złożone składają się z właściwości skalarne lub inne właściwości typu złożonego. Nie można użyć typu złożonego bez typu skojarzonej jednostki. Ponieważ typy złożone nie ma kluczy, obiekty typu złożonego nie mogą być zarządzane bez typu skojarzonej jednostki. Aby uzyskać więcej informacji, zobacz [obiektu złożonego typu](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).  
  
   
  
## Examples  
 W poniższym przykładzie Klasa danych niestandardowych `OrderInfo` dziedziczy <xref:System.Data.Objects.DataClasses.ComplexObject> i jest mapowany na `OrderInfo` zdefiniowanych w modelu koncepcyjnym typu złożonego.  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy wystąpienie <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa właściwości zmienione.</param>
        <summary>Powiadamia śledzenia zmian, który zmieniono właściwość obiektu złożonego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wygenerowaniu typu złożonego za pomocą narzędzi modelu danych jednostki <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> metoda jest wywoływana po zmianie właściwości można przekazać wartość w pamięci podręcznej w <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> jak oryginalna wartość właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> Metoda śledzenia zmian.  
  
 Podczas śledzenia zmian wprowadzonych do właściwości niestandardowe obiektu złożonego, należy wywołać <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>. Gdy obiekt złożony dziedziczy <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa zmiany właściwości.</param>
        <summary>Powiadamia śledzący zmiany, że zmiany właściwości oczekuje na obiekt złożony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po wygenerowaniu typu złożonego za pomocą narzędzi modelu danych jednostki <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> metoda jest wywoływana przed zmianą właściwości do buforowania bieżącej wartości właściwości w <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> tak, aby ta wartość może być używana jako oryginalnej wartości właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> Metoda śledzenia zmian.  
  
 Podczas śledzenia zmian wprowadzonych do właściwości niestandardowe obiektu złożonego, należy wywołać <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>. Gdy obiekt złożony dziedziczy <xref:System.Data.Objects.DataClasses.ComplexObject>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>