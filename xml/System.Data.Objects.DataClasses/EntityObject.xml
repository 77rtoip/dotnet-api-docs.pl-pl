<Type Name="EntityObject" FullName="System.Data.Objects.DataClasses.EntityObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7aecf899cabf0cac1a8b6709c44dfcc562551c5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446190" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EntityObject : System.Data.Objects.DataClasses.StructuralObject, System.Data.Objects.DataClasses.IEntityWithChangeTracker, System.Data.Objects.DataClasses.IEntityWithKey, System.Data.Objects.DataClasses.IEntityWithRelationships" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit EntityObject extends System.Data.Objects.DataClasses.StructuralObject implements class System.Data.Objects.DataClasses.IEntityWithChangeTracker, class System.Data.Objects.DataClasses.IEntityWithKey, class System.Data.Objects.DataClasses.IEntityWithRelationships" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EntityObject&#xA;Inherits StructuralObject&#xA;Implements IEntityWithChangeTracker, IEntityWithKey, IEntityWithRelationships" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityObject abstract : System::Data::Objects::DataClasses::StructuralObject, System::Data::Objects::DataClasses::IEntityWithChangeTracker, System::Data::Objects::DataClasses::IEntityWithKey, System::Data::Objects::DataClasses::IEntityWithRelationships" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IEntityWithChangeTracker</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IEntityWithKey</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.Objects.DataClasses.IEntityWithRelationships</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Klasa podstawowa dla typów jednostek, które są generowane przy użyciu modelu Entity Data Model tools.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EntityObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EntityObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Data.Objects.DataClasses.EntityObject" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityKey">
      <MemberSignature Language="C#" Value="public System.Data.EntityKey EntityKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.EntityKey EntityKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityObject.EntityKey" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityKey As EntityKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::EntityKey ^ EntityKey { System::Data::EntityKey ^ get(); void set(System::Data::EntityKey ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.DataMember</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz dla tego obiektu.</summary>
        <value>
          <see cref="T:System.Data.EntityKey" /> Dla tego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekt używa usługi <xref:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey%2A> właściwości do zarządzania obiektami w kontekście obiektu.  
  
 Nie można ustawić <xref:System.Data.Objects.DataClasses.EntityObject.EntityKey%2A> właściwości po dołączeniu obiektu do <xref:System.Data.Objects.ObjectContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityState">
      <MemberSignature Language="C#" Value="public System.Data.EntityState EntityState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.EntityState EntityState" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityObject.EntityState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityState As EntityState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::EntityState EntityState { System::Data::EntityState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.EntityState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera stan jednostki obiektu.</summary>
        <value>
          <see cref="T:System.Data.EntityState" /> Tego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy obiekt jest dołączony do kontekstu obiektów albo w wyniku zapytania, przez wywołanie <xref:System.Data.Objects.ObjectContext.Attach%2A>, <xref:System.Data.EntityState> staje się <xref:System.Data.EntityState.Unchanged>.  
  
 Gdy obiekt jest odłączony od kontekst, zwraca do <xref:System.Data.EntityState.Detached> stanu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa właściwości zmienione.</param>
        <summary>Powiadamia o zmianie właściwości śledzący zmiany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy typem jednostki zostanie wygenerowany za pomocą narzędzi modelu danych jednostki <xref:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged%2A> metoda jest wywoływana po zmianie właściwości można przekazać wartość w pamięci podręcznej w <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> jak oryginalna wartość właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged%2A> Metoda śledzenia zmian.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">Nazwa zmiany właściwości.</param>
        <summary>Powiadamia śledzący zmiany oczekuje zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy typem jednostki zostanie wygenerowany za pomocą narzędzi modelu danych jednostki <xref:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging%2A> metoda jest wywoływana przed zmianą właściwości do buforowania bieżącej wartości właściwości w <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> tak, aby ta wartość może być używana jako oryginalnej wartości właściwości.  
  
 Ta metoda wywołuje <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging%2A> Metoda śledzenia zmian.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="property" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker">
      <MemberSignature Language="C#" Value="void IEntityWithChangeTracker.SetChangeTracker (System.Data.Objects.DataClasses.IEntityChangeTracker changeTracker);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(class System.Data.Objects.DataClasses.IEntityChangeTracker changeTracker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)" />
      <MemberSignature Language="VB.NET" Value="Sub SetChangeTracker (changeTracker As IEntityChangeTracker) Implements IEntityWithChangeTracker.SetChangeTracker" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System::Data::Objects::DataClasses::IEntityChangeTracker ^ changeTracker) = System::Data::Objects::DataClasses::IEntityWithChangeTracker::SetChangeTracker;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeTracker" Type="System.Data.Objects.DataClasses.IEntityChangeTracker" />
      </Parameters>
      <Docs>
        <param name="changeTracker">Odwołanie do śledzący zmiany, które jest używane do zgłaszania zmiany właściwości.</param>
        <summary>Określa wystąpienie <see cref="T:System.Data.Objects.DataClasses.IEntityChangeTracker" /> używany do zmian właściwości raportu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest wywoływana przez usługi obiektów, aby określić wystąpienie <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> dla obiekt na potrzeby śledzenia zmian. To jest zwykle wywoływane, gdy obiekt zostanie dodany do lub usunięty z <xref:System.Data.Objects.ObjectContext>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager">
      <MemberSignature Language="C#" Value="System.Data.Objects.DataClasses.RelationshipManager System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Objects.DataClasses.RelationshipManager System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RelationshipManager As RelationshipManager Implements IEntityWithRelationships.RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::Objects::DataClasses::RelationshipManager ^ System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager { System::Data::Objects::DataClasses::RelationshipManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera Menedżera relacji używanych przez ten obiekt.</summary>
        <value>
          <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> Używany przez ten obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.EntityObject.System%23Data%23Objects%23DataClasses%23IEntityWithRelationships%23RelationshipManager%2A> Zwraca <xref:System.Data.Objects.DataClasses.RelationshipManager> używany przez ten obiekt. Obiekt usługi używa Menedżer relacji, aby zapewnić dostęp do obiektów powiązanych.  
  
 Klasy, które udostępniają relacje musi implementować tej właściwości, tworząc i ustawienie <xref:System.Data.Objects.DataClasses.RelationshipManager> ich konstruktora. Implementacja tej właściwości należy używać metody statycznej <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A> do tworzenia nowego <xref:System.Data.Objects.DataClasses.RelationshipManager> w razie potrzeby. Utworzone oczekuje się, że ten obiekt będą przechowywane w jednostce i będą udostępniane za pośrednictwem tej właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>