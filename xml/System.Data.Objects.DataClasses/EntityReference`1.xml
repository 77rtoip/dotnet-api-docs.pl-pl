<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83776aa76c5e35e4c8dc4352a78a8a3107349cb1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30446316" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">Typ jednostki odwołania.</typeparam>
    <summary>Reprezentuje powiązanego końca skojarzenia z liczebnością zero lub jeden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.EntityReference%601> Obiekt jest zwracany przez właściwość nawigacji, gdy powiązanego końca ma liczebność zero lub jeden. Aby uzyskać więcej informacji, zobacz [elementu NavigationProperty (CSDL)](http://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).  
  
 <xref:System.Data.Objects.DataClasses.EntityReference%601> Obiekt może mieć odpowiednią <xref:System.Data.Objects.DataClasses.EntityCollection%601> (relacji jeden do wielu) lub <xref:System.Data.Objects.DataClasses.EntityReference%601> (Relacja jeden do jednego) na końcu relacji. Gdy <xref:System.Data.Objects.DataClasses.EntityReference%601> i <xref:System.Data.Objects.DataClasses.EntityCollection%601> modelu przeciwne końców tej samej relacji integralności relacji jest obsługiwany na poziomie obiektu.  
  
 Klasa ta nie może być dziedziczona.  
  
   
  
## Examples  
 Ten przykład przedstawia sposób użycia <xref:System.Data.Objects.DataClasses.EntityReference%601> obiektu zmiana relacji między `SalesOrderHeader` obiektu i pokrewnych `Address` obiekt, który reprezentuje adres wysyłkowy dla zlecenia.  
  
 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Tworzy nowe wystąpienie klasy <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Dołączany obiekt.</param>
        <summary>Tworzy relację wiele do jednego czy jeden między dwoma obiektami w kontekście obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> Metoda służy do definiowania relacji między obiektem i obiektu pokrewnego, gdy oba obiekty są już dołączone do kontekstu obiektów. Wartość obiektu pokrewnego <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> właściwości, gdy powiązany obiekt nie jest już dołączony do kontekstu obiektów. Odłączeniem oba obiekty można także zdefiniować relacji, ustawiając dla obiekt pokrewny <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> właściwości, a następnie dołączania do obiektu głównego na grafie obiektu. Aby uzyskać więcej informacji, zobacz [Dołączanie i odłączanie obiektów](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).  
  
 Obiekt skojarzony z tym <xref:System.Data.Objects.DataClasses.EntityReference%601> i wszystkie obiekty, które są dołączone do niego muszą być w <xref:System.Data.EntityState.Unchanged> lub <xref:System.Data.EntityState.Modified> stanu.  
  
 Obiekt w <xref:System.Data.EntityState.Deleted> stanu może być tylko dołączony podczas <xref:System.Data.Objects.ObjectStateManager> śledzi już wystąpienie relacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Gdy <paramref name="entity" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Gdy <paramref name="entity" /> nie może być związane z bieżącego powiązanego końca. Taka sytuacja może wystąpić, gdy skojarzenie w schematu koncepcyjnego nie obsługuje relacji między tymi dwoma typami.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy zapytanie zwraca obiekt pokrewny odpowiadającego mu obiektu.</summary>
        <returns>
          <see cref="T:System.Data.Objects.ObjectQuery`1" /> Zwracającą obiektu pokrewnego.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda służy do uzyskiwania nowe wystąpienie klasy <xref:System.Data.Objects.ObjectQuery%601> , po wykonaniu, zwraca powiązanego obiektu. Jest to przydatne jako punkt początkowy dla bardziej złożonych sprzężenia, Unią lub filtrowane zapytania lub do zwrócenia odwołuje się do obiektu w stanie odłączony przy użyciu <xref:System.Data.Objects.MergeOption.NoTracking> opcji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Gdy obiekt jest w <see cref="F:System.Data.EntityState.Added" /> stanu.  
  
 —lub—  
  
 Gdy obiekt jest w <see cref="F:System.Data.EntityState.Detached" /> stanu z <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> innych niż <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Określa, jak obiekt powinien być zwracany, jeśli już istnieje w <see cref="T:System.Data.Objects.ObjectContext" />.</param>
        <summary>Ładuje obiekt pokrewny dla tego <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> przy użyciu opcji scalania określony.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest używana do załadowania powiązanego obiektu.  
  
 Po załadowaniu, powiązany obiekt jest dostępny z <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> właściwości.  
  
 By jawnie ładować powiązanych obiektów, należy wywołać `Load` metody w powiązanym zakończeniem zwróconej przez właściwość nawigacji. W przypadku relacji jeden do wielu wywołań <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> metoda <xref:System.Data.Objects.DataClasses.EntityCollection%601>i w przypadku relacji jeden do jednego wywołania <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> na <xref:System.Data.Objects.DataClasses.EntityReference%601>. Spowoduje to załadowanie danych powiązanego obiektu do kontekstu obiektów. Gdy zapytanie zwraca wyniki, można wyliczać za pomocą kolekcji obiektów przy użyciu `foreach` pętli (`For Each...Next` w języku Visual Basic) i Wywołaj warunkowo `Load` metoda <xref:System.Data.Objects.DataClasses.EntityReference%601> i <xref:System.Data.Objects.DataClasses.EntityCollection%601> właściwości dla każdej jednostki w wyniki.  
  
 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> Metody ładuje powiązanych obiektów ze źródła danych określa, czy <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> jest `true`.  
  
> [!NOTE]
>  Podczas wywoływania <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> metody podczas `foreach` (C#) lub `For Each` wyliczenia (Visual Basic), usługi obiektów spróbuje otworzyć nowego czytnika danych. Ta operacja zakończy się niepowodzeniem, jeśli nie włączono wiele zestawów wyników active określając `multipleactiveresultsets=true` w parametrach połączenia. Można także załadować wynik kwerendy w <xref:System.Collections.Generic.List%601> kolekcji. To zamknięcie czytnik danych i umożliwia Wylicz kolekcji załadować obiekty.  
 
Ta metoda wywołuje wewnętrznej `RelatedEnd.ValidateLoad` metoda przed załadowaniem powiązany obiekt, który sprawdza, czy wywołanie <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> ma poprawne warunki. `RelatedEnd.ValidateLoad` Metoda sprawdza, czy:

* Prawidłowy <xref:System.Data.Objects.ObjectContext> istnieje.
* Jednostka nie jest w <xref:System.Data.EntityState.Deleted> stanu.
* <xref:System.Data.Objects.MergeOption> Aby uzyskać <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> musi być <xref:System.Data.Objects.MergeOption.NoTracking> tylko wtedy, gdy jednostka źródłowa została <xref:System.Data.Objects.MergeOption.NoTracking>. Jeśli jednostka źródłowa została pobrana z innymi <xref:System.Data.Objects.MergeOption>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> może być cokolwiek, ale <xref:System.Data.Objects.MergeOption.NoTracking> (na przykład jednostka może zostały załadowane z <xref:System.Data.Objects.MergeOption.OverwriteChanges> i <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> opcja może być <xref:System.Data.Objects.MergeOption.AppendOnly>).
* Jeśli `mergeOption` jest <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> nie jest wywoływana z jednostką już załadowana i <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> nie jest wywoływana na pusty śledzone nie <xref:System.Data.Objects.DataClasses.RelatedEnd>.

 Gdy obiekt pokrewny jest już załadowany w <xref:System.Data.Objects.ObjectContext>, <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> wymusza metody <xref:System.Data.Objects.MergeOption> określonego przez `mergeOption` parametru. Aby uzyskać więcej informacji, zobacz [rozpoznawania tożsamości, zarządzanie stanem i śledzenia zmian](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Źródło <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> jest <see langword="null" />.  
  
 —lub—  
  
 Zapytanie zwróciło więcej niż jednego powiązanego zakończenia.  
  
 —lub—  
  
 Kwerenda nie zwróciła zero pokrewne kończy się, a oczekiwano jednego powiązanego zakończenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Strumień serializacji.</param>
        <summary>Ta metoda jest używana wewnętrznie do serializacji obiektów powiązanej jednostki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Strumień serializacji.</param>
        <summary>Ta metoda jest używana wewnętrznie do serializacji obiektów powiązanej jednostki.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt pokrewny zwróconych przez to <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <value>Obiekt zwrócony przez to <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość jest taka sama jak aktualna wartość zostanie przypisana żadna wartość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>