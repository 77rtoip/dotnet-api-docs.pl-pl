<Type Name="IMoniker" FullName="System.Runtime.InteropServices.ComTypes.IMoniker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5183b33a16bc7fe404357bb53f9b2add38c446f" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48614480" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComTypes.IMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMoniker" />
  <TypeSignature Language="F#" Value="type IMoniker = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000f-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera definicję zarządzanych <see langword="IMoniker" /> interfejs, za pomocą funkcji COM <see langword="IPersist" /> i <see langword="IPersistStream" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker`, `IPersist`, i `IPersistStream` interfejsów, zobacz: Biblioteka MSDN.  
  
 Środowisko uruchomieniowe języka wspólnego zgłasza wyjątek, gdy metody COM w kodzie natywnym zwraca wartość HRESULT. Aby uzyskać więcej informacji, zobacz [jak: Mapa wyników HRESULT i wyjątków](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindToObject">
      <MemberSignature Language="C#" Value="public void BindToObject (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, ref Guid riidResult, out object ppvResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToObject(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [in]valuetype System.Guid&amp; riidResult, [out] object&amp; ppvResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToObject(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToObject (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToObject(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, Guid % riidResult, [Runtime::InteropServices::Out] System::Object ^ % ppvResult);" />
      <MemberSignature Language="F#" Value="abstract member BindToObject : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  *  -&gt; unit" Usage="iMoniker.BindToObject (pbc, pmkToLeft, riidResult, ppvResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="riidResult" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvResult" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do <see langword="IBindCtx" /> interfejsu na obiekt kontekstu powiązania, używany w tej operacji wiązania.</param>
        <param name="pmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy, jeśli moniker jest częścią złożonego krótkiej nazwy.</param>
        <param name="riidResult">Identyfikator interfejsu (IID) interfejsu, który klient nie chce używać do komunikowania się z obiektem, który identyfikuje moniker.</param>
        <param name="ppvResult">Po powrocie z tej metody zawiera odwołanie do interfejsu, żądane przez <c>riidResult</c>. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Używa moniker, aby powiązać obiekt, który identyfikuje.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::BindToObject`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToStorage">
      <MemberSignature Language="C#" Value="public void BindToStorage (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToStorage(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [in]valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.BindToStorage(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToStorage (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToStorage(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member BindToStorage : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  *  -&gt; unit" Usage="iMoniker.BindToStorage (pbc, pmkToLeft, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do <see langword="IBindCtx" /> interfejsu na obiekt kontekstu powiązania, które są używane podczas tej operacji wiązania.</param>
        <param name="pmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy, jeśli moniker jest częścią złożonego krótkiej nazwy.</param>
        <param name="riid">Identyfikator interfejsu (IID) żądany interfejs magazynu.</param>
        <param name="ppvObj">Po powrocie z tej metody zawiera odwołanie do interfejsu, żądane przez <c>riid</c>. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera wskaźnik interfejsu do magazynu, który zawiera obiekt identyfikowane przez moniker.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::BindToStorage`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonPrefixWith">
      <MemberSignature Language="C#" Value="public void CommonPrefixWith (System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommonPrefixWith(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.CommonPrefixWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommonPrefixWith (pmkOther As IMoniker, ByRef ppmkPrefix As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommonPrefixWith(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkPrefix);" />
      <MemberSignature Language="F#" Value="abstract member CommonPrefixWith : System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.CommonPrefixWith (pmkOther, ppmkPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppmkPrefix" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">Odwołanie do <see langword="IMoniker" /> interfejsu na inny monikera do porównania z bieżącym moniker Wspólny prefiks.</param>
        <param name="ppmkPrefix">Po powrocie z tej metody zawiera moniker, będącego wspólnej prefiks moniker bieżącego i <c>pmkOther</c>. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Tworzy nowy moniker na podstawie prefiksu wspólne, mające tej krótkiej nazwy z innego krótkiej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::CommonPrefixWith`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeWith">
      <MemberSignature Language="C#" Value="public void ComposeWith (System.Runtime.InteropServices.ComTypes.IMoniker pmkRight, bool fOnlyIfNotGeneric, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkComposite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComposeWith(class System.Runtime.InteropServices.ComTypes.IMoniker pmkRight, bool fOnlyIfNotGeneric, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkComposite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.ComposeWith(System.Runtime.InteropServices.ComTypes.IMoniker,System.Boolean,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComposeWith (pmkRight As IMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComposeWith(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkRight, bool fOnlyIfNotGeneric, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkComposite);" />
      <MemberSignature Language="F#" Value="abstract member ComposeWith : System.Runtime.InteropServices.ComTypes.IMoniker * bool *  -&gt; unit" Usage="iMoniker.ComposeWith (pmkRight, fOnlyIfNotGeneric, ppmkComposite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkRight" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="fOnlyIfNotGeneric" Type="System.Boolean" />
        <Parameter Name="ppmkComposite" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkRight">Odwołanie do <see langword="IMoniker" /> interfejsu na monikera do dołączenia do końca bieżącego krótkiej nazwy.</param>
        <param name="fOnlyIfNotGeneric">
          <see langword="true" /> Aby wskazać, że obiekt wywołujący wymaga nierodzajowymi kompozycji. Operacja będzie kontynuowana, tylko wtedy, gdy <c>pmkRight</c> jest klasą monikera, która bieżącego moniker można połączyć z w jakiś sposób niż tworzących ogólnego złożonego. <see langword="false" /> Aby wskazać, metody można utworzyć ogólny złożonego w razie potrzeby.</param>
        <param name="ppmkComposite">Po powrocie z tej metody zawiera odwołanie do wynikowego moniker złożonego. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Łączy bieżącego moniker przy użyciu monikera innego, tworzenie nowych moniker złożonego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::ComposeWith`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="public void Enum (bool fForward, out System.Runtime.InteropServices.ComTypes.IEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enum(bool fForward, [out] class System.Runtime.InteropServices.ComTypes.IEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Enum(System.Boolean,System.Runtime.InteropServices.ComTypes.IEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enum (fForward As Boolean, ByRef ppenumMoniker As IEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enum(bool fForward, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member Enum : bool *  -&gt; unit" Usage="iMoniker.Enum (fForward, ppenumMoniker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fForward" Type="System.Boolean" />
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.ComTypes.IEnumMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fForward">
          <see langword="true" /> Aby wyliczyć monikerów od lewej do prawej. <see langword="false" /> Aby wyliczyć od prawej do lewej.</param>
        <param name="ppenumMoniker">Po powrocie z tej metody zawiera odwołanie do obiektu modułu wyliczającego dla moniker. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Dostarcza wskaźnik do moduł wyliczający, który można wyliczyć składników złożonego krótkiej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::Enum`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassID">
      <MemberSignature Language="C#" Value="public void GetClassID (out Guid pClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetClassID([out] valuetype System.Guid&amp; pClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetClassID(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetClassID (ByRef pClassID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetClassID([Runtime::InteropServices::Out] Guid % pClassID);" />
      <MemberSignature Language="F#" Value="abstract member GetClassID :  -&gt; unit" Usage="iMoniker.GetClassID pClassID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pClassID" Type="System.Guid" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pClassID">Po powrocie z tej metody zawiera identyfikator CLSID. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera identyfikator klasy (CLSID) obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IPersist::GetClassID`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public void GetDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, out string ppszDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayName(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [out] string&amp; ppszDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayName (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef ppszDisplayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDisplayName(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::String ^ % ppszDisplayName);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.GetDisplayName (pbc, pmkToLeft, ppszDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppszDisplayName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do kontekstu powiązania do użycia w tej operacji.</param>
        <param name="pmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy, jeśli moniker jest częścią złożonego krótkiej nazwy.</param>
        <param name="ppszDisplayName">Po powrocie z tej metody zawiera ciąg nazwy wyświetlanej. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Pobiera nazwę wyświetlaną, czyli czytelny dla użytkownika reprezentację bieżącego krótkiej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::GetDisplayName`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSizeMax">
      <MemberSignature Language="C#" Value="public void GetSizeMax (out long pcbSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSizeMax([out] int64&amp; pcbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetSizeMax(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSizeMax (ByRef pcbSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSizeMax([Runtime::InteropServices::Out] long % pcbSize);" />
      <MemberSignature Language="F#" Value="abstract member GetSizeMax :  -&gt; unit" Usage="iMoniker.GetSizeMax pcbSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcbSize" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcbSize">Po powrocie z tej metody zawiera <see langword="long" /> wartość wskazującą, rozmiar w bajtach strumienia potrzebnych do zapisania tego obiektu. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zwraca rozmiar w bajtach strumienia wymagane w celu zapisania obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IPersistStream::GetSizeMax`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, out System.Runtime.InteropServices.ComTypes.FILETIME pFileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, [out] valuetype System.Runtime.InteropServices.ComTypes.FILETIME&amp; pFileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pbc As IBindCtx, pmkToLeft As IMoniker, ByRef pFileTime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FILETIME % pFileTime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.GetTimeOfLastChange (pbc, pmkToLeft, pFileTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pFileTime" Type="System.Runtime.InteropServices.ComTypes.FILETIME" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do kontekstu powiązania do użycia w tej operacji wiązania.</param>
        <param name="pmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy, jeśli moniker jest częścią złożonego krótkiej nazwy.</param>
        <param name="pFileTime">Po powrocie z tej metody zawiera godzinę ostatniej zmiany. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Udostępnia wiele reprezentującą godzinę ostatniej zmiany obiektu identyfikowane przez bieżący krótkiej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::GetTimeOfLastChange`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public void Hash (out int pdwHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hash([out] int32&amp; pdwHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Hash(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hash (ByRef pdwHash As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hash([Runtime::InteropServices::Out] int % pdwHash);" />
      <MemberSignature Language="F#" Value="abstract member Hash :  -&gt; unit" Usage="iMoniker.Hash pdwHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwHash" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwHash">Po powrocie z tej metody zawiera wartość skrótu dla tej krótkiej nazwy. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Oblicza 32-bitową liczbę całkowitą, przy użyciu wewnętrznego stanu moniker.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::Hash`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public void Inverse (out System.Runtime.InteropServices.ComTypes.IMoniker ppmk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inverse([out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Inverse(System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inverse (ByRef ppmk As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inverse([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmk);" />
      <MemberSignature Language="F#" Value="abstract member Inverse :  -&gt; unit" Usage="iMoniker.Inverse ppmk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppmk" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppmk">Po powrocie z tej metody zawiera monikerem i jest przeciwieństwem bieżącego krótkiej nazwy. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Udostępnia krótka, jeżeli składa się po prawej stronie bieżącej monikera lub jednej z podobną strukturę komponuje się na wartość nothing.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::Inverse`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public int IsDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDirty () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsDirty();" />
      <MemberSignature Language="F#" Value="abstract member IsDirty : unit -&gt; int" Usage="iMoniker.IsDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy obiekt zmiany od ostatniego zapisu.</summary>
        <returns>
          <see langword="S_OK" />
          <see langword="HRESULT" /> Wartość, jeśli obiekt został zmieniony; w przeciwnym razie <see langword="S_FALSE" /><see langword="HRESULT" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IPersistStream::IsDirty`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public int IsEqual (System.Runtime.InteropServices.ComTypes.IMoniker pmkOtherMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsEqual(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOtherMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsEqual(System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEqual (pmkOtherMoniker As IMoniker) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsEqual(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOtherMoniker);" />
      <MemberSignature Language="F#" Value="abstract member IsEqual : System.Runtime.InteropServices.ComTypes.IMoniker -&gt; int" Usage="iMoniker.IsEqual pmkOtherMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOtherMoniker" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkOtherMoniker">Odwołanie do monikera do użycia dla porównania.</param>
        <summary>Porównuje bieżącego krótkiej nazwy z określonej krótkiej nazwy i wskazuje, czy są identyczne.</summary>
        <returns>
          <see langword="S_OK" />
          <see langword="HRESULT" /> Wartość, jeśli monikerów są identyczne; w przeciwnym razie <see langword="S_FALSE" /><see langword="HRESULT" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::IsEqual`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public int IsRunning (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, System.Runtime.InteropServices.ComTypes.IMoniker pmkNewlyRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsRunning(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, class System.Runtime.InteropServices.ComTypes.IMoniker pmkNewlyRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsRunning(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRunning (pbc As IBindCtx, pmkToLeft As IMoniker, pmkNewlyRunning As IMoniker) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsRunning(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkNewlyRunning);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker * System.Runtime.InteropServices.ComTypes.IMoniker -&gt; int" Usage="iMoniker.IsRunning (pbc, pmkToLeft, pmkNewlyRunning)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pmkNewlyRunning" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do kontekstu powiązania do użycia w tej operacji wiązania.</param>
        <param name="pmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy, jeśli bieżący moniker jest częścią złożonego.</param>
        <param name="pmkNewlyRunning">Odwołanie do moniker ostatnio dodane do tabeli uruchamiania obiektu (ROT).</param>
        <summary>Określa, czy obiekt, który jest identyfikowany przez bieżący moniker jest obecnie załadowane i uruchomione.</summary>
        <returns>
          <see langword="S_OK" />
          <see langword="HRESULT" /> Wartość, gdy moniker jest uruchomiony; <see langword="S_FALSE" /><see langword="HRESULT" /> wartość, jeśli nie jest uruchomiona moniker; lub <see langword="E_UNEXPECTED" /><see langword="HRESULT" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::IsRunning`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemMoniker">
      <MemberSignature Language="C#" Value="public int IsSystemMoniker (out int pdwMksys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsSystemMoniker([out] int32&amp; pdwMksys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.IsSystemMoniker(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSystemMoniker (ByRef pdwMksys As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsSystemMoniker([Runtime::InteropServices::Out] int % pdwMksys);" />
      <MemberSignature Language="F#" Value="abstract member IsSystemMoniker :  -&gt; int" Usage="iMoniker.IsSystemMoniker pdwMksys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwMksys" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwMksys">Po powrocie z tej metody zawiera wskaźnik do liczby całkowitej, która jest jedną z wartości z <see langword="MKSYS" /> wyliczenia, a odwołuje się do jednej z klas moniker COM. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Wskazuje, czy tej krótkiej nazwy z jednej z klas moniker dostarczane przez system.</summary>
        <returns>
          <see langword="S_OK" />
          <see langword="HRESULT" /> Wartość, gdy moniker jest krótka nazwa systemu; w przeciwnym razie <see langword="S_FALSE" /><see langword="HRESULT" /> wartości.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać szczegółowe informacje na temat wartości `MKSYS` wyliczenie oraz informacje dotyczące `IMoniker::IsSystemMoniker`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Runtime.InteropServices.ComTypes.IStream pStm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Runtime.InteropServices.ComTypes.IStream pStm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Load(System.Runtime.InteropServices.ComTypes.IStream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (pStm As IStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Runtime::InteropServices::ComTypes::IStream ^ pStm);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Runtime.InteropServices.ComTypes.IStream -&gt; unit" Usage="iMoniker.Load pStm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.ComTypes.IStream" />
      </Parameters>
      <Docs>
        <param name="pStm">Strumień, który obiekt jest ładowany z.</param>
        <summary>Inicjuje obiekt ze strumienia, w której został wcześniej zapisany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IPersistStream::Load`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDisplayName">
      <MemberSignature Language="C#" Value="public void ParseDisplayName (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, string pszDisplayName, out int pchEaten, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseDisplayName(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, class System.Runtime.InteropServices.ComTypes.IMoniker pmkToLeft, string pszDisplayName, [out] int32&amp; pchEaten, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ParseDisplayName (pbc As IBindCtx, pmkToLeft As IMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ParseDisplayName(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkToLeft, System::String ^ pszDisplayName, [Runtime::InteropServices::Out] int % pchEaten, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkOut);" />
      <MemberSignature Language="F#" Value="abstract member ParseDisplayName : System.Runtime.InteropServices.ComTypes.IBindCtx * System.Runtime.InteropServices.ComTypes.IMoniker * string *  *  -&gt; unit" Usage="iMoniker.ParseDisplayName (pbc, pmkToLeft, pszDisplayName, pchEaten, ppmkOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="pszDisplayName" Type="System.String" />
        <Parameter Name="pchEaten" Type="System.Int32" RefType="out" />
        <Parameter Name="ppmkOut" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do kontekstu powiązania do użycia w tej operacji wiązania.</param>
        <param name="pmkToLeft">Odwołanie do monikera, która została zbudowana od nazwy wyświetlanej do tej pory.</param>
        <param name="pszDisplayName">Odwołanie do ciąg zawierający nazwę wyświetlaną pozostałe można przeanalizować.</param>
        <param name="pchEaten">Po powrocie z tej metody zawiera liczbę znaków, które zostały użyte podczas analizowania <c>pszDisplayName</c>. Ten parametr jest przekazywany niezainicjowany.</param>
        <param name="ppmkOut">Po powrocie z tej metody zawiera odwołanie do moniker elementu, który został zbudowany z <c>pszDisplayName</c>. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Odczytuje tak dużą liczbę znaków określona nazwa wyświetlana jako <see cref="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)" /> rozumie i tworzy krótka odpowiadający część odczytu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::ParseDisplayName`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public void Reduce (System.Runtime.InteropServices.ComTypes.IBindCtx pbc, int dwReduceHowFar, ref System.Runtime.InteropServices.ComTypes.IMoniker ppmkToLeft, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkReduced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reduce(class System.Runtime.InteropServices.ComTypes.IBindCtx pbc, int32 dwReduceHowFar, class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkToLeft, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkReduced) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Reduce(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Int32,System.Runtime.InteropServices.ComTypes.IMoniker@,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reduce (pbc As IBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As IMoniker, ByRef ppmkReduced As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reduce(System::Runtime::InteropServices::ComTypes::IBindCtx ^ pbc, int dwReduceHowFar, System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkReduced);" />
      <MemberSignature Language="F#" Value="abstract member Reduce : System.Runtime.InteropServices.ComTypes.IBindCtx * int *  *  -&gt; unit" Usage="iMoniker.Reduce (pbc, dwReduceHowFar, ppmkToLeft, ppmkReduced)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.ComTypes.IBindCtx" />
        <Parameter Name="dwReduceHowFar" Type="System.Int32" />
        <Parameter Name="ppmkToLeft" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="ref" />
        <Parameter Name="ppmkReduced" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">Odwołanie do <see langword="IBindCtx" /> interfejsu w kontekście powiązania do użycia w tej operacji wiązania.</param>
        <param name="dwReduceHowFar">Wartość, która określa, jak daleko bieżącego moniker powinna być ograniczona.</param>
        <param name="ppmkToLeft">Odwołanie do moniker na lewo od bieżącego krótkiej nazwy.</param>
        <param name="ppmkReduced">Po powrocie z tej metody zawiera odwołanie do zmniejszenie formularza bieżącego monikera, która może być <see langword="null" /> Jeśli wystąpi błąd lub w przypadku bieżącego moniker na wartość nothing. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Zwraca monikerem mniejsze, czyli inny moniker, odwołuje się do tego samego obiektu jako bieżący monikera, która może być powiązana z równą lub większą wydajność.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::Reduce`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativePathTo">
      <MemberSignature Language="C#" Value="public void RelativePathTo (System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, out System.Runtime.InteropServices.ComTypes.IMoniker ppmkRelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativePathTo(class System.Runtime.InteropServices.ComTypes.IMoniker pmkOther, [out] class System.Runtime.InteropServices.ComTypes.IMoniker&amp; ppmkRelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.RelativePathTo(System.Runtime.InteropServices.ComTypes.IMoniker,System.Runtime.InteropServices.ComTypes.IMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RelativePathTo (pmkOther As IMoniker, ByRef ppmkRelPath As IMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RelativePathTo(System::Runtime::InteropServices::ComTypes::IMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IMoniker ^ % ppmkRelPath);" />
      <MemberSignature Language="F#" Value="abstract member RelativePathTo : System.Runtime.InteropServices.ComTypes.IMoniker *  -&gt; unit" Usage="iMoniker.RelativePathTo (pmkOther, ppmkRelPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.ComTypes.IMoniker" />
        <Parameter Name="ppmkRelPath" Type="System.Runtime.InteropServices.ComTypes.IMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">Odwołanie do moniker, do którego powinny zostać podjęte ścieżką względną.</param>
        <param name="ppmkRelPath">Po powrocie z tej metody zawiera odwołanie do względne krótkiej nazwy. Ten parametr jest przekazywany niezainicjowany.</param>
        <summary>Dostarcza krótka, gdy dołączane do bieżącego krótkiej nazwy (lub jeden z podobną strukturę) daje określonej krótkiej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IMoniker::RelativePath`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Runtime.InteropServices.ComTypes.IStream pStm, bool fClearDirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Runtime.InteropServices.ComTypes.IStream pStm, bool fClearDirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComTypes.IMoniker.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (pStm As IStream, fClearDirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Runtime::InteropServices::ComTypes::IStream ^ pStm, bool fClearDirty);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Runtime.InteropServices.ComTypes.IStream * bool -&gt; unit" Usage="iMoniker.Save (pStm, fClearDirty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.ComTypes.IStream" />
        <Parameter Name="fClearDirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pStm">Strumień, do którego obiekt zostanie zapisany.</param>
        <param name="fClearDirty">
          <see langword="true" /> Aby wyczyścić flagę zmodyfikowane po zakończeniu zapisz; w przeciwnym razie <see langword="false" /></param>
        <summary>Zapisuje obiekt do określonego strumienia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `IPersistStream::Save`, zobacz: Biblioteka MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>