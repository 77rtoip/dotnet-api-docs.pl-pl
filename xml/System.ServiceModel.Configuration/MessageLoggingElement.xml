<Type Name="MessageLoggingElement" FullName="System.ServiceModel.Configuration.MessageLoggingElement">
  <TypeSignature Language="C#" Value="public sealed class MessageLoggingElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageLoggingElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MessageLoggingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageLoggingElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageLoggingElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6490c-101">Reprezentuje element XML, który definiuje ustawienia dla możliwości rejestrowania komunikatów Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="6490c-101">Represents an XML element that defines the settings for the message-logging capabilities of Windows Communication Foundation (WCF).</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageLoggingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MessageLoggingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MessageLoggingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6490c-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6490c-102">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.MessageLoggingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filters">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XPathMessageFilterElementCollection Filters" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.Filters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filters As XPathMessageFilterElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XPathMessageFilterElementCollection ^ Filters { System::ServiceModel::Configuration::XPathMessageFilterElementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("filters", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XPathMessageFilterElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-103">Pobiera obiekty Obiekt XPathFilter, które są używane do rejestrowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="6490c-103">Gets the XPathFilter objects that are used for message logging.</span></span></summary>
        <value><span data-ttu-id="6490c-104">Kolekcja obiektów Obiekt XPathFilter, które są używane do rejestrowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="6490c-104">A collection of XPathFilter objects that are used for message logging.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6490c-105">Filtry komunikatów są stosowane na poziomie usług i mechanizm transportu.</span><span class="sxs-lookup"><span data-stu-id="6490c-105">Message filters are applied at the service and transport level.</span></span> <span data-ttu-id="6490c-106">Po zdefiniowaniu co najmniej jeden filtr są rejestrowane tylko komunikatów spełniających co najmniej jeden z filtrów.</span><span class="sxs-lookup"><span data-stu-id="6490c-106">When one or more filters are defined, only messages that match at least one of the filters are logged.</span></span> <span data-ttu-id="6490c-107">Jeśli nie jest definiować filtru, wszystkie komunikaty przekazywane.</span><span class="sxs-lookup"><span data-stu-id="6490c-107">If no filter is defined, all messages pass through.</span></span>  
  
 <span data-ttu-id="6490c-108">Filtry obsługuje pełnej składni języka XPath i są stosowane w kolejności, w jakiej znajdują się w pliku konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6490c-108">Filters support the full XPath syntax, and are applied in the order they appear in the configuration file.</span></span> <span data-ttu-id="6490c-109">Nieprawidłowy filtr powoduje wyjątek konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="6490c-109">A syntactically incorrect filter results in a configuration exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6490c-110">Poniżej przedstawiono przykład konfigurowania filtr, który rejestruje tylko komunikaty, które mają sekcji nagłówka SOAP.</span><span class="sxs-lookup"><span data-stu-id="6490c-110">The following is an example in configuring a filter that records only messages that have a SOAP Header section.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEntireMessage">
      <MemberSignature Language="C#" Value="public bool LogEntireMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogEntireMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogEntireMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property LogEntireMessage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogEntireMessage { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logEntireMessage", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-111">Pobiera lub ustawia wartość określającą, czy cały komunikat (nagłówek i treść wiadomości) jest zarejestrowany.</span><span class="sxs-lookup"><span data-stu-id="6490c-111">Gets or sets a value that specifies whether the entire message (message header and body) is logged.</span></span></summary>
        <value>
          <span data-ttu-id="6490c-112"><see langword="true" /> Jeśli cały komunikat (nagłówek i treść wiadomości) jest rejestrowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-112"><see langword="true" /> if the entire message (message header and body) is logged; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6490c-113">Wartość domyślna to <see langword="false" />, co oznacza, że tylko nagłówek komunikatu jest rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="6490c-113">The default is <see langword="false" />, which means that only the message header is logged.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6490c-114">To ustawienie ma wpływ na wszystkie poziomy rejestrowania komunikatów (usługi, transport i źle sformułowane).</span><span class="sxs-lookup"><span data-stu-id="6490c-114">This setting affects all message logging levels (service, transport, and malformed).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogKnownPii">
      <MemberSignature Language="C#" Value="public bool LogKnownPii { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogKnownPii" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogKnownPii" />
      <MemberSignature Language="VB.NET" Value="Public Property LogKnownPii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogKnownPii { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logKnownPii", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-115">Pobiera lub ustawia wartość wskazującą, czy identyfikator znane dane osobowe są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="6490c-115">Gets or sets a value that indicates whether the known Pii identifier is logged.</span></span></summary>
        <value>
          <span data-ttu-id="6490c-116"><see langword="true" /> Jeśli jest rejestrowane znane dane osobowe; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-116"><see langword="true" /> if the known Pii is logged; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMalformedMessages">
      <MemberSignature Language="C#" Value="public bool LogMalformedMessages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMalformedMessages" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMalformedMessages" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMalformedMessages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMalformedMessages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMalformedMessages", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-117">Pobiera lub ustawia wartość określającą, czy wadliwe komunikaty są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="6490c-117">Gets or sets a value that specifies whether malformed messages are logged.</span></span></summary>
        <value>
          <span data-ttu-id="6490c-118"><see langword="true" /> czy wadliwe komunikaty są rejestrowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-118"><see langword="true" /> if malformed messages are logged; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6490c-119">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-119">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesAtServiceLevel">
      <MemberSignature Language="C#" Value="public bool LogMessagesAtServiceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMessagesAtServiceLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtServiceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMessagesAtServiceLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMessagesAtServiceLevel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMessagesAtServiceLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-120">Pobiera lub ustawia wartość określającą, czy komunikaty są śledzone na poziomie usługi (przed zaszyfrowaniem i transformacjami związanymi z transportem).</span><span class="sxs-lookup"><span data-stu-id="6490c-120">Gets or sets a value that specifies whether messages are traced at the service level (before encryption and transport-related transforms).</span></span></summary>
        <value>
          <span data-ttu-id="6490c-121"><see langword="true" /> Jeśli komunikaty są śledzone na poziomie usługi (przed zaszyfrowaniem i transformacjami związanymi z transportem); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-121"><see langword="true" /> if messages are traced at the service level (before encryption and transport-related transforms); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6490c-122">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-122">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesAtTransportLevel">
      <MemberSignature Language="C#" Value="public bool LogMessagesAtTransportLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogMessagesAtTransportLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.LogMessagesAtTransportLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property LogMessagesAtTransportLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogMessagesAtTransportLevel { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("logMessagesAtTransportLevel", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-123">Pobiera lub ustawia wartość określającą, czy komunikaty są śledzone na poziomie transportu.</span><span class="sxs-lookup"><span data-stu-id="6490c-123">Gets or sets a value that specifies whether messages are traced at the transport level.</span></span></summary>
        <value>
          <span data-ttu-id="6490c-124"><see langword="true" /> Jeśli komunikaty są śledzone na poziomie transportu. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-124"><see langword="true" /> if messages are traced at the transport level; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6490c-125">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6490c-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6490c-126">Wszystkie filtry, określony w pliku konfiguracji są stosowane, a tylko komunikaty zgodne z filtrami są śledzone.</span><span class="sxs-lookup"><span data-stu-id="6490c-126">Any filters specified in the configuration file are applied, and only messages that match the filters are traced.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxMessagesToLog">
      <MemberSignature Language="C#" Value="public int MaxMessagesToLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxMessagesToLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxMessagesToLog" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxMessagesToLog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxMessagesToLog { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxMessagesToLog", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-127">Pobiera lub ustawia wartość określającą maksymalną liczbę komunikatów do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="6490c-127">Gets or sets a value that specifies the maximum number of messages to log.</span></span></summary>
        <value><span data-ttu-id="6490c-128">Maksymalna liczba komunikatów do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="6490c-128">The maximum number of messages to log.</span></span> <span data-ttu-id="6490c-129">Wartość domyślna to 1000.</span><span class="sxs-lookup"><span data-stu-id="6490c-129">The default is 1000.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSizeOfMessageToLog">
      <MemberSignature Language="C#" Value="public int MaxSizeOfMessageToLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxSizeOfMessageToLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.MaxSizeOfMessageToLog" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxSizeOfMessageToLog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxSizeOfMessageToLog { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxSizeOfMessageToLog", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6490c-130">Pobiera lub ustawia wartość, która określa maksymalny rozmiar w bajtach komunikatu do dziennika.</span><span class="sxs-lookup"><span data-stu-id="6490c-130">Gets or sets a value that specifies the maximum size, in bytes, of a message to log.</span></span></summary>
        <value><span data-ttu-id="6490c-131">Maksymalny rozmiar w bajtach komunikat do dziennika.</span><span class="sxs-lookup"><span data-stu-id="6490c-131">The maximum size, in bytes, of a message to log.</span></span> <span data-ttu-id="6490c-132">Wiadomości przekracza limit nie są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="6490c-132">Messages larger than the limit are not logged.</span></span> <span data-ttu-id="6490c-133">To ustawienie ma wpływ na wszystkie poziomy śledzenia.</span><span class="sxs-lookup"><span data-stu-id="6490c-133">This setting affects all trace levels.</span></span> <span data-ttu-id="6490c-134">Wartość domyślna to wartości Int32.MaxValue.</span><span class="sxs-lookup"><span data-stu-id="6490c-134">The default is Int32.MaxValue.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MessageLoggingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>