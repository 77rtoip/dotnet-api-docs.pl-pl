<Type Name="CompositeDuplexElement" FullName="System.ServiceModel.Configuration.CompositeDuplexElement">
  <TypeSignature Language="C#" Value="public sealed class CompositeDuplexElement : System.ServiceModel.Configuration.BindingElementExtensionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeDuplexElement extends System.ServiceModel.Configuration.BindingElementExtensionElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.CompositeDuplexElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeDuplexElement&#xA;Inherits BindingElementExtensionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDuplexElement sealed : System::ServiceModel::Configuration::BindingElementExtensionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.BindingElementExtensionElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b6381-101">Reprezentuje element konfiguracji, który jest używany, gdy klient musi ujawniać punkt końcowy usługi by wysłać wiadomości za pośrednictwem protokołu HTTP.</span><span class="sxs-lookup"><span data-stu-id="b6381-101">Represents the configuration element that is used when the client must expose an endpoint for the service to send messages over HTTP.</span></span> <span data-ttu-id="b6381-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="b6381-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6381-103">Ten element konfiguracji dodaje dwukierunkowej wiadomości do niestandardowego powiązania.</span><span class="sxs-lookup"><span data-stu-id="b6381-103">This configuration element adds two-way messaging to a custom binding.</span></span> <span data-ttu-id="b6381-104">Jest ona używana z transportu, które nie zezwalają na komunikacji dupleksowej natywnie, na przykład HTTP.</span><span class="sxs-lookup"><span data-stu-id="b6381-104">It is used with transports that do not allow duplex communications natively, for example, HTTP.</span></span> <span data-ttu-id="b6381-105">TCP, natomiast natywnie umożliwia komunikacji dupleksowej i nie wymaga użycia tego elementu powiązania dla usługi wysłać wiadomości zwrotnie do klienta.</span><span class="sxs-lookup"><span data-stu-id="b6381-105">TCP, by contrast, allows duplex communications natively, and does not require the use of this binding element for the service to send messages back to a client.</span></span>  
  
 <span data-ttu-id="b6381-106">Klient musi ujawniać adres usługi upewnić się, skontaktuj się z pomocą i nawiązania połączenia.</span><span class="sxs-lookup"><span data-stu-id="b6381-106">The client must expose an address for the service to make contact and establish a connection.</span></span> <span data-ttu-id="b6381-107">Ten adres klienta jest zapewniana przez <xref:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="b6381-107">This client address is provided by the <xref:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDuplexElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.CompositeDuplexElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDuplexElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6381-108">Inicjuje nowe wystąpienie klasy <see cref="T:System.ServiceModel.Configuration.CompositeDuplexElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b6381-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.CompositeDuplexElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyConfiguration">
      <MemberSignature Language="C#" Value="public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyConfiguration(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyConfiguration(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement"><span data-ttu-id="b6381-109">Element powiązania.</span><span class="sxs-lookup"><span data-stu-id="b6381-109">A binding element.</span></span></param>
        <summary><span data-ttu-id="b6381-110">Dotyczy zawartości elementu określone powiązanie tej sekcji konfiguracji powiązania.</span><span class="sxs-lookup"><span data-stu-id="b6381-110">Applies the content of a specified binding element to this binding configuration section.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="public override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6381-111">Pobiera typ elementu powiązania.</span><span class="sxs-lookup"><span data-stu-id="b6381-111">Gets the type of binding element.</span></span></summary>
        <value><span data-ttu-id="b6381-112">Typ elementu powiązania.</span><span class="sxs-lookup"><span data-stu-id="b6381-112">The type of binding element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("clientBaseAddress", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6381-113">Pobiera lub ustawia adres podstawowy klienta.</span><span class="sxs-lookup"><span data-stu-id="b6381-113">Gets or sets the base address for the client.</span></span></summary>
        <value><span data-ttu-id="b6381-114">A <see cref="T:System.Uri" /> zawierający adres podstawowy klienta.</span><span class="sxs-lookup"><span data-stu-id="b6381-114">A <see cref="T:System.Uri" /> that contains the base address for the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6381-115">Usługa używa ten adres, aby upewnić się, skontaktuj się z pomocą i nawiązania połączenia z klientem.</span><span class="sxs-lookup"><span data-stu-id="b6381-115">The service uses this address to make contact and establish a connection with the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFrom(class System.ServiceModel.Configuration.ServiceModelExtensionElement from) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFrom (from As ServiceModelExtensionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFrom(System::ServiceModel::Configuration::ServiceModelExtensionElement ^ from);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.ServiceModel.Configuration.ServiceModelExtensionElement" />
      </Parameters>
      <Docs>
        <param name="from"><span data-ttu-id="b6381-116">Element konfiguracji ma zostać skopiowany.</span><span class="sxs-lookup"><span data-stu-id="b6381-116">The configuration element to be copied.</span></span></param>
        <summary><span data-ttu-id="b6381-117">Kopiuje zawartość elementu określoną konfigurację do tego elementu konfiguracji.</span><span class="sxs-lookup"><span data-stu-id="b6381-117">Copies the content of the specified configuration element to this configuration element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElement">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Channels.BindingElement CreateBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Channels.BindingElement CreateBindingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateBindingElement () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::ServiceModel::Channels::BindingElement ^ CreateBindingElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.BindingElement bindingElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::BindingElement ^ bindingElement);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingElement" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="bindingElement">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.CompositeDuplexElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>