<Type Name="PerformanceCounterType" FullName="System.Diagnostics.PerformanceCounterType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c0b7e5385e2bc5437edf6cbde467e19b9478004" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36673990" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PerformanceCounterType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PerformanceCounterType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterType" />
  <TypeSignature Language="VB.NET" Value="Public Enum PerformanceCounterType" />
  <TypeSignature Language="C++ CLI" Value="public enum class PerformanceCounterType" />
  <TypeSignature Language="F#" Value="type PerformanceCounterType = " />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Diagnostics.AlphabeticalEnumConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa formułę używane do obliczania <see cref="M:System.Diagnostics.PerformanceCounter.NextValue" /> metodę <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpienia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Niektóre typy licznik reprezentuje nieprzetworzone dane, podczas gdy inne reprezentują wartości obliczeniowe, które są oparte na co najmniej jeden próbek licznika. Następujące kategorie klasyfikować typy dostępnych liczników.  
  
-   Średnia: pomiar wartość wraz z upływem czasu i wyświetlić średnią z ostatnich dwóch pomiarów. Skojarzone z każdym licznika średni jest podstawowy licznik, który śledzi liczbę próbek związane.  
  
-   Różnica: odjąć ostatniego pomiaru od poprzedniego i wyświetlić różnica, jeśli jest dodatnią; Jeśli jest ujemna, wyświetlają wartość zero.  
  
-   Natychmiastowe: Wyświetl najnowsze miary.  
  
-   Wartość procentowa: wyświetlić obliczone wartości w procentach.  
  
-   Częstotliwość: Przykładowe zwiększa liczbę zdarzeń w czasie i dzielenia zmianę wartości liczby przez zmianę w czasie, aby wyświetlić szybkość działania.  
  
 Podczas pobierania próbek danych licznika wydajności, przy użyciu typu licznika, który reprezentuje średnią wprowadzić dane pierwotne wartości przydatne do użycia. Na przykład licznik nieprzetworzone dane `NumberOfItems64` mogą uwidaczniać jest dość losowej próbki przykładowych danych. Formuła do obliczania średniej wartości, które zwraca licznika będzie mieć (X 0 + X 1 +... + X n) / n, gdzie każdy X i jest przykładowe pierwotnych liczników.  
  
 Liczniki współczynnik są podobne do uśrednienia liczników, ale bardziej użyteczna w przypadku sytuacji, w których częstotliwość zwiększa jako zasób jest używany. Formuła, której szybko oblicza średnią jest ((X n - 0) / (T n -T 0)) / częstotliwości, gdzie każdy X i jest próbkę licznika oraz każdego T i to czas, który odpowiednie próbki. Wynik jest średnie użycie w ciągu sekundy.  
  
> [!NOTE]
>  O ile nie wskazano inaczej, podstawy czasu to liczba sekund.  
  
 Podczas instrumentacji aplikacji (Tworzenie i zapisywanie niestandardowe liczniki wydajności), może być Praca z typami licznika wydajności, które opierają się na towarzyszący podstawowy licznik, który jest używany w obliczeniach. Podstawowy licznik musi być natychmiast po jego skojarzony licznik <xref:System.Diagnostics.CounterCreationDataCollection> aplikacja korzysta z kolekcji. W poniższej tabeli wymieniono liczników typu podstawowego z jako odpowiednie typy licznika wydajności.  
  
|Licznik bazowy typ|Typy licznika wydajności|  
|-----------------------|-------------------------------|  
|`AverageBase`|`AverageTimer32`<br /><br /> `AverageCount64`|  
|`CounterMultiBase`|`CounterMultiTimer`<br /><br /> `CounterMultiTimerInverse`<br /><br /> `CounterMultiTimer100Ns`<br /><br /> `CounterMultiTimer100NsInverse`|  
|`RawBase`|`RawFraction`|  
|`SampleBase`|`SampleFraction`|  
  
   
  
## Examples  
 W poniższych przykładach pokazano kilka typów liczników w <xref:System.Diagnostics.PerformanceCounterType> wyliczenia.  
  
 `AverageCount64`  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 `AverageTimer32`  
  
 [!code-cpp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CPP/averagetimer32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/CS/averagetimer32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageTimer32#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageTimer32/VB/averagetimer32.vb#2)]  
  
 `ElapsedTime`  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 `NumberOfItems32`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CPP/numberofitems32.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/CS/numberofitems32.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems32/VB/numberofitems32.vb#1)]  
  
 `NumberOfItems64`  
  
 [!code-cpp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CPP/numberofitems64.cpp#1)]
 [!code-csharp[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/CS/numberofitems64.cs#1)]
 [!code-vb[PerformanceCounterType.NumberOfItems64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.NumberOfItems64/VB/numberofitems64.vb#1)]  
  
 `SampleFraction`  
  
 [!code-csharp[PerformanceCounterType.SampleFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/CS/program.cs#1)]
 [!code-vb[PerformanceCounterType.SampleFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.SampleFraction/VB/program.vb#1)]  
  
 `RateOfCountsPerSecond32`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CPP/rateofcountspersecond32.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/CS/rateofcountspersecond32.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond/VB/rateofcountspersecond32.vb#1)]  
  
 `RateOfCountsPerSecond64`  
  
 [!code-cpp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CPP/rateofcountspersecond64.cpp#1)]
 [!code-csharp[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/CS/rateofcountspersecond64.cs#1)]
 [!code-vb[PerformanceCounterType.RateOfCountsPerSecond64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RateOfCountsPerSecond64/VB/rateofcountspersecond64.vb#1)]  
  
 `RawFraction`  
  
 [!code-cpp[PerformanceCounterType.RawFraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CPP/rawfraction.cpp#1)]
 [!code-csharp[PerformanceCounterType.RawFraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.RawFraction/CS/rawfraction.cs#1)]
 [!code-vb[PerformanceCounterType.RawFraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.RawFraction/VB/rawfraction.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
  </Docs>
  <Members>
    <Member MemberName="AverageBase">
      <MemberSignature Language="C#" Value="AverageBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageBase = int32(1073939458)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberSignature Language="VB.NET" Value="AverageBase" />
      <MemberSignature Language="C++ CLI" Value="AverageBase" />
      <MemberSignature Language="F#" Value="AverageBase = 1073939458" Usage="System.Diagnostics.PerformanceCounterType.AverageBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939458</MemberValue>
      <Docs>
        <summary>Podstawowy licznik, który jest używany w obliczeniach średnie czasu lub liczby, takich jak <see langword="AverageTimer32" /> i <see langword="AverageCount64" />. Przechowuje denominator obliczania licznik do obecne "czasu na operację" lub "liczba na operację".</summary>
      </Docs>
    </Member>
    <Member MemberName="AverageCount64">
      <MemberSignature Language="C#" Value="AverageCount64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageCount64 = int32(1073874176)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberSignature Language="VB.NET" Value="AverageCount64" />
      <MemberSignature Language="C++ CLI" Value="AverageCount64" />
      <MemberSignature Language="F#" Value="AverageCount64 = 1073874176" Usage="System.Diagnostics.PerformanceCounterType.AverageCount64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073874176</MemberValue>
      <Docs>
        <summary>Średnia licznik, który pokazuje, ile elementów są przetwarzane przeciętnie podczas operacji. Liczniki tego typu Wyświetlanie stosunek elementów przetworzonych liczba ukończonych operacji. Stosunek jest obliczane przez porównanie liczby elementów przetworzone podczas ostatniego interwału do liczby operacji ukończony podczas ostatniego interwału.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (0 N 1 -N) / (B-1 -B 0), gdzie N 1 i N 0 wskazań liczników wydajności, a B 1 i B 0 są odpowiednie `AverageBase` wartości. W związku z tym licznik reprezentuje liczby elementów przetworzonych w przykładowym przedziale czasu, a mianownika — liczba ukończonych w przykładowym przedziale czasu operacji.  
  
 Liczniki tego typu obejmują PhysicalDisk\ średni Bajty dysku/Transfer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AverageTimer32">
      <MemberSignature Language="C#" Value="AverageTimer32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType AverageTimer32 = int32(805438464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberSignature Language="VB.NET" Value="AverageTimer32" />
      <MemberSignature Language="C++ CLI" Value="AverageTimer32" />
      <MemberSignature Language="F#" Value="AverageTimer32 = 805438464" Usage="System.Diagnostics.PerformanceCounterType.AverageTimer32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>805438464</MemberValue>
      <Docs>
        <summary>Średnia licznik, który mierzy czas trwania, średnio do ukończenia procesu lub operacji. Liczniki tego typu wyświetlany stosunek całkowity czas w przykładowym przedziale czasu liczba procesów lub operacje zakończyły się w tym samym czasie. Ten typ licznika mierzy czas w Takty zegara systemowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: ((N 1 -N 0) /F) / (B-1 -B 0), gdzie N 1 i N 0 są odczyty liczników wydajności, B 1 i B 0 są odpowiednie `AverageBase` wartości i F to liczba impulsów na sekundę. Wartość F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach. W związku z tym licznik reprezentuje numery znaczników zliczonych podczas ostatniego interwału próbkowania, F reprezentuje częstotliwość to znaczniki osi i mianownika reprezentuje liczbę operacji ukończony podczas ostatniego interwału próbkowania.  
  
 Liczniki tego typu obejmują PhysicalDisk\ średni Dysku w s/Transfer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta32">
      <MemberSignature Language="C#" Value="CounterDelta32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta32 = int32(4195328)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberSignature Language="VB.NET" Value="CounterDelta32" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta32" />
      <MemberSignature Language="F#" Value="CounterDelta32 = 4195328" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195328</MemberValue>
      <Docs>
        <summary>Licznik różnica, który przedstawia zmiany w atrybucie zmierzone między dwa najnowszych interwałów próbkowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: N 1 -N 0, gdzie N 1 i N 0 są odczyty liczników wydajności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterDelta64">
      <MemberSignature Language="C#" Value="CounterDelta64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterDelta64 = int32(4195584)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberSignature Language="VB.NET" Value="CounterDelta64" />
      <MemberSignature Language="C++ CLI" Value="CounterDelta64" />
      <MemberSignature Language="F#" Value="CounterDelta64 = 4195584" Usage="System.Diagnostics.PerformanceCounterType.CounterDelta64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4195584</MemberValue>
      <Docs>
        <summary>Licznik różnica, który przedstawia zmiany w atrybucie zmierzone między dwa najnowszych interwałów próbkowania. Jest taka sama jak <see langword="CounterDelta32" /> Typ licznika, z wyjątkiem jest używa większych pól w celu uwzględnienia większej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: N 1 -N 0, gdzie N 1 i N 0 są odczyty liczników wydajności.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiBase">
      <MemberSignature Language="C#" Value="CounterMultiBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiBase = int32(1107494144)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberSignature Language="VB.NET" Value="CounterMultiBase" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiBase" />
      <MemberSignature Language="F#" Value="CounterMultiBase = 1107494144" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1107494144</MemberValue>
      <Docs>
        <summary>Podstawowy licznik wskazuje liczbę elementów w próbce. Jest używany jako mianownik w obliczeniach uzyskać średnią wśród elementów próbkowany podejmując chronometrażu wiele, ale podobnych elementów. Używane z <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, i <see langword="CounterMultiTimer100NsInverse" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer">
      <MemberSignature Language="C#" Value="CounterMultiTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer = int32(574686464)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer" />
      <MemberSignature Language="F#" Value="CounterMultiTimer = 574686464" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>574686464</MemberValue>
      <Docs>
        <summary>Licznika procent, który wyświetla czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Ponieważ licznik rejestruje czas aktywności składników działających równocześnie, wynikowy procent może przekroczyć 100 procent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten licznik jest multitimer. Multitimers zbierania danych z więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Ten typ licznika różni się od `CounterMultiTimer100Ns` w tym mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.  
  
 Formuła: ((1 N - N 0) / (1 D - D 0)) x 100 / B, gdzie N 1 i N 0 wskazań liczników wydajności, ich odpowiednich odczyty czasu w taktach licznik wydajności systemu są D 1 i D 0, a zmienna B oznacza podstawowy licznik dla monitorowanych składników (przy użyciu bas Licznik e typu `CounterMultiBase`). W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100Ns">
      <MemberSignature Language="C#" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100Ns = int32(575735040)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100Ns" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100Ns = 575735040" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>575735040</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Mierzony w 100 nanosekund (ns) czas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ tego licznika jest multitimer. Multitimers zostały zaprojektowane do monitorowania więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku.  
  
 Formuła: ((1 N - N 0) / (1 D - D 0)) x 100 / B, gdzie N 1 i N 0 wskazań liczników wydajności, D 1 i D 0 są ich odpowiednich odczyty czasie w jednostkach 100-nanosekundowych, a zmienna B oznacza podstawowy licznik dla monitorowanych składników (przy użyciu Licznik bazowy typu  `CounterMultiBase`). W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimer100NsInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimer100NsInverse = int32(592512256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimer100NsInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimer100NsInverse = 592512256" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>592512256</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Liczniki tego typu pomiaru w 100 nanosekund (ns) czas. Pochodzą one czas aktywności pomiaru czasu, który składniki nie są aktywne i odjęcie wyniku pomnożenie 100 procent liczby monitorowanych obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ tego licznika jest odwrotny multitimer. Multitimers zostały zaprojektowane do monitorowania więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Liczniki odwrotny pomiar czasu, który składnik nie jest aktywne i pochodzi z pomiaru czas nieaktywności jego czas aktywności  
  
 Formuła: (B - ((1 N - N 0) / (1 D - D 0))) x 100, gdzie mianownika reprezentuje całkowity czas interwału próbkowania licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a B reprezentuje liczbę składników jest m onitored przy użyciu Licznik bazowy typu `CounterMultiBase`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterMultiTimerInverse">
      <MemberSignature Language="C#" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterMultiTimerInverse = int32(591463680)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterMultiTimerInverse" />
      <MemberSignature Language="F#" Value="CounterMultiTimerInverse = 591463680" Usage="System.Diagnostics.PerformanceCounterType.CounterMultiTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>591463680</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia czas aktywności jednego lub więcej składników jako procent całkowitego czasu interwału próbkowania. Czas aktywności pochodzi pomiaru czasu, który składniki nie są aktywne i odjęcie wyniku 100 procent liczby monitorowanych obiektów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ tego licznika jest odwrotny multitimer. Multitimers monitorować więcej niż jedno wystąpienie składnika, takie jak procesor lub dysku. Liczniki odwrotny pomiar czasu, który składnik nie jest aktywne i pochodzi z pomiaru jego czas aktywności.  
  
 Ten licznik różni się od `CounterMultiTimer100NsInverse` w tym mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.  
  
 Formuła: (B - ((1 N - N 0) / (1 D - D 0))) x 100, gdzie mianownika reprezentuje całkowity czas interwału próbkowania licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a B reprezentuje liczbę składników jest monitorowane, przy użyciu Licznik bazowy typu `CounterMultiBase`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimer">
      <MemberSignature Language="C#" Value="CounterTimer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimer = int32(541132032)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberSignature Language="VB.NET" Value="CounterTimer" />
      <MemberSignature Language="C++ CLI" Value="CounterTimer" />
      <MemberSignature Language="F#" Value="CounterTimer = 541132032" Usage="System.Diagnostics.PerformanceCounterType.CounterTimer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>541132032</MemberValue>
      <Docs>
        <summary>Licznika procent, który pokazuje średni czas, czy składnik jest aktywny jako procent całkowitej przedziału czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / (1 D - D 0), gdzie N 1 i N 0 wskazań liczników wydajności, a ich odpowiednich odczyty czasu są D 1 i D 0. W związku z tym licznik reprezentuje części w przykładowym przedziale czasu, w którym monitorowanych składników były aktywne i mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterTimerInverse">
      <MemberSignature Language="C#" Value="CounterTimerInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CounterTimerInverse = int32(557909248)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberSignature Language="VB.NET" Value="CounterTimerInverse" />
      <MemberSignature Language="C++ CLI" Value="CounterTimerInverse" />
      <MemberSignature Language="F#" Value="CounterTimerInverse = 557909248" Usage="System.Diagnostics.PerformanceCounterType.CounterTimerInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>557909248</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia średnią wartość procentową czasu active zaobserwowaną w przykładowym przedziale czasu. Wartości tych liczników jest obliczana przez monitorowanie procent czasu, który usługa była nieaktywna, a następnie odjęcie tej wartości od 100%.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to typ odwrotny licznika. Miara odwrotny liczniki czas, co składnik Zanotuj active i pochodzi z pomiaru czas aktywności. Typ tego licznika jest taka sama jak `CounterTimer100NsInv` z tą różnicą, że mierzy czas w jednostkach Takty licznik wydajności systemu, a nie w 100 nanosekund jednostek.  
  
 Formuła: (1 - ((1 N - N 0) / (1 D - D 0))) x 100, gdy licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval32">
      <MemberSignature Language="C#" Value="CountPerTimeInterval32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval32 = int32(4523008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval32" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval32" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval32 = 4523008" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523008</MemberValue>
      <Docs>
        <summary>Licznik Średni zaprojektowane do monitorowania średnia długość kolejki do zasobu w czasie. Przedstawia on różnica między długości kolejki zaobserwowaną ostatnich dwóch interwałów próbkowania podzielona przez długość interwału. Ten typ licznika zazwyczaj umożliwia śledzić liczbę elementów, które są umieszczone w kolejce oczekiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / (1 D - D 0), gdy licznik przedstawia liczbę elementów w kolejce i mianownika reprezentuje czas, który upłynął podczas ostatniego interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CountPerTimeInterval64">
      <MemberSignature Language="C#" Value="CountPerTimeInterval64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType CountPerTimeInterval64 = int32(4523264)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberSignature Language="VB.NET" Value="CountPerTimeInterval64" />
      <MemberSignature Language="C++ CLI" Value="CountPerTimeInterval64" />
      <MemberSignature Language="F#" Value="CountPerTimeInterval64 = 4523264" Usage="System.Diagnostics.PerformanceCounterType.CountPerTimeInterval64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4523264</MemberValue>
      <Docs>
        <summary>Średni licznik, który monitoruje średnia długość kolejki do zasobu w czasie. Liczniki tego typu wyświetlenia różnicy między długości kolejki zaobserwowaną ostatnich dwóch interwałów próbkowania, podzielona przez długość interwału. Typ tego licznika jest taka sama jak <see langword="CountPerTimeInterval32" /> z tym, że używa większych pól do uwzględnienia większej wartości. Ten typ licznika zwykle jest używana do śledzenia dużych lub bardzo dużą liczbę elementów, które są umieszczone w kolejce lub oczekiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / (1 D - D 0), gdy licznik przedstawia liczbę elementów w kolejce i mianownika reprezentuje czas, który upłynął podczas interwału próbkowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElapsedTime">
      <MemberSignature Language="C#" Value="ElapsedTime" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType ElapsedTime = int32(807666944)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberSignature Language="VB.NET" Value="ElapsedTime" />
      <MemberSignature Language="C++ CLI" Value="ElapsedTime" />
      <MemberSignature Language="F#" Value="ElapsedTime = 807666944" Usage="System.Diagnostics.PerformanceCounterType.ElapsedTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>807666944</MemberValue>
      <Docs>
        <summary>Przedstawia całkowity czas od uruchomienia składnik lub procesu i czasu, gdy ta wartość jest obliczana czasomierza różnicy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (D 0 - N 0) / F, gdzie D 0 reprezentuje bieżący czas N 0 reprezentuje czas uruchomienia obiektu i F reprezentuje liczbę jednostek czasu, które upłynąć w ciągu sekundy. Wartość F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach.  
  
 Liczniki tego typu obejmują czas działania systemu System\.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems32">
      <MemberSignature Language="C#" Value="NumberOfItems32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems32 = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems32" />
      <MemberSignature Language="F#" Value="NumberOfItems32 = 65536" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczba elementów lub operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: Brak. Średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu.  
  
 Liczniki tego typu obejmują pamięć\dostępna bajtów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItems64">
      <MemberSignature Language="C#" Value="NumberOfItems64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItems64 = int32(65792)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItems64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItems64" />
      <MemberSignature Language="F#" Value="NumberOfItems64 = 65792" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItems64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>65792</MemberValue>
      <Docs>
        <summary>Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczbę bardzo dużą liczbę elementów lub operacji. Jest taka sama jak <see langword="NumberOfItems32" /> z tym, że używa większych pól do uwzględnienia większej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: Brak. Średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX32">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX32 = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX32" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX32 = 0" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość w formacie szesnastkowym. Używany na przykład do obsługi prostego liczba elementów lub operacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: Brak. Średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfItemsHEX64">
      <MemberSignature Language="C#" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType NumberOfItemsHEX64 = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberSignature Language="VB.NET" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="C++ CLI" Value="NumberOfItemsHEX64" />
      <MemberSignature Language="F#" Value="NumberOfItemsHEX64 = 256" Usage="System.Diagnostics.PerformanceCounterType.NumberOfItemsHEX64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Natychmiastowe licznika, który pokazuje najbardziej ostatnio odczytaną wartość. Używany na przykład do obsługi prostego liczbę bardzo dużą liczbę elementów lub operacji. Jest taka sama jak <see langword="NumberOfItemsHEX32" /> z tym, że używa większych pól do uwzględnienia większej wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: Brak. Jest to wartość średnia nie są wyświetlane, ale zawiera dane pierwotne, zgodnie z ich zebraniu  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond32">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond32 = int32(272696320)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond32" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond32 = 272696320" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond32" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696320</MemberValue>
      <Docs>
        <summary>Licznik różnica, który pokazuje średnią liczbę operacji ukończone w ciągu każdej sekundy interwału próbkowania. Liczniki tego typu pomiaru czasu w Takty zegara systemowego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / ((D 1 -D 0) / F), gdzie N 1 i N 0 są odczyty liczników wydajności D 1 i D 0 są ich odpowiednich odczyty czasu i F oznacza liczbę impulsów na sekundę. W związku z tym licznik przedstawia liczbę operacji wykonywanych podczas ostatniego interwału próbkowania reprezentuje denominator, liczbę znaczników, jaki upłynął podczas ostatniego interwału próbkowania i F jest częstotliwość to znaczniki osi. Wartość F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach.  
  
 Liczniki tego typu obejmują operacje odczytu pliku System\ na sekundę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RateOfCountsPerSecond64">
      <MemberSignature Language="C#" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RateOfCountsPerSecond64 = int32(272696576)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberSignature Language="VB.NET" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="C++ CLI" Value="RateOfCountsPerSecond64" />
      <MemberSignature Language="F#" Value="RateOfCountsPerSecond64 = 272696576" Usage="System.Diagnostics.PerformanceCounterType.RateOfCountsPerSecond64" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>272696576</MemberValue>
      <Docs>
        <summary>Licznik różnica, który pokazuje średnią liczbę operacji ukończone w ciągu każdej sekundy interwału próbkowania. Liczniki tego typu pomiaru czasu w Takty zegara systemowego. Typ tego licznika jest taka sama jak <see langword="RateOfCountsPerSecond32" /> typu, ale używa większych pól w celu uwzględnienia większej wartości do śledzenia dużych liczba elementów lub operacji na sekundę, takich jak szybkość transmisji bajtów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / ((D 1 -D 0) / F), gdzie N 1 i N 0 są odczyty liczników wydajności D 1 i D 0 są ich odpowiednich odczyty czasu i F oznacza liczbę impulsów na sekundę. W związku z tym licznik przedstawia liczbę operacji wykonywanych podczas ostatniego interwału próbkowania reprezentuje denominator, liczbę znaczników, jaki upłynął podczas ostatniego interwału próbkowania i F jest częstotliwość to znaczniki osi. Wartość F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach.  
  
 Liczniki tego typu obejmują System\ pliku odczytu dysku/s.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawBase">
      <MemberSignature Language="C#" Value="RawBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawBase = int32(1073939459)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberSignature Language="VB.NET" Value="RawBase" />
      <MemberSignature Language="C++ CLI" Value="RawBase" />
      <MemberSignature Language="F#" Value="RawBase = 1073939459" Usage="System.Diagnostics.PerformanceCounterType.RawBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939459</MemberValue>
      <Docs>
        <summary>Podstawowy licznik przechowuje mianownika licznika, który przedstawia ogólne ułamek arytmetyczne. Sprawdź, czy ta wartość jest większa niż zero, aby móc używać go jako mianownik w <see langword="RawFraction" /> wartość obliczeń.</summary>
      </Docs>
    </Member>
    <Member MemberName="RawFraction">
      <MemberSignature Language="C#" Value="RawFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType RawFraction = int32(537003008)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberSignature Language="VB.NET" Value="RawFraction" />
      <MemberSignature Language="C++ CLI" Value="RawFraction" />
      <MemberSignature Language="F#" Value="RawFraction = 537003008" Usage="System.Diagnostics.PerformanceCounterType.RawFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>537003008</MemberValue>
      <Docs>
        <summary>Licznika procent natychmiastowe, który pokazuje współczynnik podzestawu do jego zestawu jako procent. Na przykład porównuje liczbę bajtów w użyciu na dysku całkowitą liczbę bajtów na dysku. Liczniki tego typu jest wyświetlany bieżący procent, nie średnią wraz z upływem czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (N 0 / D 0) x 100, gdzie D 0 reprezentuje atrybut zmierzona (przy użyciu Licznik bazowy typu `RawBase`) i jeden składnik ten atrybut reprezentuje N 0.  
  
 Liczniki tego typu obejmują plik stronicowania\\% szczytowego użycia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleBase">
      <MemberSignature Language="C#" Value="SampleBase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleBase = int32(1073939457)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberSignature Language="VB.NET" Value="SampleBase" />
      <MemberSignature Language="C++ CLI" Value="SampleBase" />
      <MemberSignature Language="F#" Value="SampleBase = 1073939457" Usage="System.Diagnostics.PerformanceCounterType.SampleBase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>1073939457</MemberValue>
      <Docs>
        <summary>Podstawowy licznik przechowywana jest liczba próbek przerywa podjęte i jest używany jako mianownik w ułamek próbkowania. Ułamek próbkowania jest liczba próbek, które były 1 (lub <see langword="true" />) dla przerwań próbki. Sprawdź, czy ta wartość jest większa niż zero, przed użyciem go jako denominator obliczania <see langword="SampleFraction" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="SampleCounter">
      <MemberSignature Language="C#" Value="SampleCounter" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleCounter = int32(4260864)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberSignature Language="VB.NET" Value="SampleCounter" />
      <MemberSignature Language="C++ CLI" Value="SampleCounter" />
      <MemberSignature Language="F#" Value="SampleCounter = 4260864" Usage="System.Diagnostics.PerformanceCounterType.SampleCounter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>4260864</MemberValue>
      <Docs>
        <summary>Średnia licznik, który pokazuje średnią liczbę operacji zostało ukończone w ciągu sekundy. Gdy licznik tego typu przykłady, danych, każda próbkowania przerwań zwraca co najmniej zero. Dane liczników jest liczbę tych, które zostały poddane próbkowaniu. Mierzy czasie w jednostkach Takty licznik wydajności systemu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N — N 0) / ((1 D-D 0) / F), gdy licznik (N) reprezentuje liczba ukończonych operacji denominator (D) reprezentuje czas, który upłynął jednostki Takty licznik wydajności systemu i F reprezentuje liczbę znaczników, które upłynąć w ciągu sekundy. F jest brana pod uwagę w równanie tak, aby wyniki mogą być wyświetlane w sekundach.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleFraction">
      <MemberSignature Language="C#" Value="SampleFraction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType SampleFraction = int32(549585920)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberSignature Language="VB.NET" Value="SampleFraction" />
      <MemberSignature Language="C++ CLI" Value="SampleFraction" />
      <MemberSignature Language="F#" Value="SampleFraction = 549585920" Usage="System.Diagnostics.PerformanceCounterType.SampleFraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>549585920</MemberValue>
      <Docs>
        <summary>Licznika procent, który pokazuje średni współczynnik trafień do wszystkich operacji w ciągu ostatnich dwóch interwałów próbkowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: ((1 N - N 0) / (1 D - D 0)) x 100, gdzie licznik liczby pomyślnych operacji podczas ostatniego interwału próbkowania, a mianownika reprezentuje zmianę liczby wszystkich operacji (typu mierzony) zakończona podczas próbki interwał, korzystając z liczników typu `SampleBase`.  
  
 Liczniki tego typu obejmują pamięci podręcznej odczytu Cache\Pin %.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100Ns">
      <MemberSignature Language="C#" Value="Timer100Ns" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100Ns = int32(542180608)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberSignature Language="VB.NET" Value="Timer100Ns" />
      <MemberSignature Language="C++ CLI" Value="Timer100Ns" />
      <MemberSignature Language="F#" Value="Timer100Ns = 542180608" Usage="System.Diagnostics.PerformanceCounterType.Timer100Ns" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>542180608</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia czas aktywności składnika jako procent całkowity czas interwału próbkowania. Mierzy czas w jednostkach 100 nanosekund (ns). Liczniki tego typu są przeznaczone do mierzenia w czasie działania jeden składnik.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formuła: (1 N - N 0) / (D 1 - D 0) x 100, gdzie licznik części w przykładowym przedziale czasu, w którym zostały active monitorowanych składników, a mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 Liczniki tego typu obejmują Procesor\Czas % czasu użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timer100NsInverse">
      <MemberSignature Language="C#" Value="Timer100NsInverse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Diagnostics.PerformanceCounterType Timer100NsInverse = int32(558957824)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberSignature Language="VB.NET" Value="Timer100NsInverse" />
      <MemberSignature Language="C++ CLI" Value="Timer100NsInverse" />
      <MemberSignature Language="F#" Value="Timer100NsInverse = 558957824" Usage="System.Diagnostics.PerformanceCounterType.Timer100NsInverse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <MemberValue>558957824</MemberValue>
      <Docs>
        <summary>Licznika procent, który przedstawia średnią wartość procentową czasu aktywności zaobserwowaną w przykładowym przedziale czasu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to odwrotność licznika. Liczniki tego typu obliczenia czas aktywności pomiaru czasu, który usługa była nieaktywna, a następnie odjęcie procent czas aktywności od 100%.  
  
 Formuła: (1 - ((1 N - N 0) / (1 D - D 0))) x 100, gdy licznik reprezentuje czas w interwale po monitorowanych składników zostały nieaktywnych, a mianownika reprezentuje całkowity czas interwału próbkowania.  
  
 Liczniki tego typu obejmują Procesor\Czas % czasu procesora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>