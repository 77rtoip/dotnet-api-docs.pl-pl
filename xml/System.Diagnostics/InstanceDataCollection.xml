<Type Name="InstanceDataCollection" FullName="System.Diagnostics.InstanceDataCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="910248b3399a4ca3fe2b614de86fbffae5a38c9e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36342176" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class InstanceDataCollection : System.Collections.DictionaryBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InstanceDataCollection extends System.Collections.DictionaryBase" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.InstanceDataCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class InstanceDataCollection&#xA;Inherits DictionaryBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceDataCollection : System::Collections::DictionaryBase" />
  <TypeSignature Language="F#" Value="type InstanceDataCollection = class&#xA;    inherit DictionaryBase" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.DictionaryBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia kolekcję silnie typizowaną <see cref="T:System.Diagnostics.InstanceData" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.InstanceDataCollection> Klasa reprezentuje kolekcję zawierającą wszystkie dane wystąpienia licznika. Ta kolekcja jest zawarta w <xref:System.Diagnostics.InstanceDataCollectionCollection> przy użyciu <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> metody.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia dane wystąpienia określonego <xref:System.Diagnostics.PerformanceCounterCategory> na komputerze lokalnym. Najpierw Wyświetla listę numerowane <xref:System.Diagnostics.PerformanceCounterCategory> nazwy. Gdy użytkownik wprowadzi numer kategorii, pobiera przykładzie <xref:System.Diagnostics.InstanceDataCollectionCollection> tego <xref:System.Diagnostics.PerformanceCounterCategory>. Następnie konwertuje kolekcji zwróconej przez <xref:System.Diagnostics.InstanceDataCollectionCollection.Values%2A> do tablicy <xref:System.Diagnostics.InstanceDataCollection> obiektów. W przykładzie przedstawiono również dane wystąpienia skojarzone z każdym <xref:System.Diagnostics.InstanceData> każdego <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#1)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
    <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
    <altmember cref="T:System.Diagnostics.InstanceData" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InstanceDataCollection (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InstanceDataCollection(System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.InstanceDataCollection : string -&gt; System.Diagnostics.InstanceDataCollection" Usage="new System.Diagnostics.InstanceDataCollection counterName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use InstanceDataCollectionCollection indexer instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nazwa licznika, który opisano często ilość inwentaryzacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.InstanceDataCollection" /> przy użyciu określony licznik wydajności (który określa wystąpienie wydajności).</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="counterName" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="instanceDataCollection.Contains instanceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nazwa wystąpienia można znaleźć w tej kolekcji.</param>
        <summary>Określa, czy wystąpienie elementu wydajności o określonej nazwie (identyfikowane za pomocą jednej z indeksowanej <see cref="T:System.Diagnostics.InstanceData" /> obiektów) istnieje w kolekcji.</summary>
        <returns>
          <see langword="true" /> Jeśli wystąpienie istnieje w kolekcji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `instanceName` Parametr jest rozróżniana wielkość liter.  
  
   
  
## Examples  
 Poniższy przykład kodu akceptuje <xref:System.Diagnostics.PerformanceCounter> nazwa kategorii, nazwa licznika i nazwę wystąpienia w wierszu polecenia. Pobiera <xref:System.Diagnostics.InstanceDataCollectionCollection> dla kategorii, która jest kolekcją <xref:System.Diagnostics.InstanceDataCollection> obiektów. Od tego pobiera danej <xref:System.Diagnostics.InstanceDataCollection> dla określonego komputera. Następnie używa <xref:System.Diagnostics.InstanceDataCollection.Contains%2A> metodę, aby określić, czy określone wystąpienie istnieje, przy użyciu nazwy jednego wystąpienia domyślnego, jeśli brak jest wprowadzana.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Diagnostics.InstanceData[] instances, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Diagnostics.InstanceData[] instances, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (instances As InstanceData(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Diagnostics::InstanceData ^&gt; ^ instances, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Diagnostics.InstanceData[] * int -&gt; unit" Usage="instanceDataCollection.CopyTo (instances, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instances" Type="System.Diagnostics.InstanceData[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instances">Jednowymiarowa <see cref="T:System.Array" /> to miejsce docelowe wartości kopiowanych z kolekcji.</param>
        <param name="index">Wartość liczony od zera indeks, w którym można dodać nowych wystąpień.</param>
        <summary>Kopiuje elementy kolekcji do określonej tablicy jednowymiarowej tablicy w określonym indeksie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.InstanceDataCollection.CopyTo%2A> metodę, aby przekonwertować <xref:System.Diagnostics.InstanceDataCollection> na tablicę <xref:System.Diagnostics.InstanceData> obiektów. Wartości <xref:System.Diagnostics.InstanceData.InstanceName%2A> i <xref:System.Diagnostics.InstanceData.Sample%2A> właściwości każdy element tablicy są przekazywane do funkcji dla dalszego przetwarzania.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string" Usage="System.Diagnostics.InstanceDataCollection.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę licznika wydajności, których chcesz pobrać dane wystąpienia.</summary>
        <value>Nazwa licznika wydajności.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy kod przedstawia przykład <xref:System.Diagnostics.InstanceDataCollection.CounterName%2A> właściwość <xref:System.Diagnostics.InstanceDataCollection>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#4)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceData this[string instanceName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.InstanceData Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(instanceName As String) As InstanceData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::InstanceData ^ default[System::String ^] { System::Diagnostics::InstanceData ^ get(System::String ^ instanceName); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Diagnostics.InstanceData" Usage="System.Diagnostics.InstanceDataCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Nazwa wystąpienia kategorii licznika wydajności lub ciąg pusty ("") czy kategoria zawiera jedno wystąpienie.</param>
        <summary>Pobiera dane wystąpienia skojarzone z tego licznika. Zazwyczaj jest to zbiór wartości pierwotnych liczników.</summary>
        <value>
          <see cref="T:System.Diagnostics.InstanceData" /> Elementu za pomocą którego <see cref="T:System.Diagnostics.InstanceDataCollection" /> obiektu jest indeksowana.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `instanceName` Parametr jest rozróżniana wielkość liter.  
  
   
  
## Examples  
 Poniższy przykład kodu akceptuje <xref:System.Diagnostics.PerformanceCounter> nazwa kategorii, nazwa licznika i nazwę wystąpienia w wierszu polecenia. Pobiera <xref:System.Diagnostics.InstanceDataCollectionCollection> dla kategorii, która jest kolekcją <xref:System.Diagnostics.InstanceDataCollection> obiektów. Od tego pobiera danej <xref:System.Diagnostics.InstanceDataCollection> dla określonego komputera. Następnie, jeśli istnieje wystąpienie, w przykładzie użyto <xref:System.Diagnostics.InstanceDataCollection.Item%2A> właściwości (określany jako indeksatora) można uzyskać skojarzonego <xref:System.Diagnostics.InstanceData> obiektu.  
  
 [!code-csharp[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/CS/instdatacolitemcontains.cs#2)]
 [!code-vb[System.Diagnostics.InstanceDataCollection.ItemContains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceDataCollection.ItemContains/VB/instdatacolitemcontains.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera klucze rejestru obiektów i liczników obiekty skojarzone z tym dane wystąpienia.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> Reprezentujący zestaw kluczy rejestru określonego obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poszczególnych składników oprogramowania tworzy klucze jego obiektów i liczników, jeśli jest zainstalowana i zapisuje dane liczników podczas wykonywania. Jak może uzyskać dostępu do innych danych rejestru można dostęp do tych danych. Jednak mimo że używasz rejestru do zbierania danych dotyczących wydajności, dane nie są przechowywane w bazie danych rejestru. Zamiast tego system zbiera dane z odpowiednim systemem menedżerowie obiektów.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> właściwość <xref:System.Diagnostics.InstanceDataCollection> zwrócić kolekcję nazwy wystąpienia, które są konwertowane na tablicę <xref:System.String>. Generuje tablicę <xref:System.Diagnostics.InstanceData> obiektów przy użyciu <xref:System.Diagnostics.InstanceDataCollection.Values%2A> właściwości. Dla każdego elementu w tablicy nazwy wystąpień Wyświetla nazwę i wywołuje funkcję do przetwarzania skojarzonego <xref:System.Diagnostics.InstanceData> obiektu.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.InstanceDataCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Diagnostics.InstanceDataCollection.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartości pierwotnych liczników, które obejmują dane wystąpienia licznika.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> Reprezentujący wartości pierwotnych danych licznika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.InstanceDataCollection.Values%2A> właściwość <xref:System.Diagnostics.InstanceDataCollection> do zwrócenia Kolekcja <xref:System.Diagnostics.InstanceData> obiektów, które są konwertowane na tablicę. Generuje tablicę nazw wystąpień przy użyciu <xref:System.Diagnostics.InstanceDataCollection.Keys%2A> właściwości. Dla każdego elementu w tablicy <xref:System.Diagnostics.InstanceData> obiektów, wyświetla nazwę skojarzonego wystąpienia i wywołuje funkcję przetworzyć <xref:System.Diagnostics.InstanceData> obiektu.  
  
 [!code-csharp[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/CS/instdatakeysvalues.cs#3)]
 [!code-vb[System.Diagnostics.InstanceData.KeysValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.KeysValues/VB/instdatakeysvalues.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>