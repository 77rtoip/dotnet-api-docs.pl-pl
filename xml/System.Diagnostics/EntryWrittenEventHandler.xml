<Type Name="EntryWrittenEventHandler" FullName="System.Diagnostics.EntryWrittenEventHandler">
  <TypeSignature Language="C#" Value="public delegate void EntryWrittenEventHandler(object sender, EntryWrittenEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed EntryWrittenEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EntryWrittenEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EntryWrittenEventHandler(sender As Object, e As EntryWrittenEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EntryWrittenEventHandler(System::Object ^ sender, EntryWrittenEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.EntryWrittenEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="791ba-101">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="791ba-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="791ba-102"><see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="791ba-102">An <see cref="T:System.Diagnostics.EntryWrittenEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="791ba-103">Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> zdarzenie <see cref="T:System.Diagnostics.EventLog" />.</span><span class="sxs-lookup"><span data-stu-id="791ba-103">Represents the method that will handle the <see cref="E:System.Diagnostics.EventLog.EntryWritten" /> event of an <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="791ba-104">Po utworzeniu <xref:System.Diagnostics.EntryWrittenEventHandler> delegata, należy określić metodę, która obsłuży zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="791ba-104">When you create an <xref:System.Diagnostics.EntryWrittenEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="791ba-105">Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="791ba-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="791ba-106">Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.</span><span class="sxs-lookup"><span data-stu-id="791ba-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="791ba-107">Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="791ba-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Diagnostics.EventLog.EntryWritten" />
    <altmember cref="T:System.Diagnostics.EntryWrittenEventArgs" />
    <altmember cref="T:System.Diagnostics.EventLog" />
  </Docs>
</Type>