<Type Name="DefaultTraceListener" FullName="System.Diagnostics.DefaultTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afe4d854cf9d98721bd82251905bce648d6b98b1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076587" /></Metadata><TypeSignature Language="C#" Value="public class DefaultTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DefaultTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DefaultTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type DefaultTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1f277-101">Dostarcza domyślne metody wyjściowe i zachowanie dla śledzenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-101">Provides the default output methods and behavior for tracing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f277-102">Wystąpienie tej klasy jest automatycznie dodawane do <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> kolekcji i. <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1f277-102">An instance of this class is automatically added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections.</span></span> <span data-ttu-id="1f277-103">Jawne dodanie drugiego <xref:System.Diagnostics.DefaultTraceListener> powoduje duplikowanie komunikatów w oknie danych wyjściowych debugera i zduplikowane okna komunikatów dla potwierdzeń.</span><span class="sxs-lookup"><span data-stu-id="1f277-103">Explicitly adding a second <xref:System.Diagnostics.DefaultTraceListener> causes duplicate messages in the debugger output window and duplicate message boxes for asserts.</span></span>  
  
 <span data-ttu-id="1f277-104">Domyślnie <xref:System.Diagnostics.DefaultTraceListener.Write%2A> metody i <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> emitują komunikat do funkcji <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> Win32 `OutputDebugString` i metody.</span><span class="sxs-lookup"><span data-stu-id="1f277-104">By default, the <xref:System.Diagnostics.DefaultTraceListener.Write%2A> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods emit the message to the Win32 `OutputDebugString` function and to the <xref:System.Diagnostics.Debugger.Log%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f277-105">Aby uzyskać informacje na `OutputDebugString` temat funkcji, zobacz zestaw SDK platformy lub MSDN.</span><span class="sxs-lookup"><span data-stu-id="1f277-105">For information about the `OutputDebugString` function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="1f277-106">Metoda domyślnie wyświetla okno komunikatu, gdy aplikacja jest uruchomiona w trybie interfejsu użytkownika, a także emituje komunikat przy użyciu <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>. <xref:System.Diagnostics.DefaultTraceListener.Fail%2A></span><span class="sxs-lookup"><span data-stu-id="1f277-106">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f277-107">Wyświetlanie okna komunikatu dla <xref:System.Diagnostics.Debug.Assert%2A> wywołań i <xref:System.Diagnostics.Debug.Fail%2A> metod jest zależne od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="1f277-107">The display of the message box for <xref:System.Diagnostics.Debug.Assert%2A> and <xref:System.Diagnostics.Debug.Fail%2A> method calls depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="1f277-108">Jeśli nie <xref:System.Diagnostics.Trace.Listeners%2A> znajduje się w kolekcji, okno komunikatu nie jest wyświetlane. <xref:System.Diagnostics.DefaultTraceListener></span><span class="sxs-lookup"><span data-stu-id="1f277-108">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="1f277-109">`System.Diagnostics.Trace.Listeners.Clear()` <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> [ \<](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md) Możezostać<xref:System.Diagnostics.Trace.Listeners%2A> usunięty przez element [ Clear>przezelementRemove>lubprzezwywołaniemetodywewłaściwości().\<](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md) <xref:System.Diagnostics.DefaultTraceListener></span><span class="sxs-lookup"><span data-stu-id="1f277-109">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [\<clear> element](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), by the [\<remove> element](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="1f277-110">Musisz włączyć śledzenie lub debugowanie, aby użyć odbiornika śledzenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-110">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="1f277-111">Następująca składnia jest specyficzna dla kompilatora.</span><span class="sxs-lookup"><span data-stu-id="1f277-111">The following syntax is compiler specific.</span></span> <span data-ttu-id="1f277-112">Jeśli używasz kompilatorów innych niż C# lub Visual Basic, zapoznaj się z dokumentacją kompilatora.</span><span class="sxs-lookup"><span data-stu-id="1f277-112">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="1f277-113">Aby włączyć debugowanie w C#, Dodaj `/d:DEBUG` flagę do wiersza polecenia kompilatora podczas kompilowania kodu lub Dodaj `#define DEBUG` do góry pliku.</span><span class="sxs-lookup"><span data-stu-id="1f277-113">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="1f277-114">W Visual Basic Dodaj `/d:DEBUG=True` flagę do wiersza polecenia kompilatora.</span><span class="sxs-lookup"><span data-stu-id="1f277-114">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="1f277-115">Aby włączyć śledzenie C#, Dodaj `/d:TRACE` flagę do wiersza polecenia kompilatora podczas kompilowania kodu lub Dodaj `#define TRACE` do góry pliku.</span><span class="sxs-lookup"><span data-stu-id="1f277-115">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="1f277-116">W Visual Basic Dodaj `/d:TRACE=True` flagę do wiersza polecenia kompilatora.</span><span class="sxs-lookup"><span data-stu-id="1f277-116">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="1f277-117">Aby dodać odbiornik śledzenia, należy edytować plik konfiguracji, który odnosi się do nazwy aplikacji.</span><span class="sxs-lookup"><span data-stu-id="1f277-117">To add a trace listener, edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="1f277-118">W tym pliku można dodać odbiornik, ustawić jego typ i ustawić jego parametry, usunąć odbiornik lub wyczyścić wszystkie detektory wcześniej ustawione przez aplikację.</span><span class="sxs-lookup"><span data-stu-id="1f277-118">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="1f277-119">Plik konfiguracji powinien być sformatowany podobnie jak w poniższym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="1f277-119">The configuration file should be formatted similar to the following example:</span></span>  
  
```xml  
<configuration>  
<system.diagnostics>  
  <trace autoflush="false" indentsize="4">  
    <listeners>  
      <remove name="Default" />  
      <add name="myListener"  type="System.Diagnostics.TextWriterTraceListener"    initializeData="c:\myListener.log" />  
    </listeners>  
  </trace>  
</system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1f277-120">Poniższy przykład kodu oblicza współczynniki dwumianu, które są wartościami używanymi w prawdopodobieństwie i statystyce.</span><span class="sxs-lookup"><span data-stu-id="1f277-120">The following code example calculates binomial coefficients, which are values used in probability and statistics.</span></span> <span data-ttu-id="1f277-121">Ten przykład używa <xref:System.Diagnostics.DefaultTraceListener> do śledzenia wyników i błędów dzienników.</span><span class="sxs-lookup"><span data-stu-id="1f277-121">This example uses a <xref:System.Diagnostics.DefaultTraceListener> to trace results and log errors.</span></span> <span data-ttu-id="1f277-122">Tworzy nowy <xref:System.Diagnostics.DefaultTraceListener>, dodaje go <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> do <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> kolekcji i ustawia właściwość w pliku dziennika określonym w argumentach wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-122">It creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 <span data-ttu-id="1f277-123">`CalcBinomial` W<xref:System.Diagnostics.DefaultTraceListener.Fail%2A> przypadku wykrycia błędu podczas przetwarzania parametru wejściowego lub gdy funkcja zgłasza wyjątek, Metoda rejestruje i wyświetla komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="1f277-123">If an error is detected while processing the input parameter, or if the `CalcBinomial` function throws an exception, the <xref:System.Diagnostics.DefaultTraceListener.Fail%2A> method logs and displays an error message.</span></span> <span data-ttu-id="1f277-124">Jeśli właściwość jest `false`, komunikat o błędzie jest również zapisywana w konsoli programu. <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A></span><span class="sxs-lookup"><span data-stu-id="1f277-124">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the error message is also written to the console.</span></span> <span data-ttu-id="1f277-125">Gdy wynik jest obliczany pomyślnie, <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> metody i <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> zapisują wyniki w pliku dziennika.</span><span class="sxs-lookup"><span data-stu-id="1f277-125">When the result is calculated successfully, the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> methods write the results to the log file.</span></span>  
  
 <span data-ttu-id="1f277-126"><xref:System.Diagnostics.DefaultTraceListener.Write%2A> <xref:System.Diagnostics.DefaultTraceListener>Metody, i powodują,żedaneśledzeniamająbyć<xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A>zapisywanetylkodo. <xref:System.Diagnostics.DefaultTraceListener.Fail%2A></span><span class="sxs-lookup"><span data-stu-id="1f277-126">The <xref:System.Diagnostics.DefaultTraceListener.Fail%2A>, <xref:System.Diagnostics.DefaultTraceListener.Write%2A>, and <xref:System.Diagnostics.DefaultTraceListener.WriteLine%2A> methods cause trace information to be written only to the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="1f277-127">Aby zapisać informacje o <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> śledzeniu do wszystkich odbiorników w kolekcji, <xref:System.Diagnostics.Trace.Fail%2A>Użyj metod <xref:System.Diagnostics.Trace> , <xref:System.Diagnostics.Trace.WriteLine%2A> <xref:System.Diagnostics.Trace.Write%2A>i klasy.</span><span class="sxs-lookup"><span data-stu-id="1f277-127">To write trace information to all listeners in the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, use the <xref:System.Diagnostics.Trace.Fail%2A>, <xref:System.Diagnostics.Trace.Write%2A>, and <xref:System.Diagnostics.Trace.WriteLine%2A> methods of the <xref:System.Diagnostics.Trace> class.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#11)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#11)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1f277-128">Ta klasa jest bezpieczna wątkowo.</span><span class="sxs-lookup"><span data-stu-id="1f277-128">This class is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f277-129">Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.DefaultTraceListener" /> klasy z wartością "default" <see cref="P:System.Diagnostics.TraceListener.Name" /> jako wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="1f277-129">Initializes a new instance of the <see cref="T:System.Diagnostics.DefaultTraceListener" /> class with "Default" as its <see cref="P:System.Diagnostics.TraceListener.Name" /> property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f277-130">Poniższy przykład kodu <xref:System.Diagnostics.DefaultTraceListener> usuwa dane dostarczone przez aplikację <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> z kolekcji, a następnie tworzy nową <xref:System.Diagnostics.DefaultTraceListener> i dodaje ją do <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="1f277-130">The following code example removes the <xref:System.Diagnostics.DefaultTraceListener> provided by the application from the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection and then creates a new <xref:System.Diagnostics.DefaultTraceListener> and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#3)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="AssertUiEnabled">
      <MemberSignature Language="C#" Value="public bool AssertUiEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssertUiEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AssertUiEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AssertUiEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AssertUiEnabled : bool with get, set" Usage="System.Diagnostics.DefaultTraceListener.AssertUiEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("AssertUiEnabled defaults to False; should follow Environment.UserInteractive.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f277-131">Pobiera lub ustawia wartość wskazującą, czy aplikacja jest uruchomiona w trybie interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="1f277-131">Gets or sets a value indicating whether the application is running in user-interface mode.</span></span></summary>
        <value><span data-ttu-id="1f277-132"><see langword="true" />Jeśli tryb interfejsu użytkownika jest włączony; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="1f277-132"><see langword="true" /> if user-interface mode is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f277-133">Poniższy przykład kodu wywołuje funkcję, która wywołuje <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> metodę w celu zarejestrowania komunikatu o błędzie, jeśli funkcja zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1f277-133">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log an error message if the function throws an exception.</span></span> <span data-ttu-id="1f277-134">Jeśli właściwość ma `false`wartość, Metoda również zapisuje komunikat o błędzie w konsoli programu. <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A></span><span class="sxs-lookup"><span data-stu-id="1f277-134">If the <xref:System.Diagnostics.DefaultTraceListener.AssertUiEnabled%2A> property is `false`, the method also writes the error message to the console.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f277-135">Emituje lub wyświetla komunikat oraz ślad stosu dla potwierdzenia, który zawsze kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="1f277-135">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Fail : string -&gt; unit" Usage="defaultTraceListener.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1f277-136">Komunikat do emisji lub wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-136">The message to emit or display.</span></span></param>
        <summary><span data-ttu-id="1f277-137">Emituje lub wyświetla komunikat oraz ślad stosu dla potwierdzenia, który zawsze kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="1f277-137">Emits or displays a message and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f277-138">Domyślnie ta metoda wysyła `message` parametr i ślad stosu do okna komunikatu (gdy aplikacja działa w trybie interfejsu użytkownika) i <xref:System.Diagnostics.DefaultTraceListener> do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1f277-138">By default, this method sends the `message` parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f277-139">Poniższy przykład kodu zapisuje komunikat <xref:System.Diagnostics.DefaultTraceListener> o błędzie <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> przy użyciu metody.</span><span class="sxs-lookup"><span data-stu-id="1f277-139">The following code example writes an error message to a <xref:System.Diagnostics.DefaultTraceListener> using the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%29> method.</span></span> <span data-ttu-id="1f277-140">Ta metoda również zapisuje komunikat w konsoli programu, jeśli interfejs użytkownika jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1f277-140">The method also writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#6)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="defaultTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1f277-141">Komunikat do emisji lub wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-141">The message to emit or display.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="1f277-142">Szczegółowy komunikat do emisji lub wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-142">The detailed message to emit or display.</span></span></param>
        <summary><span data-ttu-id="1f277-143">Emituje lub wyświetla szczegółowe komunikaty oraz ślad stosu dla potwierdzenia, który zawsze kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="1f277-143">Emits or displays detailed messages and a stack trace for an assertion that always fails.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f277-144">Domyślnie ta metoda wysyła `message` parametr `detailMessage` , parametr i ślad stosu do okna komunikatu (gdy aplikacja działa w <xref:System.Diagnostics.DefaultTraceListener> trybie interfejsu użytkownika) i do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="1f277-144">By default, this method sends the `message` parameter, the `detailMessage` parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <xref:System.Diagnostics.DefaultTraceListener> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f277-145">Poniższy przykład kodu wywołuje funkcję, która wywołuje <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> metodę, aby zarejestrować szczegółowy komunikat o błędzie, jeśli funkcja zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="1f277-145">The following code example calls a function that calls the <xref:System.Diagnostics.DefaultTraceListener.Fail%28System.String%2CSystem.String%29> method to log a detailed error message if the function throws an exception.</span></span> <span data-ttu-id="1f277-146">Metoda zapisuje komunikat w konsoli programu, jeśli interfejs użytkownika jest niedostępny.</span><span class="sxs-lookup"><span data-stu-id="1f277-146">The method writes the message to the console if a user interface is not available.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#8)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="LogFileName">
      <MemberSignature Language="C#" Value="public string LogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LogFileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileName : string with get, set" Usage="System.Diagnostics.DefaultTraceListener.LogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f277-147">Pobiera lub ustawia nazwę pliku dziennika do zapisywania lub debugowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="1f277-147">Gets or sets the name of a log file to write trace or debug messages to.</span></span></summary>
        <value><span data-ttu-id="1f277-148">Nazwa pliku dziennika do zapisu lub debugowania komunikatów.</span><span class="sxs-lookup"><span data-stu-id="1f277-148">The name of a log file to write trace or debug messages to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f277-149">Poniższy przykład kodu tworzy nowy <xref:System.Diagnostics.DefaultTraceListener>, dodaje go <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> do <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> kolekcji i ustawia właściwość w pliku dziennika określonym w argumentach wiersza polecenia.</span><span class="sxs-lookup"><span data-stu-id="1f277-149">The following code example creates a new <xref:System.Diagnostics.DefaultTraceListener>, adds it to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection, and sets the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A> property to the log file specified in the command-line arguments.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/CS/binomial.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener/VB/binomial.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="defaultTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1f277-150">Komunikat do zapisu w <see langword="OutputDebugString" /> i. <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /></span><span class="sxs-lookup"><span data-stu-id="1f277-150">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="1f277-151">Zapisuje dane wyjściowe do <see langword="OutputDebugString" /> funkcji i <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="1f277-151">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f277-152">Aby uzyskać informacje na temat `OutputDebugString` funkcji debugowania Win32, zobacz "funkcja OutputDebugString" w zestawie SDK platformy lub witrynie MSDN.</span><span class="sxs-lookup"><span data-stu-id="1f277-152">For information about the Win32 `OutputDebugString` debugging function, see "OutputDebugString" in the Platform SDK or MSDN.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f277-153">Poniższy przykład kodu formatuje wyniki funkcji i używa <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> metody, aby napisać pierwszą część komunikatu <xref:System.Diagnostics.DefaultTraceListener>do.</span><span class="sxs-lookup"><span data-stu-id="1f277-153">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.Write%28System.String%29> method to write the first part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="defaultTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="1f277-154">Komunikat do zapisu w <see langword="OutputDebugString" /> i. <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /></span><span class="sxs-lookup"><span data-stu-id="1f277-154">The message to write to <see langword="OutputDebugString" /> and <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />.</span></span></param>
        <summary><span data-ttu-id="1f277-155">Zapisuje dane wyjściowe do <see langword="OutputDebugString" /> funkcji i <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> do metody, a następnie znak powrotu karetki i wysuwu wiersza (\r\n).</span><span class="sxs-lookup"><span data-stu-id="1f277-155">Writes the output to the <see langword="OutputDebugString" /> function and to the <see cref="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" /> method, followed by a carriage return and line feed (\r\n).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f277-156">Domyślny terminator wiersza to znak powrotu karetki, po którym następuje znak wysuwu wiersza (\r\n).</span><span class="sxs-lookup"><span data-stu-id="1f277-156">The default line terminator is a carriage return followed by a line feed (\r\n).</span></span>  
  
 <span data-ttu-id="1f277-157">Aby uzyskać informacje na temat `OutputDebugString` funkcji debugowania Win32, zobacz zestaw SDK platformy lub MSDN.</span><span class="sxs-lookup"><span data-stu-id="1f277-157">For information about the Win32 `OutputDebugString` debugging function, see the Platform SDK or MSDN.</span></span>  
  
 <span data-ttu-id="1f277-158">Ta metoda ustawia <xref:System.Diagnostics.TraceListener.NeedIndent%2A> właściwość na `true`.</span><span class="sxs-lookup"><span data-stu-id="1f277-158">This method sets the <xref:System.Diagnostics.TraceListener.NeedIndent%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f277-159">Poniższy przykład kodu formatuje wyniki funkcji i używa <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> metody, aby zapisać ostatnią część komunikatu <xref:System.Diagnostics.DefaultTraceListener>do.</span><span class="sxs-lookup"><span data-stu-id="1f277-159">The following code example formats the results of a function and uses the <xref:System.Diagnostics.DefaultTraceListener.WriteLine%28System.String%29> method to write the last part of the message to a <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 [!code-csharp[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/CS/defaulttracelistener.cs#4)]
 [!code-vb[System.Diagnostics.DefaultTraceListener.WriteLine#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DefaultTraceListener.WriteLine/VB/defaulttracelistener.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
