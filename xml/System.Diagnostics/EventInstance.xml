<Type Name="EventInstance" FullName="System.Diagnostics.EventInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d5923ea6f0adb7e9a29cff95c32d8b297910978" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449334" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class EventInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventInstance" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje informacje niezależny od języka dla wpisu dziennika zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventInstance> Aby zapisać wpis dziennika zdarzeń z identyfikatorem zasobu, a nie wartość ciągu. Aby zapisać wpis dziennika zdarzeń, należy zainicjować <xref:System.Diagnostics.EventInstance.InstanceId%2A> właściwości, a następnie przekaż wystąpienie <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody. Podgląd zdarzeń używa identyfikatora wystąpienia można znaleźć i wyświetlić odpowiedni ciąg z pliku zasobów zlokalizowanych oparte na bieżących ustawieniach języka. Źródło zdarzenia należy zarejestrować się odpowiedni plik zasobów, przed przystąpieniem do napisania zdarzenia przy użyciu identyfikatorów zasobów.  
  
 Podczas zapisywania zdarzeń, można ustawić <xref:System.Diagnostics.EventInstance.EntryType%2A> właściwości w celu określenia ikonę, która podglądu zdarzeń wyświetlane wpisu. Można również określić <xref:System.Diagnostics.EventInstance.CategoryId%2A> właściwości w celu określenia kategorii, Podgląd zdarzeń wyświetlany wpisie.  
  
 Podgląd zdarzeń używa kategorię, aby filtrować zdarzenia zapisane przez źródło zdarzenia. Podgląd zdarzeń można wyświetlić kategorii jako wartość liczbowa lub można użyć kategorii jako identyfikator zasobu do wyświetlenia ciąg zlokalizowanej kategorii.  
  
 Aby wyświetlić kategorii zlokalizowanych ciągów w Podglądzie zdarzeń, należy użyć źródła zdarzenia konfigurowane przy użyciu pliku zasobu kategorii i ustaw <xref:System.Diagnostics.EventInstance.CategoryId%2A> do identyfikatora zasobu w pliku zasobów kategorii. Jeśli źródło zdarzeń nie ma pliku zasobu kategorii skonfigurowany lub określony <xref:System.Diagnostics.EventInstance.CategoryId%2A> indeksu ciągu w pliku zasobów kategorii, a następnie w Podglądzie zdarzeń jest wyświetlana jest wartość liczbowa kategorii dla tego wpisu. Konfigurowanie pliku zasobu kategorii, wraz z liczbą parametrów kategorii w pliku zasobów przy użyciu <xref:System.Diagnostics.EventLogInstaller> lub <xref:System.Diagnostics.EventSourceCreationData> klasy.  
  
 Zarejestruj źródło dziennika zdarzeń przed użyciem <xref:System.Diagnostics.EventInstance> można zapisać zdarzenia <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody. Źródło musi być skonfigurowany do pisania zlokalizowanych wpisy w dzienniku i źródła należy zdefiniować co najmniej w pliku zasobów komunikatów.  
  
 Utwórz nowe źródło zdarzeń podczas instalacji aplikacji. Dzięki temu czas dla systemu operacyjnego odświeżyć jej lista źródeł zdarzeń zarejestrowanych i ich konfiguracji. Jeśli system operacyjny nie odświeżył jego lista źródeł zdarzeń, a następnie spróbuj zapisać zdarzenie z nowego źródła operacja zapisu zakończy się niepowodzeniem. Można skonfigurować, używając nowego źródła <xref:System.Diagnostics.EventLogInstaller>, lub za pomocą <xref:System.Diagnostics.EventLog.CreateEventSource%2A> metody. Musi mieć uprawnienia administracyjne na komputerze, aby utworzyć nowe źródło zdarzeń.  
  
 Szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dziennika zdarzeń, można znaleźć w temacie "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com).  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zdarzenia informacyjną wpis, a następnie ponownie używa <xref:System.Diagnostics.EventInstance> zapisu zdarzenie ostrzeżenia do istniejącego dziennika zdarzeń. Tekst komunikatu o zdarzeniu został określony w pliku zasobów komunikatów przy użyciu identyfikatora zasobu. Przykład kodu zakłada, czy odpowiedni plik zasobów komunikat został zarejestrowany dla tego źródła.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
    <altmember cref="T:System.Diagnostics.EventLogEntry" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventInstance" /> przy użyciu informacji niezależny od języka Aby zdefiniować wpis dziennika zdarzeń.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identyfikator zasobu, który odpowiada identyfikatorowi zdefiniowany w pliku zasobów komunikatów źródła zdarzenia.</param>
        <param name="categoryId">Identyfikator zasobu, który odpowiada ciągowi zdefiniowane w pliku zasobów kategorii źródło zdarzenia lub zero, aby określić nie kategorię zdarzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventInstance" /> zlokalizowanych tekst wiadomości i kategorii wpisu zdarzeń przy użyciu identyfikatorów określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapisu informacyjny w dzienniku, należy zainicjować <xref:System.Diagnostics.EventInstance> i przekaż go do <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody. Ustaw `instanceId` identyfikator zasobu komunikaty o zdarzeniach w odpowiednich <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> właściwości dla tego źródła. Ustaw `categoryId` do wartości numerycznych kategorii lub identyfikator zasobu dla kategorii zdarzeń w <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> właściwości źródła; ustaw `categoryId` równą zero dla żadnej kategorii zdarzenia. <xref:System.Diagnostics.EventInstance.EntryType%2A> Ma ustawioną wartość właściwości dla nowego wystąpienia <xref:System.Diagnostics.EventLogEntryType.Information> domyślnie.  
  
 Podgląd zdarzeń używa identyfikatory zasobów, aby wyświetlić odpowiednie ciągi z plików zlokalizowanych zasobów dla tego źródła. Źródło należy zarejestrować się odpowiednie pliki zasobów, aby można było tworzyć zdarzenia przy użyciu identyfikatorów zasobów.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zdarzenia informacyjną wpis, a następnie ponownie używa <xref:System.Diagnostics.EventInstance> zapisu zdarzenie ostrzeżenia do istniejącego dziennika zdarzeń. Tekst komunikatu o zdarzeniu został określony w pliku zasobów komunikatów przy użyciu identyfikatora zasobu. Przykład kodu zakłada, czy odpowiedni plik zasobów komunikat został zarejestrowany dla tego źródła.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="instanceId" /> Parametr ma wartość ujemną lub wartość większą niż <see cref="F:System.UInt32.MaxValue" />.  
  
 —lub—  
  
 <paramref name="categoryId" /> Parametr ma wartość ujemną lub wartość większą niż <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventInstance (long instanceId, int categoryId, System.Diagnostics.EventLogEntryType entryType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 instanceId, int32 categoryId, valuetype System.Diagnostics.EventLogEntryType entryType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventInstance.#ctor(System.Int64,System.Int32,System.Diagnostics.EventLogEntryType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (instanceId As Long, categoryId As Integer, entryType As EventLogEntryType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventInstance(long instanceId, int categoryId, System::Diagnostics::EventLogEntryType entryType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Int64" />
        <Parameter Name="categoryId" Type="System.Int32" />
        <Parameter Name="entryType" Type="System.Diagnostics.EventLogEntryType" />
      </Parameters>
      <Docs>
        <param name="instanceId">Identyfikator zasobu, który odpowiada identyfikatorowi zdefiniowany w pliku zasobów komunikatów źródła zdarzenia.</param>
        <param name="categoryId">Identyfikator zasobu, który odpowiada ciągowi zdefiniowane w pliku zasobów kategorii źródło zdarzenia lub zero, aby określić nie kategorię zdarzenia.</param>
        <param name="entryType">
          <see cref="T:System.Diagnostics.EventLogEntryType" /> Wartość, która wskazuje typ zdarzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventInstance" /> dla zlokalizowany tekst wiadomości i kategorii wpisu zdarzeń i typ wpisu określony dziennik zdarzeń przy użyciu identyfikatorów określonego zasobu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zapisu do dziennika zdarzeń, należy zainicjować <xref:System.Diagnostics.EventInstance> i przekaż go do <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody. Ustaw `instanceId` identyfikator zasobu komunikaty o zdarzeniach w odpowiednich <xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A> właściwości dla tego źródła. Ustaw `categoryId` do wartości numerycznych kategorii lub identyfikator zasobu dla kategorii zdarzeń w <xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A> właściwości źródła; ustaw `categoryId` równą zero dla żadnej kategorii zdarzenia.  
  
 Podgląd zdarzeń używa identyfikatory zasobów, aby wyświetlić odpowiednie ciągi z plików zlokalizowanych zasobów dla tego źródła. Źródło należy zarejestrować się odpowiednie pliki zasobów, aby można było tworzyć zdarzenia przy użyciu identyfikatorów zasobów.  
  
 Ustaw `entryType` do jednego z typów wpis wstępnie zdefiniowane. Podgląd zdarzeń używa typu zdarzenia do określania, jaka ikona do wyświetlenia w widoku listy w dzienniku zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje dwóch wpisów zdarzenia w dzienniku zdarzeń inspekcji `myNewLog`. Przykład kodu tworzy nowe źródło zdarzeń i utworzenie nowego dziennika zdarzeń, jeśli nie istnieją na komputerze lokalnym. Tekst komunikatu o zdarzeniu został określony przy użyciu identyfikatora zasobów w pliku zasobów.  
  
 [!code-cpp[EventLog_WriteEvent#7](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#7)]
 [!code-csharp[EventLog_WriteEvent#7](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#7)]
 [!code-vb[EventLog_WriteEvent#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#7)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="entryType" /> nie jest prawidłową <see cref="T:System.Diagnostics.EventLogEntryType" /> wartość.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="instanceId" /> jest większa niż wartość ujemną lub wartość <see cref="F:System.UInt32.MaxValue" />.  
  
 —lub—  
  
 <paramref name="categoryId" /> jest większa niż wartość ujemną lub wartość <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="P:System.Diagnostics.EventInstance.CategoryId" />
        <altmember cref="P:System.Diagnostics.EventInstance.InstanceId" />
        <altmember cref="T:System.Diagnostics.EventLogEntry" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="T:System.Diagnostics.EventSourceCreationData" />
      </Docs>
    </Member>
    <Member MemberName="CategoryId">
      <MemberSignature Language="C#" Value="public int CategoryId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.CategoryId" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryId { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator zasobu, który określa kategorię wpis zdarzenia zdefiniowane przez aplikację.</summary>
        <value>Kategoria liczbowych wartość lub identyfikator zasobu umożliwiająca zdefiniowany w pliku zasobów kategorii źródła zdarzeń. Wartością domyślną jest zero, co oznacza, że kategorii nie będą wyświetlane dla wpisu zdarzeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dziennik zdarzeń kategorie są zdefiniowane przez aplikację wartości, które pomoc filtrować zdarzenia lub dostarczyć więcej informacji o zdarzeniu. Na przykład aplikacji można określić osobne kategorie dla różnych składników lub innej operacji.  
  
 Ustaw <xref:System.Diagnostics.EventInstance.CategoryId%2A> właściwości w celu określenia kategorii, Podgląd zdarzeń wyświetlany wpisie. Podgląd zdarzeń można wyświetlić kategorii jako wartość liczbowa lub może używać <xref:System.Diagnostics.EventInstance.CategoryId%2A> jako zasób identyfikator, aby wyświetlić ciąg zlokalizowanej kategorii oparte na bieżących ustawieniach języka.  
  
 Aby wyświetlić kategorii zlokalizowanych ciągów w Podglądzie zdarzeń, należy użyć źródła zdarzenia konfigurowane przy użyciu pliku zasobu kategorii i ustaw <xref:System.Diagnostics.EventInstance.CategoryId%2A> do identyfikatora zasobu w pliku zasobów kategorii. Jeśli źródło zdarzeń nie ma pliku zasobu kategorii skonfigurowany lub określony <xref:System.Diagnostics.EventInstance.CategoryId%2A> indeksu ciągu w pliku zasobów kategorii, a następnie w Podglądzie zdarzeń jest wyświetlana jest wartość liczbowa kategorii dla tego wpisu.  
  
 Przed przystąpieniem do napisania kategorii zdarzeń przy użyciu identyfikatorów zasobów, należy zarejestrować źródło się odpowiedni plik zasobów. Konfigurowanie pliku zasobu kategorii, wraz z liczbą parametrów kategorii w pliku zasobów przy użyciu <xref:System.Diagnostics.EventLogInstaller> lub <xref:System.Diagnostics.EventSourceCreationData> klasy. Podczas definiowania kategorii ciągów w pliku zasobów, identyfikatory zasobów kategorii muszą numerowane kolejno począwszy od 1 do skonfigurowanego <xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A> wartości właściwości.  
  
 Kategorie zdarzeń są opcjonalne. Jeśli aplikacja nie korzysta z kategorii, nie należy ustawiać <xref:System.Diagnostics.EventInstance.CategoryId%2A> wpisu dziennika zdarzeń.  
  
 Aby szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Szczegółowe informacje o Definiowanie kategorii zdarzeń w pliki zasobów zobacz temat "Kategorii zdarzeń" w zestawie SDK platformy  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zdarzenia informacyjną wpis, a następnie ponownie używa <xref:System.Diagnostics.EventInstance> zapisu zdarzenie ostrzeżenia do istniejącego dziennika zdarzeń. Tekst komunikatu o zdarzeniu został określony w pliku zasobów komunikatów przy użyciu identyfikatora zasobu. Przykład kodu zakłada, czy odpowiedni plik zasobów komunikat został zarejestrowany dla tego źródła.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona wartość ujemną lub wartość większą niż <see cref="F:System.UInt16.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.CategoryNumber" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="EntryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLogEntryType EntryType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.EventLogEntryType EntryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.EntryType" />
      <MemberSignature Language="VB.NET" Value="Public Property EntryType As EventLogEntryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLogEntryType EntryType { System::Diagnostics::EventLogEntryType get(); void set(System::Diagnostics::EventLogEntryType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLogEntryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zdarzenia wpisu dziennika zdarzeń.</summary>
        <value>
          <see cref="T:System.Diagnostics.EventLogEntryType" /> Wartość, która wskazuje typ wpisu zdarzeń. Wartość domyślna to <see cref="F:System.Diagnostics.EventLogEntryType.Information" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każde wydarzenie jest jednego typu, który aplikacja wskazuje, kiedy zgłasza zdarzenie. Podgląd zdarzeń używa typu zdarzenia do określania, jaka ikona do wyświetlenia w widoku listy w dzienniku zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zdarzenia informacyjną wpis, a następnie ponownie używa <xref:System.Diagnostics.EventInstance> zapisu zdarzenie ostrzeżenia do istniejącego dziennika zdarzeń. Tekst komunikatu o zdarzeniu został określony w pliku zasobów komunikatów przy użyciu identyfikatora zasobu. Przykład kodu zakłada, czy odpowiedni plik zasobów komunikat został zarejestrowany dla tego źródła.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Właściwość nie jest ustawiona na prawidłowy <see cref="T:System.Diagnostics.EventLogEntryType" /> wartość.</exception>
        <altmember cref="T:System.Diagnostics.EventLogEntryType" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.EntryType" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public long InstanceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventInstance.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long InstanceId { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia identyfikator zasobu, który określa tekst komunikatu wpisu zdarzeń.</summary>
        <value>Identyfikator zasobu, który odpowiada identyfikatorowi zdefiniowany w pliku zasobów komunikatów źródła zdarzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventInstance.InstanceId%2A> Właściwość unikatowo identyfikuje wpis dotyczący zdarzenia dla źródła skonfigurowanego zdarzenia. Dla zdarzeń zdefiniowanych w wiadomości pliki zasobów <xref:System.Diagnostics.EventInstance.InstanceId%2A> odnosi się do identyfikatora zasobu skompilowana z pól definicji wiadomości w pliku tekstowym wiadomości. Aplikacja może zapisać wpisy w dzienniku zdarzeń zlokalizowanych przez ustawienie <xref:System.Diagnostics.EventInstance.InstanceId%2A> do identyfikatora zasobu. Podgląd zdarzeń używa <xref:System.Diagnostics.EventInstance.InstanceId%2A> identyfikator zasobu, aby znaleźć i wyświetlić odpowiedni ciąg z pliku zasobów zlokalizowanych oparte na bieżących ustawieniach języka. Przed przystąpieniem do napisania zdarzenia przy użyciu identyfikatorów zasobów, należy zarejestrować źródło się odpowiedni plik zasobów.  
  
 Szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dziennika zdarzeń, można znaleźć w temacie "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/). Aby uzyskać więcej informacji o identyfikatorach dziennika zdarzeń Zobacz temat "Identyfikatory zdarzeń" w zestawie SDK platformy.  
  
   
  
## Examples  
 Poniższy przykład kodu zapisuje zdarzenia informacyjną wpis, a następnie ponownie używa <xref:System.Diagnostics.EventInstance> zapisu zdarzenie ostrzeżenia do istniejącego dziennika zdarzeń. Tekst komunikatu o zdarzeniu został określony w pliku zasobów komunikatów przy użyciu identyfikatora zasobu. Przykład kodu zakłada, czy odpowiedni plik zasobów komunikat został zarejestrowany dla tego źródła.  
  
 [!code-cpp[EventLog_WriteEvent#9](~/samples/snippets/cpp/VS_Snippets_CLR/eventlog_WriteEvent/CPP/source.cpp#9)]
 [!code-csharp[EventLog_WriteEvent#9](~/samples/snippets/csharp/VS_Snippets_CLR/eventlog_WriteEvent/CS/source.cs#9)]
 [!code-vb[EventLog_WriteEvent#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlog_WriteEvent/VB/source.vb#9)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiona wartość ujemną lub wartość większą niż <see cref="F:System.UInt32.MaxValue" />.</exception>
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
        <altmember cref="P:System.Diagnostics.EventLogEntry.InstanceId" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
        <altmember cref="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      </Docs>
    </Member>
  </Members>
</Type>