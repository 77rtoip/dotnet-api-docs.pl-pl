<Type Name="Trace" FullName="System.Diagnostics.Trace">
  <TypeSignature Language="C#" Value="public sealed class Trace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Trace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Trace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Trace" />
  <TypeSignature Language="C++ CLI" Value="public ref class Trace sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="06abb-101">Udostępnia zestaw metod i właściwości, które ułatwiają śledzenia realizacji kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-101">Provides a set of methods and properties that help you trace the execution of your code.</span></span> <span data-ttu-id="06abb-102">Klasa ta nie może być dziedziczona.</span><span class="sxs-lookup"><span data-stu-id="06abb-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-103">Można użyć właściwości i metody w <xref:System.Diagnostics.Trace> kompilacje klasy do wersji dokumentu.</span><span class="sxs-lookup"><span data-stu-id="06abb-103">You can use the properties and methods in the <xref:System.Diagnostics.Trace> class to instrument release builds.</span></span> <span data-ttu-id="06abb-104">Instrumentacja służy do monitorowania kondycji aplikacji uruchomionej w ustawieniach rzeczywistych.</span><span class="sxs-lookup"><span data-stu-id="06abb-104">Instrumentation allows you to monitor the health of your application running in real-life settings.</span></span> <span data-ttu-id="06abb-105">Śledzenie pomaga wyizolować problemy i popraw je bez zakłócania uruchomionym systemie.</span><span class="sxs-lookup"><span data-stu-id="06abb-105">Tracing helps you isolate problems and fix them without disturbing a running system.</span></span>  
  
 <span data-ttu-id="06abb-106">Ta klasa dostarcza metody do wyświetlenia <xref:System.Diagnostics.Trace.Assert%2A> okno dialogowe i do wysyłania potwierdzenia, że zawsze <xref:System.Diagnostics.Trace.Fail%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-106">This class provides methods to display an <xref:System.Diagnostics.Trace.Assert%2A> dialog box, and to emit an assertion that will always <xref:System.Diagnostics.Trace.Fail%2A>.</span></span> <span data-ttu-id="06abb-107">Ta klasa dostarcza metody zapisu w następujących zmian: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, i <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-107">This class provides write methods in the following variations: <xref:System.Diagnostics.Trace.Write%2A>, <xref:System.Diagnostics.Trace.WriteLine%2A>, <xref:System.Diagnostics.Trace.WriteIf%2A>, and <xref:System.Diagnostics.Trace.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="06abb-108"><xref:System.Diagnostics.BooleanSwitch> i <xref:System.Diagnostics.TraceSwitch> klasy zapewniają sposób dynamicznie kontroli danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-108">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="06abb-109">Można zmodyfikować wartości tych przełączników, bez konieczności ponownego kompilowania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-109">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="06abb-110">Uzyskać informacji dotyczących używania pliku konfiguracji do ustawiona przełącznik, zobacz <xref:System.Diagnostics.Switch> klasy i [porady: tworzenie, inicjowanie i konfigurowanie przełączników śledzenia](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="06abb-110">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [How to: Create, Initialize and Configure Trace Switches](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="06abb-111">Dane wyjściowe śledzenia docelowych można dostosować, dodając <xref:System.Diagnostics.TraceListener> wystąpień do lub usuwanie wystąpienia z <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-111">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="06abb-112"><xref:System.Diagnostics.Trace.Listeners%2A> Kolekcji jest udostępniany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornik śledzenia do każdej klasy dodaje odbiornika do obu.</span><span class="sxs-lookup"><span data-stu-id="06abb-112">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="06abb-113">Domyślnie dane wyjściowe śledzenia jest emitowany przy użyciu <xref:System.Diagnostics.DefaultTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-113">By default, trace output is emitted using the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-114">Dodawanie odbiornik śledzenia do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji może spowodować wyjątek zostanie wygenerowany podczas śledzenia, jeśli zasób stosowany przez odbiornik śledzenia nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="06abb-114">Adding a trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="06abb-115">Warunki i zgłoszono wyjątek zależą od obiektu nasłuchującego śledzenia i nie można wyliczyć w tym temacie.</span><span class="sxs-lookup"><span data-stu-id="06abb-115">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="06abb-116">Może być przydatne do wywołania <xref:System.Diagnostics.Trace> metod w `try` / `catch` bloków do wykrywania i obsługi wyjątków z obiektów nasłuchujących śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-116">It may be useful to place calls to the <xref:System.Diagnostics.Trace> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-117">Po dodaniu obiektów nasłuchujących śledzenia do częściowo zaufany kod otrzymasz <xref:System.Security.SecurityException> wyjątku, ponieważ dodanie obiekty nasłuchujące śledzenia wymaga <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> uprawnienia.</span><span class="sxs-lookup"><span data-stu-id="06abb-117">If you add trace listeners to partially trusted code, you will get a <xref:System.Security.SecurityException> exception, because adding trace listeners requires <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> permission.</span></span> <span data-ttu-id="06abb-118">Aby śledzić częściowo zaufany kod, który jest uruchomiony w piaskownicy w programie Visual Studio, nie należy dodawać obiekty nasłuchujące śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-118">To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</span></span> <span data-ttu-id="06abb-119">Zamiast tego należy wyświetlić <xref:System.Diagnostics.Trace> i <xref:System.Diagnostics.Debug> w wiadomości **dane wyjściowe** okna.</span><span class="sxs-lookup"><span data-stu-id="06abb-119">Instead, view the <xref:System.Diagnostics.Trace> and <xref:System.Diagnostics.Debug> messages in the **Output** window.</span></span>  
  
 <span data-ttu-id="06abb-120"><xref:System.Diagnostics.Trace> Klasa dostarcza właściwości, które można pobrać lub ustawić poziom <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>oraz czy <xref:System.Diagnostics.Trace.AutoFlush%2A> po wykonaniu każdego zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-120">The <xref:System.Diagnostics.Trace> class provides properties to get or set the level of <xref:System.Diagnostics.Trace.Indent%2A>, the <xref:System.Diagnostics.Trace.IndentSize%2A>, and whether to <xref:System.Diagnostics.Trace.AutoFlush%2A> after each write.</span></span>  
  
 <span data-ttu-id="06abb-121">Aby ustawić <xref:System.Diagnostics.Trace.AutoFlush%2A> i <xref:System.Diagnostics.Trace.IndentSize%2A> dla <xref:System.Diagnostics.Trace>, można edytować plik konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-121">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-122">Plik konfiguracji powinien być sformatowany jak w następującym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="06abb-122">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="06abb-123"><xref:System.Diagnostics.ConditionalAttribute> Atrybut jest stosowany do metod <xref:System.Diagnostics.Trace>.</span><span class="sxs-lookup"><span data-stu-id="06abb-123">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Trace>.</span></span> <span data-ttu-id="06abb-124">Kompilatory, które obsługują <xref:System.Diagnostics.ConditionalAttribute> Ignoruj wywołania tych metod, chyba że "TRACE" jest zdefiniowany jako symbole kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="06abb-124">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="06abb-125">Zapoznaj się z dokumentacją kompilatora, aby określić, czy <xref:System.Diagnostics.ConditionalAttribute> jest obsługiwana i składnia do definiowania symbol kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="06abb-125">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-126">W projektach Visual Studio, domyślnie symbol kompilacji warunkowej na "Debugowanie" jest zdefiniowany w przypadku kompilacji debugowania i symbol "TRACE" jest zdefiniowany zarówno debug i release kompiluje.</span><span class="sxs-lookup"><span data-stu-id="06abb-126">In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="06abb-127">Aby dowiedzieć się, jak wyłączyć to zachowanie, zobacz dokumentację programu Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="06abb-127">For information about how to disable this behavior, see the Visual Studio documentation.</span></span>  
  
 <span data-ttu-id="06abb-128">Aby w języku C#, zdefiniuj symbol kompilacji warunkowej "TRACE", Dodaj `/d:TRACE` opcje wiersza polecenia kompilatora podczas kompilowania kodu przy użyciu wiersza polecenia lub Dodaj `#define TRACE` na początku pliku.</span><span class="sxs-lookup"><span data-stu-id="06abb-128">To define the "TRACE" conditional compilation symbol in C#, add the `/d:TRACE` option to the compiler command line when you compile your code using a command line, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="06abb-129">W języku Visual Basic, Dodaj `/d:TRACE=True` — opcja kompilatora w wierszu polecenia lub Dodaj `#Const TRACE=True` do pliku.</span><span class="sxs-lookup"><span data-stu-id="06abb-129">In Visual Basic, add the `/d:TRACE=True` option to the compiler command line or add `#Const TRACE=True` to the file.</span></span>  
  
 <span data-ttu-id="06abb-130"><xref:System.Diagnostics.ConditionalAttribute> nie jest obsługiwana przez kompilator języka C++.</span><span class="sxs-lookup"><span data-stu-id="06abb-130"><xref:System.Diagnostics.ConditionalAttribute> is not supported by the C++ compiler.</span></span> <span data-ttu-id="06abb-131">Aby zapewnić podobne funkcje, należy ująć wywołania metody <xref:System.Diagnostics.Trace> w `#if defined(TRACE) ... #endif` zablokować, a także dodać `/DTRACE` — opcja kompilatora w wierszu polecenia lub Dodaj `#define TRACE` do pliku.</span><span class="sxs-lookup"><span data-stu-id="06abb-131">To provide equivalent functionality, you must enclose calls to the methods of <xref:System.Diagnostics.Trace> in an `#if defined(TRACE) ... #endif` block, and add the `/DTRACE` option to the compiler command line or add `#define TRACE` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-132">W poniższym przykładzie użyto <xref:System.Diagnostics.Trace> aby wskazać początku i końcu wykonywania programu.</span><span class="sxs-lookup"><span data-stu-id="06abb-132">The following example uses <xref:System.Diagnostics.Trace> to indicate the beginning and the end of a program's execution.</span></span> <span data-ttu-id="06abb-133">Funkcja <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> i <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> metody, aby odróżnić dane wyjściowe śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-133">The example also uses the <xref:System.Diagnostics.Trace.Indent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace.Unindent%2A?displayProperty=nameWithType> methods to distinguish the tracing output.</span></span> <span data-ttu-id="06abb-134">Bardziej szczegółowy przykład stosowania <xref:System.Diagnostics.Trace>, zobacz [porady: Dodawanie instrukcji śledzenia do kodu aplikacji](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span><span class="sxs-lookup"><span data-stu-id="06abb-134">For a more complete example of the use of <xref:System.Diagnostics.Trace>, see [How to: Add Trace Statements to Application Code](~/docs/framework/debug-trace-profile/how-to-add-trace-statements-to-application-code.md).</span></span>  
  
 [!code-cpp[Classic Trace Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace Example/CS/source.cs#1)]
 [!code-vb[Classic Trace Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-135">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-135">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-136">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-136">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="06abb-137">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-137">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <threadsafe><span data-ttu-id="06abb-138">Ten typ jest bezpieczny wątkowo.</span><span class="sxs-lookup"><span data-stu-id="06abb-138">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-139">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wysyła komunikaty i wyświetla komunikat, który pokazuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="06abb-139">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="06abb-140">Wyrażenie warunkowe do oceny.</span><span class="sxs-lookup"><span data-stu-id="06abb-140">The conditional expression to evaluate.</span></span> <span data-ttu-id="06abb-141">Jeśli warunek nie jest <see langword="true" />, komunikat o błędzie nie są wysyłane i nie zostanie wyświetlone okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-141">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span></span></param>
        <summary><span data-ttu-id="06abb-142">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wyświetla komunikat, który pokazuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="06abb-142">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-143">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-143">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="06abb-144"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-144">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="06abb-145">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="06abb-145">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="06abb-146">Zazwyczaj <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="06abb-146">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="06abb-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="06abb-147"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%29> evaluates the condition.</span></span> <span data-ttu-id="06abb-148">Jeśli wynik wynosi `false`, wysyła komunikat o błędzie do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-148">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="06abb-149">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-149">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="06abb-150">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="06abb-150">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="06abb-151">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="06abb-151">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="06abb-152">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-152">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="06abb-153">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="06abb-153">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="06abb-154">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-154">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-155">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-155">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-156">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="06abb-156">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06abb-157"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06abb-157">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06abb-158">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-158">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-159">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-159">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-160">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="06abb-160">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="06abb-161">Poniższy przykład tworzy indeks tablicy.</span><span class="sxs-lookup"><span data-stu-id="06abb-161">The following example creates an index for an array.</span></span> <span data-ttu-id="06abb-162">Następnie niektóre akcje, jest wykonywane, która ustawia wartości indeksu.</span><span class="sxs-lookup"><span data-stu-id="06abb-162">Then some action is performed that sets the value of the index.</span></span> <span data-ttu-id="06abb-163">Następnie kod wywołuje <xref:System.Diagnostics.Trace.Assert%2A> Aby sprawdzić indeks wartość jest prawidłowa.</span><span class="sxs-lookup"><span data-stu-id="06abb-163">Next the code calls <xref:System.Diagnostics.Trace.Assert%2A> to verify the index value is valid.</span></span> <span data-ttu-id="06abb-164">Jeśli nie jest prawidłowy, <xref:System.Diagnostics.Trace.Assert%2A> generuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="06abb-164">If it is not valid, the <xref:System.Diagnostics.Trace.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Trace.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="06abb-165">Wyrażenie warunkowe do oceny.</span><span class="sxs-lookup"><span data-stu-id="06abb-165">The conditional expression to evaluate.</span></span> <span data-ttu-id="06abb-166">Jeśli warunek nie jest <see langword="true" />, określony komunikat nie są wysyłane i nie zostanie wyświetlone okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-166">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-167">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-167">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="06abb-168">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje określony komunikat i wyświetla komunikat, który pokazuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="06abb-168">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-169">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-169">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="06abb-170"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-170">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="06abb-171">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="06abb-171">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="06abb-172">Zazwyczaj <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="06abb-172">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="06abb-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="06abb-173"><xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29> evaluates the condition.</span></span> <span data-ttu-id="06abb-174">Jeśli wynik wynosi `false`, wysyła określoną wiadomość diagnostycznych do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-174">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="06abb-175">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-175">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="06abb-176">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="06abb-176">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="06abb-177">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="06abb-177">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="06abb-178">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-178">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="06abb-179">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="06abb-179">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="06abb-180">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-180">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-181">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-181">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-182">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="06abb-182">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06abb-183"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06abb-183">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06abb-184">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-184">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-185">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-185">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-186">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="06abb-186">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="06abb-187">Poniższy przykład sprawdza, czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="06abb-187">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="06abb-188">Jeśli `type` przekazano jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje komunikat.</span><span class="sxs-lookup"><span data-stu-id="06abb-188">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="06abb-189">Wyrażenie warunkowe do oceny.</span><span class="sxs-lookup"><span data-stu-id="06abb-189">The conditional expression to evaluate.</span></span> <span data-ttu-id="06abb-190">Jeśli warunek nie jest <see langword="true" />, nie są wysyłane wiadomości określona i nie zostanie wyświetlone okno komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-190">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-191">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-191">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="06abb-192">Szczegółowy komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-192">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></param>
        <summary><span data-ttu-id="06abb-193">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje dwa komunikaty określonego i wyświetla komunikat, który pokazuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="06abb-193">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-194">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-194">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="06abb-195"><xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> Metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-195">The <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="06abb-196">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="06abb-196">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="06abb-197">Zazwyczaj <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="06abb-197">Typically, the <xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="06abb-198"><xref:System.Diagnostics.Trace.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="06abb-198"><xref:System.Diagnostics.Trace.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="06abb-199">Jeśli wynik wynosi `false`, wysyła określoną wiadomość diagnostycznych i komunikat szczegółowy <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-199">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="06abb-200">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-200">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="06abb-201">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="06abb-201">When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="06abb-202">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="06abb-202">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="06abb-203">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-203">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="06abb-204">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="06abb-204">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="06abb-205">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-205">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-206">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-206">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-207">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="06abb-207">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06abb-208"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06abb-208">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06abb-209">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-209">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-210">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-210">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-211">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="06abb-211">The configuration file should be formatted as follows:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="4"/>  
    </switches>  
    <trace autoflush="false" indentsize="4"/>  
    <assert assertuienabled="true" logfilename=".\TraceLog.txt"/>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="06abb-212">Poniższy przykład sprawdza, czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="06abb-212">The following example checks to see that the `type` parameter is valid.</span></span> <span data-ttu-id="06abb-213">Jeśli `type` przekazano jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje komunikat.</span><span class="sxs-lookup"><span data-stu-id="06abb-213">If the `type` passed in is `null`, the <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Trace.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-214">Pobiera lub ustawia czy <see cref="M:System.Diagnostics.Trace.Flush" /> powinna być wywoływana na <see cref="P:System.Diagnostics.Trace.Listeners" /> po każdego zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-214">Gets or sets whether <see cref="M:System.Diagnostics.Trace.Flush" /> should be called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write.</span></span></summary>
        <value>
          <span data-ttu-id="06abb-215"><see langword="true" /> Jeśli <see cref="M:System.Diagnostics.Trace.Flush" /> jest wywoływana na <see cref="P:System.Diagnostics.Trace.Listeners" /> po każdym zapisu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-215"><see langword="true" /> if <see cref="M:System.Diagnostics.Trace.Flush" /> is called on the <see cref="P:System.Diagnostics.Trace.Listeners" /> after every write; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-216">Wartość domyślna to `false`.</span><span class="sxs-lookup"><span data-stu-id="06abb-216">The default is `false`.</span></span>  
  
 <span data-ttu-id="06abb-217">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Trace.Flush%2A> lub <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-217">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="06abb-218">Ustawienie <xref:System.Diagnostics.Trace.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="06abb-218">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="06abb-219">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-219">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="06abb-220">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-220">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="06abb-221">Aby ustawić <xref:System.Diagnostics.Trace.AutoFlush%2A> i <xref:System.Diagnostics.Trace.IndentSize%2A> dla <xref:System.Diagnostics.Trace>, można również edytować plik konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-221">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-222">Plik konfiguracji powinien być sformatowany jak w następującym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="06abb-222">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-223">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-223">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-224">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="06abb-225">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06abb-226">Opróżnia bufor wyjściowy, a następnie zamyka <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-226">Flushes the output buffer, and then closes the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-227">Użyj tej metody, gdy dane wyjściowe ma w pliku, takich jak <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-227">Use this method when the output is going to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-228">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Trace.Flush%2A> lub <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-228">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="06abb-229">Ustawienie <xref:System.Diagnostics.Trace.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="06abb-229">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="06abb-230">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-230">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="06abb-231">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-231">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-232">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="06abb-232">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="06abb-233">`myTextListener` używa <xref:System.IO.StreamWriter> o nazwie `myOutputWriter` można zapisać do pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="06abb-233">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="06abb-234">Przykład tworzy składnik zapisywania plików, strumienia i tekst, zapisuje jednego wiersza tekstu do pliku i następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-234">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-235">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-235">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-236">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-236">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="06abb-237">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="CorrelationManager">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.CorrelationManager CorrelationManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.CorrelationManager CorrelationManager" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.CorrelationManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrelationManager As CorrelationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::CorrelationManager ^ CorrelationManager { System::Diagnostics::CorrelationManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CorrelationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-238">Pobiera Menedżera korelacji dla wątku dla tego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-238">Gets the correlation manager for the thread for this trace.</span></span></summary>
        <value><span data-ttu-id="06abb-239"><see cref="T:System.Diagnostics.CorrelationManager" /> Obiekt skojarzony z wątku dla tego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-239">The <see cref="T:System.Diagnostics.CorrelationManager" /> object associated with the thread for this trace.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="06abb-240">Jest to właściwość zaawansowaną większość aplikacji nie ma okazji do użycia.</span><span class="sxs-lookup"><span data-stu-id="06abb-240">This is an advanced property that most applications should not have occasion to use.</span></span>  
  
 <span data-ttu-id="06abb-241"><xref:System.Diagnostics.CorrelationManager> Klasa udostępnia metody używane do przechowywania tożsamości operacji logicznej w kontekście wątku wiązaniem i automatycznie dodają tagi każdego zdarzenia śledzenia generowane przez wątek o przechowywane tożsamości.</span><span class="sxs-lookup"><span data-stu-id="06abb-241">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-242">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-242">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-243">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-243">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="06abb-244">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-244">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.CorrelationManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-245">Emituje komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-245">Emits an error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-246">Komunikat emisji.</span><span class="sxs-lookup"><span data-stu-id="06abb-246">A message to emit.</span></span></param>
        <summary><span data-ttu-id="06abb-247">Emituje określony komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-247">Emits the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-248">Domyślne zachowanie dla obiektu nasłuchującego śledzenia domyślne to dane wyjściowe `message` parametr okno komunikatu po uruchomieniu aplikacji w trybie interfejsu użytkownika, a w <xref:System.Diagnostics.TraceListener> wystąpień w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-248">The default behavior for the default trace listener is to output the `message` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-249">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-249">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-250">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="06abb-250">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06abb-251"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06abb-251">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06abb-252">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> do lub z, usuwając <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-252">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-253">W poniższym przykładzie użyto <xref:System.Diagnostics.Trace.Fail%2A> metody wydrukowanie wiadomości podczas obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="06abb-253">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="06abb-254">Można również użyć <xref:System.Diagnostics.Trace.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="06abb-254">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-255">Komunikat emisji.</span><span class="sxs-lookup"><span data-stu-id="06abb-255">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="06abb-256">Szczegółowy komunikat do wysyłania.</span><span class="sxs-lookup"><span data-stu-id="06abb-256">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="06abb-257">Emituje komunikat o błędzie i szczegółowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-257">Emits an error message, and a detailed error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-258">Domyślnym zachowaniem jest dla odbiornika śledzenia domyślnego do wyjściowego `message` parametru i `detailedMessage` parametr okno komunikatu po uruchomieniu aplikacji w trybie interfejsu użytkownika, a w <xref:System.Diagnostics.TraceListener> wystąpień w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji .</span><span class="sxs-lookup"><span data-stu-id="06abb-258">The default behavior is for the default trace listener to output the `message` parameter and the `detailedMessage` parameter to a message box when the application runs in user-interface mode, and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-259">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-259">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-260">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="06abb-260">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="06abb-261"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="06abb-261">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="06abb-262">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> do lub z, usuwając <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-262">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or by removing one from, the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-263">W poniższym przykładzie użyto <xref:System.Diagnostics.Trace.Fail%2A> metody wydrukowanie wiadomości podczas obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="06abb-263">The following example uses the <xref:System.Diagnostics.Trace.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="06abb-264">Można również użyć <xref:System.Diagnostics.Trace.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="06abb-264">You can also use the <xref:System.Diagnostics.Trace.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Trace.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Trace.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Trace.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06abb-265">Opróżnia bufor wyjściowy i powoduje, że buforowane dane są zapisywane w <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-265">Flushes the output buffer, and causes buffered data to be written to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-266">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Trace.Flush%2A> lub <xref:System.Diagnostics.Trace.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-266">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Trace.Flush%2A> or <xref:System.Diagnostics.Trace.Close%2A>.</span></span> <span data-ttu-id="06abb-267">Ustawienie <xref:System.Diagnostics.Trace.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="06abb-267">Setting <xref:System.Diagnostics.Trace.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="06abb-268">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-268">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="06abb-269">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="06abb-269">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-270">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="06abb-270">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="06abb-271">`myTextListener` używa <xref:System.IO.StreamWriter> o nazwie `myOutputWriter` można zapisać do pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="06abb-271">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="06abb-272">Przykład tworzy składnik zapisywania plików, strumienia i tekst, zapisuje jednego wiersza tekstu do pliku i następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-272">The example creates the file, stream and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Trace.Flush Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Flush Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Flush Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Flush Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Flush Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06abb-273">Zwiększa bieżącego <see cref="P:System.Diagnostics.Trace.IndentLevel" /> o jeden.</span><span class="sxs-lookup"><span data-stu-id="06abb-273">Increases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06abb-274">Następujący przykład zwiększa i zmniejsza poziomu wcięcia i emituje śledzenia wiadomości.</span><span class="sxs-lookup"><span data-stu-id="06abb-274">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="06abb-275">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="06abb-275">This example produces the following output:</span></span>  
  
```  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Unindent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-276">Pobiera lub ustawia poziom wcięcia.</span><span class="sxs-lookup"><span data-stu-id="06abb-276">Gets or sets the indent level.</span></span></summary>
        <value><span data-ttu-id="06abb-277">Poziom wcięcia.</span><span class="sxs-lookup"><span data-stu-id="06abb-277">The indent level.</span></span> <span data-ttu-id="06abb-278">Wartością domyślną jest zero.</span><span class="sxs-lookup"><span data-stu-id="06abb-278">The default is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-279"><xref:System.Diagnostics.Trace.IndentLevel%2A> Właściwość reprezentuje liczbę wcięcie rozmiar <xref:System.Diagnostics.Trace.IndentSize%2A> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="06abb-279">The <xref:System.Diagnostics.Trace.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Trace.IndentSize%2A> is applied.</span></span> <span data-ttu-id="06abb-280">Ta właściwość jest przechowywane na podstawie wątku/na — żądań.</span><span class="sxs-lookup"><span data-stu-id="06abb-280">This property is stored on per-thread/per-request basis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-281">Następujący przykład zwiększa i zmniejsza poziomu wcięcia i emituje śledzenia wiadomości.</span><span class="sxs-lookup"><span data-stu-id="06abb-281">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="06abb-282">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="06abb-282">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-283">Pobiera lub ustawia liczbę spacji w wcięcia.</span><span class="sxs-lookup"><span data-stu-id="06abb-283">Gets or sets the number of spaces in an indent.</span></span></summary>
        <value><span data-ttu-id="06abb-284">Liczba spacji w wcięcia.</span><span class="sxs-lookup"><span data-stu-id="06abb-284">The number of spaces in an indent.</span></span> <span data-ttu-id="06abb-285">Wartość domyślna to 4.</span><span class="sxs-lookup"><span data-stu-id="06abb-285">The default is four.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-286">A <xref:System.Diagnostics.TextWriterTraceListener> interpretuje tego numeru jako spacje.</span><span class="sxs-lookup"><span data-stu-id="06abb-286">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="06abb-287"><xref:System.Diagnostics.EventLogTraceListener> Ignoruje tę wartość.</span><span class="sxs-lookup"><span data-stu-id="06abb-287">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="06abb-288">Ta właściwość jest przechowywane na podstawie wątku/na — żądań.</span><span class="sxs-lookup"><span data-stu-id="06abb-288">This property is stored on per-thread/per-request basis.</span></span>  
  
 <span data-ttu-id="06abb-289">Aby ustawić <xref:System.Diagnostics.Trace.AutoFlush%2A> i <xref:System.Diagnostics.Trace.IndentSize%2A> dla <xref:System.Diagnostics.Trace>, można również edytować plik konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-289">To set the <xref:System.Diagnostics.Trace.AutoFlush%2A> and <xref:System.Diagnostics.Trace.IndentSize%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-290">Plik konfiguracji powinien być sformatowany jak w następującym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="06abb-290">The configuration file should be formatted like the following example:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-291">Pobiera kolekcję obiektów nasłuchujących monitorowaną danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-291">Gets the collection of listeners that is monitoring the trace output.</span></span></summary>
        <value><span data-ttu-id="06abb-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> reprezentujący kolekcję typu <see cref="T:System.Diagnostics.TraceListener" /> monitorowania danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-292">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> that represents a collection of type <see cref="T:System.Diagnostics.TraceListener" /> monitoring the trace output.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-293">Odbiorniki utworzyć sformatowane dane wyjściowe z danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-293">The listeners produce formatted output from the trace output.</span></span> <span data-ttu-id="06abb-294">Domyślnie kolekcja zawiera wystąpienie <xref:System.Diagnostics.DefaultTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-294">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="06abb-295">Jeśli chcesz usunąć odbiornik domyślne, należy wywołać <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> metody i przekaż go wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-295">If you want to remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="06abb-296">Przekierowywanie danych wyjściowych do okna konsoli, należy dodać wystąpienia <xref:System.Diagnostics.ConsoleTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-296">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-297"><xref:System.Diagnostics.Trace.Listeners%2A> Kolekcji jest udostępniany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornik śledzenia do każdej klasy dodaje odbiornika do obu.</span><span class="sxs-lookup"><span data-stu-id="06abb-297">The <xref:System.Diagnostics.Trace.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-298">Poniższy przykład tworzy <xref:System.Diagnostics.ConsoleTraceListener> wyjściowe ekranu konsoli.</span><span class="sxs-lookup"><span data-stu-id="06abb-298">The following example creates a <xref:System.Diagnostics.ConsoleTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="06abb-299">Kod następnie dodaje nowe odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-299">The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-300">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-300">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-301">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="06abb-302">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06abb-303">Odświeża dane konfiguracji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-303">Refreshes the trace configuration data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-304">Dane konfiguracji śledzenia są przechwytywane, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="06abb-304">Trace configuration data is captured when the application is started.</span></span> <span data-ttu-id="06abb-305">Jeśli dane konfiguracji zostaną zmienione po uruchomieniu aplikacji, wywołaj <xref:System.Diagnostics.Trace.Refresh%2A> metodę, aby zaktualizować dane konfiguracji śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-305">If the configuration data is changed after the application is started, call the <xref:System.Diagnostics.Trace.Refresh%2A> method to update the trace configuration data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceError">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-306">Zapisuje informacje o błędzie odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-306">Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-307">Komunikat informacyjny do zapisania.</span><span class="sxs-lookup"><span data-stu-id="06abb-307">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-308">Zapisuje komunikat o błędzie odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-308">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-309"><xref:System.Diagnostics.Trace.TraceError%2A> wywołania `TraceEvent` metodę dla każdego nasłuchującego śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Error>, przekazując komunikat informacyjny jako ciąg z komunikatem.</span><span class="sxs-lookup"><span data-stu-id="06abb-309"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceError">
      <MemberSignature Language="C#" Value="public static void TraceError (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceError(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceError (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceError(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="06abb-310">Ciąg formatu, który zawiera zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span><span class="sxs-lookup"><span data-stu-id="06abb-310">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="06abb-311"><see langword="object" /> Tablicę zawierającą zero lub więcej obiektów do formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-311">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="06abb-312">Zapisuje komunikat o błędzie odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonej tablicy obiektów i informacje dotyczące formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-312">Writes an error message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-313"><xref:System.Diagnostics.Trace.TraceError%2A> wywołania `TraceEvent` metod obiektów nasłuchujących śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Error>, przekazanie zawartość komunikatu jako tablica obiektów z formatowaniem informacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-313"><xref:System.Diagnostics.Trace.TraceError%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Error>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="06abb-314">Zobacz <xref:System.String.Format%2A> metody, aby uzyskać więcej informacji na temat `format` i `args` parametrów.</span><span class="sxs-lookup"><span data-stu-id="06abb-314">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-315">Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-315">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-316">Komunikat informacyjny do zapisania.</span><span class="sxs-lookup"><span data-stu-id="06abb-316">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-317">Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-317">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> wywołania `TraceEvent` metodę dla każdego nasłuchującego śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Information>, przekazując komunikat informacyjny jako ciąg z komunikatem.</span><span class="sxs-lookup"><span data-stu-id="06abb-318"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` method for each trace listener, with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public static void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="06abb-319">Ciąg formatu, który zawiera zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span><span class="sxs-lookup"><span data-stu-id="06abb-319">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="06abb-320"><see langword="object" /> Tablicę zawierającą zero lub więcej obiektów do formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-320">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="06abb-321">Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonej tablicy obiektów i informacje dotyczące formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-321">Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> wywołania `TraceEvent` metod obiektów nasłuchujących śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Information>, przekazanie zawartość komunikatu jako tablica obiektów z formatowaniem informacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-322"><xref:System.Diagnostics.Trace.TraceInformation%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Information>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="06abb-323">Zobacz <xref:System.String.Format%2A> metody, aby uzyskać więcej informacji na temat `format` i `args` parametrów.</span><span class="sxs-lookup"><span data-stu-id="06abb-323">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceWarning">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-324">Zapisuje informacje ostrzeżenie odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-324">Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-325">Komunikat informacyjny do zapisania.</span><span class="sxs-lookup"><span data-stu-id="06abb-325">The informative message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-326">Zapisuje komunikat ostrzegawczy odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-326">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> wywołania `TraceEvent` metody dla każdego odbiornika śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Warning>, przekazując komunikat informacyjny jako ciąg z komunikatem.</span><span class="sxs-lookup"><span data-stu-id="06abb-327"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` method for each trace listener with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the informative message as the message string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="TraceWarning">
      <MemberSignature Language="C#" Value="public static void TraceWarning (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void TraceWarning(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub TraceWarning (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void TraceWarning(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="06abb-328">Ciąg formatu, który zawiera zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span><span class="sxs-lookup"><span data-stu-id="06abb-328">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span></span></param>
        <param name="args"><span data-ttu-id="06abb-329"><see langword="object" /> Tablicę zawierającą zero lub więcej obiektów do formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-329">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="06abb-330">Zapisuje komunikat ostrzegawczy odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji przy użyciu określonej tablicy obiektów i informacje dotyczące formatowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-330">Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection using the specified array of objects and formatting information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> wywołania `TraceEvent` metod obiektów nasłuchujących śledzenia z typem zdarzenia śledzenia <xref:System.Diagnostics.TraceEventType.Warning>, przekazanie zawartość komunikatu jako tablica obiektów z formatowaniem informacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-331"><xref:System.Diagnostics.Trace.TraceWarning%2A> calls the `TraceEvent` methods in the trace listeners with the trace event type <xref:System.Diagnostics.TraceEventType.Warning>, passing the message content as an object array with formatting information.</span></span> <span data-ttu-id="06abb-332">Zobacz <xref:System.String.Format%2A> metody, aby uzyskać więcej informacji na temat `format` i `args` parametrów.</span><span class="sxs-lookup"><span data-stu-id="06abb-332">See the <xref:System.String.Format%2A> method for more information about the `format` and `args` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="06abb-333">Zmniejsza bieżącego <see cref="P:System.Diagnostics.Trace.IndentLevel" /> o jeden.</span><span class="sxs-lookup"><span data-stu-id="06abb-333">Decreases the current <see cref="P:System.Diagnostics.Trace.IndentLevel" /> by one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="06abb-334">Następujący przykład zwiększa i zmniejsza poziomu wcięcia i emituje śledzenia wiadomości.</span><span class="sxs-lookup"><span data-stu-id="06abb-334">The following example increments and decrements the indent level and emits tracing messages.</span></span>  
  
 [!code-cpp[Classic Trace.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="06abb-335">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="06abb-335">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Trace.Indent" />
        <altmember cref="P:System.Diagnostics.Trace.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Trace.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="UseGlobalLock">
      <MemberSignature Language="C#" Value="public static bool UseGlobalLock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseGlobalLock" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Trace.UseGlobalLock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseGlobalLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseGlobalLock { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="06abb-336">Pobiera lub ustawia wartość wskazującą, czy globalne blokady powinien być używany.</span><span class="sxs-lookup"><span data-stu-id="06abb-336">Gets or sets a value indicating whether the global lock should be used.</span></span></summary>
        <value>
          <span data-ttu-id="06abb-337"><see langword="true" /> Jeśli globalne blokady ma być używana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-337"><see langword="true" /> if the global lock is to be used; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="06abb-338">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-338">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-339">Globalne blokady jest zawsze używana, jeśli odbiornik śledzenia nie jest wielowątkowość, niezależnie od wartości <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-339">The global lock is always used if the trace listener is not thread safe, regardless of the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A>.</span></span> <span data-ttu-id="06abb-340"><xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> Właściwość jest używana do określenia, czy odbiornik jest bezpieczne dla wątków.</span><span class="sxs-lookup"><span data-stu-id="06abb-340">The <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> property is used to determine if the listener is thread safe.</span></span> <span data-ttu-id="06abb-341">Globalne blokady nie jest używany tylko wtedy, gdy wartość <xref:System.Diagnostics.Trace.UseGlobalLock%2A> jest `false` i wartość <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="06abb-341">The global lock is not used only if the value of <xref:System.Diagnostics.Trace.UseGlobalLock%2A> is `false` and the value of <xref:System.Diagnostics.TraceListener.IsThreadSafe%2A> is `true`.</span></span> <span data-ttu-id="06abb-342">Domyślnym zachowaniem jest używać globalne blokady.</span><span class="sxs-lookup"><span data-stu-id="06abb-342">The default behavior is to use the global lock.</span></span>  
  
 <span data-ttu-id="06abb-343">Aby ustawić <xref:System.Diagnostics.Trace.UseGlobalLock%2A> dla <xref:System.Diagnostics.Trace>, można również edytować plik konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="06abb-343">To set the <xref:System.Diagnostics.Trace.UseGlobalLock%2A> for <xref:System.Diagnostics.Trace>, you can also edit the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="06abb-344">Plik konfiguracji powinien być sformatowany jak w następującym przykładzie:</span><span class="sxs-lookup"><span data-stu-id="06abb-344">The configuration file should be formatted like the following example:</span></span>  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace useGlobalLock="false" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="06abb-345">do pracy z kodem niezarządzanym.</span><span class="sxs-lookup"><span data-stu-id="06abb-345">for operating with unmanaged code.</span></span> <span data-ttu-id="06abb-346">Akcja zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-346">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="06abb-347">Wyliczenie skojarzone:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="06abb-347">Associated enumeration:  <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-348">Zapisuje informacje o śledzeniu odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-348">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06abb-349"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-349">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="06abb-350">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-350">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-351">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-351">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-352">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-352">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-353">Program ASP.NET udostępnia funkcja śledzenia dostosowanych stron sieci Web.</span><span class="sxs-lookup"><span data-stu-id="06abb-353">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="06abb-354">Aby zapisać komunikaty śledzenia stron ASP.NET, należy użyć <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-354">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06abb-355">Domyślnie w kodzie skojarzony ze stroną sieci Web ASP.NET, instrukcja `Trace.Write("...")` jest to wywołanie <xref:System.Web.TraceContext.Write%2A> metody <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-355">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-356">Aby użyć <xref:System.Diagnostics.Trace?displayProperty=nameWithType> klasy na stronach sieci Web musi zawierać przestrzeni nazw, na przykład `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="06abb-356">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-357">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-357">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-358">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-358">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-359">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych imię `value` parametr <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-359">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the `value` parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-360">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-360">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-361">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych komunikatów na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-361">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="06abb-362">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-362">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-363">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-363">A message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-364">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-364">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-365">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-366">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-367">Program ASP.NET udostępnia funkcja śledzenia dostosowanych stron sieci Web.</span><span class="sxs-lookup"><span data-stu-id="06abb-367">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="06abb-368">Aby zapisać komunikaty śledzenia stron ASP.NET, należy użyć <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-368">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06abb-369">Domyślnie w kodzie skojarzony ze stroną sieci Web ASP.NET, instrukcja `Trace.Write("...")` jest to wywołanie <xref:System.Web.TraceContext.Write%2A> metody <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-369">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-370">Aby użyć <xref:System.Diagnostics.Trace?displayProperty=nameWithType> klasy na stronach sieci Web musi zawierać przestrzeni nazw, na przykład `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="06abb-370">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-371">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-371">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-372">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-372">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-373">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-373">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-374">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-374">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-375">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-375">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-376">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="06abb-376">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06abb-377"><see cref="T:System.Object" /> Name jest wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-377">An <see cref="T:System.Object" /> name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-378">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-378">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-379">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-379">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-380">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-380">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-381">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-381">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-382">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-382">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-383">Program ASP.NET udostępnia funkcja śledzenia dostosowanych stron sieci Web.</span><span class="sxs-lookup"><span data-stu-id="06abb-383">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="06abb-384">Aby zapisać komunikaty śledzenia stron ASP.NET, należy użyć <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-384">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06abb-385">Domyślnie w kodzie skojarzony ze stroną sieci Web ASP.NET, instrukcja `Trace.Write("...")` jest to wywołanie <xref:System.Web.TraceContext.Write%2A> metody <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-385">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-386">Aby użyć <xref:System.Diagnostics.Trace?displayProperty=nameWithType> klasy na stronach sieci Web musi zawierać przestrzeni nazw, na przykład `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="06abb-386">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-387">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-387">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-388">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-388">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-389">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych nazwę `myObject` i `category` do <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-389">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-390">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-390">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-391">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-391">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-392">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-392">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-393">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-393">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-394">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-394">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-395">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-395">Writes a category name and a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-396">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-396">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-397">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-397">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-398">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-398">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="06abb-399">Program ASP.NET udostępnia funkcja śledzenia dostosowanych stron sieci Web.</span><span class="sxs-lookup"><span data-stu-id="06abb-399">ASP.NET supplies tracing functionality tailored for Web pages.</span></span> <span data-ttu-id="06abb-400">Aby zapisać komunikaty śledzenia stron ASP.NET, należy użyć <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-400">To write trace messages in ASP.NET pages, use the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="06abb-401">Domyślnie w kodzie skojarzony ze stroną sieci Web ASP.NET, instrukcja `Trace.Write("...")` jest to wywołanie <xref:System.Web.TraceContext.Write%2A> metody <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="06abb-401">By default, in code associated with an ASP.NET Web page, the statement `Trace.Write("...")` is a call to the <xref:System.Web.TraceContext.Write%2A> method of the <xref:System.Web.UI.Page.Trace%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="06abb-402">Aby użyć <xref:System.Diagnostics.Trace?displayProperty=nameWithType> klasy na stronach sieci Web musi zawierać przestrzeni nazw, na przykład `System.Diagnostics.Trace.Write("...")`.</span><span class="sxs-lookup"><span data-stu-id="06abb-402">To use the <xref:System.Diagnostics.Trace?displayProperty=nameWithType> class in Web pages, you must include the namespace, for example, `System.Diagnostics.Trace.Write("...")`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-403">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-403">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-404">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-404">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-405">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-405">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-406">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-406">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-407">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-407">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-408">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-408">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-409">Zapisuje informacje o śledzeniu odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-409">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-410"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-410"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="06abb-411"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-411">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="06abb-412">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-412">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-413">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-413">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-414">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-414">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-415">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-415">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-416">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-416">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-417">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych imię wartość parametru <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-417">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-418">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-418">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-419">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych komunikatów na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-419">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="06abb-420">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-420">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-421">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-421">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-422">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-422">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-423">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-423">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="06abb-424">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-424">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-425">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-425">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-426">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-426">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-427">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-427">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-428"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-428"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-429">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-429">A message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-430">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-430">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-431">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-431">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-432">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-432">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-433">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-433">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-434">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-434">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-435">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-435">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-436">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-436">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-437">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-437">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-438">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-438">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-439">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-439">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-440">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-440">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-441">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-441">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="06abb-442">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-442">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-443">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-443">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-444">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-444">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-445">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-445">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-446"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-446"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="06abb-447"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-447">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-448">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-448">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-449">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-449">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-450">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-450">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-451">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-451">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-452">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-452">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-453">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-453">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-454">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-454">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-455">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych nazwę `myObject` i `category` do <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-455">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-456">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-456">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-457">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-457">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-458">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-458">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-459">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-459">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-460">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-460">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-461">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-461">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="06abb-462">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-462">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-463">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-463">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-464">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-464">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-465">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-465">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-466"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-466"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-467">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-467">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-468">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-468">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-469">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-469">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-470">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-471">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-471">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-472">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-472">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-473">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-473">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-474">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-474">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-475">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-475">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-476">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-476">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-477">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-477">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-478">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-478">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-479">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-479">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-480">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-480">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-481">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-481">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.Write(System.String)" />.</span></span> <span data-ttu-id="06abb-482">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-482">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-483">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-483">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-484">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-484">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.Write("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-485">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-485">**Second example**</span></span>  
  
```  
Trace.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-486">Zapisuje informacje o śledzeniu odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-486">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06abb-487"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-487">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="06abb-488">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-489">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-490">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-491">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-492">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-492">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-493">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-494">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-494">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-495">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych nazwę obiektu w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="06abb-496">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-496">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-497">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-497">A message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-498">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-498">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-499">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-499">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-500">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-500">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-501">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-501">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-502">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-502">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-503">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-503">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-504">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-504">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-505">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-505">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-506">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-506">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="06abb-507"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-507">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-508">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-508">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-509">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-509">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-510">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-510">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-511">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-511">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-512">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-512">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-513">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-513">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-514">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-514">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-515">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-515">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-516">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-516">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-517">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-517">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-518">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-518">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="06abb-519">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-519">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-520">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-520">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-521">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="06abb-521">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-522">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-522">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-523">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-523">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-524">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-524">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-525">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-525">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-526">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-526">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-527">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-527">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-528">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-528">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-529">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie i `category` na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-529">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="06abb-530">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-530">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="06abb-531">Zapisuje informacje o śledzeniu odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-531">Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-532"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-532"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="06abb-533"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-533">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <summary><span data-ttu-id="06abb-534">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-534">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-535">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-535">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-536">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-536">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-537">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-537">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-538">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-538">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-539">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-539">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-540">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-540">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-541">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych nazwę obiektu w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="06abb-541">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="06abb-542">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-542">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-543">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-543">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-544">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-544">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-545">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-545">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="06abb-546">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-546">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-547">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-547">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-548">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-548">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-549">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-549">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-550"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-550"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-551">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-551">A message to write.</span></span></param>
        <summary><span data-ttu-id="06abb-552">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-552">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-553">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-553">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-554">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-554">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-555">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-555">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-556">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-556">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-557">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-557">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-558">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-558">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-559">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-559">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-560">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-560">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-561">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-561">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-562">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-562">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-563">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-563">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="06abb-564">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-564">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-565">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-565">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-566">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-566">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-567">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-567">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-568"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-568"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="value"><span data-ttu-id="06abb-569"><see cref="T:System.Object" /> o nazwie są wysyłane do <see cref="P:System.Diagnostics.Trace.Listeners" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-569">An <see cref="T:System.Object" /> whose name is sent to the <see cref="P:System.Diagnostics.Trace.Listeners" />.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-570">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-570">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-571">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-571">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-572">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-572">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-573">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-573">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-574">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-574">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-575">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-575">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-576">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-576">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-577">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-577">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-578">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-578">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-579">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-579">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="06abb-580">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-580">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-581">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-581">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-582">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-582">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-583">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-583">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="06abb-584">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-584">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-585">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-585">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-586">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-586">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-587">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-587">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="06abb-588"><see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-588"><see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span></span></param>
        <param name="message"><span data-ttu-id="06abb-589">Komunikat do zapisu.</span><span class="sxs-lookup"><span data-stu-id="06abb-589">A message to write.</span></span></param>
        <param name="category"><span data-ttu-id="06abb-590">Nazwa kategorii, używana do organizowania danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="06abb-590">A category name used to organize the output.</span></span></param>
        <summary><span data-ttu-id="06abb-591">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-591">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="06abb-592">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="06abb-592">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="06abb-593">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="06abb-593">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="06abb-594">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-594">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="06abb-595">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="06abb-595">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="06abb-596">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="06abb-596">This switch is set outside the code sample.</span></span>  
  
 <span data-ttu-id="06abb-597">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Trace.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="06abb-597">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Trace.Listeners%2A>.</span></span> <span data-ttu-id="06abb-598">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="06abb-598">For information on adding a listener to the <xref:System.Diagnostics.Trace.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="06abb-599">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie i `category` na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="06abb-599">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="06abb-600">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="06abb-600">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Trace.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="06abb-601">Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> instrukcje.</span><span class="sxs-lookup"><span data-stu-id="06abb-601">You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" /> statements.</span></span> <span data-ttu-id="06abb-602">Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania.</span><span class="sxs-lookup"><span data-stu-id="06abb-602">The following two code examples send the same debugging message.</span></span> <span data-ttu-id="06abb-603">Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" /> Nie wywołuj <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="06abb-603">However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" /> you do not call <see cref="M:System.Diagnostics.Trace.WriteLine(System.String)" />.</span></span> <span data-ttu-id="06abb-604">Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="06abb-604">The second example always calls <see cref="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced.</span></span> <span data-ttu-id="06abb-605">Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.</span><span class="sxs-lookup"><span data-stu-id="06abb-605">This can result in unnecessary execution of arbitrarily complex code.</span></span>  
  
 <span data-ttu-id="06abb-606">**Pierwszym przykładzie**</span><span class="sxs-lookup"><span data-stu-id="06abb-606">**First example**</span></span>  
  
```  
if(mySwitch.TraceError)   
    Trace.WriteLine("aNumber = " + aNumber + " out of range");  
```  
  
 <span data-ttu-id="06abb-607">**Drugi przykład**</span><span class="sxs-lookup"><span data-stu-id="06abb-607">**Second example**</span></span>  
  
```  
Trace.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>