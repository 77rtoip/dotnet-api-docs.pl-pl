<Type Name="ConsoleTraceListener" FullName="System.Diagnostics.ConsoleTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4f93dfb53d27c243869ea739d2f5826b932f8fe" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076962" /></Metadata><TypeSignature Language="C#" Value="public class ConsoleTraceListener : System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConsoleTraceListener extends System.Diagnostics.TextWriterTraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConsoleTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsoleTraceListener&#xA;Inherits TextWriterTraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsoleTraceListener : System::Diagnostics::TextWriterTraceListener" />
  <TypeSignature Language="F#" Value="type ConsoleTraceListener = class&#xA;    inherit TextWriterTraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TextWriterTraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4bf7f-101">Kieruje śledzenie lub debugowanie danych wyjściowych do standardowego wyjścia lub standardowego strumienia błędów.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-101">Directs tracing or debugging output to either the standard output or the standard error stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf7f-102"><xref:System.Diagnostics.ConsoleTraceListener> Użyj klasy do zapisywania komunikatów śledzenia i debugowania w konsoli programu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-102">Use the <xref:System.Diagnostics.ConsoleTraceListener> class to write trace and debugging messages to the console.</span></span> <span data-ttu-id="4bf7f-103">Można zainicjować <xref:System.Diagnostics.ConsoleTraceListener> obiekt, aby pisać komunikaty śledzenia <xref:System.Console.Out%2A?displayProperty=nameWithType> do strumienia lub <xref:System.Console.Error%2A?displayProperty=nameWithType> strumienia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-103">You can initialize a <xref:System.Diagnostics.ConsoleTraceListener> object to write trace messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or to the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4bf7f-104"><xref:System.IDisposable>interfejsu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-104"><xref:System.IDisposable> interface.</span></span> <span data-ttu-id="4bf7f-105">Po zakończeniu korzystania z typu należy usunąć jego wartość bezpośrednio lub pośrednio.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="4bf7f-106">Aby usunąć typ bezpośrednio <xref:System.IDisposable.Dispose%2A> , wywołaj jego metodę`try` / `catch` w bloku.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a`try`/`catch` block.</span></span> <span data-ttu-id="4bf7f-107">Aby usunąć go pośrednio, użyj konstrukcji języka, takiej jak `using` (in C#) lub `Using` (w Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4bf7f-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="4bf7f-108">Aby uzyskać więcej informacji, zobacz sekcję "Używanie obiektu implementującego <xref:System.IDisposable> interfejs IDisposable" w temacie dotyczącym interfejsu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="4bf7f-109">Gdy dane wyjściowe śledzenia i debugowania są włączone, <xref:System.Diagnostics.ConsoleTraceListener> komunikaty są zapisywane do określonego <xref:System.Console?displayProperty=nameWithType> strumienia, co jest podobne do sposobu pisania <xref:System.Console.Write%2A?displayProperty=nameWithType> komunikatów przy użyciu metod lub <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="4bf7f-109">When trace and debugging output is enabled, the <xref:System.Diagnostics.ConsoleTraceListener> messages are written to the specified <xref:System.Console?displayProperty=nameWithType> stream, which is similar to the way messages are written with the <xref:System.Console.Write%2A?displayProperty=nameWithType> or <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="4bf7f-110">W aplikacji <xref:System.Console?displayProperty=nameWithType> konsoli dane wyjściowe i błędy zapisują komunikaty w istniejącym oknie konsoli lub można przekierować strumienie w celu zapisu <xref:System.IO.TextWriter?displayProperty=nameWithType> do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-110">In a console application, the <xref:System.Console?displayProperty=nameWithType> output and error streams write messages to the existing console window, or you can redirect the streams to write to a <xref:System.IO.TextWriter?displayProperty=nameWithType> instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bf7f-111">Jeśli konsola programu nie istnieje, tak jak w aplikacji opartej na systemie Windows, komunikaty zapisane w konsoli nie są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-111">If the console does not exist, as in a Windows-based application, messages written to the console are not displayed.</span></span>  
  
 <span data-ttu-id="4bf7f-112"><xref:System.Diagnostics.Trace.Listeners%2A> <xref:System.Diagnostics.Trace> <xref:System.Diagnostics.TraceSource>Dodaj obiekt do odpowiedniej kolekcji, jeśli chcesz, aby komunikaty zapisywane przez, lub <xref:System.Diagnostics.Debug> zapisywana w konsoli programu. <xref:System.Diagnostics.ConsoleTraceListener></span><span class="sxs-lookup"><span data-stu-id="4bf7f-112">Add a <xref:System.Diagnostics.ConsoleTraceListener> object to the appropriate <xref:System.Diagnostics.Trace.Listeners%2A> collection if you want messages written through <xref:System.Diagnostics.Trace>, <xref:System.Diagnostics.TraceSource>, or <xref:System.Diagnostics.Debug> to be written to the console.</span></span> <span data-ttu-id="4bf7f-113">Ponadto można pisać wiadomości bezpośrednio do konsoli przy użyciu <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> metod lub. <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="4bf7f-113">In addition, you can write messages directly to the console using the <xref:System.Diagnostics.Trace.Write%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.WriteLine%2A?displayProperty=nameWithType> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4bf7f-114"><xref:System.Diagnostics.TraceListenerCollection> `Listeners` Klasy <xref:System.Diagnostics.Debug> i<xref:System.Diagnostics.Trace> korzystają z tej samej kolekcji, do których dostęp odbywa się przy użyciu odpowiednich właściwości.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-114">The <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace> classes share the same <xref:System.Diagnostics.TraceListenerCollection> collection, accessed through their respective `Listeners` properties.</span></span> <span data-ttu-id="4bf7f-115">W przypadku dodania <xref:System.Diagnostics.ConsoleTraceListener> obiektu do kolekcji przy użyciu jednej z tych klas inna Klasa automatycznie używa tego samego odbiornika.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-115">If you add a <xref:System.Diagnostics.ConsoleTraceListener> object to the collection using one of these classes, the other class automatically uses the same listener.</span></span>  
  
 <span data-ttu-id="4bf7f-116">Większość kompilatorów umożliwia śledzenie i debugowanie danych wyjściowych za poorednictwem flag kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-116">Most compilers enable trace and debug output through conditional compilation flags.</span></span> <span data-ttu-id="4bf7f-117">Jeśli śledzenie lub debugowanie nie zostanie włączone, komunikaty wpisywane za pomocą <xref:System.Diagnostics.Debug?displayProperty=nameWithType> i <xref:System.Diagnostics.Trace?displayProperty=nameWithType> są skutecznie ignorowane.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-117">If you do not enable tracing or debugging, the messages written through the <xref:System.Diagnostics.Debug?displayProperty=nameWithType> and <xref:System.Diagnostics.Trace?displayProperty=nameWithType> classes are effectively ignored.</span></span> <span data-ttu-id="4bf7f-118">Składnia służąca do włączania śledzenia i debugowania danych wyjściowych jest specyficzna dla kompilatora; Jeśli używasz kompilatorów innych niż C# lub Visual Basic, zapoznaj się z dokumentacją kompilatora.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-118">The syntax to enable trace and debug output is compiler specific; if you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="4bf7f-119">Aby włączyć debugowanie w C#, należy dodać flagę **/d: Debug**do wiersza polecenia kompilatora podczas kompilowania kodu lub dodać **#define debugowanie** na początku pliku.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-119">To enable debugging in C#, add the **/d:DEBUG**flag to the compiler command line when you compile your code, or you can add **#define DEBUG** to the top of your file.</span></span> <span data-ttu-id="4bf7f-120">W Visual Basic Dodaj flagę **/d: debug = true** do wiersza polecenia kompilatora.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-120">In Visual Basic, add the **/d:DEBUG=True** flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="4bf7f-121">Aby włączyć śledzenie C#, Dodaj flagę **/d: Trace** do wiersza polecenia kompilatora podczas kompilowania kodu lub Dodaj **#define śledzenie** na początku pliku.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-121">To enable tracing in C#, add the **/d:TRACE** flag to the compiler command line when you compile your code, or add **#define TRACE** to the top of your file.</span></span> <span data-ttu-id="4bf7f-122">W Visual Basic Dodaj flagę **/d: Trace = true** do wiersza polecenia kompilatora.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-122">In Visual Basic, add the **/d:TRACE=True** flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="4bf7f-123">Można dodać <xref:System.Diagnostics.ConsoleTraceListener> obiekt <xref:System.Diagnostics.Trace.Listeners%2A> do kolekcji w kodzie <xref:System.Diagnostics.ConsoleTraceListener> lub <xref:System.Diagnostics.Trace.Listeners%2A> dodać obiekt do kolekcji za pomocą pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-123">You can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection in your code, or you can add a <xref:System.Diagnostics.ConsoleTraceListener> object to the <xref:System.Diagnostics.Trace.Listeners%2A> collection through the application configuration file.</span></span> <span data-ttu-id="4bf7f-124"><xref:System.Diagnostics.ConsoleTraceListener> Dodaj obiekt w kodzie, aby pisać komunikaty dla konkretnej sekcji kodu lub ścieżki wykonywania.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-124">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your code to write messages for a specific code section or execution path.</span></span> <span data-ttu-id="4bf7f-125"><xref:System.Diagnostics.ConsoleTraceListener> Dodaj obiekt w pliku konfiguracji aplikacji, aby skierować wszystkie komunikaty śledzenia i debugowania do konsoli programu podczas wykonywania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-125">Add the <xref:System.Diagnostics.ConsoleTraceListener> object in your application configuration file to direct all trace and debug messages to the console while the application executes.</span></span>  
  
 <span data-ttu-id="4bf7f-126">Aby zapisać komunikaty śledzenia i debugowania do konsoli dla określonej sekcji kodu, zainicjuj <xref:System.Diagnostics.ConsoleTraceListener> obiekt i dodaj go <xref:System.Diagnostics.Trace.Listeners%2A> do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-126">To write trace and debug messages to the console for a specific section of code, initialize a <xref:System.Diagnostics.ConsoleTraceListener> object and add it to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span> <span data-ttu-id="4bf7f-127">Instrumentacja sekcji kodu zawierającej komunikaty przy użyciu <xref:System.Diagnostics.Trace> klas lub. <xref:System.Diagnostics.Debug></span><span class="sxs-lookup"><span data-stu-id="4bf7f-127">Instrument the section of code that contains messages using the <xref:System.Diagnostics.Trace> or <xref:System.Diagnostics.Debug> classes.</span></span> <span data-ttu-id="4bf7f-128">Na końcu sekcji kodu <xref:System.Diagnostics.ConsoleTraceListener> Usuń obiekt <xref:System.Diagnostics.Trace.Listeners%2A> z <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> kolekcji i <xref:System.Diagnostics.ConsoleTraceListener>Wywołaj metodę w.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-128">At the end of the code section, remove the <xref:System.Diagnostics.ConsoleTraceListener> object from the <xref:System.Diagnostics.Trace.Listeners%2A> collection, and call the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method on the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="4bf7f-129">Aby skierować wszystkie komunikaty śledzenia i debugowania do konsoli podczas wykonywania aplikacji, Dodaj <xref:System.Diagnostics.ConsoleTraceListener> obiekt do pliku konfiguracji aplikacji.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-129">To direct all trace and debug messages to the console while the application executes, add a <xref:System.Diagnostics.ConsoleTraceListener> object to the application configuration file.</span></span> <span data-ttu-id="4bf7f-130">Edytuj plik konfiguracji, który odnosi się do nazwy aplikacji lub pliku App. config w [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] projekcie.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-130">Edit the configuration file that corresponds to the name of your application, or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="4bf7f-131">W tym pliku Wstaw element dla <xref:System.Diagnostics.ConsoleTraceListener>elementu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-131">In this file, insert an element for a <xref:System.Diagnostics.ConsoleTraceListener>.</span></span>  
  
 <span data-ttu-id="4bf7f-132">Poniższy przykład dodaje <xref:System.Diagnostics.ConsoleTraceListener> obiekt o nazwie `configConsoleListener` do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-132">The following example adds a <xref:System.Diagnostics.ConsoleTraceListener> object named `configConsoleListener` to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="configConsoleListener"            type="System.Diagnostics.ConsoleTraceListener" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
 </configuration>  
```  
  
 <span data-ttu-id="4bf7f-133">Aby uzyskać szczegółowe informacje na temat dodawania detektorów śledzenia w pliku konfiguracyjnym aplikacji, zobacz [ &lt;&gt;odbiorniki](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span><span class="sxs-lookup"><span data-stu-id="4bf7f-133">For details about adding trace listeners in the application configuration file, see [&lt;listeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-trace.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf7f-134">Poniższy przykład kodu implementuje aplikację konsolową składającą się z klasy z dwiema metodami publicznymi.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-134">The following code example implements a console application consisting of a class with two public methods.</span></span>  
  
 <span data-ttu-id="4bf7f-135">`Main` Metoda sprawdza argumenty wiersza polecenia i określa, czy wynik śledzenia powinien być kierowany do standardowego strumienia błędów lub standardowego strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-135">The `Main` method examines the command-line arguments and determines if trace output should be directed to the standard error stream or the standard output stream.</span></span> <span data-ttu-id="4bf7f-136">`Main`tworzy i inicjuje <xref:System.Diagnostics.ConsoleTraceListener> obiekt dla określonego <xref:System.Console> strumienia wyjściowego i dodaje ten obiekt do kolekcji odbiorników śledzenia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-136">`Main` creates and initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream, and adds this object to the trace listener collection.</span></span> <span data-ttu-id="4bf7f-137">Następnie wywołuje `WriteEnvironmentInfoToTrace` metodę, która zapisuje szczegółowe informacje o wykonywanym środowisku i konfigurację odbiornika śledzenia do danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-137">It then calls the `WriteEnvironmentInfoToTrace` method, which writes details about the executing environment and the trace listener configuration to the trace output.</span></span>  
  
 <span data-ttu-id="4bf7f-138">Po uruchomieniu przykładowej aplikacji szczegóły konfiguracji środowiska i śledzenia są zapisywane w określonym strumieniu wyjściowym konsoli za pomocą <xref:System.Diagnostics.ConsoleTraceListener> obiektu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-138">When the example application runs, the environment and trace configuration details are written to the specified console output stream through the <xref:System.Diagnostics.ConsoleTraceListener> object.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#1)]
 [!code-vb[Diagnostics_ConsoleTraceListener#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Console" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4bf7f-139">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.ConsoleTraceListener" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-139">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bf7f-140">Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.ConsoleTraceListener" /> klasy z danymi wyjściowymi śledzenia zapisanymi w standardowym strumieniu wyjściowym.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-140">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with trace output written to the standard output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf7f-141">Ten konstruktor inicjuje <xref:System.Diagnostics.ConsoleTraceListener> obiekt do zapisu komunikatów <xref:System.Console.Out%2A?displayProperty=nameWithType> w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-141">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="4bf7f-142">Jej <xref:System.Diagnostics.TraceListener.Name%2A> właściwość jest inicjowana do pustego ciągu ("").</span><span class="sxs-lookup"><span data-stu-id="4bf7f-142">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf7f-143">Poniższy przykład kodu inicjuje <xref:System.Diagnostics.ConsoleTraceListener> obiekt dla określonego <xref:System.Console> strumienia wyjściowego i dodaje go do kolekcji detektorów śledzenia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-143">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="4bf7f-144">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.ConsoleTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-144">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="P:System.Console.Out" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsoleTraceListener (bool useErrorStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useErrorStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (useErrorStream As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsoleTraceListener(bool useErrorStream);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConsoleTraceListener : bool -&gt; System.Diagnostics.ConsoleTraceListener" Usage="new System.Diagnostics.ConsoleTraceListener useErrorStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useErrorStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useErrorStream"><span data-ttu-id="4bf7f-145"><see langword="true" />Aby napisać śledzenie i debugowanie danych wyjściowych do strumienia błędów standardowych; <see langword="false" /> aby pisać śledzenie i debugowanie danych wyjściowych do standardowego strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-145"><see langword="true" /> to write tracing and debugging output to the standard error stream; <see langword="false" /> to write tracing and debugging output to the standard output stream.</span></span></param>
        <summary><span data-ttu-id="4bf7f-146">Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.ConsoleTraceListener" /> klasy z opcją zapisu śledzenia danych wyjściowych do standardowego strumienia wyjściowego lub standardowego strumienia błędów.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-146">Initializes a new instance of the <see cref="T:System.Diagnostics.ConsoleTraceListener" /> class with an option to write trace output to the standard output stream or the standard error stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf7f-147">Ten konstruktor inicjuje <xref:System.Diagnostics.ConsoleTraceListener> obiekt do zapisu komunikatów do <xref:System.Console.Out%2A?displayProperty=nameWithType> lub <xref:System.Console.Error%2A?displayProperty=nameWithType> do strumienia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-147">This constructor initializes a <xref:System.Diagnostics.ConsoleTraceListener> object to write messages to either the <xref:System.Console.Out%2A?displayProperty=nameWithType> or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream.</span></span> <span data-ttu-id="4bf7f-148">Jej <xref:System.Diagnostics.TraceListener.Name%2A> właściwość jest inicjowana do pustego ciągu ("").</span><span class="sxs-lookup"><span data-stu-id="4bf7f-148">Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4bf7f-149">Poniższy przykład kodu inicjuje <xref:System.Diagnostics.ConsoleTraceListener> obiekt dla określonego <xref:System.Console> strumienia wyjściowego i dodaje go do kolekcji detektorów śledzenia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-149">The following code example initializes a <xref:System.Diagnostics.ConsoleTraceListener> object for the specified <xref:System.Console> output stream and adds it to the trace listener collection.</span></span> <span data-ttu-id="4bf7f-150">Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.ConsoleTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-150">This code example is part of a larger example provided for the <xref:System.Diagnostics.ConsoleTraceListener> class.</span></span>  
  
 [!code-csharp[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/csharp/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/CS/program.cs#2)]
 [!code-vb[Diagnostics_ConsoleTraceListener#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Diagnostics_ConsoleTraceListener/VB/consoletrace.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Console" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConsoleTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="consoleTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TextWriterTraceListener</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4bf7f-151">Zamyka dane wyjściowe do strumienia określonego dla tego odbiornika śledzenia.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-151">Closes the output to the stream specified for this trace listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4bf7f-152">Strumień określony dla tego <xref:System.Diagnostics.ConsoleTraceListener> wystąpienia ( <xref:System.Console.Out%2A?displayProperty=nameWithType> strumień lub <xref:System.Console.Error%2A?displayProperty=nameWithType> strumień) jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="4bf7f-152">The stream specified for this <xref:System.Diagnostics.ConsoleTraceListener> instance (either the <xref:System.Console.Out%2A?displayProperty=nameWithType> stream or the <xref:System.Console.Error%2A?displayProperty=nameWithType> stream) is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
