<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="274d8b0249995e793f8ca18aafb7dcf4fbf1d19c" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56400083" /></Metadata><TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia prosty i wyłączanie przełącznik, który kontroluje, debugowania i śledzenia danych wyjściowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby włączyć lub wyłączyć wiadomości, w oparciu o ich znaczenie, można użyć przełącznika logiczna śledzenia. Użyj <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość, aby uzyskać bieżącą wartość przełącznika.  
  
 Można włączać lub wyłączać <xref:System.Diagnostics.BooleanSwitch> za pomocą pliku konfiguracji aplikacji i następnie użycie skonfigurowanego <xref:System.Diagnostics.BooleanSwitch> wartości w aplikacji. Alternatywnie można utworzyć <xref:System.Diagnostics.BooleanSwitch> w kodzie i zestaw <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość bezpośrednio do Instrumentacji do określonych sekcji kodu.  
  
 Aby skonfigurować <xref:System.Diagnostics.BooleanSwitch>, Edytuj plik konfiguracyjny, który odpowiada nazwie aplikacji. W tym pliku można dodać lub usunąć przełącznik, ustaw wartość przełącznika lub wyczyść wszystko, czego przełączników wcześniej ustawione przez aplikację. Plik konfiguracyjny powinny być sformatowane tak jak w poniższym przykładzie.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Ta sekcja konfiguracji przykładzie definiuje <xref:System.Diagnostics.BooleanSwitch> z <xref:System.Diagnostics.Switch.DisplayName%2A> właściwością `mySwitch` i <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> wartość `true`. W aplikacji, można użyć wartości skonfigurowanych przełącznika, tworząc <xref:System.Diagnostics.BooleanSwitch> o takiej samej nazwie, jak pokazano w poniższym przykładzie kodu.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 Domyślnie <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość można ustawić przy użyciu wartości określonej w pliku konfiguracji. Skonfiguruj przełącznik z wartością 0, aby ustawić <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwości `false`; skonfigurować przełącznik na wartość różną od zera wartość należy ustawić <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość `true`. Jeśli <xref:System.Diagnostics.BooleanSwitch> Konstruktor nie można odnaleźć ustawienia przełącznika początkowe w pliku konfiguracyjnym <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość nowy przełącznik ma wartość `false` domyślnie.  
  
 Należy włączyć śledzenie i debugowanie, aby użyć przełącznika. Następująca składnia jest specyficzne dla kompilatora. Jeśli używasz kompilatorów innych niż C# lub Visual Basic, można znaleźć w dokumentacji kompilatora.  
  
-   Aby włączyć debugowanie w języku C#, należy dodać `/d:DEBUG` flagi do wiersza polecenia kompilatora podczas kompilowania kodu lub można dodać `#define DEBUG` na początku pliku. W języku Visual Basic należy dodać `/d:DEBUG=True` flagi kompilatora w wierszu polecenia.  
  
-   Aby włączyć śledzenie w języku C#, należy dodać `/d:TRACE` flagi do wiersza polecenia kompilatora podczas kompilowania kodu lub dodać `#define TRACE` na początku pliku. W języku Visual Basic należy dodać `/d:TRACE=True` flagi kompilatora w wierszu polecenia.  
  
> [!NOTE]
>  Debugowania i przełączniki kompilatora śledzenia nie są wymagane w przypadku korzystania z <xref:System.Diagnostics.BooleanSwitch> klasy w izolacji. Są one wymagane tylko w połączeniu z <xref:System.Diagnostics.Trace> lub <xref:System.Diagnostics.Debug> metody, które są warunkowo skompilowany.  
  
 Aby uzyskać więcej informacji na temat instrumentacji aplikacji, zobacz <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace>. Aby uzyskać więcej informacji na temat konfigurowania i używania przełączników śledzenia, zobacz [przełączniki śledzenia](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Aby zwiększyć wydajność, aby włączyć <xref:System.Diagnostics.BooleanSwitch> członków `static` w klasie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika w celu ustalenia, czy należy wydrukować komunikat o błędzie. Utwórz przełącznik na poziomie klasy. `Main` Metoda przekazuje swoją lokalizację `MyMethod`, która wyświetla komunikat o błędzie i którym wystąpił błąd.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.BooleanSwitch" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nazwa do wyświetlenia w interfejsie użytkownika.</param>
        <param name="description">Opis przełącznika.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.BooleanSwitch" /> klasy przy użyciu określonego wyświetlaną nazwę i opis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po utworzeniu <xref:System.Diagnostics.BooleanSwitch>, `displayName` parametru jest używana do znajdowania ustawienia początkowej przełącznika. Jeśli Konstruktor nie może odnaleźć ustawień początkowych <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość jest ustawiona na `false` (wyłączone).  
  
 Aby ustawić poziom usługi <xref:System.Diagnostics.BooleanSwitch>, edycję pliku konfiguracyjnego, odpowiadający nazwę aplikacji. W tym pliku można dodać przełącznik i ustawić jej wartość, Usuń przełącznik lub wyczyść wszystkie przełączniki wcześniej ustawione przez aplikację. Plik konfiguracyjny powinny być sformatowane tak jak w poniższym przykładzie:  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  Powinien być przełączników utworzono `static`.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika w celu ustalenia, czy należy wydrukować komunikat o błędzie. Przełącznik jest tworzone na poziomie klasy. `Main` Metoda przekazuje swoją lokalizację `MyMethod`, która wyświetla komunikat o błędzie i którym wystąpił błąd.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="defaultSwitchValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nazwa do wyświetlenia w interfejsie użytkownika.</param>
        <param name="description">Opis przełącznika.</param>
        <param name="defaultSwitchValue">Wartość domyślna parametru.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.BooleanSwitch" /> klasie z atrybutem określona nazwa wyświetlana, opis i domyślna wartość przełącznika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `displayName` Parametr służy do ustawiania wartości <xref:System.Diagnostics.Switch.DisplayName%2A> właściwości i `description` parametr jest używany do ustawiania wartości <xref:System.Diagnostics.Switch.Description%2A> właściwości. `defaultSwitchValue` Parametr zostanie zapisany jako pole i używane do zainicjowania <xref:System.Diagnostics.Switch.Value%2A> właściwość przy pierwszym odwołaniu. Aby uzyskać więcej informacji na temat używania konstruktora zobacz <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> konstruktora.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy przełącznik jest włączony.</summary>
        <value><see langword="true" /> Jeśli przełącznik jest włączony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie to pole jest ustawione `false` (wyłączone). Aby włączyć przełącznik, przypisz tego pola wartość `true`. Aby wyłączyć przełącznika, należy przypisać wartość `false`.  Wartość tej właściwości jest określana przez wartość właściwości klasy bazowej <xref:System.Diagnostics.Switch.SwitchSetting%2A>.  
  
> [!NOTE]
>  Ta metoda używa <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> Oznacz flagą, aby zapobiec wywoływana z niezaufanego kodu; tylko bezpośredniego wywołującego jest wymagane do <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> uprawnień. Jeśli Twój kod może być wywoływana z częściowo zaufanego kodu, nie przekazuj dane wejściowe użytkownika do <xref:System.Runtime.InteropServices.Marshal> klasy metody bez sprawdzania poprawności.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika w celu ustalenia, czy należy wydrukować komunikat o błędzie. Przełącznik jest tworzone na poziomie klasy. `Main` Metoda przekazuje swoją lokalizację `MyMethod`, która wyświetla komunikat o błędzie i lokalizację, w którym wystąpił błąd.  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma odpowiednie uprawnienia.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem niezarządzanym. Zapotrzebowanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy nowa wartość <see cref="P:System.Diagnostics.Switch.Value" /> właściwość może być analizowana jako wartość logiczna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> Metoda określa, czy nowa wartość jest prawidłowy ciąg reprezentujący wartość logiczną ("true" lub "false"). Jeśli więc metoda ustawia <xref:System.Diagnostics.Switch.SwitchSetting%2A> właściwości na 0 lub 1.  W przeciwnym razie Metoda podstawowa jest wywoływana, który konwertuje wartości ciągu na wartość całkowitą, która jest następnie używana do ustawiania <xref:System.Diagnostics.Switch.SwitchSetting%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>