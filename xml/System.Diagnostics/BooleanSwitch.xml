<Type Name="BooleanSwitch" FullName="System.Diagnostics.BooleanSwitch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8723eff434f10740cffb518e46eea23071eaa6f2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69077026" /></Metadata><TypeSignature Language="C#" Value="public class BooleanSwitch : System.Diagnostics.Switch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanSwitch extends System.Diagnostics.Switch" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.BooleanSwitch" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanSwitch&#xA;Inherits Switch" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanSwitch : System::Diagnostics::Switch" />
  <TypeSignature Language="F#" Value="type BooleanSwitch = class&#xA;    inherit Switch" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.Switch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Diagnostics.SwitchLevel(typeof(System.Boolean))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia prosty przełącznik włączania/wyłączania, który kontroluje debugowanie i śledzenie danych wyjściowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Za pomocą przełącznika logicznego śledzenia można włączać lub wyłączać komunikaty na podstawie ich znaczenia. Użyj właściwości <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> , aby pobrać bieżącą wartość przełącznika.  
  
 Możesz włączyć lub wyłączyć <xref:System.Diagnostics.BooleanSwitch> za pomocą pliku konfiguracji aplikacji, a następnie użyć skonfigurowanej <xref:System.Diagnostics.BooleanSwitch> wartości w aplikacji. Alternatywnie można utworzyć <xref:System.Diagnostics.BooleanSwitch> w kodzie i <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> ustawić właściwość bezpośrednio, aby instrumentować określoną sekcję kodu.  
  
 Aby skonfigurować <xref:System.Diagnostics.BooleanSwitch>program, należy edytować plik konfiguracji, który odnosi się do nazwy aplikacji. W tym pliku można dodać lub usunąć przełącznik, ustawić wartość przełącznika lub wyczyścić wszystkie przełączniki wcześniej ustawione przez aplikację. Plik konfiguracji powinien być sformatowany jak w poniższym przykładzie.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <switches>  
      <add name="mySwitch" value="1"/>  
    </switches>  
  </system.diagnostics>  
</configuration>  
```  
  
 Ta przykładowa sekcja konfiguracji definiuje <xref:System.Diagnostics.BooleanSwitch> <xref:System.Diagnostics.Switch.DisplayName%2A> `mySwitch` `true`właściwość z ustawioną wartością i ustawioną na wartość. <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> W aplikacji można użyć skonfigurowanej wartości switch przez utworzenie <xref:System.Diagnostics.BooleanSwitch> o takiej samej nazwie, jak pokazano w poniższym przykładzie kodu.  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/remarks.cs#2)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/remarks.vb#2)]  
  
 Domyślnie <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość jest ustawiana za pomocą wartości określonej w pliku konfiguracji. Skonfiguruj przełącznik z wartością <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> 0, aby ustawić `false`właściwość. Skonfiguruj przełącznik z wartością <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> różną od zera, aby ustawić właściwość na `true`wartość. Jeśli Konstruktor nie może odnaleźć ustawień przełącznika początkowego w pliku konfiguracji <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> , właściwość nowego przełącznika jest domyślnie ustawiona na `false` wartość. <xref:System.Diagnostics.BooleanSwitch>  
  
 Musisz włączyć śledzenie lub debugowanie, aby użyć przełącznika. Następująca składnia jest specyficzna dla kompilatora. Jeśli używasz kompilatorów innych niż C# lub Visual Basic, zapoznaj się z dokumentacją kompilatora.  
  
-   Aby włączyć debugowanie w C#, Dodaj `/d:DEBUG` flagę do wiersza polecenia kompilatora podczas kompilowania kodu lub możesz dodać `#define DEBUG` do góry pliku. W Visual Basic Dodaj `/d:DEBUG=True` flagę do wiersza polecenia kompilatora.  
  
-   Aby włączyć śledzenie C#, Dodaj `/d:TRACE` flagę do wiersza polecenia kompilatora podczas kompilowania kodu lub Dodaj `#define TRACE` do góry pliku. W Visual Basic Dodaj `/d:TRACE=True` flagę do wiersza polecenia kompilatora.  
  
> [!NOTE]
>  Te przełączniki kompilatora debugowania i śledzenia nie są wymagane w przypadku używania <xref:System.Diagnostics.BooleanSwitch> klasy w izolacji. Są one wymagane tylko w połączeniu z <xref:System.Diagnostics.Trace> lub <xref:System.Diagnostics.Debug> metodami, które są kompilowane warunkowo.  
  
 Aby uzyskać więcej informacji na temat Instrumentacji aplikacji, <xref:System.Diagnostics.Debug> zobacz <xref:System.Diagnostics.Trace>i. Aby uzyskać więcej informacji o konfigurowaniu i używaniu przełączników śledzenia, zobacz [przełączniki śledzenia](~/docs/framework/debug-trace-profile/trace-switches.md).  
  
> [!NOTE]
>  Aby zwiększyć wydajność, można wprowadzać <xref:System.Diagnostics.BooleanSwitch> elementy członkowskie `static` w klasie.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika, aby określić, czy ma zostać wydrukowany komunikat o błędzie. Można utworzyć przełącznik na poziomie klasy. Metoda przekazuje jego lokalizację do `MyMethod`, która drukuje komunikat o błędzie i miejsce wystąpienia błędu. `Main`  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.BooleanSwitch" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayName">Nazwa wyświetlana w interfejsie użytkownika.</param>
        <param name="description">Opis przełącznika.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.BooleanSwitch" /> klasy z określoną nazwą wyświetlaną i opisem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas tworzenia <xref:System.Diagnostics.BooleanSwitch> `displayName` , parametr jest używany do znajdowania ustawień przełącznika początkowego. Jeśli Konstruktor nie może odnaleźć ustawień początkowych, <xref:System.Diagnostics.BooleanSwitch.Enabled%2A> właściwość jest ustawiona na `false` (wyłączone).  
  
 Aby ustawić poziom <xref:System.Diagnostics.BooleanSwitch>, należy edytować plik konfiguracji odpowiadający nazwie aplikacji. W tym pliku można dodać przełącznik i ustawić jego wartość, usunąć przełącznik lub wyczyścić wszystkie przełączniki wcześniej ustawione przez aplikację. Plik konfiguracji powinien być sformatowany w następujący sposób:  
  
```xml  
<configuration>  
    <system.diagnostics>  
       <switches>  
          <add name="mySwitch" value="10" />  
          <add name="myNewSwitch" value="20" />  
          <remove name="mySwitch" />  
          <clear/>  
       </switches>  
    </system.diagnostics>  
 </configuration>  
```  
  
> [!NOTE]
>  Utworzone przełączniki powinny być `static`.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika, aby określić, czy ma zostać wydrukowany komunikat o błędzie. Przełącznik jest tworzony na poziomie klasy. Metoda przekazuje jego lokalizację do `MyMethod`, która drukuje komunikat o błędzie i miejsce wystąpienia błędu. `Main`  
  
 [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.BooleanSwitch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanSwitch (string displayName, string description, string defaultSwitchValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string displayName, string description, string defaultSwitchValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (displayName As String, description As String, defaultSwitchValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanSwitch(System::String ^ displayName, System::String ^ description, System::String ^ defaultSwitchValue);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.BooleanSwitch : string * string * string -&gt; System.Diagnostics.BooleanSwitch" Usage="new System.Diagnostics.BooleanSwitch (displayName, description, defaultSwitchValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="displayName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="defaultSwitchValue" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="displayName">Nazwa, która ma być wyświetlana w interfejsie użytkownika.</param>
        <param name="description">Opis przełącznika.</param>
        <param name="defaultSwitchValue">Wartość domyślna przełącznika.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.BooleanSwitch" /> klasy z określoną nazwą wyświetlaną, opisem i wartością domyślnego przełącznika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr służy do ustawiania wartości <xref:System.Diagnostics.Switch.DisplayName%2A> właściwości, a `description` parametr służy do ustawiania wartości <xref:System.Diagnostics.Switch.Description%2A> właściwości. `displayName` Parametr jest zapisywany jako pole i używane do <xref:System.Diagnostics.Switch.Value%2A> inicjowania właściwości przy pierwszym odwołaniu. `defaultSwitchValue` Aby uzyskać więcej informacji na temat użycia konstruktora, <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29> Zobacz Konstruktor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.BooleanSwitch.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy przełącznik jest włączony, czy wyłączony.</summary>
        <value><see langword="true" />Jeśli przełącznik jest włączony; w przeciwnym razie. <see langword="false" /> Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie to pole jest ustawione na `false` (wyłączone). Aby włączyć przełącznik, przypisz to pole do wartości `true`. Aby wyłączyć przełącznik, przypisz wartość do `false`.  Wartość tej właściwości jest określana przez wartość właściwości <xref:System.Diagnostics.Switch.SwitchSetting%2A>klasy bazowej.  
  
> [!NOTE]
>  Ta metoda używa flagi <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> , aby zapobiec wywoływaniu z niezaufanego kodu; tylko bezpośredni obiekt wywołujący musi mieć <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=nameWithType> uprawnienia. Jeśli kod można wywołać z częściowo zaufanego kodu, nie przekazuj danych wejściowych użytkownika do <xref:System.Runtime.InteropServices.Marshal> metod klasy bez sprawdzania poprawności.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.BooleanSwitch> i używa przełącznika, aby określić, czy ma zostać wydrukowany komunikat o błędzie. Przełącznik jest tworzony na poziomie klasy. Metoda przekazuje jego lokalizację do `MyMethod`, która drukuje komunikat o błędzie i lokalizację, w której wystąpił błąd. `Main`  
  
 [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/CS/source.cs#1)]
 [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic BooleanSwitch.Enabled Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma poprawnego uprawnienia.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obsługi kodu niezarządzanego. Wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />żądania; Skojarzone Wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.Switch" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.BooleanSwitch.OnValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnValueChanged();" />
      <MemberSignature Language="F#" Value="override this.OnValueChanged : unit -&gt; unit" Usage="booleanSwitch.OnValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy nowa wartość <see cref="P:System.Diagnostics.Switch.Value" /> właściwości może być analizowana jako wartość logiczna.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.BooleanSwitch.OnValueChanged%2A> Metoda określa, czy nowa wartość jest poprawnym ciągiem reprezentują wartość logiczną ("false" lub "true"). Jeśli tak, Metoda ustawia <xref:System.Diagnostics.Switch.SwitchSetting%2A> właściwość na 0 lub 1.  W przeciwnym razie wywoływana jest metoda podstawowa, która konwertuje wartość ciągu na wartość całkowitą, która jest następnie używana do ustawiania <xref:System.Diagnostics.Switch.SwitchSetting%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
