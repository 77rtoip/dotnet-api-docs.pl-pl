<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcf465491257980e042b06fb8c34d629c1463d98" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <TypeSignature Language="F#" Value="type Debug = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="91dcd-101">Udostępnia zestaw metod i właściwości pomagających w debugowaniu kodu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="91dcd-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-102">Jeśli używasz metody <xref:System.Diagnostics.Debug> klasy do drukowania informacji o debugowaniu i sprawdź logiki z potwierdzeniami, należy kodu bardziej niezawodne bez wpływu na rozmiar wydajności i kod produktu wysyłki.</span><span class="sxs-lookup"><span data-stu-id="91dcd-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="91dcd-103">Ta klasa dostarcza metody do wyświetlenia <xref:System.Diagnostics.Debug.Assert%2A> okno dialogowe i do wysyłania potwierdzenia, że zawsze kończy się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="91dcd-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="91dcd-104">Ta klasa dostarcza metody zapisu w następujących zmian: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> i <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="91dcd-105"><xref:System.Diagnostics.BooleanSwitch> i <xref:System.Diagnostics.TraceSwitch> klasy zapewniają sposób dynamicznie kontroli danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="91dcd-106">Można zmodyfikować wartości tych przełączników, bez konieczności ponownego kompilowania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="91dcd-107">Uzyskać informacji dotyczących używania pliku konfiguracji do ustawiona przełącznik, zobacz <xref:System.Diagnostics.Switch> klasy i [przełączniki śledzenia](~/docs/framework/debug-trace-profile/trace-switches.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="91dcd-108">Dane wyjściowe śledzenia docelowych można dostosować, dodając <xref:System.Diagnostics.TraceListener> wystąpień do lub usuwanie wystąpienia z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="91dcd-109"><xref:System.Diagnostics.Debug.Listeners%2A> Kolekcji jest udostępniany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornik śledzenia do każdej klasy dodaje odbiornika do obu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="91dcd-110">Domyślnie <xref:System.Diagnostics.DefaultTraceListener> klasy emituje danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-111">Dodawanie odbiornik śledzenia do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji może spowodować wyjątek zostanie wygenerowany podczas śledzenia, jeśli zasób stosowany przez odbiornik śledzenia nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="91dcd-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="91dcd-112">Warunki i zgłoszono wyjątek zależą od obiektu nasłuchującego śledzenia i nie można wyliczyć w tym temacie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="91dcd-113">Może być przydatne do wywołania <xref:System.Diagnostics.Debug> metod w `try` / `catch` bloków do wykrywania i obsługi wyjątków z obiektów nasłuchujących śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="91dcd-114">Można zmodyfikować poziomu wcięcia przy użyciu <xref:System.Diagnostics.Debug.Indent%2A> metody lub <xref:System.Diagnostics.Debug.IndentLevel%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="91dcd-115">Aby zmodyfikować wcięcia, użyj <xref:System.Diagnostics.Debug.IndentSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="91dcd-116">Można określić, czy automatycznie opróżnić bufor wyjściowy po każdym zapisu przez ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> właściwości `true`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="91dcd-117">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można edytować plik konfiguracji odpowiadającej nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="91dcd-118">Plik konfiguracji powinien być sformatowany, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="91dcd-119"><xref:System.Diagnostics.ConditionalAttribute> Atrybut jest stosowany do metod <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="91dcd-120">Kompilatory, które obsługują <xref:System.Diagnostics.ConditionalAttribute> Ignoruj wywołania tych metod, chyba że "DEBUG" jest zdefiniowany jako symbole kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="91dcd-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="91dcd-121">Zapoznaj się z dokumentacją kompilatora, aby określić, czy <xref:System.Diagnostics.ConditionalAttribute> jest obsługiwana i składnia do definiowania symbol kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="91dcd-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="91dcd-122">W projektach Visual Studio C# i Visual Basic, domyślnie symbol kompilacji warunkowej na "Debugowanie" jest zdefiniowany w przypadku kompilacji debugowania i symbol "TRACE" jest zdefiniowany zarówno debug i release kompiluje.</span><span class="sxs-lookup"><span data-stu-id="91dcd-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="91dcd-123">Aby dowiedzieć się, jak wyłączyć to zachowanie, zobacz dokumentację programu Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="91dcd-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="91dcd-124">Informacje dotyczące warunkowego debugowania w programie Visual C++, zobacz [klasy Debug (C + +/ CLI)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="91dcd-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="91dcd-125">Aby zdefiniować symbol kompilacji warunkowej "Debugowanie" w języku C#, Dodaj `/d:DEBUG` opcje wiersza polecenia kompilatora podczas kompilowania kodu przy użyciu wiersza polecenia lub Dodaj `#define DEBUG` na początku pliku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="91dcd-126">W języku Visual Basic, Dodaj `/d:DEBUG=True` — opcja kompilatora w wierszu polecenia lub Dodaj `#Const DEBUG=True` do pliku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-127">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug> wskazująca rozpoczęcie i zakończenie wykonywania programu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="91dcd-128">Funkcja <xref:System.Diagnostics.Debug.Indent%2A> i <xref:System.Diagnostics.Debug.Unindent%2A> odróżnić dane wyjściowe śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="91dcd-129">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="91dcd-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-130">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wysyła komunikaty i wyświetla komunikat, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Debug.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-131">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-132">Jeśli warunek nie jest <see langword="true" />, komunikat o błędzie nie są wysyłane i nie zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-133">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wyświetla komunikat, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-134">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="91dcd-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="91dcd-135">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="91dcd-136">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="91dcd-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="91dcd-137">`Assert` Metody nie są dostępne dla [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="91dcd-138">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="91dcd-139"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="91dcd-140">Jeśli wynik wynosi `false`, wysyła komunikat o błędzie do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="91dcd-141">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="91dcd-142">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="91dcd-143">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="91dcd-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="91dcd-144">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="91dcd-145">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="91dcd-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="91dcd-146">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="91dcd-147"> aplikacje nie obsługują modalnych okien dialogowych, więc zachowują się podobnie w trybie interfejsu użytkownika i interfejs użytkownika z systemem innym niż tryb.</span><span class="sxs-lookup"><span data-stu-id="91dcd-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="91dcd-148">Komunikat jest zapisywana odbiorników aktywne śledzenie w trybie debugowania, lub komunikat nie jest zapisywany w trybie wersji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-149">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-150">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-151"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-152">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="91dcd-153">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91dcd-154">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="91dcd-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-155">Poniższy przykład tworzy indeks tablicy, przeprowadza niektóre akcje, aby ustawić wartość indeksu, a następnie wywołuje <xref:System.Diagnostics.Debug.Assert%2A> aby upewnić się, że wartość indeksu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="91dcd-156">Jeśli nie jest prawidłowy, <xref:System.Diagnostics.Debug.Assert%2A> generuje stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="91dcd-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-157">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-158">Jeśli warunek nie jest <see langword="true" />, określony komunikat nie są wysyłane i nie zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-159">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-160">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje określony komunikat i wyświetla komunikat, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-161">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="91dcd-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="91dcd-162">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="91dcd-163">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="91dcd-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="91dcd-164">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%2A> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="91dcd-165"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="91dcd-166">Jeśli wynik wynosi `false`, wysyła określoną wiadomość diagnostycznych do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="91dcd-167">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="91dcd-168">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="91dcd-169">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="91dcd-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="91dcd-170">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="91dcd-171">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="91dcd-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="91dcd-172">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-173">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-174">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-175"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-176">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="91dcd-177">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91dcd-178">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="91dcd-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-179">Następujące testy przykład czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="91dcd-180">Jeśli `type` jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-181">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-182">Jeśli warunek nie jest <see langword="true" />, nie są wysyłane wiadomości określona i nie zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-183">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="91dcd-184">Szczegółowy komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-185">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje dwa komunikaty określonego i wyświetla komunikat, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-186">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="91dcd-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="91dcd-187">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="91dcd-188">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="91dcd-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="91dcd-189">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="91dcd-190"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="91dcd-191">Jeśli wynik wynosi `false`, wysyła określoną wiadomość diagnostycznych i komunikat szczegółowy <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="91dcd-192">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="91dcd-193">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="91dcd-194">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="91dcd-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="91dcd-195">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="91dcd-196">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="91dcd-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="91dcd-197">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-198">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-199">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-200"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-201">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="91dcd-202">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91dcd-203">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="91dcd-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-204">Następujące testy przykład czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="91dcd-205">Jeśli `type` jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje dwa komunikaty.</span><span class="sxs-lookup"><span data-stu-id="91dcd-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-206">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-207">Jeśli warunek nie jest <see langword="true" />, nie są wysyłane wiadomości określona i nie zostanie wyświetlone okno komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-208">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="91dcd-209">Ciąg formatu złożone, aby wysłać do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="91dcd-210">Ta wiadomość zawiera tekst zmieszać zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="91dcd-211">Tablica obiektów zawiera zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-212">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje dwa komunikaty (proste i sformatowany) i wyświetla komunikat, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-213">Ta metoda używa programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="91dcd-214">Wynikowy ciąg są wysyłane do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="91dcd-215">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w przypadku kompilacji do debugowania.</span><span class="sxs-lookup"><span data-stu-id="91dcd-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="91dcd-216">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metodę, jeśli chcesz wykonać potwierdzeń w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="91dcd-217">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kod zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="91dcd-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="91dcd-218">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> metoda służy do identyfikowania logiki błędy podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="91dcd-219"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="91dcd-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="91dcd-220">Jeśli wynik wynosi `false`, <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metoda jest wywoływana i `detailMessageFormat` ciągu i `args` tablicy są przekazane jako parametry.</span><span class="sxs-lookup"><span data-stu-id="91dcd-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="91dcd-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> następnie wysyła komunikat określony tekst i tekst sformatowany komunikat <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="91dcd-222">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="91dcd-223">Po uruchomieniu aplikacji w trybie interfejsu użytkownika, wyświetla komunikat, który pokazuje stos wywołań z liczby plików i wierszy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="91dcd-224">Komunikat zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="91dcd-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="91dcd-225">Kliknięcie przycisku **przerwać** przycisk zakończenie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="91dcd-226">Kliknięcie przycisku **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje otworzyć debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="91dcd-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="91dcd-227">Kliknięcie przycisku **Ignoruj** kontynuuje następną instrukcję w kodzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-228">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-229">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-230"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-231">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="91dcd-232">W tym pliku, można włączyć i wyłączyć w oknie komunikatu potwierdzenia lub ustawić <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="91dcd-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="91dcd-233">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="91dcd-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Debug.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-234">Pobiera lub ustawia wartość wskazującą czy <see cref="M:System.Diagnostics.Debug.Flush" /> powinna być wywoływana na <see cref="P:System.Diagnostics.Debug.Listeners" /> po każdego zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91dcd-235">
            <see langword="true" /> Jeśli <see cref="M:System.Diagnostics.Debug.Flush" /> jest wywoływana na <see cref="P:System.Diagnostics.Debug.Listeners" /> po każdym zapisu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-236">Wartość domyślna to `false`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="91dcd-237">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="91dcd-238">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="91dcd-239">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="91dcd-240">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="91dcd-241">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można również edytować plik konfiguracji odpowiadającej nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="91dcd-242">Plik konfiguracji powinien być sformatowany, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="91dcd-243">do pracy z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="91dcd-244">Żądanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; skojarzone wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Debug.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-245">Opróżnia bufor wyjściowy, a następnie wywołuje <see langword="Close" /> metody na każdym <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-246">Użyj tej metody, gdy dane wyjściowe do pliku, takich jak do <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-247">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="91dcd-248">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="91dcd-249">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="91dcd-250">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-251">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="91dcd-252">`myTextListener` używa <xref:System.IO.StreamWriter> o nazwie `myOutputWriter` można zapisać do pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="91dcd-253">Przykład tworzy składnik zapisywania plików, strumienia i tekst, zapisuje jednego wiersza tekstu do pliku i następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="91dcd-254">do pracy z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="91dcd-255">Żądanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; skojarzone wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-256">Emituje komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Debug.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-257">Komunikat emisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-258">Emituje określony komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-259">Domyślnie jest to, że <xref:System.Diagnostics.DefaultTraceListener> generuje komunikat okno komunikatu, gdy aplikacja działa w trybie interfejsu użytkownika a w <xref:System.Diagnostics.TraceListener> wystąpień w <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-260">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-261">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-262"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-263">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-264">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug.Fail%2A> metody wydrukowanie wiadomości podczas obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="91dcd-265">Można również użyć <xref:System.Diagnostics.Debug.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="91dcd-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-266">Komunikat emisji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="91dcd-267">Szczegółowy komunikat do wysyłania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-268">Emituje komunikat o błędzie i szczegółowy komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-269">Domyślnie jest to, że <xref:System.Diagnostics.DefaultTraceListener> generuje komunikat okno komunikatu, gdy aplikacja działa w trybie interfejsu użytkownika a w <xref:System.Diagnostics.TraceListener> wystąpień w <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-270">Wyświetlanie pola komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-271">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, w oknie komunikatu nie jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="91dcd-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="91dcd-272"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie metody <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metoda <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="91dcd-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="91dcd-273">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-274">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug.Fail%2A> metody wydrukowanie wiadomości podczas obsługi wyjątków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="91dcd-275">Można również użyć <xref:System.Diagnostics.Debug.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="91dcd-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Debug.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-276">Opróżnia bufor wyjściowy oraz powoduje, że buforowane dane do zapisania <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-277">Opróżnianie strumienia nie opróżnić jego podstawowym kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="91dcd-278">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu w strumieniu, ale nie zostaną opróżnione kodera stanu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="91dcd-279">Dzięki temu koder ma zachowywać stan (częściowe znaki), aby ją poprawnie kodowania kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="91dcd-280">Ten scenariusz dotyczy UTF8 i UTF7, w której niektóre znaki mogą być kodowane tylko po otrzymaniu koder sąsiedniego znaku ani znaków.</span><span class="sxs-lookup"><span data-stu-id="91dcd-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-281">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="91dcd-282">`myTextListener` używa <xref:System.IO.FileStream> o nazwie `myFileStream` można zapisać do pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="91dcd-283">Przykład tworzy strumień, otwiera plik, jeśli istnieje lub tworzy nowy, zapisuje jednego wiersza tekstu do pliku i następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-284">Zwiększa bieżącego <see cref="P:System.Diagnostics.Debug.IndentLevel" /> o jeden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91dcd-285">Ustawia poziom wcięcia, emituje komunikaty debugowania w następującym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="91dcd-286">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="91dcd-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Debug.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-287">Pobiera lub ustawia poziom wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91dcd-288">Poziom wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-288">The indent level.</span>
          </span>
          <span data-ttu-id="91dcd-289">Wartość domyślna to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-290"><xref:System.Diagnostics.Debug.IndentLevel%2A> Właściwość reprezentuje liczbę wcięcie rozmiar <xref:System.Diagnostics.Debug.IndentSize%2A> została zastosowana.</span><span class="sxs-lookup"><span data-stu-id="91dcd-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-291">Ustawia poziom wcięcia, emituje komunikaty debugowania w następującym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="91dcd-292">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="91dcd-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Debug.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-293">Pobiera lub ustawia liczbę spacji w wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91dcd-294">Liczba spacji w wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="91dcd-295">Wartość domyślna to 4.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-296">A <xref:System.Diagnostics.TextWriterTraceListener> interpretuje tego numeru jako spacje.</span><span class="sxs-lookup"><span data-stu-id="91dcd-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="91dcd-297"><xref:System.Diagnostics.EventLogTraceListener> Ignoruje tę wartość.</span><span class="sxs-lookup"><span data-stu-id="91dcd-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="91dcd-298">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można również edytować plik konfiguracji odpowiadającej nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="91dcd-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="91dcd-299">Plik konfiguracji powinien być sformatowany, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Debug.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-300">Pobiera kolekcję obiektów nasłuchujących monitorowaną danych wyjściowych debugowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91dcd-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> reprezentujący kolekcję typu <see cref="T:System.Diagnostics.TraceListener" /> który monitoruje danych wyjściowych debugowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-302">Odbiorniki utworzyć sformatowane dane wyjściowe z danych wyjściowych debugowania.</span><span class="sxs-lookup"><span data-stu-id="91dcd-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="91dcd-303">Domyślnie kolekcja zawiera wystąpienie <xref:System.Diagnostics.DefaultTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="91dcd-304">Aby usunąć odbiornik domyślne, należy wywołać <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> metody i przekaż go wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="91dcd-305">Przekierowywanie danych wyjściowych do okna konsoli, należy dodać wystąpienia <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="91dcd-306">Aby przekierować dane wyjściowe do pliku lub strumienia, dodać wystąpienia <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="91dcd-307"><xref:System.Diagnostics.Debug.Listeners%2A> Kolekcji jest udostępniany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornik śledzenia do każdej klasy dodaje odbiornika do obu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-308">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> wyjściowe ekranu konsoli.</span><span class="sxs-lookup"><span data-stu-id="91dcd-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="91dcd-309">Kod następnie dodaje nowe odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="91dcd-310">do pracy z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="91dcd-311">Żądanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; skojarzone wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-312">Zapisuje komunikat następuje terminator wiersza do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Print : string -&gt; unit" Usage="System.Diagnostics.Debug.Print message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-313">Wiadomość do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-314">Zapisuje komunikat następuje terminator wiersza do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-315">Terminator wiersza domyślny jest znak powrotu karetki następuje znak wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="91dcd-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="91dcd-316">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Print : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Print (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="91dcd-317">Ciąg formatu złożony, który zawiera tekst zmieszać zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="91dcd-318">Tablica obiektów zawierających zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-319">Zapisuje ciąg formatowania, następuje terminator wiersza do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-320">Ta metoda używa programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="91dcd-321">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91dcd-322">
            <paramref name="format" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="91dcd-323">
            <paramref name="format" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="91dcd-324">- lub - liczba, która wskazuje argument formatu nie może być większa niż zero, większa niż lub równe liczba określonych obiektów do formatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-324">-or-  The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-325">Zmniejsza bieżącego <see cref="P:System.Diagnostics.Debug.IndentLevel" /> o jeden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-325">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91dcd-326">Ustawia poziom wcięcia, emituje komunikaty debugowania w następującym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-326">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="91dcd-327">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="91dcd-327">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-328">Zapisuje informacje na temat debugowania do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-328">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Debug.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91dcd-329">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-329">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-330">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-330">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-331">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-331">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-332">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-332">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-333">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-333">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-334">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-334">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-335">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-335">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-336">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-336">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-337">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-337">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-338">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-338">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Debug.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-339">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-339">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-340">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-340">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-341">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-341">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-342">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-342">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-343">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-343">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-344">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-344">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-345">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-345">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-346">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-346">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-347">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-347">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-348">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-348">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91dcd-349">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-349">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-350">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-350">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-351">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-351">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-352">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-352">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-353">Użyj `category` komunikaty wyjściowe parametru do grupy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-353">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-354">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-354">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-355">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-355">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-356">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-356">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-357">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-357">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-358">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-358">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-359">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-359">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-360">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-360">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-361">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-361">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-362">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-362">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-363">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-363">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-364">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-364">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-365">Użyj `category` komunikaty wyjściowe parametru do grupy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-365">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-366">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-366">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-367">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-367">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-368">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-368">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-369">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-369">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-370">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-370">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-371">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-371">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-372">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-372">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-373">Zapisuje informacje na temat debugowania do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-373">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-374">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-374">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-375">Jeśli warunek nie jest <see langword="true" />, wartość jest zapisywany w odbiorniki śledzenia w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-375">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="91dcd-376">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-376">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-377">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-377">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-378">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-378">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-379">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-379">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-380">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-380">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-381">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-381">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-382">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych imię wartość parametru <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-382">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-383">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-383">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-384">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych komunikatów na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-384">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-385">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-385">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-386">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.Write — ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-386">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-387">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-387">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-388">Jeśli warunek nie jest <see langword="true" />, odbiorniki śledzenia w kolekcji jest zapisywany komunikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-388">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-389">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-389">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-390">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-390">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-391">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-391">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-392">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-392">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-393">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-393">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-394">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-394">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-395">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-395">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-396">Więcej informacji o dodawaniu odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-396">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-397">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-397">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-398">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-398">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-399">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.Write — ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-399">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-400">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-400">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-401">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wartości są zapisywane w odbiorniki śledzenia w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-401">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="91dcd-402">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-402">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-403">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-403">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-404">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-404">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-405">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-405">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-406">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-406">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-407">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-407">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-408">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-408">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-409">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-409">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-410">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych nazwę `myObject` i `category` do <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-410">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-411">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-411">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-412">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-412">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-413">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-413">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-414">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.Write — ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-414">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-415">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-415">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-416">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wiadomości są zapisywane w odbiorniki śledzenia w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-416">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-417">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-417">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-418">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-418">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-419">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-419">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-420">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-420">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-421">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-421">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-422">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-422">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-423">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-423">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-424">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-424">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-425">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Verbose`, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-425">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-426">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-426">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-427">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Error` lub wyższym, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-427">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-428">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-428">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-429">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.Write — ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-429">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.Write("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-430">Zapisuje informacje na temat debugowania do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-430">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91dcd-431">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-431">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-432">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-432">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-433">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-433">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-434">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-434">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-435">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-435">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-436">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-436">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-437">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-437">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-438">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-438">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-439">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych nazwę obiektu w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-439">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="91dcd-440">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-440">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-441">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-441">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-442">Zapisuje komunikat następuje terminator wiersza do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-442">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-443">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-443">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-444">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-444">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-445">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-445">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-446">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-446">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-447">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-447">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-448">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-448">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-449">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-449">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-450">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-450">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="91dcd-451">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-451">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-452">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-452">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-453">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-453">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-454">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-454">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-455">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-455">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-456">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-456">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-457">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-457">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-458">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-458">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-459">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-459">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-460">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-460">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-461">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-461">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-462">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="91dcd-462">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="91dcd-463">Ciąg formatu złożony, który zawiera tekst zmieszać zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-463">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="91dcd-464">Tablica obiektów zawiera zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-464">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-465">Zapisuje komunikat sformatowany następuje terminator wiersza do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-465">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-466">Ta metoda używa programu .NET Framework, aby przekonwertować wartość obiektu do jego reprezentacja tekstowa i osadzanie tego reprezentacja w ciągu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-466">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="91dcd-467">Słowo kluczowe w składni dla tej metody oznacza, że tablica obiektów może być pojedynczą wartość.</span><span class="sxs-lookup"><span data-stu-id="91dcd-467">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="91dcd-468">Wyjątkiem jest <xref:System.String> obiektu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-468">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="91dcd-469">Jawne przeciążenia pierwszeństwo, dlatego `arg` domyślnie zostanie ustawiona wartość jednego ciągu <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-469">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="91dcd-470">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-470">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-471">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-471">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="91dcd-472">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-472">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-473">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-473">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-474">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-474">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-475">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-475">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-476">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-476">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-477">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-477">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-478">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-478">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-479">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-479">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-480">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-480">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-481">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-481">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-482">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie i `category` na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-482">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="91dcd-483">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-483">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91dcd-484">Zapisuje informacje na temat debugowania do odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-484">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-485">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-485">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-486">Jeśli warunek nie jest <see langword="true" />, wartość jest zapisywany w odbiorniki śledzenia w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-486">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="91dcd-487">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-487">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-488">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-488">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-489">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-489">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-490">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-490">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-491">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-491">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-492">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-492">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-493">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-493">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-494">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-494">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-495">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych nazwę obiektu w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="91dcd-495">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="91dcd-496">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-496">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-497">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.WriteLine ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteLineIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-497">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-498">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-498">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-499">Jeśli warunek nie jest <see langword="true" />, odbiorniki śledzenia w kolekcji jest zapisywany komunikat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-499">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-500">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-500">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-501">Zapisuje komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-501">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-502">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-502">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-503">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-503">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-504">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-504">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-505">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-505">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-506">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-506">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-507">Więcej informacji o dodawaniu odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-507">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-508">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-508">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-509">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-509">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-510">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.WriteLine ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteLineIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-510">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-511">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-511">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="91dcd-512">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wartości są zapisywane w odbiorniki śledzenia w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-512">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="91dcd-513">Obiekt, którego nazwa jest wysyłane do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-513">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-514">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-514">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-515">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metodę odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-515">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-516">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-516">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-517">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-517">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-518">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-518">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-519">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-519">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-520">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-520">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-521">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-521">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-522">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-522">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-523">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ma ustawioną wartość `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-523">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="91dcd-524">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-524">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-525">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.WriteLine ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteLineIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-525">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="91dcd-526">
            <see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-526">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="91dcd-527">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-527">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="91dcd-528">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-528">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91dcd-529">Zapisuje nazwę kategorii i komunikat odbiorniki śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli wynikiem warunku jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-529">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91dcd-530">Domyślnie dane wyjściowe są zapisywane na wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-530">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="91dcd-531">`category` Parametr może służyć do grupowania komunikaty wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="91dcd-531">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="91dcd-532">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metody obiektu nasłuchującego śledzenia.</span><span class="sxs-lookup"><span data-stu-id="91dcd-532">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91dcd-533">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="91dcd-533">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="91dcd-534">Ta opcja jest ustawiona poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="91dcd-534">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="91dcd-535">Jeśli przełącznik ma ustawioną wartość <xref:System.Diagnostics.TraceLevel> `Error` lub nowszym, przykładzie danych wyjściowych pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="91dcd-535">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="91dcd-536">Informacje na temat dodawania odbiornika do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="91dcd-536">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="91dcd-537">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykładzie danych wyjściowych drugi komunikat o błędzie i `category` na tym samym wierszu co pierwszy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="91dcd-537">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="91dcd-538">Terminator wiersza wynika to drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="91dcd-538">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="91dcd-539">
            <para>Można zminimalizować spadek wydajności z Instrumentacji aplikacji przy użyciu <see langword="If...Then" /> instrukcje zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcje. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Jednak pierwszym przykładzie przebiega szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i jest generowany żadnych danych wyjściowych śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszym przykładzie: "" csharp if(mySwitch.TraceError) Debug.WriteLine ("aNumber =" + aNumber + "poza zakresem"); "" Drugi przykład: "" csharp Debug.WriteLineIf (mySwitch.TraceError, "aNumber =" + aNumber + "poza zakresem"); \`\`\`</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="91dcd-539">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp if(mySwitch.TraceError) Debug.WriteLine("aNumber = " + aNumber + " out of range"); ```  Second example:  ```csharp Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range"); ```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>