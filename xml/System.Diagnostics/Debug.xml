<Type Name="Debug" FullName="System.Diagnostics.Debug">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="70fd4f1097cac9c50c7716f7fb4e32c961510b48" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39871312" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Debug" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Debug extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debug" />
  <TypeSignature Language="VB.NET" Value="Public Class Debug" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debug abstract sealed" />
  <TypeSignature Language="F#" Value="type Debug = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="49741-101">Udostępnia zestaw metod i właściwości pomagających w debugowaniu kodu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49741-101">Provides a set of methods and properties that help debug your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-102">Jeśli używasz metody <xref:System.Diagnostics.Debug> klasy do drukowania informacji o debugowaniu i sprawdź swoją logikę z potwierdzeniami, użytkownik może uczynić kod działał on bardziej niezawodnie bez wywierania wpływu na wydajność i kod rozmiar produktu wysyłki.</span><span class="sxs-lookup"><span data-stu-id="49741-102">If you use methods in the <xref:System.Diagnostics.Debug> class to print debugging information and check your logic with assertions, you can make your code more robust without impacting the performance and code size of your shipping product.</span></span>  
  
 <span data-ttu-id="49741-103">Ta klasa dostarcza metody, aby wyświetlić <xref:System.Diagnostics.Debug.Assert%2A> okno dialogowe i aby emitować potwierdzenie, że zawsze zakończą się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="49741-103">This class provides methods to display an <xref:System.Diagnostics.Debug.Assert%2A> dialog box, and to emit an assertion that will always fail.</span></span> <span data-ttu-id="49741-104">Ta klasa dostarcza metody zapisu w następujących zmian: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> i <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-104">This class provides write methods in the following variations: <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A> and <xref:System.Diagnostics.Debug.WriteLineIf%2A>.</span></span>  
  
 <span data-ttu-id="49741-105"><xref:System.Diagnostics.BooleanSwitch> i <xref:System.Diagnostics.TraceSwitch> klasy zapewnia sposób dynamicznie kontrolować dane wyjściowe śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-105">The <xref:System.Diagnostics.BooleanSwitch> and <xref:System.Diagnostics.TraceSwitch> classes provide means to dynamically control the tracing output.</span></span> <span data-ttu-id="49741-106">Można zmodyfikować wartości tych przełączników, bez konieczności ponownego kompilowania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-106">You can modify the values of these switches without recompiling your application.</span></span> <span data-ttu-id="49741-107">Instrukcje dotyczące przy użyciu pliku konfiguracji, aby ustawić przełącznik, zobacz <xref:System.Diagnostics.Switch> klasy i [przełączniki śledzenia](~/docs/framework/debug-trace-profile/trace-switches.md) tematu.</span><span class="sxs-lookup"><span data-stu-id="49741-107">For information on using the configuration file to set a switch, see the <xref:System.Diagnostics.Switch> class and the [Trace Switches](~/docs/framework/debug-trace-profile/trace-switches.md) topic.</span></span>  
  
 <span data-ttu-id="49741-108">Dane wyjściowe śledzenia docelowych można dostosować, dodając <xref:System.Diagnostics.TraceListener> wystąpień do lub usuwanie wystąpień z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-108">You can customize the tracing output's target by adding <xref:System.Diagnostics.TraceListener> instances to or removing instances from the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="49741-109"><xref:System.Diagnostics.Debug.Listeners%2A> Kolekcji jest współużytkowany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornika śledzenia, albo klasą dodaje odbiornika na wartość oba.</span><span class="sxs-lookup"><span data-stu-id="49741-109">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span> <span data-ttu-id="49741-110">Domyślnie <xref:System.Diagnostics.DefaultTraceListener> klasy emituje danych wyjściowych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-110">By default, the <xref:System.Diagnostics.DefaultTraceListener> class emits trace output.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-111">Dodawanie odbiornika śledzenia, aby <xref:System.Diagnostics.Debug.Listeners%2A> bezużytecznych może powodować zgłoszenie wyjątku podczas śledzenia, jeśli zasób stosowany przez odbiornik śledzenia nie jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="49741-111">Adding a trace listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</span></span> <span data-ttu-id="49741-112">Warunki wyjątku są zależne od odbiornika śledzenia i nie można wyliczyć w tym temacie.</span><span class="sxs-lookup"><span data-stu-id="49741-112">The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</span></span> <span data-ttu-id="49741-113">Może być przydatne do wywołania <xref:System.Diagnostics.Debug> metody `try` / `catch` bloki wykrywania i obsługi wszystkich wyjątków z detektorów śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-113">It may be useful to place calls to the <xref:System.Diagnostics.Debug> methods in `try`/`catch` blocks to detect and handle any exceptions from trace listeners.</span></span>  
  
 <span data-ttu-id="49741-114">Możesz zmodyfikować poziom wcięcia przy użyciu <xref:System.Diagnostics.Debug.Indent%2A> metody lub <xref:System.Diagnostics.Debug.IndentLevel%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-114">You can modify the level of indentation using the <xref:System.Diagnostics.Debug.Indent%2A> method or the <xref:System.Diagnostics.Debug.IndentLevel%2A> property.</span></span> <span data-ttu-id="49741-115">Aby zmodyfikować wielkość wcięcia, użyj <xref:System.Diagnostics.Debug.IndentSize%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-115">To modify the indent spacing, use the <xref:System.Diagnostics.Debug.IndentSize%2A> property.</span></span> <span data-ttu-id="49741-116">Można określić, czy ma być automatycznie opróżniania buforu wyjściowego po każdym zapisie, ustawiając <xref:System.Diagnostics.Debug.AutoFlush%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="49741-116">You can specify whether to automatically flush the output buffer after each write by setting the <xref:System.Diagnostics.Debug.AutoFlush%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="49741-117">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można edytować plik konfiguracji, odpowiadający nazwę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-117">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="49741-118">Plik konfiguracyjny powinny być sformatowane, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="49741-118">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="49741-119"><xref:System.Diagnostics.ConditionalAttribute> Atrybut jest stosowany do metod <xref:System.Diagnostics.Debug>.</span><span class="sxs-lookup"><span data-stu-id="49741-119">The <xref:System.Diagnostics.ConditionalAttribute> attribute is applied to the methods of <xref:System.Diagnostics.Debug>.</span></span> <span data-ttu-id="49741-120">Kompilatory, które obsługują <xref:System.Diagnostics.ConditionalAttribute> ignorować wywołania tych metod, chyba że "DEBUG" jest zdefiniowany jako symbole kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="49741-120">Compilers that support <xref:System.Diagnostics.ConditionalAttribute> ignore calls to these methods unless "DEBUG" is defined as a conditional compilation symbol.</span></span> <span data-ttu-id="49741-121">Można znaleźć w dokumentacji kompilatora, aby określić, czy <xref:System.Diagnostics.ConditionalAttribute> jest obsługiwana i Składnia służąca do definiowania symbolu kompilacji warunkowej.</span><span class="sxs-lookup"><span data-stu-id="49741-121">Refer to a compiler's documentation to determine whether <xref:System.Diagnostics.ConditionalAttribute> is supported and the syntax for defining a conditional compilation symbol.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="49741-122">W projektach programu Visual Studio C# i Visual Basic, domyślnie symbol kompilacji warunkowej "Debugowanie" jest zdefiniowany dla kompilacji debugowania, a symbol "Śledzenia" zdefiniowano zarówno debug i release kompiluje.</span><span class="sxs-lookup"><span data-stu-id="49741-122">In Visual Studio C# and Visual Basic projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</span></span> <span data-ttu-id="49741-123">Aby uzyskać informacje o sposobie wyłączyć to zachowanie, zobacz dokumentację programu Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="49741-123">For information about how to disable this behavior, see the Visual Studio documentation.</span></span> <span data-ttu-id="49741-124">Aby dowiedzieć się, jak warunkowe debugowania w programie Visual C++, zobacz [klasy Debug (C + +/ interfejsu wiersza polecenia)](/cpp/dotnet/debug-class-cpp-cli).</span><span class="sxs-lookup"><span data-stu-id="49741-124">For information about conditional debugging in Visual C++, see [Debug Class (C++/CLI)](/cpp/dotnet/debug-class-cpp-cli).</span></span>
  
 <span data-ttu-id="49741-125">Aby zdefiniować symbol kompilacji warunkowej "Debugowanie" w języku C#, należy dodać `/d:DEBUG` opcję wiersza polecenia kompilatora podczas kompilowania kodu przy użyciu wiersza polecenia lub dodać `#define DEBUG` na początku pliku.</span><span class="sxs-lookup"><span data-stu-id="49741-125">To define the "DEBUG" conditional compilation symbol in C#, add the `/d:DEBUG` option to the compiler command line when you compile your code using a command line, or add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="49741-126">W języku Visual Basic należy dodać `/d:DEBUG=True` opcję kompilatora w wierszu polecenia lub dodać `#Const DEBUG=True` do pliku.</span><span class="sxs-lookup"><span data-stu-id="49741-126">In Visual Basic, add the `/d:DEBUG=True` option to the compiler command line or add `#Const DEBUG=True` to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-127">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug> do wskazania rozpoczęcie i zakończenie wykonywania programu.</span><span class="sxs-lookup"><span data-stu-id="49741-127">The following example uses <xref:System.Diagnostics.Debug> to indicate the beginning and end of a program's execution.</span></span> <span data-ttu-id="49741-128">W przykładzie użyto również <xref:System.Diagnostics.Debug.Indent%2A> i <xref:System.Diagnostics.Debug.Unindent%2A> odróżnić dane wyjściowe śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-128">The example also uses <xref:System.Diagnostics.Debug.Indent%2A> and <xref:System.Diagnostics.Debug.Unindent%2A> to distinguish the tracing output.</span></span>  
  
 [!code-cpp[Classic Debug Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug Example/CS/source.cs#1)]
 [!code-vb[Classic Debug Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="49741-129">Ten typ jest bezpieczny wątkowo.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49741-129">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Diagnostics.Trace" />
    <altmember cref="T:System.Diagnostics.Switch" />
    <altmember cref="T:System.Diagnostics.BooleanSwitch" />
    <altmember cref="T:System.Diagnostics.TraceSwitch" />
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLogTraceListener" />
    <altmember cref="T:System.Diagnostics.TraceListenerCollection" />
    <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Assert">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-130">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wysyła wiadomości i wyświetla okno komunikatu, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-130">Checks for a condition; if the condition is <see langword="false" />, outputs messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition);" />
      <MemberSignature Language="F#" Value="static member Assert : bool -&gt; unit" Usage="System.Diagnostics.Debug.Assert condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-131">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-131">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-132">Jeśli warunek nie jest <see langword="true" />, komunikat o błędzie nie są wysyłane i nie jest wyświetlana w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-132">If the condition is <see langword="true" />, a failure message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-133">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, wyświetla okno komunikatu, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-133">Checks for a condition; if the condition is <see langword="false" />, displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-134">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w kompilacjach do debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-134">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="49741-135">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metody, jeśli chcesz zrobić potwierdzenia w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="49741-135">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="49741-136">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="49741-136">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49741-137">`Assert` Metod nie są dostępne dla [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-137">The `Assert` methods are not available for [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] apps.</span></span>  
  
 <span data-ttu-id="49741-138">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> metoda służy do identyfikowania błędów logicznych, podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="49741-138">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="49741-139"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="49741-139"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="49741-140">Jeśli wynik jest `false`, wysyła komunikat o błędzie do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-140">If the result is `false`, it sends a failure message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="49741-141">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-141">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="49741-142">Gdy aplikacja zostanie uruchomiona w trybie interfejsu użytkownika, wyświetla okno komunikatu, który pokazuje stos wywołań z pliku i numery wierszy.</span><span class="sxs-lookup"><span data-stu-id="49741-142">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="49741-143">W oknie komunikatu zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="49741-143">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="49741-144">Klikając **przerwać** przycisk kończy działanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-144">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="49741-145">Klikając **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje Otwórz debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="49741-145">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="49741-146">Klikając **Ignoruj** będzie kontynuowane z użyciem następnej instrukcji w kodzie.</span><span class="sxs-lookup"><span data-stu-id="49741-146">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]<span data-ttu-id="49741-147"> aplikacje nie obsługują modalnych okien dialogowych, dzięki czemu zachowują się podobnie w trybie interfejsu niezwiązanych z użytkownikiem i tryb interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="49741-147"> apps do not support modal dialog boxes, so they behave the same in user interface mode and non-user interface mode.</span></span> <span data-ttu-id="49741-148">Wiadomości są zapisywane do detektorów śledzenia active w trybie debugowania lub żaden komunikat nie są zapisywane w trybie wydania.</span><span class="sxs-lookup"><span data-stu-id="49741-148">The message is written to the active trace listeners in debugging mode, or no message is written in release mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-149">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-149">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-150">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-150">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-151"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-151">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-152">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-152">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="49741-153">W tym pliku, możesz włączyć i wyłączyć w oknie komunikatu potwierdzenia lub <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-153">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="49741-154">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="49741-154">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="49741-155">Poniższy przykład tworzy indeks tablicy, wykonuje niektóre akcje, aby ustawić wartość indeksu, a następnie wywołuje <xref:System.Diagnostics.Debug.Assert%2A> aby upewnić się, że wartość indeksu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="49741-155">The following example creates an index for an array, performs some action to set the value of the index, and then calls <xref:System.Diagnostics.Debug.Assert%2A> to confirm that the index value is valid.</span></span> <span data-ttu-id="49741-156">Jeśli nie jest prawidłowy, <xref:System.Diagnostics.Debug.Assert%2A> przesyła stos wywołań.</span><span class="sxs-lookup"><span data-stu-id="49741-156">If it is not valid, <xref:System.Diagnostics.Debug.Assert%2A> outputs the call stack.</span></span>  
  
 [!code-cpp[Classic Debug.Assert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-157">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-157">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-158">Jeśli warunek nie jest <see langword="true" />określony komunikat nie są wysyłane i nie jest wyświetlana w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-158">If the condition is <see langword="true" />, the specified message is not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-159">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-159">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-160">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje określony komunikat i wyświetla okno komunikatu, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-160">Checks for a condition; if the condition is <see langword="false" />, outputs a specified message and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-161">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w kompilacjach do debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-161">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="49741-162">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metody, jeśli chcesz zrobić potwierdzenia w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="49741-162">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="49741-163">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="49741-163">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="49741-164">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%2A> metoda służy do identyfikowania błędów logicznych, podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="49741-164">Typically, the <xref:System.Diagnostics.Debug.Assert%2A> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="49741-165"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="49741-165"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="49741-166">Jeśli wynik jest `false`, wysyła określony komunikat diagnostyczny do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-166">If the result is `false`, it sends the specified diagnostic message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="49741-167">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-167">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="49741-168">Gdy aplikacja zostanie uruchomiona w trybie interfejsu użytkownika, wyświetla okno komunikatu, który pokazuje stos wywołań z pliku i numery wierszy.</span><span class="sxs-lookup"><span data-stu-id="49741-168">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="49741-169">W oknie komunikatu zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="49741-169">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="49741-170">Klikając **przerwać** przycisk kończy działanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-170">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="49741-171">Klikając **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje Otwórz debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="49741-171">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="49741-172">Klikając **Ignoruj** będzie kontynuowane z użyciem następnej instrukcji w kodzie.</span><span class="sxs-lookup"><span data-stu-id="49741-172">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-173">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-173">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-174">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-174">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-175"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-175">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-176">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-176">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="49741-177">W tym pliku, możesz włączyć i wyłączyć w oknie komunikatu potwierdzenia lub <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-177">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="49741-178">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="49741-178">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="49741-179">Następujące testy przykład czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="49741-179">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="49741-180">Jeśli `type` jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-180">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs a message.</span></span>  
  
 [!code-cpp[Classic Debug.Assert1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-181">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-181">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-182">Jeśli warunek nie jest <see langword="true" />, nie są wysyłane wiadomości określony i nie jest wyświetlana w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-182">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-183">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-183">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="49741-184">Szczegółowy komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-184">The detailed message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-185">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje dwa komunikaty określonego i wyświetla okno komunikatu, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-185">Checks for a condition; if the condition is <see langword="false" />, outputs two specified messages and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-186">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w kompilacjach do debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-186">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="49741-187">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metody, jeśli chcesz zrobić potwierdzenia w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="49741-187">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="49741-188">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="49741-188">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="49741-189">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> metoda służy do identyfikowania błędów logicznych, podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="49741-189">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="49741-190"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="49741-190"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="49741-191">Jeśli wynik jest `false`, wysyła określony komunikat diagnostyczny i szczegółowy komunikat do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-191">If the result is `false`, it sends the specified diagnostic message and detailed message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="49741-192">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-192">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="49741-193">Gdy aplikacja zostanie uruchomiona w trybie interfejsu użytkownika, wyświetla okno komunikatu, który pokazuje stos wywołań z pliku i numery wierszy.</span><span class="sxs-lookup"><span data-stu-id="49741-193">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="49741-194">W oknie komunikatu zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="49741-194">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="49741-195">Klikając **przerwać** przycisk kończy działanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-195">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="49741-196">Klikając **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje Otwórz debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="49741-196">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="49741-197">Klikając **Ignoruj** będzie kontynuowane z użyciem następnej instrukcji w kodzie.</span><span class="sxs-lookup"><span data-stu-id="49741-197">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-198">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-198">The display of the message box depends on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-199">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-199">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-200"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-200">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-201">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-201">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="49741-202">W tym pliku, możesz włączyć i wyłączyć w oknie komunikatu potwierdzenia lub <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-202">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="49741-203">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="49741-203">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="49741-204">Następujące testy przykład czy `type` parametr jest prawidłowy.</span><span class="sxs-lookup"><span data-stu-id="49741-204">The following example checks whether the `type` parameter is valid.</span></span> <span data-ttu-id="49741-205">Jeśli `type` jest `null`, <xref:System.Diagnostics.Trace.Assert%2A> generuje dwa komunikaty.</span><span class="sxs-lookup"><span data-stu-id="49741-205">If `type` is `null`, <xref:System.Diagnostics.Trace.Assert%2A> outputs two messages.</span></span>  
  
 [!code-cpp[Classic Debug.Assert2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Assert2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Assert2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Assert2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Assert">
      <MemberSignature Language="C#" Value="public static void Assert (bool condition, string message, string detailMessageFormat, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Assert(bool condition, string message, string detailMessageFormat, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Assert (condition As Boolean, message As String, detailMessageFormat As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Assert(bool condition, System::String ^ message, System::String ^ detailMessageFormat, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Assert : bool * string * string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Assert (condition, message, detailMessageFormat, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessageFormat" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-206">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-206">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-207">Jeśli warunek nie jest <see langword="true" />, nie są wysyłane wiadomości określony i nie jest wyświetlana w oknie komunikatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-207">If the condition is <see langword="true" />, the specified messages are not sent and the message box is not displayed.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-208">Komunikat do wysłania do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-208">The message to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
        </param>
        <param name="detailMessageFormat">
          <span data-ttu-id="49741-209">Ciąg formatu złożonego, aby wysłać do <see cref="P:System.Diagnostics.Trace.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-209">The composite format string to send to the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</span>
          </span>
          <span data-ttu-id="49741-210">Ten komunikat zawiera tekst zmieszać z zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>args</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-210">This message contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="49741-211">Tablica obiektów zawiera zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-211">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-212">Sprawdza, czy warunek; Jeśli warunek nie jest <see langword="false" />, generuje dwa komunikaty (proste i sformatowany) i wyświetla okno komunikatu, który pokazuje stosu wywołań.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-212">Checks for a condition; if the condition is <see langword="false" />, outputs two messages (simple and formatted) and displays a message box that shows the call stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-213">Ta metoda używa programu .NET Framework, aby dokonać konwersji wartości obiektu na jego reprezentację tekstową i osadza tę reprezentację w ciągu.</span><span class="sxs-lookup"><span data-stu-id="49741-213">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="49741-214">Wynikowy ciąg jest wysyłana do <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-214">The resulting string is sent to the <xref:System.Diagnostics.Trace.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="49741-215">Domyślnie <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> metoda działa tylko w kompilacjach do debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-215">By default, the <xref:System.Diagnostics.Debug.Assert%2A?displayProperty=nameWithType> method works only in debug builds.</span></span> <span data-ttu-id="49741-216">Użyj <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> metody, jeśli chcesz zrobić potwierdzenia w wersji kompilacji.</span><span class="sxs-lookup"><span data-stu-id="49741-216">Use the <xref:System.Diagnostics.Trace.Assert%2A?displayProperty=nameWithType> method if you want to do assertions in release builds.</span></span> <span data-ttu-id="49741-217">Aby uzyskać więcej informacji, zobacz [potwierdzenia w kodzie zarządzany](/visualstudio/debugger/assertions-in-managed-code).</span><span class="sxs-lookup"><span data-stu-id="49741-217">For more information, see [Assertions in Managed Code](/visualstudio/debugger/assertions-in-managed-code).</span></span>  
  
 <span data-ttu-id="49741-218">Zazwyczaj <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> metoda służy do identyfikowania błędów logicznych, podczas tworzenia programu.</span><span class="sxs-lookup"><span data-stu-id="49741-218">Typically, the <xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> method is used to identify logic errors during program development.</span></span> <span data-ttu-id="49741-219"><xref:System.Diagnostics.Debug.Assert%2A> oblicza warunku.</span><span class="sxs-lookup"><span data-stu-id="49741-219"><xref:System.Diagnostics.Debug.Assert%2A> evaluates the condition.</span></span> <span data-ttu-id="49741-220">Jeśli wynik jest `false`, <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> metoda jest wywoływana i `detailMessageFormat` ciągu i `args` tablicy są przekazywane w jako parametry.</span><span class="sxs-lookup"><span data-stu-id="49741-220">If the result is `false`, The <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method is called and the `detailMessageFormat` string and `args` array are passed in as parameters.</span></span> <span data-ttu-id="49741-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> następnie wysyła komunikat określony tekst i tekst sformatowany komunikat <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-221"><xref:System.Diagnostics.Debug.Assert%28System.Boolean%2CSystem.String%2CSystem.String%2CSystem.Object%5B%5D%29> then sends the specified text message and the formatted text message to the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span> <span data-ttu-id="49741-222">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-222">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="49741-223">Gdy aplikacja zostanie uruchomiona w trybie interfejsu użytkownika, wyświetla okno komunikatu, który pokazuje stos wywołań z pliku i numery wierszy.</span><span class="sxs-lookup"><span data-stu-id="49741-223">When the application runs in user interface mode, it displays a message box that shows the call stack with file and line numbers.</span></span> <span data-ttu-id="49741-224">W oknie komunikatu zawiera trzy przyciski: **przerwać**, **ponów**, i **Ignoruj**.</span><span class="sxs-lookup"><span data-stu-id="49741-224">The message box contains three buttons: **Abort**, **Retry**, and **Ignore**.</span></span> <span data-ttu-id="49741-225">Klikając **przerwać** przycisk kończy działanie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-225">Clicking the **Abort** button terminates the application.</span></span> <span data-ttu-id="49741-226">Klikając **ponów** wysyła do kodu w debugerze, jeśli aplikacja jest uruchomiona w debugerze lub oferuje Otwórz debugera, jeśli nie jest.</span><span class="sxs-lookup"><span data-stu-id="49741-226">Clicking **Retry** sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</span></span> <span data-ttu-id="49741-227">Klikając **Ignoruj** będzie kontynuowane z użyciem następnej instrukcji w kodzie.</span><span class="sxs-lookup"><span data-stu-id="49741-227">Clicking **Ignore** continues with the next instruction in the code.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-228">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-228">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-229">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-229">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-230"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-230">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-231">Można zmienić zachowanie <xref:System.Diagnostics.DefaultTraceListener> w pliku konfiguracji, który odpowiada nazwie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-231">You can change the behavior of the <xref:System.Diagnostics.DefaultTraceListener> in the configuration file that corresponds to the name of your application.</span></span> <span data-ttu-id="49741-232">W tym pliku, możesz włączyć i wyłączyć w oknie komunikatu potwierdzenia lub <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="49741-232">In this file, you can enable and disable the assert message box or set the <xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="49741-233">Plik konfiguracji powinien być sformatowany w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="49741-233">The configuration file should be formatted as follows:</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <assert assertuienabled="true" logfilename="c:\\myFile.log" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public static bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="System.Diagnostics.Debug.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49741-234">Pobiera lub ustawia wartość wskazującą czy <see cref="M:System.Diagnostics.Debug.Flush" /> powinna być wywoływana na <see cref="P:System.Diagnostics.Debug.Listeners" /> po każdym zapisie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-234">Gets or sets a value indicating whether <see cref="M:System.Diagnostics.Debug.Flush" /> should be called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49741-235">
            <see langword="true" /> Jeśli <see cref="M:System.Diagnostics.Debug.Flush" /> jest wywoływana w <see cref="P:System.Diagnostics.Debug.Listeners" /> po każdym zapisie; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-235">
              <see langword="true" /> if <see cref="M:System.Diagnostics.Debug.Flush" /> is called on the <see cref="P:System.Diagnostics.Debug.Listeners" /> after every write; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-236">Wartość domyślna to `false`.</span><span class="sxs-lookup"><span data-stu-id="49741-236">The default is `false`.</span></span>  
  
 <span data-ttu-id="49741-237">Opróżnianie strumienia nie opróżnić jego podstawowej kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-237">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="49741-238">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu do strumienia, ale nie zostaną opróżnione stanu kodera.</span><span class="sxs-lookup"><span data-stu-id="49741-238">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="49741-239">Dzięki temu kodera zapewnienie jego stan (częściowa znaków), aby ją poprawnie kodowanie kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="49741-239">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="49741-240">Ten scenariusz dotyczy UTF8 i UTF7, w których niektóre znaki mogą być zakodowane tylko po kodera odbiera sąsiadujących znak lub znaki.</span><span class="sxs-lookup"><span data-stu-id="49741-240">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
 <span data-ttu-id="49741-241">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można również edytować plik konfiguracji, odpowiadający nazwę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-241">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="49741-242">Plik konfiguracyjny powinny być sformatowane, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="49741-242">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="49741-243">za działanie z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-243">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="49741-244">Zapotrzebowanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-244">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Close" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Close();" />
      <MemberSignature Language="F#" Value="static member Close : unit -&gt; unit" Usage="System.Diagnostics.Debug.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49741-245">Opróżnia bufor wyjściowy, a następnie wywołuje <see langword="Close" /> metody na każdym <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-245">Flushes the output buffer and then calls the <see langword="Close" /> method on each of the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-246">Ta metoda danych wyjściowych trafia do pliku, takie jak do <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-246">Use this method when the output goes to a file, such as to the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-247">Opróżnianie strumienia nie opróżnić jego podstawowej kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-247">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="49741-248">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu do strumienia, ale nie zostaną opróżnione stanu kodera.</span><span class="sxs-lookup"><span data-stu-id="49741-248">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="49741-249">Dzięki temu kodera zapewnienie jego stan (częściowa znaków), aby ją poprawnie kodowanie kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="49741-249">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="49741-250">Ten scenariusz dotyczy UTF8 i UTF7, w których niektóre znaki mogą być zakodowane tylko po kodera odbiera sąsiadujących znak lub znaki.</span><span class="sxs-lookup"><span data-stu-id="49741-250">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-251">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="49741-251">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="49741-252">`myTextListener` używa <xref:System.IO.StreamWriter> o nazwie `myOutputWriter` do zapisu w pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="49741-252">`myTextListener` uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="49741-253">Przykład tworzy składnik zapisywania plików, stream i tekst, zapisuje jeden wiersz tekstu do pliku i następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="49741-253">The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="49741-254">za działanie z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-254">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="49741-255">Zapotrzebowanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-255">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Fail">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-256">Emituje komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-256">Emits an error message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Fail : string -&gt; unit" Usage="System.Diagnostics.Debug.Fail message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-257">Komunikat do emitowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-257">A message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-258">Generuje określony komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-258">Emits the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-259">Domyślnie jest to, że <xref:System.Diagnostics.DefaultTraceListener> wysyła wiadomości do okna komunikatu, gdy aplikacja jest uruchomiona w trybie interfejsu użytkownika oraz do <xref:System.Diagnostics.TraceListener> wystąpienia w <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-259">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-260">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-260">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-261">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-261">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-262"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-262">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-263">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-263">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-264">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug.Fail%2A> metodę, aby wydrukować komunikat podczas obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="49741-264">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#1)]  
  
 <span data-ttu-id="49741-265">Można również użyć <xref:System.Diagnostics.Debug.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="49741-265">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public static void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="static member Fail : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-266">Komunikat do emitowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-266">A message to emit.</span>
          </span>
        </param>
        <param name="detailMessage">
          <span data-ttu-id="49741-267">Szczegółowy komunikat do emitowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-267">A detailed message to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-268">Emituje komunikat o błędzie i szczegółowy komunikat o błędzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-268">Emits an error message and a detailed error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-269">Domyślnie jest to, że <xref:System.Diagnostics.DefaultTraceListener> wysyła wiadomości do okna komunikatu, gdy aplikacja jest uruchomiona w trybie interfejsu użytkownika oraz do <xref:System.Diagnostics.TraceListener> wystąpienia w <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-269">The default behavior is that the <xref:System.Diagnostics.DefaultTraceListener> outputs the message to a message box when the application is running in user interface mode and to the <xref:System.Diagnostics.TraceListener> instances in the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-270">Wyświetlanie okna komunikatu zależy od obecności <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-270">The display of the message box is dependent on the presence of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-271">Jeśli <xref:System.Diagnostics.DefaultTraceListener> nie znajduje się w <xref:System.Diagnostics.Trace.Listeners%2A> kolekcji, okno komunikatu nie jest wyświetlana.</span><span class="sxs-lookup"><span data-stu-id="49741-271">If the <xref:System.Diagnostics.DefaultTraceListener> is not in the <xref:System.Diagnostics.Trace.Listeners%2A> collection, the message box is not displayed.</span></span> <span data-ttu-id="49741-272"><xref:System.Diagnostics.DefaultTraceListener> Może zostać usunięty przez [ &lt;wyczyść&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), [ &lt;Usuń&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), lub przez wywołanie <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> metody <xref:System.Diagnostics.Trace.Listeners%2A> właściwości (`System.Diagnostics.Trace.Listeners.Clear()`).</span><span class="sxs-lookup"><span data-stu-id="49741-272">The <xref:System.Diagnostics.DefaultTraceListener> can be removed by the [&lt;clear&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md), the [&lt;remove&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md), or by calling the <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> method on the <xref:System.Diagnostics.Trace.Listeners%2A> property (`System.Diagnostics.Trace.Listeners.Clear()`).</span></span>  
  
 <span data-ttu-id="49741-273">To zachowanie można dostosować, dodając <xref:System.Diagnostics.TraceListener> , lub usunąć jedno z <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="49741-273">You can customize this behavior by adding a <xref:System.Diagnostics.TraceListener> to, or removing one from, the <xref:System.Diagnostics.Debug.Listeners%2A> collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-274">W poniższym przykładzie użyto <xref:System.Diagnostics.Debug.Fail%2A> metodę, aby wydrukować komunikat podczas obsługi wyjątku.</span><span class="sxs-lookup"><span data-stu-id="49741-274">The following example uses the <xref:System.Diagnostics.Debug.Fail%2A> method to print a message during exception handling.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Fail1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Fail1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="49741-275">Można również użyć <xref:System.Diagnostics.Debug.Fail%2A> metody w instrukcji switch.</span><span class="sxs-lookup"><span data-stu-id="49741-275">You can also use the <xref:System.Diagnostics.Debug.Fail%2A> method in a switch statement.</span></span>  
  
 [!code-cpp[Classic Debug.Fail1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Debug.Fail1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/CS/source.cs#2)]
 [!code-vb[Classic Debug.Fail1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Fail1 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public static void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Flush();" />
      <MemberSignature Language="F#" Value="static member Flush : unit -&gt; unit" Usage="System.Diagnostics.Debug.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49741-276">Opróżnia bufor danych wyjściowych i powoduje, że buforowane dane do zapisania <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-276">Flushes the output buffer and causes buffered data to write to the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-277">Opróżnianie strumienia nie opróżnić jego podstawowej kodera, chyba że jawnie wywołać <xref:System.Diagnostics.Debug.Flush%2A> lub <xref:System.Diagnostics.Debug.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-277">Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.Diagnostics.Debug.Flush%2A> or <xref:System.Diagnostics.Debug.Close%2A>.</span></span> <span data-ttu-id="49741-278">Ustawienie <xref:System.Diagnostics.Debug.AutoFlush%2A> do `true` oznacza, że dane zostaną opróżnione z buforu do strumienia, ale nie zostaną opróżnione stanu kodera.</span><span class="sxs-lookup"><span data-stu-id="49741-278">Setting <xref:System.Diagnostics.Debug.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="49741-279">Dzięki temu kodera zapewnienie jego stan (częściowa znaków), aby ją poprawnie kodowanie kolejny blok znaków.</span><span class="sxs-lookup"><span data-stu-id="49741-279">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="49741-280">Ten scenariusz dotyczy UTF8 i UTF7, w których niektóre znaki mogą być zakodowane tylko po kodera odbiera sąsiadujących znak lub znaki.</span><span class="sxs-lookup"><span data-stu-id="49741-280">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-281">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> o nazwie `myTextListener`.</span><span class="sxs-lookup"><span data-stu-id="49741-281">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`.</span></span> <span data-ttu-id="49741-282">`myTextListener` używa <xref:System.IO.FileStream> o nazwie `myFileStream` do zapisu w pliku o nazwie `TestFile.txt`.</span><span class="sxs-lookup"><span data-stu-id="49741-282">`myTextListener` uses a <xref:System.IO.FileStream> called `myFileStream` to write to a file named `TestFile.txt`.</span></span> <span data-ttu-id="49741-283">Przykład tworzy strumień, otwiera plik, jeśli istnieje lub tworzy nowy, zapisuje jeden wiersz tekstu do pliku, a następnie opróżnia i zamyka dane wyjściowe.</span><span class="sxs-lookup"><span data-stu-id="49741-283">The example creates the stream, opens the file if it exists or creates a new one, writes one line of text to the file, and then flushes and closes the output.</span></span>  
  
 [!code-cpp[Classic Debug.Close Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Close Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public static void Indent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Indent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Indent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Indent();" />
      <MemberSignature Language="F#" Value="static member Indent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Indent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49741-284">Zwiększa bieżącego <see cref="P:System.Diagnostics.Debug.IndentLevel" /> o jeden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-284">Increases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49741-285">Poniższy przykład ustawia poziom wcięcia i emituje komunikaty debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-285">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="49741-286">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="49741-286">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Unindent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <Member MemberName="IndentLevel">
      <MemberSignature Language="C#" Value="public static int IndentLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentLevel" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentLevel" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentLevel : int with get, set" Usage="System.Diagnostics.Debug.IndentLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49741-287">Pobiera lub ustawia poziom wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-287">Gets or sets the indent level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49741-288">Poziom wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-288">The indent level.</span>
          </span>
          <span data-ttu-id="49741-289">Wartość domyślna to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-289">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-290"><xref:System.Diagnostics.Debug.IndentLevel%2A> Właściwość reprezentuje liczbę wcięcie o rozmiarze <xref:System.Diagnostics.Debug.IndentSize%2A> jest stosowany.</span><span class="sxs-lookup"><span data-stu-id="49741-290">The <xref:System.Diagnostics.Debug.IndentLevel%2A> property represents the number of times the indent of size <xref:System.Diagnostics.Debug.IndentSize%2A> is applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-291">Poniższy przykład ustawia poziom wcięcia i emituje komunikaty debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-291">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="49741-292">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="49741-292">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IndentSize">
      <MemberSignature Language="C#" Value="public static int IndentSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IndentSize" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.IndentSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property IndentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IndentSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IndentSize : int with get, set" Usage="System.Diagnostics.Debug.IndentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49741-293">Pobiera lub ustawia liczbę spacji w wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-293">Gets or sets the number of spaces in an indent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49741-294">Liczba miejsc do magazynowania w wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-294">The number of spaces in an indent.</span>
          </span>
          <span data-ttu-id="49741-295">Wartość domyślna to cztery.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-295">The default is four.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-296">A <xref:System.Diagnostics.TextWriterTraceListener> interpretuje ten numer jako miejsca do magazynowania.</span><span class="sxs-lookup"><span data-stu-id="49741-296">A <xref:System.Diagnostics.TextWriterTraceListener> interprets this number as spaces.</span></span> <span data-ttu-id="49741-297"><xref:System.Diagnostics.EventLogTraceListener> Ignoruje tę wartość.</span><span class="sxs-lookup"><span data-stu-id="49741-297">An <xref:System.Diagnostics.EventLogTraceListener> ignores this value.</span></span>  
  
 <span data-ttu-id="49741-298">Aby ustawić <xref:System.Diagnostics.Debug.AutoFlush%2A> i <xref:System.Diagnostics.Debug.IndentSize%2A> dla <xref:System.Diagnostics.Debug>, można również edytować plik konfiguracji, odpowiadający nazwę aplikacji.</span><span class="sxs-lookup"><span data-stu-id="49741-298">To set the <xref:System.Diagnostics.Debug.AutoFlush%2A> and <xref:System.Diagnostics.Debug.IndentSize%2A> for <xref:System.Diagnostics.Debug>, you can also edit the configuration file corresponding to the name of your application.</span></span> <span data-ttu-id="49741-299">Plik konfiguracyjny powinny być sformatowane, jak pokazano w poniższym przykładzie.</span><span class="sxs-lookup"><span data-stu-id="49741-299">The configuration file should be formatted as shown in the following example.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="true" indentsize="7" />  
  </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debug.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.Debug.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49741-300">Pobiera kolekcję obiektów nasłuchujących monitorującym danych wyjściowych debugowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-300">Gets the collection of listeners that is monitoring the debug output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49741-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> reprezentuje kolekcję typu <see cref="T:System.Diagnostics.TraceListener" /> monitorująca danych wyjściowych debugowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-301">A <see cref="T:System.Diagnostics.TraceListenerCollection" /> representing a collection of type <see cref="T:System.Diagnostics.TraceListener" /> that monitors the debug output.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-302">Odbiorniki tworzyć sformatowane dane wyjściowe z danych wyjściowych debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-302">The listeners produce formatted output from the debug output.</span></span> <span data-ttu-id="49741-303">Domyślnie kolekcja zawiera wystąpienie <xref:System.Diagnostics.DefaultTraceListener> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-303">By default, the collection contains an instance of the <xref:System.Diagnostics.DefaultTraceListener> class.</span></span> <span data-ttu-id="49741-304">Aby usunąć odbiornik domyślne, wywołaj <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> metody i przekazać go wystąpienie <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-304">To remove the default listener, call the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method, and pass it the instance of the <xref:System.Diagnostics.DefaultTraceListener>.</span></span> <span data-ttu-id="49741-305">Aby przekierować dane wyjściowe w oknie konsoli, należy dodać wystąpienia <xref:System.Diagnostics.ConsoleTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-305">To redirect output to the console window, add an instance of the <xref:System.Diagnostics.ConsoleTraceListener>.</span></span> <span data-ttu-id="49741-306">Aby przekierować dane wyjściowe do pliku lub strumienia, dodaje wystąpienie <xref:System.Diagnostics.TextWriterTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-306">To redirect output to a file or stream, add an instance of the <xref:System.Diagnostics.TextWriterTraceListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49741-307"><xref:System.Diagnostics.Debug.Listeners%2A> Kolekcji jest współużytkowany przez oba <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy; Dodawanie odbiornika śledzenia, albo klasą dodaje odbiornika na wartość oba.</span><span class="sxs-lookup"><span data-stu-id="49741-307">The <xref:System.Diagnostics.Debug.Listeners%2A> collection is shared by both the <xref:System.Diagnostics.Debug> and the <xref:System.Diagnostics.Trace> classes; adding a trace listener to either class adds the listener to both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-308">Poniższy przykład tworzy <xref:System.Diagnostics.TextWriterTraceListener> wyjściowe ekranu konsoli.</span><span class="sxs-lookup"><span data-stu-id="49741-308">The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen.</span></span> <span data-ttu-id="49741-309">Ten kod dodaje nowy odbiornik do <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-309">The code then adds the new listener to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span>  
  
 [!code-cpp[Classic Debug.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Listeners Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="49741-310">za działanie z kodem niezarządzanym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-310">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="49741-311">Zapotrzebowanie wartość <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-311">Demand value <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Print">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-312">Zapisuje komunikat, a następnie terminator wiersza do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-312">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Print : string -&gt; unit" Usage="System.Diagnostics.Debug.Print message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-313">Wiadomość do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-313">The message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-314">Zapisuje komunikat, a następnie terminator wiersza do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-314">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-315">Terminator wiersza domyślną jest znak powrotu karetki i wysuwu wiersza.</span><span class="sxs-lookup"><span data-stu-id="49741-315">The default line terminator is a carriage return followed by a line feed.</span></span> <span data-ttu-id="49741-316">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-316">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static void Print (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Print(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Print(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Print (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Print(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Print : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.Print (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="49741-317">Ciąg formatu złożonego, który zawiera tekst zmieszać z zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>args</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-317">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="49741-318">Tablica obiektów zawierających zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-318">An object array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-319">Zapisuje sformatowany ciąg, a następnie terminator wiersza do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-319">Writes a formatted string followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-320">Ta metoda używa programu .NET Framework, aby dokonać konwersji wartości obiektu na jego reprezentację tekstową i osadza tę reprezentację w ciągu.</span><span class="sxs-lookup"><span data-stu-id="49741-320">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span> <span data-ttu-id="49741-321">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-321">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49741-322">
            <paramref name="format" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-322">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="49741-323">
            <paramref name="format" /> jest nieprawidłowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-323">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="49741-324">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-324">-or-</span>
          </span>
          <span data-ttu-id="49741-325">Liczba, która określa argument do formatowania jest mniejsza od zera, lub większa niż lub równe liczbie określonych obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-325">The number that indicates an argument to format is less than zero, or greater than or equal to the number of specified objects to format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unindent">
      <MemberSignature Language="C#" Value="public static void Unindent ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unindent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Unindent" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unindent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unindent();" />
      <MemberSignature Language="F#" Value="static member Unindent : unit -&gt; unit" Usage="System.Diagnostics.Debug.Unindent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49741-326">Zmniejsza bieżące <see cref="P:System.Diagnostics.Debug.IndentLevel" /> o jeden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-326">Decreases the current <see cref="P:System.Diagnostics.Debug.IndentLevel" /> by one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49741-327">Poniższy przykład ustawia poziom wcięcia i emituje komunikaty debugowania.</span><span class="sxs-lookup"><span data-stu-id="49741-327">The following example sets the indent level and emits debugging messages.</span></span>  
  
 [!code-cpp[Classic Debug.IndentLevel Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.IndentLevel Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.IndentLevel Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.IndentLevel Example/VB/source.vb#1)]  
  
 <span data-ttu-id="49741-328">Ten przykład generuje następujące wyniki:</span><span class="sxs-lookup"><span data-stu-id="49741-328">This example produces the following output:</span></span>  
  
```  
  
List of errors:  
     Error 1: File not found  
     Error 2: Directory not found  
End of list of errors  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.Debug.Indent" />
        <altmember cref="P:System.Diagnostics.Debug.IndentLevel" />
        <altmember cref="P:System.Diagnostics.Debug.IndentSize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-329">Zapisuje informacje na temat debugowania do detektorów śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-329">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Write : obj -&gt; unit" Usage="System.Diagnostics.Debug.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49741-330">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-330">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-331">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-331">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-332">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-332">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-333">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-333">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-334">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-334">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-335">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-335">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-336">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-336">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-337">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-337">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-338">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-338">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-339">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-339">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Write : string -&gt; unit" Usage="System.Diagnostics.Debug.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-340">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-340">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-341">Zapisuje komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-341">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-342">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-342">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-343">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-343">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-344">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-344">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-345">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-345">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-346">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-346">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-347">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-347">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-348">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-348">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-349">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-349">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49741-350">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-350">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-351">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-351">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-352">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-352">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-353">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-353">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-354">Użyj `category` parametru do grupy danych wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-354">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="49741-355">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-355">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-356">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-356">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-357">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-357">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-358">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-358">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-359">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-359">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-360">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-360">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-361">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-361">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.Write(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Write (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Write(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member Write : string * string -&gt; unit" Usage="System.Diagnostics.Debug.Write (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-362">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-362">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-363">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-363">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-364">Zapisuje nazwa kategorii i komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-364">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-365">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-365">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-366">Użyj `category` parametru do grupy danych wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-366">Use the `category` parameter to group output messages.</span></span>  
  
 <span data-ttu-id="49741-367">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-367">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-368">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-368">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-369">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-369">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-370">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-370">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-371">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-371">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-372">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-372">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-373">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-373">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.Write Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.Write Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.Write Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.Write Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.Write Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-374">Zapisuje informacje na temat debugowania do detektorów śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-374">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-375">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-375">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-376">Jeśli warunek nie jest <see langword="true" />, wartości są zapisywane do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-376">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="49741-377">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-377">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-378">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-378">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-379">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-379">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-380">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-380">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-381">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-381">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-382">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-382">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-383">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższym, przykład generuje imię wartość parametru <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-383">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first name of the value parameter to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-384">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-384">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-385">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje komunikat w tym samym wierszu jako pierwszy komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-385">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs a message on the same line as the first message.</span></span> <span data-ttu-id="49741-386">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-386">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-387">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-387">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-388">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-388">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-389">Jeśli warunek nie jest <see langword="true" />, zostanie napisany komunikat do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-389">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-390">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-390">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-391">Zapisuje komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-391">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-392">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-392">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-393">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-393">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-394">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-394">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-395">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-395">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-396">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-396">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-397">Informacje o dodawaniu odbiornik do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-397">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-398">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-398">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-399">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-399">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-400">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-400">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-401">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-401">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-402">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wartości, które są zapisywane do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-402">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="49741-403">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-403">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-404">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-404">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-405">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-405">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-406">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-406">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-407">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-407">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-408">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-408">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-409">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-409">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-410">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-410">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-411">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Verbose`, przykład generuje nazwę `myObject` i `category` do <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-411">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the name of the `myObject` and the `category` to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-412">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-412">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-413">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Error` lub wyższym, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-413">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-414">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-414">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-415">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-415">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteIf">
      <MemberSignature Language="C#" Value="public static void WriteIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-416">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-416">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-417">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wiadomości są zapisywane do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-417">If the condition is <see langword="true" />, the category name and message are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-418">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-418">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-419">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-419">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-420">Zapisuje nazwa kategorii i komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-420">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-421">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-421">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-422">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-422">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-423">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-423">This method calls the <xref:System.Diagnostics.TraceListener.Write%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-424">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-424">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-425">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-425">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-426">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Verbose`, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-426">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Verbose`, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-427">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-427">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-428">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Error` lub wyższym, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-428">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Error` or higher, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-429">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-429">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-430">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-430">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.Write(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.Write("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-431">Zapisuje informacje na temat debugowania do detektorów śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-431">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49741-432">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-432">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-433">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-433">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-434">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-434">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-435">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-435">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-436">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-436">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-437">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-437">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-438">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-438">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-439">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-439">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-440">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje nazwę obiektu, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-440">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="49741-441">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-441">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-442">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-442">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-443">Zapisuje komunikat, a następnie terminator wiersza do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-443">Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-444">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-444">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-445">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-445">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-446">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-446">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-447">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-447">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-448">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-448">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-449">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-449">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-450">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-450">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-451">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-451">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49741-452">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-452">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-453">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-453">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-454">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-454">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-455">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-455">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-456">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-456">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-457">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-457">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-458">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-458">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-459">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-459">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-460">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-460">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-461">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-461">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-462">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-462">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-463">Drugi komunikat następuje terminator wiersza.</span><span class="sxs-lookup"><span data-stu-id="49741-463">The second message is followed by a line terminator.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * obj[] -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="49741-464">Ciąg formatu złożonego, który zawiera tekst zmieszać z zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>args</c> tablicy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-464">A composite format string that contains text intermixed with zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="49741-465">Tablica obiektów zawiera zero lub więcej obiektów do sformatowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-465">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-466">Zapisuje sformatowany komunikat, a następnie terminator wiersza do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-466">Writes a formatted message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-467">Ta metoda używa programu .NET Framework, aby dokonać konwersji wartości obiektu na jego reprezentację tekstową i osadza tę reprezentację w ciągu.</span><span class="sxs-lookup"><span data-stu-id="49741-467">This method uses the  of the .NET Framework to convert the value of an object to its text representation and embed that representation in a string.</span></span>  
  
 <span data-ttu-id="49741-468">Słowo kluczowe w składni dla tej metody oznacza, że tablica obiektów może być pojedynczą wartość.</span><span class="sxs-lookup"><span data-stu-id="49741-468">The  keyword in the syntax for this method implies that the object array can be a single value.</span></span> <span data-ttu-id="49741-469">Wyjątkiem jest <xref:System.String> obiektu.</span><span class="sxs-lookup"><span data-stu-id="49741-469">The exception to this is the <xref:System.String> object.</span></span> <span data-ttu-id="49741-470">Jawne przeciążenia pierwszeństwo, dlatego `arg` domyślnie zostanie wartość pojedynczy ciąg <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="49741-470">Explicit overloads take precedence, so an `arg` value of a single string will default to the <xref:System.Diagnostics.Debug.WriteLine%28System.String%2CSystem.String%29?displayProperty=nameWithType> overload.</span></span>  
  
 <span data-ttu-id="49741-471">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-471">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-472">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-472">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLine (message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLine(System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLine : string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLine (message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="49741-473">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-473">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-474">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-474">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-475">Zapisuje nazwa kategorii i komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-475">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-476">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-476">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-477">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-477">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-478">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-478">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-479">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-479">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-480">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-480">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-481">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-481">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-482">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-482">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-483">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> jest ustawiona na `Verbose`, przykład generuje drugi komunikat o błędzie i `category` w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-483">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="49741-484">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-484">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLine2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLine2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLine2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineIf">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49741-485">Zapisuje informacje na temat debugowania do detektorów śledzenia w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-485">Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-486">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-486">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-487">Jeśli warunek nie jest <see langword="true" />, wartości są zapisywane do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-487">If the condition is <see langword="true" />, the value is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="49741-488">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-488">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-489">Zapisuje wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-489">Writes the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-490">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-490">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-491">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-491">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-492">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-492">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-493">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-493">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-494">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-494">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-495">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-495">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-496">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje nazwę obiektu, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-496">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the name of the object on the same line as the first message.</span></span> <span data-ttu-id="49741-497">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-497">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-498">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-498">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-499">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-499">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-500">Jeśli warunek nie jest <see langword="true" />, zostanie napisany komunikat do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-500">If the condition is <see langword="true" />, the message is written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-501">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-501">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-502">Zapisuje komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-502">Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-503">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-503">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-504">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-504">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-505">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-505">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-506">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-506">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-507">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-507">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-508">Informacje o dodawaniu odbiornik do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-508">For information about adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-509">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-509">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-510">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-510">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-511">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-511">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, object value, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, object value, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, value As Object, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::Object ^ value, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * obj * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, value, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-512">Wyrażenie warunkowe do oceny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-512">The conditional expression to evaluate.</span>
          </span>
          <span data-ttu-id="49741-513">Jeśli warunek nie jest <see langword="true" />, nazwa kategorii i wartości, które są zapisywane do śledzenia słuchaczy w kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-513">If the condition is <see langword="true" />, the category name and value are written to the trace listeners in the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="49741-514">Obiekt, którego nazwa jest wysyłany do <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-514">An object whose name is sent to the <see cref="P:System.Diagnostics.Debug.Listeners" />.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-515">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-515">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-516">Nazwa kategorii i wartość obiektu <see cref="M:System.Object.ToString" /> metody do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-516">Writes a category name and the value of the object's <see cref="M:System.Object.ToString" /> method to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-517">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-517">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-518">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-518">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-519">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-519">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-520">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-520">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-521">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-521">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-522">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-522">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-523">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-523">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-524">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> ustawiono `Verbose`, przykład generuje drugi komunikat o błędzie, w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-524">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message on the same line as the first message.</span></span> <span data-ttu-id="49741-525">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-525">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-526">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-526">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineIf">
      <MemberSignature Language="C#" Value="public static void WriteLineIf (bool condition, string message, string category);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLineIf(bool condition, string message, string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub WriteLineIf (condition As Boolean, message As String, category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void WriteLineIf(bool condition, System::String ^ message, System::String ^ category);" />
      <MemberSignature Language="F#" Value="static member WriteLineIf : bool * string * string -&gt; unit" Usage="System.Diagnostics.Debug.WriteLineIf (condition, message, category)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.Conditional("DEBUG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.Boolean" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="49741-527">
            <see langword="true" /> Aby spowodować, że komunikat do zapisania; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-527">
              <see langword="true" /> to cause a message to be written; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="49741-528">Komunikat do zapisu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-528">A message to write.</span>
          </span>
        </param>
        <param name="category">
          <span data-ttu-id="49741-529">Nazwa kategorii, używana do organizowania danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-529">A category name used to organize the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49741-530">Zapisuje nazwa kategorii i komunikat do śledzenia słuchaczy w <see cref="P:System.Diagnostics.Debug.Listeners" /> kolekcji, jeśli warunek jest <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-530">Writes a category name and message to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49741-531">Domyślnie plik wyjściowy zostanie zapisany do wystąpienia <xref:System.Diagnostics.DefaultTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="49741-531">By default, the output is written to an instance of <xref:System.Diagnostics.DefaultTraceListener>.</span></span>  
  
 <span data-ttu-id="49741-532">`category` Parametru może służyć do grupowania wyjściowych komunikatów.</span><span class="sxs-lookup"><span data-stu-id="49741-532">The `category` parameter can be used to group output messages.</span></span>  
  
 <span data-ttu-id="49741-533">Ta metoda wywołuje <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> metoda odbiornik śledzenia.</span><span class="sxs-lookup"><span data-stu-id="49741-533">This method calls the <xref:System.Diagnostics.TraceListener.WriteLine%2A?displayProperty=nameWithType> method of the trace listener.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49741-534">Poniższy przykład tworzy <xref:System.Diagnostics.TraceSwitch> o nazwie `generalSwitch`.</span><span class="sxs-lookup"><span data-stu-id="49741-534">The following example creates a <xref:System.Diagnostics.TraceSwitch> named `generalSwitch`.</span></span> <span data-ttu-id="49741-535">Ten przełącznik ma wartość poza przykładowy kod.</span><span class="sxs-lookup"><span data-stu-id="49741-535">This switch is set outside of the code sample.</span></span>  
  
 <span data-ttu-id="49741-536">Jeśli przełącznik jest równa <xref:System.Diagnostics.TraceLevel> `Error` lub wyższa, przykład generuje pierwszy komunikat o błędzie <xref:System.Diagnostics.Debug.Listeners%2A>.</span><span class="sxs-lookup"><span data-stu-id="49741-536">If the switch is set to the <xref:System.Diagnostics.TraceLevel>`Error` or higher, the example outputs the first error message to the <xref:System.Diagnostics.Debug.Listeners%2A>.</span></span> <span data-ttu-id="49741-537">Instrukcje dotyczące dodanie detektora do <xref:System.Diagnostics.Debug.Listeners%2A> kolekcji, zobacz <xref:System.Diagnostics.TraceListenerCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="49741-537">For information on adding a listener to the <xref:System.Diagnostics.Debug.Listeners%2A> collection, see the <xref:System.Diagnostics.TraceListenerCollection> class.</span></span>  
  
 <span data-ttu-id="49741-538">Następnie, jeśli <xref:System.Diagnostics.TraceLevel> jest ustawiona na `Verbose`, przykład generuje drugi komunikat o błędzie i `category` w tym samym wierszu jako pierwszego komunikatu.</span><span class="sxs-lookup"><span data-stu-id="49741-538">Then, if the <xref:System.Diagnostics.TraceLevel> is set to `Verbose`, the example outputs the second error message and the `category` on the same line as the first message.</span></span> <span data-ttu-id="49741-539">Terminator wiersza następuje drugi komunikat.</span><span class="sxs-lookup"><span data-stu-id="49741-539">A line terminator follows the second message.</span></span>  
  
 [!code-cpp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/CS/source.cs#1)]
 [!code-vb[Classic Debug.WriteLineIf2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Debug.WriteLineIf2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="49741-540">
            <para>Można zminimalizować spadek wydajności instrumentacji aplikacji za pomocą <see langword="If...Then" /> instrukcji zamiast <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> instrukcji. Poniższe dwa przykłady kodu wysyłają ten sam komunikat debugowania. Pierwszy przykład jest jednak szybciej, gdy śledzenie jest wyłączone, ponieważ jeśli <c>mySwitch.TraceError</c> daje w wyniku <see langword="false" />, nie należy wywoływać metody <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. Drugi przykład zawsze wywołuje <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />nawet wtedy, gdy <c>mySwitch.TraceError</c> jest <see langword="false" /> i są generowane żadne dane wyjściowe śledzenia. Może to spowodować niepotrzebne wykonanie dowolnie złożonego kodu.  Pierwszy przykład: ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
``` drugi przykład:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="49741-540">
              <para>You can minimize the performance penalty of instrumenting your application by using <see langword="If...Then" /> statements instead of using <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" /> statements. The following two code examples send the same debugging message. However, the first example is much faster when tracing is off, because if <c>mySwitch.TraceError</c> evaluates to <see langword="false" />, you do not call <see cref="M:System.Diagnostics.Debug.WriteLine(System.String)" />. The second example always calls <see cref="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)" />, even when <c>mySwitch.TraceError</c> is <see langword="false" /> and no tracing output is produced. This can result in unnecessary execution of arbitrarily complex code.  First example:  ```csharp  
if(mySwitch.TraceError)   
    Debug.WriteLine("aNumber = " + aNumber + " out of range");  
```  Second example:  ```csharp  
Debug.WriteLineIf(mySwitch.TraceError, "aNumber = " + aNumber + " out of range");  
```</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
        <altmember cref="T:System.Diagnostics.BooleanSwitch" />
        <altmember cref="T:System.Diagnostics.TraceSwitch" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.ConsoleTraceListener" />
        <altmember cref="T:System.Diagnostics.ConditionalAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>