<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c4ddb57047d2ed06769244f6296fa3fe7a7bbf1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253343" /></Metadata><TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje kompilatorom, że wywołanie metody lub atrybut należy zignorować, chyba że zdefiniowany jest określony symbol kompilacji warunkowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastosować <xref:System.Diagnostics.ConditionalAttribute> atrybut do metod i klas. Jednak jego użycie w klasach jest prawidłowe tylko dla typów, które są wyprowadzane z <xref:System.Attribute>. <xref:System.Diagnostics.ConditionalAttribute>zostanie zignorowane lub zostanie wygenerowane Ostrzeżenie kompilatora lub komunikat o błędzie, jeśli zostanie on zastosowany do dowolnego innego typu.  
  
 Zastosowanie <xref:System.Diagnostics.ConditionalAttribute> do metody wskazuje kompilatorom, że wywołanie metody nie powinno być kompilowane do języka pośredniego firmy Microsoft (MSIL), chyba że jest zdefiniowany warunkowy symbol kompilacji, <xref:System.Diagnostics.ConditionalAttribute> który jest skojarzony z. Po zastosowaniu tego atrybutu do metody, która nie zwraca typu void, zostanie wyświetlony błąd kompilacji w programie Visual Studio. Zastosowanie <xref:System.Diagnostics.ConditionalAttribute> do atrybutu wskazuje, że atrybut nie powinien być emitowany do metadanych, chyba że jest zdefiniowany symbol kompilacji warunkowej. Wszystkie argumenty przekazane do metody lub atrybutu są nadal sprawdzane przez kompilator.  
  
 Za pomocą następujących technik można definiować symbole kompilacji warunkowej:  
  
-   Użyj opcji wiersza polecenia kompilatora; na przykład **/define: Debug**.  
  
-   Użyj zmiennych środowiskowych w powłoce systemu operacyjnego; na przykład **Ustaw wartość Debuguj = 1**.  
  
-   Użyj pragm w kodzie źródłowym; na przykład Zdefiniuj zmienną kompilacja w następujący sposób:  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     Aby wydefiniować zmienną, użyj następujących:  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 Kompilatory, które są zgodne z Common Language Specification (CLS), mogą być ignorowane <xref:System.Diagnostics.ConditionalAttribute>. C# C++ Obsługa ,<xref:System.Diagnostics.ConditionalAttribute>Visual Basic i kompilatory; kompilator języka JScript nie obsługuje atrybutu.  
  
> [!NOTE]
>  W Visual Basic ten atrybut `AddressOf` nie ma wpływ na operatora. Na przykład `Call CType(AddressOf delegate, Action)` zawsze wywołuje `delegate`, chociaż `Call delegate()` może nie.  
  
 <xref:System.Diagnostics.ConditionalAttribute>stosuje się do metod, które są zdefiniowane w <xref:System.Diagnostics.Debug> klasach i. <xref:System.Diagnostics.Trace>  
  
 Aby uzyskać więcej informacji na temat używania atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 Poniższy przykład ilustruje użycie <xref:System.Diagnostics.ConditionalAttribute>. W przykładzie przyjęto założenie, że warunek jest zdefiniowany przy użyciu opcji kompilatora **/define** . Możesz uzyskać różne wyniki, zmieniając opcję kompilatora. Opcjonalnie można zdefiniować warunki przy użyciu pragm w przykładowym kodzie zamiast identyfikować je jako opcje kompilatora.  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">Ciąg określający symbol kompilacji warunkowej z uwzględnieniem wielkości liter, który jest skojarzony z atrybutem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.ConditionalAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład ilustruje sposób użycia <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> konstruktora. Ten przykład jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.ConditionalAttribute> klasy.  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera symbol kompilacji warunkowej, który jest skojarzony z <see cref="T:System.Diagnostics.ConditionalAttribute" /> atrybutem.</summary>
        <value>Ciąg określający symbol kompilacji warunkowej z uwzględnieniem wielkości liter, który jest skojarzony <see cref="T:System.Diagnostics.ConditionalAttribute" /> z atrybutem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
