<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f573e791c4692ad400a0e2d399d233513e7e32b7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36675004" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kompilatory wskazuje, że atrybut lub wywołanie metody powinny być ignorowane, chyba że jest zdefiniowany symbol kompilacji warunkowej na określony.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz zastosować <xref:System.Diagnostics.ConditionalAttribute> atrybutu klasy i metody. Jednak korzystanie z nich na klasy jest prawidłowa tylko dla typów pochodzących z <xref:System.Attribute>. <xref:System.Diagnostics.ConditionalAttribute> zostanie zignorowany, albo powoduje wygenerowanie ostrzeżenia kompilatora lub komunikat o błędzie w przypadku zastosowania do żadnego innego typu.  
  
 Stosowanie <xref:System.Diagnostics.ConditionalAttribute> do metody wskazuje kompilatory wywołanie do metody nie powinna być skompilowana Microsoft język pośredni (MSIL), chyba że symbol kompilacji warunkowej, który jest skojarzony z <xref:System.Diagnostics.ConditionalAttribute> jest zdefiniowany. W przypadku zastosowania tego atrybutu do metody, która nie może zwracać typ void, wystąpi błąd kompilacji w programie Visual Studio. Stosowanie <xref:System.Diagnostics.ConditionalAttribute> atrybut wskazuje, że ten atrybut nie powinien emitowany do metadanych, jeśli nie jest zdefiniowany symbol kompilacji warunkowej. Argumenty przekazane do metody lub atrybut jest typu sprawdzane przez kompilator.  
  
 Definiuj symbole kompilacji warunkowej umożliwia następujące techniki:  
  
-   Użyj opcji wiersza polecenia kompilatora; na przykład **/ define: debugowanie**.  
  
-   Użycie zmiennych środowiskowych w powłoce systemu operacyjnego; na przykład **wartość DEBUG = 1**.  
  
-   Użyj dyrektywy pragma w kodzie źródłowym; na przykład zdefiniować zmienną kompilacji w następujący sposób:  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     Aby Usuń zmienną, użyj następującego polecenia:  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 Kompilatory, które są zgodne z typowych specyfikacji języka (CLS) są dozwolone zignorowanie <xref:System.Diagnostics.ConditionalAttribute>. Kompilatory języka C#, Visual Basic i C++ obsługuje <xref:System.Diagnostics.ConditionalAttribute>; kompilator języka JScript nie obsługuje atrybutu.  
  
> [!NOTE]
>  W języku Visual Basic `AddressOf` operator nie ma wpływu na tego atrybutu. Na przykład `Call CType(AddressOf delegate, Action)` zawsze wywołuje `delegate`, mimo że `Call delegate()` nie może być.  
  
 <xref:System.Diagnostics.ConditionalAttribute> jest stosowany do metod, które są zdefiniowane w <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy.  
  
 Aby uzyskać więcej informacji o sposobie używania atrybutów, zobacz [atrybutów](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Diagnostics.ConditionalAttribute>. W przykładzie założono, że ten stan jest zdefiniowana z **/ define** — opcja kompilatora. Można uzyskać różne wyniki, zmieniając opcję kompilatora. Warunki można opcjonalnie zdefiniować za pomocą wyrażenia pragma w przykładowym kodzie zamiast identyfikację je jako opcje kompilatora.  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">Ciąg, który określa symbol kompilacji warunkowej na wielkość liter, który jest skojarzony z atrybutem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.ConditionalAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> konstruktora. Ten przykład jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.ConditionalAttribute> klasy.  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera symbol kompilacji warunkowej, z którym skojarzony jest <see cref="T:System.Diagnostics.ConditionalAttribute" /> atrybutu.</summary>
        <value>Ciąg, który określa symbol kompilacji warunkowej na wielkość liter, z którym skojarzony jest <see cref="T:System.Diagnostics.ConditionalAttribute" /> atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>