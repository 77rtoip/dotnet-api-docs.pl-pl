<Type Name="ConditionalAttribute" FullName="System.Diagnostics.ConditionalAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="52d16acc2fc86862af9bda2108dce8bd399b5141" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37664466" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ConditionalAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ConditionalAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ConditionalAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kompilatory wskazywać, że wywołanie metody lub atrybut mają być ignorowane, chyba że zdefiniowany jest symbol określonej kompilacji warunkowej.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zastosować <xref:System.Diagnostics.ConditionalAttribute> atrybutu do metod i klas. Jednak korzystanie z nich na klasy jest prawidłowa tylko dla typów, które są uzyskiwane z <xref:System.Attribute>. <xref:System.Diagnostics.ConditionalAttribute> zostanie zignorowana lub zastosować je do innego typu generuje ostrzeżenie kompilatora lub komunikat o błędzie.  
  
 Stosowanie <xref:System.Diagnostics.ConditionalAttribute> do metody wskazywać, kompilatory wywołanie metody nie powinna być skompilowana do firmy Microsoft intermediate language (MSIL), chyba że kompilacja warunkowa symbol, który jest skojarzony z <xref:System.Diagnostics.ConditionalAttribute> jest zdefiniowana. W przypadku zastosowania tego atrybutu do metody, która nie może zwracać typ void, wystąpi błąd kompilacji w programie Visual Studio. Stosowanie <xref:System.Diagnostics.ConditionalAttribute> atrybut wskazuje, czy ten atrybut nie powinien emitowany do metadanych, chyba że symbol kompilacja warunkowa jest zdefiniowany. Argumenty przekazywane do metody lub atrybut są nadal typ sprawdzana przez kompilator.  
  
 Aby zdefiniować symbole kompilacji warunkowej, można użyć następujących technik:  
  
-   Użyj opcji wiersza polecenia kompilatora; na przykład **/ define: DEBUG**.  
  
-   Użyj zmiennych środowiskowych w powłoce systemu operacyjnego; na przykład **zestaw debugowania = 1**.  
  
-   Użycie pragmy w kodzie źródłowym; na przykład zdefiniować zmienną warunkowej kompilacji w następujący sposób:  
  
    ```csharp  
    #define DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=True  
    ```  
  
     Aby Usuń definicję zmiennej, użyj następującego polecenia:  
  
    ```csharp  
    #undef DEBUG  
    ```  
  
    ```vb  
    #Const DEBUG=False  
    ```  
  
 Kompilatory, które są zgodne z Common Language Specification (CLS) są dozwolone w celu ignorowania <xref:System.Diagnostics.ConditionalAttribute>. Kompilatory C#, Visual Basic i C++ obsługuje <xref:System.Diagnostics.ConditionalAttribute>; kompilator języka JScript nie obsługuje atrybutu.  
  
> [!NOTE]
>  W języku Visual Basic `AddressOf` operator nie dotyczy tego atrybutu. Na przykład `Call CType(AddressOf delegate, Action)` zawsze wywołuje `delegate`, mimo że `Call delegate()` niekoniecznie.  
  
 <xref:System.Diagnostics.ConditionalAttribute> jest stosowany do metod, które są zdefiniowane w <xref:System.Diagnostics.Debug> i <xref:System.Diagnostics.Trace> klasy.  
  
 Aby uzyskać więcej informacji o sposobie używania atrybutów, zobacz [atrybuty](~/docs/standard/attributes/index.md).  
  
   
  
## Examples  
 W poniższym przykładzie pokazano użycie <xref:System.Diagnostics.ConditionalAttribute>. W przykładzie założono, że warunek jest definiowana za pomocą **/ define** — opcja kompilatora. Możesz uzyskać różne wyniki, zmieniając opcję kompilatora. Opcjonalnie możesz zdefiniować warunki za pomocą pragmy w przykładowym kodzie zamiast identyfikuje je jako opcje kompilatora.  
  
 [!code-csharp[ConditionalAttributeSample1#7](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#7)]
 [!code-vb[ConditionalAttributeSample1#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalAttribute (string conditionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string conditionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ConditionalAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalAttribute(System::String ^ conditionString);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ConditionalAttribute : string -&gt; System.Diagnostics.ConditionalAttribute" Usage="new System.Diagnostics.ConditionalAttribute conditionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionString">Ciąg, który określa symbol liter kompilacji warunkowej, który jest skojarzony z atrybutem.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.ConditionalAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład pokazuje sposób użycia <xref:System.Diagnostics.ConditionalAttribute.%23ctor%2A> konstruktora. W tym przykładzie jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.ConditionalAttribute> klasy.  
  
 [!code-csharp[ConditionalAttributeSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/ConditionalAttributeSample1/CS/cas.cs#8)]
 [!code-vb[ConditionalAttributeSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConditionalAttributeSample1/VB/cas.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionString">
      <MemberSignature Language="C#" Value="public string ConditionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConditionString" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConditionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionString : string" Usage="System.Diagnostics.ConditionalAttribute.ConditionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera symbol kompilacji warunkowej, z którym skojarzony jest <see cref="T:System.Diagnostics.ConditionalAttribute" /> atrybutu.</summary>
        <value>Ciąg, który określa symbol liter kompilacji warunkowej, który jest skojarzony z <see cref="T:System.Diagnostics.ConditionalAttribute" /> atrybutu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest tylko do odczytu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>