<Type Name="PerformanceCounterCategory" FullName="System.Diagnostics.PerformanceCounterCategory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="432c1dada9e662bf556cfef83ea656210ffc0aaf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30449649" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PerformanceCounterCategory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounterCategory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounterCategory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounterCategory" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounterCategory sealed" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje obiekt wydajności, który definiuje kategorii liczników wydajności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Tworzenie lub usuwanie liczników wydajności wymaga synchronizacji z kodu źródłowego przy użyciu nazwanego obiektu mutex. Jeśli aplikacja wysoko uprzywilejowane blokuje nazwanego obiektu mutex, podejmuje próbę utworzenia lub usunięcia licznika wydajności powoduje, że aplikacja przestanie odpowiadać, dopóki nie zostanie zwolniony blokady. Aby uniknąć tego problemu, nigdy nie należy udzielić <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> uprawnienia do niezaufanych kodu. Ponadto <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode> uprawnienia potencjalnie umożliwia inne uprawnienia do obejścia i tylko powinny być przyznane wysokiej zaufanego kodu.  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> Wystąpienia <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> właściwość jest wyświetlana w polu Obiekt wydajności okna dialogowego Dodawanie licznika aplikacji przeglądarki wydajności.  
  
 <xref:System.Diagnostics.PerformanceCounterCategory> Klasa udostępnia kilka metod do interakcji z liczników i kategorie na komputerze. <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> Metody umożliwiają definiować niestandardowe kategorie. <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> Metody umożliwia usunięcie kategorii z komputera. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> Metody umożliwia wyświetlenie listy kategorii, podczas gdy <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> pobiera wszystkie dane liczników i wystąpienia skojarzone z jedną kategorią.  
  
 Licznik wydajności publikuje dane wydajności dotyczące aplikacji. Kategorie obejmują składniki fizyczne (takich jak procesory, dyski i pamięci) i obiektów systemowych (na przykład procesów i wątków). Liczniki systemu, które są powiązane z tym samym obiektem wydajności są zgrupowane w kategorię, która wskazuje ich wspólnej fokus. Podczas tworzenia wystąpienia <xref:System.Diagnostics.PerformanceCounter> klasy, należy najpierw wskazać kategorii, z którym będzie współpracować składnik, a następnie wybierz licznik z tej kategorii.  
  
 Na przykład kategoria pamięci jest jedną kategorię licznika systemu Windows. Liczniki systemu w tej kategorii śledzenia pamięci dane, takie jak liczba dostępnych bajtów i liczby bajtów w pamięci podręcznej. Jeśli chcesz pracować z bajtów pamięci podręcznej w aplikacji, należy utworzyć wystąpienie <xref:System.Diagnostics.PerformanceCounter> składnika, połącz go z kategorii pamięci, a następnie wybierz odpowiedniego licznika (w tym przypadku buforowanych bajtów) z tej kategorii.  
  
 Chociaż system udostępnia wiele więcej kategorii licznika, kategorie, które będą prawdopodobnie w interakcję z najczęściej są kategorie pamięci podręcznej, pamięci, obiekty, dysk fizyczny, proces, procesora, serwera, systemu i wątku.  
  
> [!IMPORTANT]
>  <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> Metoda <xref:System.Diagnostics.PerformanceCounter> klasy opublikuje licznik i, jeśli zaznaczono opcję ponownego użycia dla tej kategorii, zostanie ono użyte ponownie wystąpienia licznika. Może to spowodować wyścigu, jeśli inny proces lub nawet innej części kodu jest próby zapisu wystąpienia licznika.  
  
> [!NOTE]
>  Zdecydowanie zaleca się, że nowe kategorii licznika wydajności można utworzyć podczas instalacji aplikacji, a nie w czasie wykonywania aplikacji. Dzięki temu czas system operacyjny do odświeżenia listy kategorii licznika wydajności w zarejestrowany. Jeśli na liście nie zostały odświeżone, próba kategoria zakończy się niepowodzeniem.  
  
> [!NOTE]
>  Kategorii licznika wydajności z zainstalowanym [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] oddzielne pamięci współużytkowanej, za pomocą każdej kategorii licznika wydajności posiadanie własnej pamięci. Można określić rozmiar pamięci współużytkowanej oddzielne tworząc DWORD o nazwie FileMappingSize w kluczu rejestru HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nazwa kategorii >* \ Wydajność. Wartość FileMappingSize jest ustawiona na rozmiar pamięci współużytkowanej kategorii. Rozmiar domyślny to 131072 dziesiętną. Jeśli wartość FileMappingSize nie jest obecny, `fileMappingSize` wartość dla atrybutu `performanceCounters` element określony w pliku Machine.config jest używana, powoduje dodatkowe obciążenie przetwarzania pliku konfiguracji. Można zrealizować poprawy wydajności w przypadku uruchamiania aplikacji przez ustawienie rozmiaru mapowania pliku w rejestrze. Aby uzyskać więcej informacji na temat rozmiaru mapowania pliku, zobacz [ &lt;liczniki wydajności&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounter> i jego <xref:System.Diagnostics.PerformanceCounterCategory> istnieje na komputerze lokalnym lub na innym komputerze. Jeśli te obiekty nie istnieją na komputerze lokalnym, opcjonalnie tworzony je. Używa <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metodę, aby określić, czy <xref:System.Diagnostics.PerformanceCounterCategory> istnieje.  Jeśli <xref:System.Diagnostics.PerformanceCounterCategory> nie istnieje i nazwa licznika nie zostanie określona, lub jeśli komputer jest komputerem zdalnym, przykładzie zamknięte.  
  
 Jeśli <xref:System.Diagnostics.PerformanceCounter> podać nazwę, w przykładzie użyto <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> — metoda i wyświetlane dla użytkownika. Jeśli <xref:System.Diagnostics.PerformanceCounter> nie istnieje, użytkownik może usunąć i ponownie utwórz <xref:System.Diagnostics.PerformanceCounterCategory> z nowym <xref:System.Diagnostics.PerformanceCounter>. Jeśli ma tak, kategoria zostanie usunięty przy użyciu <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> metody.  
  
 Jeśli jest to wymagane, teraz tworzona nowa <xref:System.Diagnostics.PerformanceCounterCategory> i <xref:System.Diagnostics.PerformanceCounter> przy użyciu <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> metody. Jeśli określono nazwę wystąpienia, w przykładzie użyto <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> — metoda i wyświetla wyniki.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/CS/perfcountercatcreateexist.cs#27)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.Class/VB/perfcountercatcreateexist.vb#27)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounter" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> klasy pozostawia <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> pustych właściwości i zestawy <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> właściwości na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> Musi być ustawiona właściwość, aby można było skojarzyć to <xref:System.Diagnostics.PerformanceCounterCategory> wystąpienia obiektu wydajności na serwerze. W przeciwnym razie jest zgłaszany wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu akceptuje <xref:System.Diagnostics.PerformanceCounterCategory> nazwy i nazwy komputera z wiersza polecenia.  Tworzy <xref:System.Diagnostics.PerformanceCounterCategory> przy użyciu przeładowania konstruktora odpowiednie liczby parametrów podanych, następnie wyświetla jego właściwości.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności lub obiekt wydajności, którą chcesz skojarzyć to <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> wystąpienia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> klasy zestawy <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> właściwości do określonej wartości i zestawów <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> właściwości na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu akceptuje <xref:System.Diagnostics.PerformanceCounterCategory> nazwy i nazwy komputera z wiersza polecenia. Tworzy <xref:System.Diagnostics.PerformanceCounterCategory> za pomocą przeciążenia konstruktora, które jest odpowiednie liczby parametrów podanych, następnie wyświetla jego właściwości.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> To ciąg pusty ("").</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Jest <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie informacji o kategorii, takie jak nazwa kategorii. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounterCategory (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounterCategory(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności lub obiekt wydajności, którą chcesz skojarzyć to <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> wystąpienia.</param>
        <param name="machineName">Komputer, na którym kategorii licznika wydajności i jego skojarzone liczniki.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> klasy i zestawy <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> i <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> właściwości, które mają określone wartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu akceptuje <xref:System.Diagnostics.PerformanceCounterCategory> nazwy i nazwy komputera z wiersza polecenia. Tworzy <xref:System.Diagnostics.PerformanceCounterCategory> za pomocą przeciążenia konstruktora, które jest odpowiednie liczby parametrów podanych, następnie wyświetla jego właściwości.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatctor.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatctor.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> To ciąg pusty ("").  
  
 —lub—  
  
 <paramref name="machineName" /> Składnia jest nieprawidłowa.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Jest <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie informacji o kategorii, takie jak nazwa komputera i kategorii. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryHelp">
      <MemberSignature Language="C#" Value="public string CategoryHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryHelp { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera tekst pomocy kategorii.</summary>
        <value>Opis obiektu wydajności, która tej kategorii.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterCategory> z <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Jednak monituje użytkownika o <xref:System.Diagnostics.PerformanceCounterCategory> oraz nazwy komputerów, następnie ustawia <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> i <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> właściwości z wprowadzone wartości. Następnie wyświetla wartości <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, i <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> właściwości, lub wyświetla komunikat o błędzie, jeśli <xref:System.Diagnostics.PerformanceCounterCategory> jest niedostępny.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Jest właściwość <see langword="null" />. Przed uzyskaniem pomocy na temat kategorii należy ustawić nazwę kategorii.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obiektu wydajności, który definiuje tę kategorię.</summary>
        <value>Nazwa kategorii licznika wydajności lub obiekt wydajności, którą chcesz skojarzyć to <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterCategory> z <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor>. Jednak monituje użytkownika o <xref:System.Diagnostics.PerformanceCounterCategory> oraz nazwy komputerów, następnie ustawia <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> i <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> właściwości z wprowadzone wartości. Następnie wyświetla wartości <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, i <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> właściwości, lub wyświetla komunikat o błędzie, jeśli <xref:System.Diagnostics.PerformanceCounterCategory> jest niedostępny.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> To ciąg pusty ("").</exception>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Jest <see langword="null" />.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CategoryType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterCategoryType CategoryType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.CategoryType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryType As PerformanceCounterCategoryType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterCategoryType CategoryType { System::Diagnostics::PerformanceCounterCategoryType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategoryType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ kategorii licznika wydajności.</summary>
        <value>Jeden z <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterCategory.CategoryType%2A> Właściwość wskazuje, czy <xref:System.Diagnostics.PerformanceCounterCategory> obiekt może mieć wiele wystąpień. Możliwe wartości to <xref:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance>, <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, lub <xref:System.Diagnostics.PerformanceCounterCategoryType.Unknown>.  
  
 Istnieją dwa typy kategorii licznika wydajności: jednego wystąpienia i wielu wystąpień. Domyślnie kategoria jest pojedynczym wystąpieniem podczas jego tworzenia i staje się wiele wystąpień, po dodaniu innego wystąpienia. Kategorie są tworzone, gdy aplikacja jest skonfigurowana i wystąpienia są dodawane w czasie wykonywania. W wersji systemu .NET Framework 1.0 i 1.1 nie jest niezbędne sprawdzić, czy kategorii licznika wydajności jest wiele wystąpień lub jednego wystąpienia. W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Diagnostics.PerformanceCounterCategoryType> wyliczenie jest używany do określania, czy licznik wydajności mogą mieć wiele wystąpień.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CounterExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy określony licznik jest zarejestrowany do określonej kategorii.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public bool CounterExists (string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CounterExists(string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CounterExists (counterName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CounterExists(System::String ^ counterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nazwa licznika wydajności do wyszukania.</param>
        <summary>Określa, czy określony licznik jest zarejestrowany do tej kategorii, który jest wskazywany przez <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> i <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> właściwości.</summary>
        <returns>
          <see langword="true" /> Jeśli licznik jest zarejestrowany dla kategorii, który jest określony przez <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> i <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> właściwości; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> właściwość przed wywołaniem tej metody. W przeciwnym razie jest zgłaszany wyjątek.  
  
 Jeśli nie ustawiono <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> właściwości, ta metoda używa komputera lokalnego (".").  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounter> istnieje. Otrzymuje nazwę kategorii, nazwa licznika i nazwę komputera z wiersza polecenia, jeśli podana jest. Tworzy <xref:System.Diagnostics.PerformanceCounterCategory> przy użyciu odpowiedniej <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor%2A>. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%28System.String%29> metodę, aby określić, czy określony <xref:System.Diagnostics.PerformanceCounter> istnieje, a informacja dla użytkownika.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatobjexists.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjcountexists.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="counterName" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Właściwość nie została ustawiona.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nazwa licznika wydajności do wyszukania.</param>
        <param name="categoryName">Nazwa kategorii licznika wydajności lub obiekt wydajności, z którym skojarzony jest określony licznik wydajności.</param>
        <summary>Określa, czy określony licznik jest zarejestrowany do określonej kategorii na komputerze lokalnym.</summary>
        <returns>
          <see langword="true" />, jeśli licznik nie jest zarejestrowana dla określonej kategorii na komputerze lokalnym; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounter> istnieje. Otrzymuje nazwę kategorii, nazwa licznika i nazwę komputera z wiersza polecenia, jeśli podana jest. Używa statycznych przeciążeń <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> metodę, aby określić, czy określony <xref:System.Diagnostics.PerformanceCounter> nazwa istnieje w <xref:System.Diagnostics.PerformanceCounterCategory>. Przeciążenie jest uzależniony Określa, czy podano nazwę komputera.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="counterName" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> To ciąg pusty ("").</exception>
        <exception cref="T:System.InvalidOperationException">Nazwa kategorii nie istnieje.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="CounterExists">
      <MemberSignature Language="C#" Value="public static bool CounterExists (string counterName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CounterExists(string counterName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CounterExists (counterName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CounterExists(System::String ^ counterName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="counterName">Nazwa licznika wydajności do wyszukania.</param>
        <param name="categoryName">Nazwa kategorii licznika wydajności lub obiekt wydajności, z którym skojarzony jest określony licznik wydajności.</param>
        <param name="machineName">Nazwa komputera, na którym istnieje kategorii licznika wydajności i jego skojarzone liczniki.</param>
        <summary>Określa, czy określony licznik jest zarejestrowany do określonej kategorii na komputerze zdalnym.</summary>
        <returns>
          <see langword="true" />, jeśli licznik nie jest zarejestrowana dla określonej kategorii na określonym komputerze. w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounter> istnieje. Otrzymuje nazwę kategorii, nazwa licznika i nazwę komputera z wiersza polecenia, jeśli podana jest. Używa statycznych przeciążeń <xref:System.Diagnostics.PerformanceCounterCategory.CounterExists%2A> metodę, aby określić, czy określony <xref:System.Diagnostics.PerformanceCounter> nazwa istnieje w <xref:System.Diagnostics.PerformanceCounterCategory>. Przeciążenie jest uzależniony Określa, czy podano nazwę komputera.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatcounterexists.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatcountexists.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="counterName" /> Jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> To ciąg pusty ("").  
  
 —lub—  
  
 <paramref name="machineName" /> Jest nieprawidłowy.</exception>
        <exception cref="T:System.InvalidOperationException">Nazwa kategorii nie istnieje.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rejestruje kategorii licznika wydajności niestandardowych i co najmniej jeden licznik w systemie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności niestandardowego można utworzyć ani zarejestrować w systemie.</param>
        <param name="categoryHelp">Opis kategorii niestandardowej.</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> , który określa liczniki można utworzyć w ramach nowej kategorii.</param>
        <summary>Rejestruje kategorii licznika wydajności niestandardowych, zawierających określony liczniki na komputerze lokalnym.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> skojarzonego z nową kategorię niestandardową lub obiektu wydajności.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounterCategory> istnieje obiekt o nazwie "zamówienia". Jeśli nie, tworzy <xref:System.Diagnostics.PerformanceCounterCategory> obiektu przy użyciu <xref:System.Diagnostics.CounterCreationDataCollection> obiekt, który zawiera dwa liczniki wydajności.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa licznika, który określono w <paramref name="counterData" /> kolekcja jest <see langword="null" /> lub ciąg pusty ("").  
  
 —lub—  
  
 Licznik, który jest określony w ramach <paramref name="counterData" /> Kolekcja już istnieje.  
  
 —lub—  
  
 <paramref name="counterName" /> Parametr ma nieprawidłową składnię. Może ona zawierać znaków ukośnika odwrotnego ("\\") lub ma długość większą niż 80 znaków.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Kategoria już istnieje na komputerze lokalnym.  
  
 —lub—  
  
 Układ <paramref name="counterData" /> kolekcji jest niepoprawny dla liczników podstawowego. Licznik typu <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" /> lub <see langword="SampleCounter" /> musi występować bezpośrednio za pomocą jednej z liczników typu podstawowego (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" />, lub <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do wykonywania zadań administracyjnych na kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, class System.Diagnostics.CounterCreationDataCollection counterData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterData As CounterCreationDataCollection) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::Diagnostics::CounterCreationDataCollection ^ counterData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterData" Type="System.Diagnostics.CounterCreationDataCollection" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności niestandardowego można utworzyć ani zarejestrować w systemie.</param>
        <param name="categoryHelp">Opis kategorii niestandardowej.</param>
        <param name="categoryType">Jeden z <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> wartości.</param>
        <param name="counterData">A <see cref="T:System.Diagnostics.CounterCreationDataCollection" /> , który określa liczniki można utworzyć w ramach nowej kategorii.</param>
        <summary>Rejestruje kategorii licznika wydajności niestandardowych, zawierających określony liczniki na komputerze lokalnym.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> skojarzonego z nową kategorię niestandardową lub obiektu wydajności.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` Parametr określa, czy kategorii licznika wydajności jest pojedynczym wystąpieniem czy wielu wystąpieniach. Domyślnie kategoria jest pojedynczym wystąpieniem podczas jego tworzenia i staje się wiele wystąpień, po dodaniu innego wystąpienia. Kategorie są tworzone, gdy aplikacja jest skonfigurowana i wystąpienia są dodawane w czasie wykonywania. W wersji systemu .NET Framework 1.0 i 1.1 nie jest niezbędne sprawdzić, czy kategorii licznika wydajności jest wiele wystąpień lub jednego wystąpienia. W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Diagnostics.PerformanceCounterCategoryType> wyliczenie jest używany do określania, czy licznik wydajności mogą mieć wiele wystąpień.  
  
 Kategorii licznika wydajności z zainstalowanym [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] oddzielne pamięci współużytkowanej, za pomocą każdej kategorii licznika wydajności posiadanie własnej pamięci.  Można określić rozmiar pamięci współużytkowanej oddzielne tworząc DWORD o nazwie FileMappingSize w kluczu rejestru HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nazwa kategorii >* \ Wydajność. Wartość FileMappingSize jest ustawiona na rozmiar pamięci współużytkowanej kategorii. Rozmiar domyślny to 131072 dziesiętną. Jeśli wartość FileMappingSize nie jest obecny, `fileMappingSize` wartość dla atrybutu `performanceCounters` element określony w pliku Machine.config jest używana, powoduje dodatkowe obciążenie przetwarzania pliku konfiguracji. Można zrealizować poprawy wydajności w przypadku uruchamiania aplikacji przez ustawienie rozmiaru mapowania pliku w rejestrze.  
  
> [!NOTE]
>  Zdecydowanie zaleca się, że nowe kategorii licznika wydajności można utworzyć podczas instalacji aplikacji, a nie w czasie wykonywania aplikacji. Dzięki temu czas system operacyjny do odświeżenia listy kategorii licznika wydajności w zarejestrowany. Jeśli na liście nie zostały odświeżone, próba kategoria zakończy się niepowodzeniem.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> metody. W przykładzie przedstawiono sposób utworzyć niestandardowe, wielu wystąpień kategorii licznika wydajności dla liczby zamówień na sekundę.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nazwa licznika, który określono w <paramref name="counterData" /> kolekcja jest <see langword="null" /> lub ciąg pusty ("").  
  
 —lub—  
  
 Licznik, który jest określony w ramach <paramref name="counterData" /> Kolekcja już istnieje.  
  
 —lub—  
  
 <paramref name="counterName" /> ma nieprawidłową składnię. Może ona zawierać znaków ukośnika odwrotnego ("\\") lub ma długość większą niż 80 znaków.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="counterData" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="categoryType" /> wartość jest poza zakresem następujące wartości: <see langword="MultiInstance" />, <see langword="SingleInstance" />, lub <see langword="Unknown" />.</exception>
        <exception cref="T:System.InvalidOperationException">Kategoria już istnieje na komputerze lokalnym.  
  
 —lub—  
  
 Układ <paramref name="counterData" /> kolekcji jest niepoprawny dla liczników podstawowego. Licznik typu <see langword="AverageCount64" />, <see langword="AverageTimer32" />, <see langword="CounterMultiTimer" />, <see langword="CounterMultiTimerInverse" />, <see langword="CounterMultiTimer100Ns" />, <see langword="CounterMultiTimer100NsInverse" />, <see langword="RawFraction" />, <see langword="SampleFraction" />, lub <see langword="SampleCounter" /> musi występować bezpośrednio za pomocą jednej z liczników typu podstawowego (<see langword="AverageBase" />, <see langword="MultiBase" />, <see langword="RawBase" />, lub <see langword="SampleBase" />).</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do wykonywania zadań administracyjnych na kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use another overload that uses PerformanceCounterCategoryType instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności niestandardowego można utworzyć ani zarejestrować w systemie.</param>
        <param name="categoryHelp">Opis kategorii niestandardowej.</param>
        <param name="counterName">Nazwa nowy licznik typu <see langword="NumberOfItems32" />, aby utworzyć w ramach nowej kategorii.</param>
        <param name="counterHelp">Opis licznika, który jest skojarzony z nową kategorię niestandardową.</param>
        <summary>Rejestruje kategorię licznika wydajności niestandardowych, zawierających jeden licznik typu <see langword="NumberOfItems32" /> na komputerze lokalnym.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> skojarzonego z nową kategorię systemu lub obiektu wydajności.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterCategory> i jednego <xref:System.Diagnostics.PerformanceCounter> z tekst pomocy dla każdego z nich, przy użyciu <xref:System.Diagnostics.PerformanceCounterCategory.Create%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> metody.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfcountercatcreate.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatcreate.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> jest <see langword="null" /> lub jest pustym ciągiem ("").  
  
 —lub—  
  
 Licznik, który jest określony przez <paramref name="counterName" /> już istnieje.  
  
 —lub—  
  
 <paramref name="counterName" /> ma nieprawidłową składnię. Może ona zawierać znaków ukośnika odwrotnego ("\\") lub ma długość większą niż 80 znaków.</exception>
        <exception cref="T:System.InvalidOperationException">Kategoria już istnieje na komputerze lokalnym.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="counterHelp" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do wykonywania zadań administracyjnych na kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory Create(string categoryName, string categoryHelp, valuetype System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (categoryName As String, categoryHelp As String, categoryType As PerformanceCounterCategoryType, counterName As String, counterHelp As String) As PerformanceCounterCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::PerformanceCounterCategory ^ Create(System::String ^ categoryName, System::String ^ categoryHelp, System::Diagnostics::PerformanceCounterCategoryType categoryType, System::String ^ counterName, System::String ^ counterHelp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="categoryHelp" Type="System.String" />
        <Parameter Name="categoryType" Type="System.Diagnostics.PerformanceCounterCategoryType" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="counterHelp" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności niestandardowego można utworzyć ani zarejestrować w systemie.</param>
        <param name="categoryHelp">Opis kategorii niestandardowej.</param>
        <param name="categoryType">Jeden z <see cref="T:System.Diagnostics.PerformanceCounterCategoryType" /> wartości określenie, czy kategoria jest <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.MultiInstance" />, <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance" />, lub <see cref="F:System.Diagnostics.PerformanceCounterCategoryType.Unknown" />.</param>
        <param name="counterName">Nazwa nowy licznik do tworzenia w ramach nowej kategorii.</param>
        <param name="counterHelp">Opis licznika, który jest skojarzony z nową kategorię niestandardową.</param>
        <summary>Rejestruje kategorii licznika wydajności niestandardowych, zawierających jeden licznik typu <see cref="F:System.Diagnostics.PerformanceCounterType.NumberOfItems32" /> na komputerze lokalnym.</summary>
        <returns>A <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> skojarzonego z nową kategorię systemu lub obiektu wydajności.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `categoryType` Parametr określa, czy kategorii licznika wydajności jest pojedynczym wystąpieniem czy wielu wystąpieniach. Domyślnie kategoria jest pojedynczym wystąpieniem podczas jego tworzenia i staje się wiele wystąpień, po dodaniu innego wystąpienia. Kategorie są tworzone, gdy aplikacja jest skonfigurowana i wystąpienia są dodawane w czasie wykonywania. W wersji systemu .NET Framework 1.0 i 1.1 nie jest niezbędne sprawdzić, czy kategorii licznika wydajności jest wiele wystąpień lub jednego wystąpienia. W [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], <xref:System.Diagnostics.PerformanceCounterCategoryType> wyliczenie jest używany do określania, czy licznik wydajności mogą mieć wiele wystąpień.  
  
 Kategorii licznika wydajności z zainstalowanym [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] oddzielne pamięci współużytkowanej, za pomocą każdej kategorii licznika wydajności posiadanie własnej pamięci. Można określić rozmiar pamięci współużytkowanej oddzielne tworząc DWORD o nazwie FileMappingSize w kluczu rejestru HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<nazwa kategorii >* \ Wydajność. Wartość FileMappingSize jest ustawiona na rozmiar pamięci współużytkowanej kategorii. Rozmiar domyślny to 131072 dziesiętną. Jeśli wartość FileMappingSize nie jest obecny, `fileMappingSize` wartość dla atrybutu `performanceCounters` element określony w pliku Machine.config jest używana, powoduje dodatkowe obciążenie przetwarzania pliku konfiguracji. Można zrealizować poprawy wydajności w przypadku uruchamiania aplikacji przez ustawienie rozmiaru mapowania pliku w rejestrze.  
  
> [!NOTE]
>  Zdecydowanie zaleca się, że nowe kategorii licznika wydajności można utworzyć podczas instalacji aplikacji, a nie w czasie wykonywania aplikacji. Dzięki temu czas system operacyjny do odświeżenia listy kategorii licznika wydajności w zarejestrowany. Jeśli na liście nie zostały odświeżone, próba kategoria zakończy się niepowodzeniem.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A> metody. W przykładzie przedstawiono sposób tworzenia kategorii licznika wydajności niestandardowych, pojedynczego wystąpienia.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/CS/program.cs#3)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategoryType#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategoryType/VB/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="counterName" /> jest <see langword="null" /> lub jest pustym ciągiem ("").  
  
 —lub—  
  
 Licznik, który jest określony przez <paramref name="counterName" /> już istnieje.  
  
 —lub—  
  
 <paramref name="counterName" /> ma nieprawidłową składnię. Może ona zawierać znaków ukośnika odwrotnego ("\\") lub ma długość większą niż 80 znaków.</exception>
        <exception cref="T:System.InvalidOperationException">Kategoria już istnieje na komputerze lokalnym.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="counterHelp" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do wykonywania zadań administracyjnych na kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
        <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static void Delete (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Delete(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Delete (categoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Delete(System::String ^ categoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności niestandardowych do usunięcia.</param>
        <summary>Usuwa kategorię i jego skojarzone liczniki z komputera lokalnego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko kategorii licznika wydajności niestandardowych można usunąć z systemu. Nie można usunąć licznik z kategorii. Aby to zrobić, usunąć kategorii i ponownie utworzyć kategorii liczników, które chcesz zachować. Aby uniknąć wyjątek, sprawdź, czy kategoria istnieje można było go usunąć.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.PerformanceCounterCategory.Delete%2A> metodę, aby usunąć <xref:System.Diagnostics.PerformanceCounterCategory> i <xref:System.Diagnostics.PerformanceCounter> obiektów, które zawiera.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatDelete.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatdelete.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> Parametr ma nieprawidłową składnię. Może ona zawierać znaków ukośnika odwrotnego ("\\") lub ma długość większą niż 80 znaków.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.InvalidOperationException">Nie można usunąć tej kategorii, ponieważ nie jest kategorią niestandardowych.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Administer" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy kategoria jest zarejestrowany w systemie.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności do wyszukania.</param>
        <summary>Określa, czy kategoria jest zarejestrowana na komputerze lokalnym.</summary>
        <returns>
          <see langword="true" /> Jeśli kategorii jest zarejestrowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użycie <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metody może spowodować zmniejszenie wydajności zauważalne podczas wszystkich liczników wydajności na tym komputerze są sprawdzane pod kątem dostępności. Jeśli piszesz tylko do liczników wydajności, można uniknąć wyszukiwania globalnego dla liczników wydajności, tworząc licznika wydajności, gdy aplikacja jest zainstalowana i przy założeniu kategorii istnieje podczas uzyskiwania dostępu do liczników. Nie istnieje sposób w celu uniknięcia wyszukiwania licznika wydajności podczas odczytu z liczników wydajności.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounterCategory> istnieje obiekt o nazwie "zamówienia". Jeśli nie, tworzy <xref:System.Diagnostics.PerformanceCounterCategory> obiektu przy użyciu <xref:System.Diagnostics.CounterCreationDataCollection> obiekt, który zawiera dwa liczniki wydajności.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> Parametr jest pustym ciągiem ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ categoryName, System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności do wyszukania.</param>
        <param name="machineName">Nazwa komputera w celu zbadania dla kategorii.</param>
        <summary>Określa, czy kategoria jest zarejestrowany na określonym komputerze.</summary>
        <returns>
          <see langword="true" /> Jeśli kategorii jest zarejestrowany; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użycie <xref:System.Diagnostics.PerformanceCounterCategory.Exists%2A> metody może spowodować zmniejszenie wydajności zauważalne podczas wszystkich liczników wydajności na tym komputerze są sprawdzane pod kątem dostępności. Jeśli piszesz tylko do liczników wydajności, można uniknąć wyszukiwania globalnego dla liczników wydajności, tworząc licznika wydajności, gdy aplikacja jest zainstalowana i przy założeniu kategorii istnieje podczas uzyskiwania dostępu do liczników. Nie istnieje sposób w celu uniknięcia wyszukiwania licznika wydajności podczas odczytu z liczników wydajności.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład określa, czy <xref:System.Diagnostics.PerformanceCounterCategory> obiektu o nazwie `Orders` istnieje. Jeśli nie istnieje, w przykładzie jest tworzony <xref:System.Diagnostics.PerformanceCounterCategory> obiektu przy użyciu <xref:System.Diagnostics.CounterCreationDataCollection> obiekt, który zawiera dwa liczniki wydajności.  
  
 [!code-cpp[PerfCounter_ccd#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter_ccd/CPP/ccd.cpp#1)]
 [!code-csharp[PerfCounter_ccd#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter_ccd/CS/ccd.cs#1)]
 [!code-vb[PerfCounter_ccd#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter_ccd/VB/ccd.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> Parametr jest pustym ciągiem ("").  
  
 —lub—  
  
 <paramref name="machineName" /> Parametr jest nieprawidłowy.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.IO.IOException">Nie można odnaleźć ścieżki sieciowej.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Obiekt wywołujący nie posiada wymaganych uprawnień.  
  
 —lub—  
  
 Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCategories">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera listę kategorii licznika wydajności, które są zarejestrowane na komputerze.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories () As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę kategorii licznika wydajności, które są zarejestrowane na komputerze lokalnym.</summary>
        <returns>Tablica <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> obiektów wskazujący kategorie, które są zarejestrowane na komputerze lokalnym.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> metoda zwraca tablicę <xref:System.Diagnostics.PerformanceCounterCategory> obiektów z komputera lokalnego lub na określonym komputerze. Konwertuje <xref:System.Diagnostics.PerformanceCounterCategory> tablicy na tablicę nazw kategorii, które sortowania i wyświetla dla użytkownika. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> Przeciążenia jest uzależniony Określa, czy określono nazwę komputera.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCategories">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Diagnostics.PerformanceCounterCategory[] GetCategories(string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCategories (machineName As String) As PerformanceCounterCategory()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Diagnostics::PerformanceCounterCategory ^&gt; ^ GetCategories(System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterCategory[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="machineName">Komputer, aby wyglądały.</param>
        <summary>Pobiera listę kategorii licznika wydajności, które są zarejestrowane na określonym komputerze.</summary>
        <returns>Tablica <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> obiektów wskazujący kategorie, które są zarejestrowane na określonym komputerze.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać kategorii na komputerze lokalnym, użyj innego przeciążenia, lub Przekaż "." jako `machineName` parametru.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> metoda zwraca tablicę <xref:System.Diagnostics.PerformanceCounterCategory> obiektów z komputera lokalnego lub na określonym komputerze. Konwertuje <xref:System.Diagnostics.PerformanceCounterCategory> tablicy na tablicę nazw kategorii, które sortowania i wyświetla dla użytkownika. <xref:System.Diagnostics.PerformanceCounterCategory.GetCategories%2A> Przeciążenia jest uzależniony Określa, czy określono nazwę komputera.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountergetcat.cpp#2)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountergetcat.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcat.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="machineName" /> Parametr jest nieprawidłowy.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCounters">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pobiera listę liczników w tej kategorii licznika wydajności.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters () As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę liczników w kategorii licznika wydajności, który zawiera dokładnie jedno wystąpienie.</summary>
        <returns>Tablica <see cref="T:System.Diagnostics.PerformanceCounter" /> obiektów wskazujący liczniki, które są skojarzone z tej kategorii licznika wydajności jednego wystąpienia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji o wystąpienia obiektów wydajności, zobacz <xref:System.Diagnostics.PerformanceCounter> Przegląd klasy.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera listę <xref:System.Diagnostics.PerformanceCounter> obiekty w <xref:System.Diagnostics.PerformanceCounterCategory>. Najpierw tworzy <xref:System.Diagnostics.PerformanceCounterCategory> z odpowiedniego konstruktora, na podstawie tego, czy określono nazwę komputera. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> metoda zwraca tablicę <xref:System.Diagnostics.PerformanceCounter> obiektów, wybierając <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> przeciążenia według tego, czy została podana nazwa wystąpienia.  
  
 To <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters> przeciążenia nie powiodło się, chyba że jest używana z kategorią jednego wystąpienia.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Kategoria nie jest pojedynczym wystąpieniem.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.InvalidOperationException">Kategoria nie ma skojarzonego wystąpienia.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetCounters">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.PerformanceCounter[] GetCounters(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCounters (instanceName As String) As PerformanceCounter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Diagnostics::PerformanceCounter ^&gt; ^ GetCounters(System::String ^ instanceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounter[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Wystąpienie obiektu wydajności dla którego można pobrać listy skojarzone liczniki.</param>
        <summary>Pobiera listę liczników w kategorii licznika wydajności, który zawiera co najmniej jedno wystąpienie.</summary>
        <returns>Tablica <see cref="T:System.Diagnostics.PerformanceCounter" /> obiektów wskazujący liczniki, które są skojarzone z wystąpieniem określony obiekt tej kategorii licznika wydajności.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Do reprezentowania kategorii jednym wystąpieniu, przekazania pustego ciągu ("") dla `instanceName` parametru.  
  
 Aby uzyskać więcej informacji o wystąpienia obiektów wydajności, zobacz <xref:System.Diagnostics.PerformanceCounter> Przegląd klasy.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera listę <xref:System.Diagnostics.PerformanceCounter> obiekty w <xref:System.Diagnostics.PerformanceCounterCategory>. Najpierw tworzy <xref:System.Diagnostics.PerformanceCounterCategory> z odpowiedniego konstruktora, na podstawie tego, czy określono nazwę komputera. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> metoda zwraca tablicę <xref:System.Diagnostics.PerformanceCounter> obiektów, wybierając <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%2A> przeciążenia według tego, czy została podana nazwa wystąpienia.  
  
 To <xref:System.Diagnostics.PerformanceCounterCategory.GetCounters%28System.String%29> przeciążenia nie powiodło się, chyba że jest używana z kategorię, która zawiera wystąpienia.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetcount.cpp#4)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetcount.cs#4)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetcount.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Właściwości dla tego <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> wystąpienia nie została ustawiona.  
  
 —lub—  
  
 Kategoria nie zawiera określonej przez wystąpienie <paramref name="instanceName" /> parametru.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="GetInstanceNames">
      <MemberSignature Language="C#" Value="public string[] GetInstanceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetInstanceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetInstanceNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera listę wystąpień obiektów wydajności, które są skojarzone z tą kategorią.</summary>
        <returns>Tablica ciągów reprezentujących nazwy wystąpienia obiektów wydajności, które są skojarzone z tą kategorią, lub jeśli kategoria zawiera tylko jedno wystąpienie obiektu wydajności, pojedynczy wpis tablica zawiera ciąg pusty ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykładowy kod pobiera listę <xref:System.Diagnostics.PerformanceCounter> obiekty w <xref:System.Diagnostics.PerformanceCounterCategory>. Najpierw tworzy <xref:System.Diagnostics.PerformanceCounterCategory> obiekt, za pomocą odpowiedniego konstruktora według tego, czy określono nazwę komputera. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames%2A> do zwracania nazwy wystąpienia jako tablica <xref:System.String>, sortowania i wyświetla.  
  
 [!code-cpp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/cpp/perfcountercatgetinst.cpp#6)]
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/CS/perfcountercatgetinst.cs#6)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.GetMembers#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.GetMembers/VB/perfcountercatgetinst.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Jest właściwość <see langword="null" />. Właściwość może nie została ustawiona.  
  
 —lub—  
  
 Kategoria nie ma skojarzonego wystąpienia.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InstanceExists">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy kategoria zawiera wystąpienie obiektu określonego działania.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public bool InstanceExists (string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InstanceExists(string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InstanceExists (instanceName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InstanceExists(System::String ^ instanceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Wystąpienie obiektu wydajności w tej kategorii liczników wydajności do wyszukania.</param>
        <summary>Określa, czy wystąpienie obiektu określonego działania istnieje w kategorii, który jest identyfikowany przez to <see cref="T:System.Diagnostics.PerformanceCounterCategory" /> obiektu <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> właściwości.</summary>
        <returns>
          <see langword="true" /> Jeśli kategoria zawiera wystąpienie obiektu określonego działania; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To przeciążenie metody <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> nie jest `static`. Wymaga utworzenia <xref:System.Diagnostics.PerformanceCounterCategory> obiektu i ustawić <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> właściwości.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu Określa, czy <xref:System.Diagnostics.PerformanceCounter> istnieje wystąpienie w ramach <xref:System.Diagnostics.PerformanceCounterCategory>. Najpierw tworzy <xref:System.Diagnostics.PerformanceCounterCategory> obiekt, za pomocą odpowiedniego konstruktora według tego, czy określono nazwę komputera. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%28System.String%29> ustalenie, czy określone wystąpienie istnieje, a następnie powiadamia użytkownika. Jeśli nazwa wystąpienia nie jest określona, w przykładzie użyto domyślną nazwę jednego wystąpienia.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcounterobjinstexists.cs#2)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatobjinstexists.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Jest właściwość <see langword="null" />. Właściwość może nie została ustawiona.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Wystąpienie obiektu wydajności do wyszukania.</param>
        <param name="categoryName">Kategoria licznika wydajności do wyszukiwania.</param>
        <summary>Określa, czy określona kategoria na komputerze lokalnym zawiera wystąpienie obiektu określonego działania.</summary>
        <returns>
          <see langword="true" /> Jeśli kategoria zawiera wystąpienie obiektu określonego działania; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest możliwe określenie, czy wystąpienie obiektu wydajności istnieje na komputerze bez określania określonej kategorii do przeszukania.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje statycznych przeciążeń <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> ustalenie, czy dany <xref:System.Diagnostics.PerformanceCounter> wystąpienie istnieje w <xref:System.Diagnostics.PerformanceCounterCategory>. Przeciążenie jest uzależniony Określa, czy nazwa komputera jest określona. Jeśli nazwa wystąpienia nie jest określona, w przykładzie użyto domyślną nazwę jednego wystąpienia.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> Parametr jest pustym ciągiem ("").</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="InstanceExists">
      <MemberSignature Language="C#" Value="public static bool InstanceExists (string instanceName, string categoryName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InstanceExists(string instanceName, string categoryName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function InstanceExists (instanceName As String, categoryName As String, machineName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool InstanceExists(System::String ^ instanceName, System::String ^ categoryName, System::String ^ machineName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">Wystąpienie obiektu wydajności do wyszukania.</param>
        <param name="categoryName">Kategoria licznika wydajności do wyszukiwania.</param>
        <param name="machineName">Nazwa komputera, na którym ma zostać wyszukane pary wystąpienie kategorii.</param>
        <summary>Określa, czy określona kategoria na określonym komputerze zawiera wystąpienie obiektu określonego działania.</summary>
        <returns>
          <see langword="true" /> Jeśli kategoria zawiera wystąpienie obiektu określonego działania; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie jest możliwe określenie, czy wystąpienie obiektu wydajności istnieje na komputerze bez określania określonej kategorii do przeszukania.  
  
 Można użyć ".", aby określić komputer lokalny.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu wykorzystuje statycznych przeciążeń <xref:System.Diagnostics.PerformanceCounterCategory.InstanceExists%2A> ustalenie, czy dany <xref:System.Diagnostics.PerformanceCounter> wystąpienie istnieje w <xref:System.Diagnostics.PerformanceCounterCategory>. Przeciążenie jest uzależniony Określa, czy nazwa komputera jest określona. Jeśli nazwa wystąpienia nie jest określona, w przykładzie użyto domyślną nazwę jednego wystąpienia.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/CS/perfcountercatstatinstexists.cs#10)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.ExistMembers#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.ExistMembers/VB/perfcountercatstatinstexists.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instanceName" /> Parametr jest <see langword="null" />.  
  
 —lub—  
  
 <paramref name="categoryName" /> Parametr jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="categoryName" /> Parametr jest pustym ciągiem ("").  
  
 —lub—  
  
 <paramref name="machineName" /> Parametr jest nieprawidłowy.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounter.InstanceName" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)" />
        <altmember cref="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounterCategory.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę komputera, na którym znajduje się ta kategoria.</summary>
        <value>Nazwa komputera, na którym istnieje kategorii licznika wydajności i jego skojarzone liczniki.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterCategory> z <xref:System.Diagnostics.PerformanceCounterCategory.%23ctor> konstruktora. Jednak monituje użytkownika o <xref:System.Diagnostics.PerformanceCounterCategory> i nazwy komputera, następnie ustawia <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> i <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A> właściwości z wprowadzone wartości. Następnie wyświetla wartości <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounterCategory.MachineName%2A>, i <xref:System.Diagnostics.PerformanceCounterCategory.CategoryHelp%2A> właściwości, lub wyświetla komunikat o błędzie, jeśli <xref:System.Diagnostics.PerformanceCounterCategory> jest niedostępny.  
  
 [!code-csharp[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/CS/perfCounterCatProps.cs#8)]
 [!code-vb[System.Diagnostics.PerformanceCounterCategory.OtherMembers#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.PerformanceCounterCategory.OtherMembers/VB/perfcountercatprops.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.MachineName" /> Składnia jest nieprawidłowa.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Odczytywanie kategorii licznika wydajności. Wyliczenie skojarzone: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" />
        <altmember cref="T:System.Diagnostics.PerformanceCounter" />
      </Docs>
    </Member>
    <Member MemberName="ReadCategory">
      <MemberSignature Language="C#" Value="public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.InstanceDataCollectionCollection ReadCategory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadCategory () As InstanceDataCollectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::InstanceDataCollectionCollection ^ ReadCategory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.InstanceDataCollectionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Odczytuje wszystkie wydajności i licznik obiektu wystąpienia dane, które są skojarzone z tej kategorii licznika wydajności.</summary>
        <returns>
          <see cref="T:System.Diagnostics.InstanceDataCollectionCollection" /> Zawierający dane wystąpienia obiektu licznika i wydajności dla kategorii.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy ustawić <xref:System.Diagnostics.PerformanceCounterCategory.CategoryName%2A> właściwość przed wywołaniem <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A>.  
  
 Odczytywanie całej kategorii jednocześnie może być tak wydajna, jak odczytywania jeden licznik ze względu na sposób, że system zawiera dane.  
  
> [!NOTE]
>  Aby odczytywanie liczników wydajności w systemie Windows Vista i nowszych wersji systemu Windows XP Professional x64 lub Windows Server 2003, musisz być członkiem grupy Użytkownicy monitora wydajności lub uprawnień administracyjnych.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień Twoje uprawnienia do dostępu do liczników wydajności w systemie Windows Vista lub nowszy, Dodaj siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista i nowszych Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Do wykonania kodu, który uzyskuje dostęp do liczników wydajności, musi najpierw podwyższenie Twoje uprawnienia od użytkownika standardowego do administratora. Można to zrobić, podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikonę aplikacji i wskazujący, że chcesz uruchomić jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterCategory> dla określonej <xref:System.Diagnostics.PerformanceCounterCategory> nazwy. Następnie używa <xref:System.Diagnostics.PerformanceCounterCategory.ReadCategory%2A> do zwrócenia <xref:System.Diagnostics.InstanceDataCollectionCollection> zawierający dane wystąpienia dla wszystkich wystąpień <xref:System.Diagnostics.PerformanceCounter> obiektów w ramach <xref:System.Diagnostics.PerformanceCounterCategory>.  
  
 [!code-csharp[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/CS/instdatacopyto.cs#6)]
 [!code-vb[System.Diagnostics.InstanceData.CopyTo#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.InstanceData.CopyTo/VB/instdatacopyto.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Diagnostics.PerformanceCounterCategory.CategoryName" /> Jest właściwość <see langword="null" />. Właściwość może nie została ustawiona.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wywołanie interfejsu API z systemu źródłowego nie powiodło się.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod, który jest wykonywany bez uprawnień administracyjnych podjęto próbę odczytu licznika wydajności.</exception>
        <altmember cref="T:System.Diagnostics.InstanceDataCollectionCollection" />
        <altmember cref="T:System.Diagnostics.InstanceDataCollection" />
        <altmember cref="T:System.Diagnostics.InstanceData" />
      </Docs>
    </Member>
  </Members>
</Type>