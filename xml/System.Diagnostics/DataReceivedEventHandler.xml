<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="d6007-101">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="d6007-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="d6007-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="d6007-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="d6007-103">Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> zdarzenia lub <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> zdarzenie <see cref="T:System.Diagnostics.Process" />.</span><span class="sxs-lookup"><span data-stu-id="d6007-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6007-104">Po utworzeniu <xref:System.Diagnostics.DataReceivedEventHandler> delegata, należy określić metodę, która obsłuży zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="d6007-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="d6007-105">Aby skojarzyć zdarzenie z obsługi zdarzenia, należy dodać wystąpienia delegata zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="d6007-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="d6007-106">Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.</span><span class="sxs-lookup"><span data-stu-id="d6007-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="d6007-107">Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz [Obsługa i wywoływanie zdarzeń](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="d6007-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="d6007-108">Asynchronicznie zbierać przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> strumień wyjściowy procesu, należy dodać obsługi zdarzenia do <xref:System.Diagnostics.Process.OutputDataReceived> lub <xref:System.Diagnostics.Process.ErrorDataReceived> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="d6007-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="d6007-109">Te zdarzenia są wywoływane zawsze, gdy proces zapisuje wiersz do odpowiedniego strumienia przekierowane.</span><span class="sxs-lookup"><span data-stu-id="d6007-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="d6007-110">Gdy przekierowanego strumień jest zamknięty, pustym wierszu są wysyłane do programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="d6007-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="d6007-111">Upewnij się, obsługi zdarzenia sprawdza przed uzyskaniem dostępu do tego warunku <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="d6007-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="d6007-112">Na przykład można użyć `static` metody <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> do sprawdzania poprawności <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości w obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="d6007-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6007-113">W poniższym przykładzie przedstawiono sposób wykonywania asynchronicznych operacji odczytu na przekierowanym <xref:System.Diagnostics.Process.StandardOutput%2A> strumień **sortowania** polecenia.</span><span class="sxs-lookup"><span data-stu-id="d6007-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="d6007-114">**Sortowania** polecenie jest aplikacja konsolowa, która odczytuje i sortuje wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="d6007-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="d6007-115">W przykładzie jest tworzony <xref:System.Diagnostics.DataReceivedEventHandler> delegować `SortOutputHandler` obsługi zdarzeń i kojarzy delegata z <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="d6007-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="d6007-116">Program obsługi zdarzeń odbiera wierszy tekstu z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst do ekranu.</span><span class="sxs-lookup"><span data-stu-id="d6007-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>