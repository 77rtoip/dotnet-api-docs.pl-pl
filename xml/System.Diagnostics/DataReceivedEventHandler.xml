<Type Name="DataReceivedEventHandler" FullName="System.Diagnostics.DataReceivedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7aa46fdc138eb94a4175a381ff6f85a4fbb0827" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076938" /></Metadata><TypeSignature Language="C#" Value="public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DataReceivedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DataReceivedEventHandler(sender As Object, e As DataReceivedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DataReceivedEventHandler(System::Object ^ sender, DataReceivedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DataReceivedEventHandler = delegate of obj * DataReceivedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Diagnostics.DataReceivedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="2ceb0-101">Źródło zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="2ceb0-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-102">A <see cref="T:System.Diagnostics.DataReceivedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="2ceb0-103">Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> zdarzenie lub <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> zdarzenie <see cref="T:System.Diagnostics.Process" />.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-103">Represents the method that will handle the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> event or <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> event of a <see cref="T:System.Diagnostics.Process" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2ceb0-104">Podczas tworzenia <xref:System.Diagnostics.DataReceivedEventHandler> delegata należy określić metodę, która będzie obsługiwać zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-104">When you create a <xref:System.Diagnostics.DataReceivedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="2ceb0-105">Aby skojarzyć zdarzenie z programem obsługi zdarzeń, Dodaj wystąpienie delegata do zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="2ceb0-106">Program obsługi zdarzeń jest wywoływany przy każdym wystąpieniu zdarzenia, o ile nie usunięto delegata.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="2ceb0-107">Aby uzyskać więcej informacji na temat delegatów obsługi zdarzeń, zobacz temat [Obsługa i](~/docs/standard/events/index.md)wywoływanie zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="2ceb0-108">Aby asynchronicznie zbierać dane <xref:System.Diagnostics.Process.StandardOutput%2A> wyjściowe <xref:System.Diagnostics.Process.StandardError%2A> przekierowane lub przesłane przez proces, Dodaj obsługę zdarzeń do <xref:System.Diagnostics.Process.OutputDataReceived> zdarzenia lub <xref:System.Diagnostics.Process.ErrorDataReceived> .</span><span class="sxs-lookup"><span data-stu-id="2ceb0-108">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, add your event handler to the <xref:System.Diagnostics.Process.OutputDataReceived> or <xref:System.Diagnostics.Process.ErrorDataReceived> event.</span></span> <span data-ttu-id="2ceb0-109">Te zdarzenia są wywoływane za każdym razem, gdy proces zapisuje wiersz do odpowiedniego przekierowanego strumienia.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-109">These events are raised each time the process writes a line to the corresponding redirected stream.</span></span> <span data-ttu-id="2ceb0-110">Gdy strumień przekierowany zostanie zamknięty, do procedury obsługi zdarzeń jest wysyłany wiersz o wartości null.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-110">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="2ceb0-111">Upewnij się, że program obsługi zdarzeń sprawdza ten warunek przed uzyskaniem dostępu <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> do właściwości.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-111">Ensure that your event handler checks for this condition before accessing the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property.</span></span> <span data-ttu-id="2ceb0-112">Można na przykład użyć `static` metody <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> do walidacji <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości w programie obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-112">For example, you can use the `static` method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2ceb0-113">Poniższy przykład kodu ilustruje sposób wykonywania asynchronicznych operacji odczytu w przekierowanym <xref:System.Diagnostics.Process.StandardOutput%2A> strumieniu polecenia **sort** .</span><span class="sxs-lookup"><span data-stu-id="2ceb0-113">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command.</span></span> <span data-ttu-id="2ceb0-114">Polecenie **sort** jest aplikacją konsolową, która odczytuje i sortuje dane wejściowe tekstu.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-114">The **sort** command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="2ceb0-115">Przykład tworzy <xref:System.Diagnostics.DataReceivedEventHandler> delegata `SortOutputHandler` dla programu obsługi zdarzeń i <xref:System.Diagnostics.Process.OutputDataReceived> kojarzy delegata ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-115">The example creates a <xref:System.Diagnostics.DataReceivedEventHandler> delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="2ceb0-116">Program obsługi zdarzeń odbiera wiersze tekstowe z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst na ekranie.</span><span class="sxs-lookup"><span data-stu-id="2ceb0-116">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventArgs" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
</Type>
