<Type Name="ActivitySpanId" FullName="System.Diagnostics.ActivitySpanId">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16975be84136017b9a80bafdaecf5c8ae2832e28" /><Meta Name="ms.sourcegitcommit" Value="43c8e74d92c78325492baf27e41b400443f0dfbf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/08/2019" /><Meta Name="ms.locfileid" Value="68859046" /></Metadata><TypeSignature Language="C#" Value="public struct ActivitySpanId : IEquatable&lt;System.Diagnostics.ActivitySpanId&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ActivitySpanId extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Diagnostics.ActivitySpanId&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ActivitySpanId" />
  <TypeSignature Language="VB.NET" Value="Public Structure ActivitySpanId&#xA;Implements IEquatable(Of ActivitySpanId)" />
  <TypeSignature Language="C++ CLI" Value="public value class ActivitySpanId : IEquatable&lt;System::Diagnostics::ActivitySpanId&gt;" />
  <TypeSignature Language="F#" Value="type ActivitySpanId = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Diagnostics.ActivitySpanId&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="P:System.Diagnostics.Activity.SpanId" /> Reprezentuje sformatowaną na podstawie standardu W3C.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

`ActivitySpanId` Struktura odzwierciedla format, który standard W3C wymaga dla identyfikatora pojedynczego zakresu w śladzie. Składa się z 8 bajtów, zazwyczaj jest wyświetlana jako 16 znaków szesnastkowych. `ActivitySpanId` Jest zwracany <xref:System.Diagnostics.Activity.SpanId?displayProperty=nameWithtype> przez element dla elementu, <xref:System.Diagnostics.Activity> którego <xref:System.Diagnostics.Activity.IdFormat?displayProperty=nameWithType> wartość <xref:System.Diagnostics.ActivityIdFormat.W3C?displayProperty=nameWithtype>to.

`ActivitySpanId` Ponieważ jest strukturą zawierającą 8 bajtów, można ją przekazywać przez odwołanie. `ActivitySpanId`zawiera metody konwersji do i z reprezentacji w postaci ciągu szesnastkowego, próbuje uniknąć zmiany formatów do momentu, gdy nie musi, i buforuje reprezentację ciągu po utworzeniu. Jest on głównie przydatny jako typ wymiany.

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CopyTo(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Span(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Span&lt;byte&gt; -&gt; unit" Usage="activitySpanId.CopyTo destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination">Zakres, do którego mają zostać skopiowane 8 bajtów SpanID.</param>
        <summary>Kopiuje 8 bajtów bieżącego <see cref="T:System.Diagnostics.ActivitySpanId" /> do określonego zakresu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromBytes">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromBytes (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromBytes(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromBytes(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBytes (idData As ReadOnlySpan(Of Byte)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromBytes(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromBytes : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromBytes idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData">Zakres tylko do odczytu osiem bajtów.</param>
        <summary>Tworzy nową <see cref="T:System.Diagnostics.ActivitySpanId" /> wartość z zakresu tylko do odczytu ośmiu bajtów.</summary>
        <returns>Nowy identyfikator zakresu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="idData" />nie zawiera ośmiu bajtów.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromString (ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromString(valuetype System.ReadOnlySpan`1&lt;char&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromString(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromString (idData As ReadOnlySpan(Of Char)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromString(ReadOnlySpan&lt;char&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromString : ReadOnlySpan&lt;char&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromString idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="idData">Zakres zawierający 16 znaków szesnastkowych.</param>
        <summary>Tworzy nową <see cref="T:System.Diagnostics.ActivitySpanId" /> wartość z zakresu tylko do odczytu o długości 16 znaków szesnastkowych.</summary>
        <returns>Nowy identyfikator zakresu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

`idData`może zawierać liczby i małe litery szesnastkowe lub same zera.

         ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="idData" />nie zawiera 16 znaków szesnastkowych.

—lub— 
Znaki w <paramref name="idData" /> nie mają małych liter szesnastkowych lub samych zer.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromUtf8String">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateFromUtf8String (ReadOnlySpan&lt;byte&gt; idData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateFromUtf8String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; idData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateFromUtf8String(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromUtf8String (idData As ReadOnlySpan(Of Byte)) As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateFromUtf8String(ReadOnlySpan&lt;System::Byte&gt; idData);" />
      <MemberSignature Language="F#" Value="static member CreateFromUtf8String : ReadOnlySpan&lt;byte&gt; -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateFromUtf8String idData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="idData">Zakres tylko do odczytu w bajtach zakodowanych w formacie UTF8.</param>
        <summary>Tworzy nową <see cref="T:System.Diagnostics.ActivitySpanId" /> wartość z zakresu tylko do odczytu w bajtach zakodowanych w formacie UTF8.</summary>
        <returns>Nowy identyfikator zakresu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRandom">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.ActivitySpanId CreateRandom ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Diagnostics.ActivitySpanId CreateRandom() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.CreateRandom" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRandom () As ActivitySpanId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Diagnostics::ActivitySpanId CreateRandom();" />
      <MemberSignature Language="F#" Value="static member CreateRandom : unit -&gt; System.Diagnostics.ActivitySpanId" Usage="System.Diagnostics.ActivitySpanId.CreateRandom " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ActivitySpanId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tworzy nowy <see cref="T:System.Diagnostics.ActivitySpanId" /> oparty na liczbie losowej (bardzo często jest to unikatowe).</summary>
        <returns>Nowy identyfikator zakresu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Diagnostics.ActivitySpanId spanId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Diagnostics.ActivitySpanId spanId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.Equals(System.Diagnostics.ActivitySpanId)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (spanId As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Diagnostics::ActivitySpanId spanId);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Diagnostics.ActivitySpanId -&gt; bool" Usage="activitySpanId.Equals spanId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId" Type="System.Diagnostics.ActivitySpanId" />
      </Parameters>
      <Docs>
        <param name="spanId">Wystąpienie, które ma zostać porównane.</param>
        <summary>Określa, czy to wystąpienie i określone <see cref="T:System.Diagnostics.ActivitySpanId" /> wystąpienie mają tę samą wartość.</summary>
        <returns><see langword="true" />Jeśli <paramref name="spanId" /> ma taką samą wartość szesnastkową jak bieżące wystąpienie; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="activitySpanId.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Obiekt do porównania.</param>
        <summary>bieżące wystąpienie i określony obiekt, które również muszą być <see cref="T:System.Diagnostics.ActivitySpanId" /> wystąpieniem, mają tę samą wartość.</summary>
        <returns><see langword="true" />Jeśli <paramref name="obj" /> jest <see langword="false" />wystąpieniem i ma tę samą wartość szesnastkową co bieżące wystąpienie; w przeciwnym razie. <see cref="T:System.Diagnostics.ActivitySpanId" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="activitySpanId.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kod skrótu SpanId.</summary>
        <returns>Kod skrótu SpanId.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Diagnostics.ActivitySpanId spanId1, System.Diagnostics.ActivitySpanId spandId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Diagnostics.ActivitySpanId spanId1, valuetype System.Diagnostics.ActivitySpanId spandId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.op_Equality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (spanId1 As ActivitySpanId, spandId2 As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Diagnostics::ActivitySpanId spanId1, System::Diagnostics::ActivitySpanId spandId2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Diagnostics.ActivitySpanId * System.Diagnostics.ActivitySpanId -&gt; bool" Usage="spanId1 = spandId2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId1" Type="System.Diagnostics.ActivitySpanId" />
        <Parameter Name="spandId2" Type="System.Diagnostics.ActivitySpanId" />
      </Parameters>
      <Docs>
        <param name="spanId1">Pierwsze wystąpienie do porównania.</param>
        <param name="spandId2">Drugie wystąpienie do porównania.</param>
        <summary>Określa, czy dwa <see cref="T:System.Diagnostics.ActivitySpanId" /> określone wystąpienia mają tę samą wartość.</summary>
        <returns><see langword="true" />Jeśli SpanId <paramref name="spanId1" /> jest taka sama jak <paramref name="spandId2" />SpanId; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Diagnostics.ActivitySpanId spanId1, System.Diagnostics.ActivitySpanId spandId2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Diagnostics.ActivitySpanId spanId1, valuetype System.Diagnostics.ActivitySpanId spandId2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.op_Inequality(System.Diagnostics.ActivitySpanId,System.Diagnostics.ActivitySpanId)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (spanId1 As ActivitySpanId, spandId2 As ActivitySpanId) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Diagnostics::ActivitySpanId spanId1, System::Diagnostics::ActivitySpanId spandId2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Diagnostics.ActivitySpanId * System.Diagnostics.ActivitySpanId -&gt; bool" Usage="System.Diagnostics.ActivitySpanId.op_Inequality (spanId1, spandId2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spanId1" Type="System.Diagnostics.ActivitySpanId" />
        <Parameter Name="spandId2" Type="System.Diagnostics.ActivitySpanId" />
      </Parameters>
      <Docs>
        <param name="spanId1">Pierwsze wystąpienie do porównania.</param>
        <param name="spandId2">Drugie wystąpienie do porównania.</param>
        <summary>Określ, czy dwa <see cref="T:System.Diagnostics.ActivitySpanId" /> określone wystąpienia mają nierówne wartości.</summary>
        <returns><see langword="true" />Jeśli SpanId <paramref name="spanId1" /> różni się od <paramref name="spandId2" />SpanId; w przeciwnym razie, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToHexString">
      <MemberSignature Language="C#" Value="public string ToHexString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToHexString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.ToHexString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToHexString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToHexString();" />
      <MemberSignature Language="F#" Value="member this.ToHexString : unit -&gt; string" Usage="activitySpanId.ToHexString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca 16-znakowy ciąg szesnastkowy reprezentujący ten identyfikator zakresu.</summary>
        <returns>16-znakowy Reprezentacja ciągu hecxadecimal tego identyfikatora zakresu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ActivitySpanId.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="activitySpanId.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca 16-znakowy ciąg szesnastkowy reprezentujący ten identyfikator zakresu.</summary>
        <returns>16-znakowy Reprezentacja ciągu szesnastkowego tego identyfikatora zakresu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
