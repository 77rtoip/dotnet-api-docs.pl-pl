<Type Name="Debugger" FullName="System.Diagnostics.Debugger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dee1def67ce4bddde64e695bcaa769718635619" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36342922" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Debugger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Debugger extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Debugger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Debugger" />
  <TypeSignature Language="C++ CLI" Value="public ref class Debugger sealed" />
  <TypeSignature Language="F#" Value="type Debugger = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Debug</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia komunikację z debugera. Klasa ta nie może być dziedziczona.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Debugger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Debugger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Call the static methods directly on this type", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.Debugger" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Break">
      <MemberSignature Language="C#" Value="public static void Break ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Break() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Break" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Break ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Break();" />
      <MemberSignature Language="F#" Value="static member Break : unit -&gt; unit" Usage="System.Diagnostics.Debugger.Break " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sygnalizuje punktu przerwania w celu dołączony debuger.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli żaden debuger jest dołączony, użytkownicy są proszeni, jeśli chcą dołączyć debuger. Jeśli użytkownicy twierdząco, Debuger jest uruchomiony. Jeśli jest dołączony debuger, Debuger jest sygnalizowane ze zdarzeniem punktu przerwania użytkownika i debuger wstrzymuje wykonywanie procesu, tak jakby były został trafiony punkt przerwania debugera.  
  
> [!WARNING]
>  Począwszy od [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], środowiska uruchomieniowego nie wykonuje ścisłą kontrolę uruchamiania debugera dla <xref:System.Diagnostics.Debugger.Break%2A> metody, ale zamiast tego zgłasza błąd w podsystemie raportowania błędów systemu Windows (WER). Raportowanie błędów systemu Windows udostępnia wiele ustawień, aby dostosować problem raportowania doświadczenia, dlatego wiele czynników mają wpływ na sposób reagowania na błędy, takie jak wersja systemu operacyjnego, proces, sesji, użytkownika, komputera i domeny raportowania błędów systemu Windows. Jeśli występują nieoczekiwane wyniki podczas wywoływania metody <xref:System.Diagnostics.Debugger.Break%2A> metody, sprawdź ustawienia raportowania błędów systemu Windows na tym komputerze. Aby uzyskać więcej informacji na temat sposobu dostosowywania raportowania błędów systemu Windows, zobacz [ustawienia raportowania błędów systemu Windows](https://msdn.microsoft.com/library/windows/desktop/bb513638.aspx). Jeśli chcesz zapewnić debugera jest uruchamiana niezależnie od ustawienia raportowania błędów systemu Windows, należy wywołać <xref:System.Diagnostics.Debugger.Launch%2A> metody zamiast tego.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano, jak zatrzymać debuger przy wywołaniu <xref:System.Console.WriteLine%2A>.  
  
```vb  
Debugger.Break()  
Console.WriteLine("Hello, world.")  
```  
  
```csharp  
Debugger.Break();  
Console.WriteLine("Hello, world.");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <see cref="T:System.Security.Permissions.UIPermission" /> Nie jest ustawiony na przerwanie w debugerze.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać uprawnienia do uruchomienia debugera. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> akcji zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultCategory">
      <MemberSignature Language="C#" Value="public static readonly string DefaultCategory;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultCategory" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.Debugger.DefaultCategory" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultCategory As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultCategory;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultCategory : string" Usage="System.Diagnostics.Debugger.DefaultCategory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje kategorię domyślnego komunikatu o stałą.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość tej stałej domyślny jest `null`. <xref:System.Diagnostics.Debugger.DefaultCategory> jest używany przez <xref:System.Diagnostics.Debugger.Log%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public static bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Debugger.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAttached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAttached : bool" Usage="System.Diagnostics.Debugger.IsAttached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy debuger jest dołączony do procesu.</summary>
        <value>
          <see langword="true" /> Jeśli jest dołączony debuger; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogging">
      <MemberSignature Language="C#" Value="public static bool IsLogging ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLogging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.IsLogging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLogging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLogging();" />
      <MemberSignature Language="F#" Value="static member IsLogging : unit -&gt; bool" Usage="System.Diagnostics.Debugger.IsLogging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza, czy jest włączone rejestrowanie przez dołączony debuger.</summary>
        <returns>
          <see langword="true" /> Jeśli jest dołączony debuger i rejestrowanie jest włączone; w przeciwnym razie <see langword="false" />. Dołączony debuger jest zarejestrowany debuger zarządzany w <see langword="DbgManagedDebugger" /> klucza rejestru. Aby uzyskać więcej informacji na ten klucz Zobacz [Włączanie Debugging](~/docs/framework/debug-trace-profile/enabling-jit-attach-debugging.md) dołączania JIT.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Launch">
      <MemberSignature Language="C#" Value="public static bool Launch ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Launch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Launch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Launch () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Launch();" />
      <MemberSignature Language="F#" Value="static member Launch : unit -&gt; bool" Usage="System.Diagnostics.Debugger.Launch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uruchamia i dołącza debuger do procesu.</summary>
        <returns>
          <see langword="true" /> Jeśli uruchamianie zakończy się pomyślnie, lub jeśli jest już dołączony debuger; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli jest już dołączony debuger, nic się nie dzieje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <see cref="T:System.Security.Permissions.UIPermission" /> Nie ustawiono można uruchomić debugera.</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">Aby uzyskać uprawnienia do uruchomienia debugera. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> akcji zabezpieczeń: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
        <altmember cref="T:System.Security.Permissions.UIPermission" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static void Log (int level, string category, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Log(int32 level, string category, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Log (level As Integer, category As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Log(int level, System::String ^ category, System::String ^ message);" />
      <MemberSignature Language="F#" Value="static member Log : int * string * string -&gt; unit" Usage="System.Diagnostics.Debugger.Log (level, category, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="level">Opis znaczenie komunikatu.</param>
        <param name="category">Kategoria wiadomości.</param>
        <param name="message">Komunikat do wyświetlenia.</param>
        <summary>Zapisuje komunikat dla dołączony debuger.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli nie ma żadnych debugerze, ta metoda nie ma znaczenia. Debuger może być lub może nie raportować komunikatu, w zależności od jego ustawienia.  
  
> [!NOTE]
>  Parametr kategorii jest ograniczona do 256 znaków. Ciągi więcej niż 256 znaków są obcinane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOfCrossThreadDependency">
      <MemberSignature Language="C#" Value="public static void NotifyOfCrossThreadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NotifyOfCrossThreadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NotifyOfCrossThreadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void NotifyOfCrossThreadDependency();" />
      <MemberSignature Language="F#" Value="static member NotifyOfCrossThreadDependency : unit -&gt; unit" Usage="System.Diagnostics.Debugger.NotifyOfCrossThreadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Debug</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Powiadamia debugera wykonywania o zbliżającym się wprowadzić ścieżkę, która obejmuje zależność między wątkami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debugery w szczególności należy włączyć wywołania zwrotne, które ma być wyświetlany. Debuger, który chce otrzymywać zależności między wątkami wywołań zwrotnych należy wywołać metodę.  
  
 Debuger, który został wybrany <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> można podjąć odpowiednie działania na powiadomienie. Na przykład zwykle wykonywania obliczenie funkcji wymaga zamrażanie wszystkie wątki oprócz wątku, który wykonuje oceny. Jeśli obliczenie funkcji wymaga wykonywania na więcej niż jeden wątek, może wystąpić w scenariuszach remoting, blokuje oceny. <xref:System.Diagnostics.Debugger.NotifyOfCrossThreadDependency%2A> Powiadomiony debuger ma wersji wątku lub przerwania obliczania funkcji. Powiadomienie podlega kolekcji po powrocie z tej metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>