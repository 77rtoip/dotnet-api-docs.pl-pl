<Type Name="StackTrace" FullName="System.Diagnostics.StackTrace">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5a3f4a12f8e1993fe313c147b9741aa476de2ff" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36673886" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StackTrace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StackTrace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackTrace" />
  <TypeSignature Language="VB.NET" Value="Public Class StackTrace" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackTrace" />
  <TypeSignature Language="F#" Value="type StackTrace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c4804-101">Reprezentuje ślad stosu, który jest uporządkowaną kolekcję ramek stosu co najmniej jeden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4804-101">Represents a stack trace, which is an ordered collection of one or more stack frames.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-102"><xref:System.Diagnostics.StackTrace> informacje będą zawierający najwięcej informacji o konfiguracjach kompilacji debugowania.</span><span class="sxs-lookup"><span data-stu-id="c4804-102"><xref:System.Diagnostics.StackTrace> information will be most informative with Debug build configurations.</span></span> <span data-ttu-id="c4804-103">Domyślnie kompilacji do debugowania dołączać symbole debugowania, gdy nie chcesz kompilacjami wydania.</span><span class="sxs-lookup"><span data-stu-id="c4804-103">By default, Debug builds include debug symbols, while Release builds do not.</span></span> <span data-ttu-id="c4804-104">Symbole debugowania zawierają większość plików, nazwy metody, numer wiersza i informacji o kolumnie używane podczas tworzenia <xref:System.Diagnostics.StackFrame> i <xref:System.Diagnostics.StackTrace> obiektów.</span><span class="sxs-lookup"><span data-stu-id="c4804-104">The debug symbols contain most of the file, method name, line number, and column information used in constructing <xref:System.Diagnostics.StackFrame> and <xref:System.Diagnostics.StackTrace> objects.</span></span>  
  
 <span data-ttu-id="c4804-105"><xref:System.Diagnostics.StackTrace> może nie raportować dowolną liczbę wywołań metody zgodnie z oczekiwaniami, z powodu przekształcenia kodu, jakie występują podczas optymalizacji.</span><span class="sxs-lookup"><span data-stu-id="c4804-105"><xref:System.Diagnostics.StackTrace> might not report as many method calls as expected, due to code transformations that occur during optimization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-106">Następującej aplikacji konsoli Pokazuje, jak utworzyć prostą <xref:System.Diagnostics.StackTrace> i iterację jego ramki, aby uzyskać informacje diagnostyczne i debugowania.</span><span class="sxs-lookup"><span data-stu-id="c4804-106">The following console application demonstrates how to create a simple <xref:System.Diagnostics.StackTrace> and iterate through its frames to obtain debugging and diagnostic information.</span></span>  
  
 [!code-cpp[StackTraceSample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample1/CPP/stacktracesample1.cpp#1)]
 [!code-csharp[StackTraceSample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample1/CS/stacktracesample1.cs#1)]
 [!code-vb[StackTraceSample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample1/VB/stacktracesample1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">
      <span data-ttu-id="c4804-107">możliwości dziedziczenia dostęp do kodu niezarządzanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4804-107">for the ability of inheritors to access unmanaged code.</span>
      </span>
      <span data-ttu-id="c4804-108">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4804-108">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
      </span>
      <span data-ttu-id="c4804-109">Klasa ta nie może być dziedziczona przez kod częściowo zaufany.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c4804-109">This class cannot be inherited by partially trusted code.</span>
      </span>
    </permission>
    <altmember cref="P:System.Exception.StackTrace" />
    <altmember cref="P:System.Environment.StackTrace" />
    <altmember cref="P:System.Runtime.Serialization.Formatters.ServerFault.StackTrace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c4804-110">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-110">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4804-111">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy z obiektu wywołującego ramki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-111">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-112"><xref:System.Diagnostics.StackTrace> Jest tworzony z bieżącego wątku wywołującego i nie zawiera nazwy pliku, numeru wiersza lub informacji o kolumnie.</span><span class="sxs-lookup"><span data-stu-id="c4804-112">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="c4804-113">Ten konstruktor domyślny należy używać pełnej śledzenia tylko metody podsumowanie informacji o stosu wywołań.</span><span class="sxs-lookup"><span data-stu-id="c4804-113">Use this default constructor when you want a complete trace with only summary method information about the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-114">Poniższy przykładowy kod przedstawia wywołania funkcji imię i nazwisko w ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="c4804-114">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace fNeedFileInfo" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fNeedFileInfo">
          <span data-ttu-id="c4804-115">
            <see langword="true" /> Aby przechwycić nazwy pliku, numeru wiersza i kolumny numer; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-115">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy z obiektu wywołującego ramki, opcjonalnie przechwytywanie informacji o źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-116">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-117"><xref:System.Diagnostics.StackTrace> Jest tworzony z bieżącego wątku obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="c4804-117">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-118">Poniższy przykład kodu pokazuje różnych <xref:System.Diagnostics.StackTrace> konstruktory.</span><span class="sxs-lookup"><span data-stu-id="c4804-118">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Diagnostics.StackFrame frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.StackFrame frame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (frame As StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Diagnostics::StackFrame ^ frame);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Diagnostics.StackFrame -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace frame" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="System.Diagnostics.StackFrame" />
      </Parameters>
      <Docs>
        <param name="frame">
          <span data-ttu-id="c4804-119">Ramki który <see cref="T:System.Diagnostics.StackTrace" /> powinien zawierać obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-119">The frame that the <see cref="T:System.Diagnostics.StackTrace" /> object should contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-120">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasę, która zawiera jedną ramkę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-120">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class that contains a single frame.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-121">Użyj tego konstruktora, jeśli nie chcesz, aby obciążenie ślad stosu pełna.</span><span class="sxs-lookup"><span data-stu-id="c4804-121">Use this constructor when you do not want the overhead of a full stack trace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-122">Następujący kod przykład zapisuje informacje śledzenia stosu do wpis dziennika zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c4804-122">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4804-123">Obiekt wyjątku, z którego można skonstruować ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-123">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-124">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> przy użyciu obiektu podanego wyjątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-124">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-125"><xref:System.Diagnostics.StackTrace> Jest tworzony z bieżącego wątku wywołującego i nie zawiera nazwy pliku, numeru wiersza lub informacji o kolumnie.</span><span class="sxs-lookup"><span data-stu-id="c4804-125">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="c4804-126">Wynikowe informacje śledzenia stosu opisuje stosu w czasie wystąpienia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c4804-126">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4804-127">Parametr <paramref name="e" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-127">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace skipFrames" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="c4804-128">Liczba ramek górę stosu, w którym należy rozpocząć śledzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-128">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-129">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy z obiektu wywołującego ramki, pomijanie określoną liczbę ramek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-129">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-130"><xref:System.Diagnostics.StackTrace> Jest tworzony z bieżącego wątku wywołującego i nie zawiera nazwy pliku, numeru wiersza lub informacji o kolumnie.</span><span class="sxs-lookup"><span data-stu-id="c4804-130">The <xref:System.Diagnostics.StackTrace> is created with the caller's current thread, and does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="c4804-131">Jeśli liczba ramek do pominięcia jest większa niż lub równa całkowitą liczbę ramek na stosie wywołań w czasie tworzenia wystąpienia, <xref:System.Diagnostics.StackTrace> będzie zawierał żadnych ramek.</span><span class="sxs-lookup"><span data-stu-id="c4804-131">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4804-132">
            <paramref name="skipFrames" /> Parametr jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-132">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4804-133">Obiekt wyjątku, z którego można skonstruować ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-133">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="c4804-134">Liczba ramek górę stosu, w którym należy rozpocząć śledzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-134">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-135">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy przy użyciu obiektu podanego wyjątku i pomija określoną liczbę ramek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-135">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object and skipping the specified number of frames.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-136"><xref:System.Diagnostics.StackTrace> Nie zawiera nazwy pliku, numeru wiersza lub informacji o kolumnie.</span><span class="sxs-lookup"><span data-stu-id="c4804-136">The <xref:System.Diagnostics.StackTrace> does not contain file name, line number, or column information.</span></span>  
  
 <span data-ttu-id="c4804-137">Wynikowe informacje śledzenia stosu opisuje stosu w czasie wystąpienia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c4804-137">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="c4804-138">Jeśli liczba ramek do pominięcia jest większa niż lub równa całkowitą liczbę ramek na stosie wywołań w czasie tworzenia wystąpienia, <xref:System.Diagnostics.StackTrace> będzie zawierał żadnych ramek.</span><span class="sxs-lookup"><span data-stu-id="c4804-138">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4804-139">Parametr <paramref name="e" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-139">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4804-140">
            <paramref name="skipFrames" /> Parametr jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-140">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="skipFrames">
          <span data-ttu-id="c4804-141">Liczba ramek górę stosu, w którym należy rozpocząć śledzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-141">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="c4804-142">
            <see langword="true" /> Aby przechwycić nazwy pliku, numeru wiersza i kolumny numer; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-142">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy z obiektu wywołującego ramki, pomijanie określoną liczbę ramek i opcjonalnie przechwytywanie informacji o źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-143">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-144">Jeśli liczba ramek do pominięcia jest większa niż lub równa całkowitą liczbę ramek na stosie wywołań w czasie tworzenia wystąpienia, <xref:System.Diagnostics.StackTrace> będzie zawierał żadnych ramek.</span><span class="sxs-lookup"><span data-stu-id="c4804-144">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-145">Poniższy przykład kodu pokazuje różnych <xref:System.Diagnostics.StackTrace> konstruktory.</span><span class="sxs-lookup"><span data-stu-id="c4804-145">The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.</span></span>  
  
 [!code-cpp[StackFrameSample1#4](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#4)]
 [!code-csharp[StackFrameSample1#4](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#4)]
 [!code-vb[StackFrameSample1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4804-146">
            <paramref name="skipFrames" /> Parametr jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-146">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Thread targetThread, bool needFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetThread As Thread, needFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(System::Threading::Thread ^ targetThread, bool needFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : System.Threading.Thread * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (targetThread, needFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="targetThread" Type="System.Threading.Thread" />
        <Parameter Name="needFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetThread">
          <span data-ttu-id="c4804-147">Wątek, w których ślad stosu jest wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-147">The thread whose stack trace is requested.</span>
          </span>
        </param>
        <param name="needFileInfo">
          <span data-ttu-id="c4804-148">
            <see langword="true" /> Aby przechwycić nazwy pliku, numeru wiersza i kolumny numer; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-148">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-149">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy dla określonego wątku, opcjonalnie przechwytywanie informacji o źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-149">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class for a specific thread, optionally capturing source information.</span>
          </span>
          <span data-ttu-id="c4804-150">Nie należy używać tego przeciążenia konstruktora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-150">Do not use this constructor overload.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4804-151">Nie należy używać tego konstruktora.</span><span class="sxs-lookup"><span data-stu-id="c4804-151">Do not use this constructor.</span></span> <span data-ttu-id="c4804-152">Jest przestarzały i nie istnieje alternatywa zalecane.</span><span class="sxs-lookup"><span data-stu-id="c4804-152">It is obsolete, and there is no recommended alternative.</span></span> <span data-ttu-id="c4804-153">Po wstrzymaniu wątku nie ma możliwości wiedzy, jaki kod jest wykonywany, a zakleszczenie można bardzo łatwo wystąpić.</span><span class="sxs-lookup"><span data-stu-id="c4804-153">When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</span></span> <span data-ttu-id="c4804-154">Na przykład, jeśli zawieszenia wątku, gdy posiada blokady podczas sprawdzania uprawnień zabezpieczeń, inne wątki we <xref:System.AppDomain> może zostać zablokowany.</span><span class="sxs-lookup"><span data-stu-id="c4804-154">For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked.</span></span> <span data-ttu-id="c4804-155">Jeśli podczas wykonywania konstruktora klasy zawieszenia się wątku, inne wątki we <xref:System.AppDomain> który próba użycia, że klasa są blokowane.</span><span class="sxs-lookup"><span data-stu-id="c4804-155">If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.ThreadStateException">
          <span data-ttu-id="c4804-156">Wątek <paramref name="targetThread" /> nie jest wstrzymana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-156">The thread <paramref name="targetThread" /> is not suspended.</span>
          </span>
        </exception>
        <altmember cref="T:System.Threading.Thread" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, int32 skipFrames, bool fNeedFileInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, skipFrames As Integer, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, int skipFrames, bool fNeedFileInfo);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * int * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, skipFrames, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
        <Parameter Name="skipFrames" Type="System.Int32" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4804-157">Obiekt wyjątku, z którego można skonstruować ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-157">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="skipFrames">
          <span data-ttu-id="c4804-158">Liczba ramek górę stosu, w którym należy rozpocząć śledzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-158">The number of frames up the stack from which to start the trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="c4804-159">
            <see langword="true" /> Aby przechwycić nazwy pliku, numeru wiersza i kolumny numer; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-159">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-160">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy przy użyciu obiektu podanego wyjątek, pomijanie określoną liczbę ramek i opcjonalnie przechwytywanie informacji o źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-160">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-161">Wynikowe informacje śledzenia stosu opisuje stosu w czasie wystąpienia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c4804-161">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 <span data-ttu-id="c4804-162">Jeśli liczba ramek do pominięcia jest większa niż lub równa całkowitą liczbę ramek na stosie wywołań w czasie tworzenia wystąpienia, <xref:System.Diagnostics.StackTrace> będzie zawierał żadnych ramek.</span><span class="sxs-lookup"><span data-stu-id="c4804-162">If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <xref:System.Diagnostics.StackTrace> will contain no frames.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4804-163">Parametr <paramref name="e" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-163">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c4804-164">
            <paramref name="skipFrames" /> Parametr jest ujemna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-164">The <paramref name="skipFrames" /> parameter is negative.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackTrace (Exception exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, bool needFileInfo) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ exception, bool needFileInfo);" FrameworkAlternate="netcore-1.0;netcore-1.1" />
      <MemberSignature Language="C#" Value="public StackTrace (Exception e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e, bool fNeedFileInfo) cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)" FrameworkAlternate="netcore-2.0;netcore-1.0;netcore-1.1;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception, fNeedFileInfo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackTrace(Exception ^ e, bool fNeedFileInfo);" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.StackTrace : Exception * bool -&gt; System.Diagnostics.StackTrace" Usage="new System.Diagnostics.StackTrace (e, fNeedFileInfo)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="e" Type="System.Exception" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="needFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1" />
        <Parameter Name="fNeedFileInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="c4804-165">Obiekt wyjątku, z którego można skonstruować ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-165">The exception object from which to construct the stack trace.</span>
          </span>
        </param>
        <param name="fNeedFileInfo">
          <span data-ttu-id="c4804-166">
            <see langword="true" /> Aby przechwycić nazwy pliku, numeru wiersza i kolumny numer; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-166">
              <see langword="true" /> to capture the file name, line number, and column number; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="exception">To be added.</param>
        <param name="needFileInfo">To be added.</param>
        <summary>
          <span data-ttu-id="c4804-167">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.StackTrace" /> klasy, za pomocą obiektu podanego wyjątku i opcjonalnie przechwytywanie informacji o źródle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-167">Initializes a new instance of the <see cref="T:System.Diagnostics.StackTrace" /> class, using the provided exception object and optionally capturing source information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-168">Wynikowe informacje śledzenia stosu opisuje stosu w czasie wystąpienia wyjątku.</span><span class="sxs-lookup"><span data-stu-id="c4804-168">The resulting stack trace describes the stack at the time of the exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4804-169">Parametr <paramref name="e" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-169">The parameter <paramref name="e" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <Member MemberName="FrameCount">
      <MemberSignature Language="C#" Value="public virtual int FrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FrameCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.StackTrace.FrameCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FrameCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FrameCount : int" Usage="System.Diagnostics.StackTrace.FrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4804-170">Pobiera liczbę ramek w ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-170">Gets the number of frames in the stack trace.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c4804-171">Liczba ramek w ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-171">The number of frames in the stack trace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4804-172">Poniższy przykładowy kod przedstawia wywołania funkcji imię i nazwisko w ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="c4804-172">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrame">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame GetFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame GetFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrame (index As Integer) As StackFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::StackFrame ^ GetFrame(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetFrame : int -&gt; System.Diagnostics.StackFrame&#xA;override this.GetFrame : int -&gt; System.Diagnostics.StackFrame" Usage="stackTrace.GetFrame index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c4804-173">Indeks żądanego ramki stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-173">The index of the stack frame requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c4804-174">Pobiera ramki określonej wartości atrybutu stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-174">Gets the specified stack frame.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4804-175">Ramka określonej wartości atrybutu stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-175">The specified stack frame.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-176">Ramki stosu są numerowane, począwszy od 0, który jest ostatnim ramki stosu naciśnięty.</span><span class="sxs-lookup"><span data-stu-id="c4804-176">Stack frames are numbered starting at 0, which is the last stack frame pushed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-177">Poniższy przykładowy kod przedstawia wywołania funkcji imię i nazwisko w ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="c4804-177">The following code example displays the first and last function calls in a stack trace.</span></span>  
  
 [!code-cpp[StackFrameSample1#8](~/samples/snippets/cpp/VS_Snippets_CLR/StackFrameSample1/CPP/source.cpp#8)]
 [!code-csharp[StackFrameSample1#8](~/samples/snippets/csharp/VS_Snippets_CLR/StackFrameSample1/CS/source.cs#8)]
 [!code-vb[StackFrameSample1#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackFrameSample1/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrames" />
      </Docs>
    </Member>
    <Member MemberName="GetFrames">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.StackFrame[] GetFrames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.StackFrame[] GetFrames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.GetFrames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFrames () As StackFrame()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::StackFrame ^&gt; ^ GetFrames();" />
      <MemberSignature Language="F#" Value="abstract member GetFrames : unit -&gt; System.Diagnostics.StackFrame[]&#xA;override this.GetFrames : unit -&gt; System.Diagnostics.StackFrame[]" Usage="stackTrace.GetFrames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.StackFrame[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4804-178">Zwraca kopię wszystkie ramki stosu w bieżącym ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-178">Returns a copy of all stack frames in the current stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4804-179">Tablica typu <see cref="T:System.Diagnostics.StackFrame" /> reprezentujący funkcji odwołuje się ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-179">An array of type <see cref="T:System.Diagnostics.StackFrame" /> representing the function calls in the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-180">Użyj zwróconego <xref:System.Diagnostics.StackFrame> odwołuje się tablicy, tak aby wyliczyć i sprawdź, czy funkcja <xref:System.Diagnostics.StackTrace>.</span><span class="sxs-lookup"><span data-stu-id="c4804-180">Use the returned <xref:System.Diagnostics.StackFrame> array to enumerate and examine function calls in the <xref:System.Diagnostics.StackTrace>.</span></span> <span data-ttu-id="c4804-181">Długość tablicy zwracane jest równa <xref:System.Diagnostics.StackTrace.FrameCount%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="c4804-181">The length of the returned array is equal to the <xref:System.Diagnostics.StackTrace.FrameCount%2A> property value.</span></span>  
  
 <span data-ttu-id="c4804-182"><xref:System.Diagnostics.StackFrame> Elementów tablicy znajdują się w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="c4804-182">The <xref:System.Diagnostics.StackFrame> array elements are in reverse chronological order.</span></span> <span data-ttu-id="c4804-183"><xref:System.Diagnostics.StackFrame> w tablicy indeksem 0 reprezentuje wywołanie funkcji najbardziej aktualne ślad stosu i ostatniej ramki wypychana na stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="c4804-183">The <xref:System.Diagnostics.StackFrame> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</span></span> <span data-ttu-id="c4804-184"><xref:System.Diagnostics.StackFrame> Od indeksu tablicy <xref:System.Diagnostics.StackTrace.FrameCount%2A> pomniejszonej o 1 reprezentuje wywołanie funkcji najstarsze ślad stosu i pierwszej ramki wypychana na stosie wywołań.</span><span class="sxs-lookup"><span data-stu-id="c4804-184">The <xref:System.Diagnostics.StackFrame> at array index <xref:System.Diagnostics.StackTrace.FrameCount%2A> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</span></span>  
  
 <span data-ttu-id="c4804-185">Użyj <xref:System.Diagnostics.StackTrace.GetFrames%2A> metodę, aby uzyskać wszystkie ramki stosu w ślad stosu; użyj <xref:System.Diagnostics.StackTrace.GetFrame%2A> metodę, aby uzyskać ramka stosu określonych w ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="c4804-185">Use the <xref:System.Diagnostics.StackTrace.GetFrames%2A> method to obtain all stack frames in a stack trace; use the <xref:System.Diagnostics.StackTrace.GetFrame%2A> method to obtain a specific stack frame in a stack trace.</span></span> <span data-ttu-id="c4804-186"><xref:System.Diagnostics.StackFrame> Indeksy są uporządkowane konta za pomocą dwóch metod.</span><span class="sxs-lookup"><span data-stu-id="c4804-186">The <xref:System.Diagnostics.StackFrame> indexes are ordered alike by the two methods.</span></span> <span data-ttu-id="c4804-187">Na przykład <xref:System.Diagnostics.StackFrame> pod indeksem 0 w tablicy zwracanej przez <xref:System.Diagnostics.StackTrace.GetFrames%2A> jest odpowiednikiem <xref:System.Diagnostics.StackFrame> zwrócony przez <xref:System.Diagnostics.StackTrace.GetFrame%2A> z wejściowych indeksem 0.</span><span class="sxs-lookup"><span data-stu-id="c4804-187">For example, the <xref:System.Diagnostics.StackFrame> at index 0 in the array returned by <xref:System.Diagnostics.StackTrace.GetFrames%2A> is equivalent to the <xref:System.Diagnostics.StackFrame> returned by <xref:System.Diagnostics.StackTrace.GetFrame%2A> with an input index of 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4804-188">Poniższy przykład kodu pokazuje wyliczania ramki w <xref:System.Diagnostics.StackTrace>.</span><span class="sxs-lookup"><span data-stu-id="c4804-188">The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.</span></span>  
  
 [!code-cpp[StackTraceSample2#3](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample2/CPP/stacktracesample2.cpp#3)]
 [!code-csharp[StackTraceSample2#3](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample2/CS/stacktracesample2.cs#3)]
 [!code-vb[StackTraceSample2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample2/VB/stacktracesample2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.StackFrame" />
        <altmember cref="M:System.Diagnostics.StackTrace.GetFrame(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="METHODS_TO_SKIP">
      <MemberSignature Language="C#" Value="public const int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 METHODS_TO_SKIP = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberSignature Language="VB.NET" Value="Public Const METHODS_TO_SKIP As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int METHODS_TO_SKIP = 0;" />
      <MemberSignature Language="F#" Value="val mutable METHODS_TO_SKIP : int" Usage="System.Diagnostics.StackTrace.METHODS_TO_SKIP" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c4804-189">Definiuje domyślną liczbę metod, aby pominąć z ślad stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-189">Defines the default for the number of methods to omit from the stack trace.</span>
          </span>
          <span data-ttu-id="c4804-190">To pole jest stałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-190">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4804-191">Wartość domyślna liczba metod, aby pominąć na początku ślad stosu.</span><span class="sxs-lookup"><span data-stu-id="c4804-191">The default value for the number of methods to skip at the beginning of the stack trace.</span></span> <span data-ttu-id="c4804-192">Wartość tej stałej wynosi 0.</span><span class="sxs-lookup"><span data-stu-id="c4804-192">The value of this constant is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackTrace.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stackTrace.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c4804-193">Tworzy reprezentację do odczytu śladu stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-193">Builds a readable representation of the stack trace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c4804-194">Reprezentacja do odczytu śladu stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c4804-194">A readable representation of the stack trace.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4804-195">Następujący kod przykład zapisuje informacje śledzenia stosu do wpis dziennika zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="c4804-195">The following code example writes stack trace information to an event log entry.</span></span>  
  
 [!code-cpp[StackTraceSample3#6](~/samples/snippets/cpp/VS_Snippets_CLR/StackTraceSample3/CPP/stacktracesample3.cpp#6)]
 [!code-csharp[StackTraceSample3#6](~/samples/snippets/csharp/VS_Snippets_CLR/StackTraceSample3/CS/stacktracesample3.cs#6)]
 [!code-vb[StackTraceSample3#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/StackTraceSample3/VB/stacktracesample3.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>