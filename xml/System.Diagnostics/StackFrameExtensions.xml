<Type Name="StackFrameExtensions" FullName="System.Diagnostics.StackFrameExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81b13999f51292ba1026f4e590cf33bcdae4343c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36342087" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class StackFrameExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StackFrameExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.StackFrameExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module StackFrameExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackFrameExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type StackFrameExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ca75c-101">Udostępnia metody rozszerzenia dla <see cref="T:System.Diagnostics.StackFrame" /> klasy, która reprezentuje wywołanie funkcji w stosie wywołań bieżącego wątku.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ca75c-101">Provides extension methods for the <see cref="T:System.Diagnostics.StackFrame" /> class, which represents a function call on the call stack for the current thread.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetNativeImageBase">
      <MemberSignature Language="C#" Value="public static IntPtr GetNativeImageBase (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetNativeImageBase(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IntPtr GetNativeImageBase(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member GetNativeImageBase : System.Diagnostics.StackFrame -&gt; nativeint" Usage="System.Diagnostics.StackFrameExtensions.GetNativeImageBase stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-102">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-102">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-103">Zwraca wskaźnik do podstawowego adresu obrazu macierzystego, który jest wykonywany tej ramki stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-103">Returns a pointer to the base address of the native image that this stack frame is executing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-104">Wskaźnik do podstawowego adresu obrazu macierzystego lub <see cref="F:System.IntPtr.Zero" /> Jeśli aplikacja jest przeznaczona dla programu .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-104">A pointer to the base address of the native image or <see cref="F:System.IntPtr.Zero" /> if you're targeting the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeIP">
      <MemberSignature Language="C#" Value="public static IntPtr GetNativeIP (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetNativeIP(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.GetNativeIP(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static IntPtr GetNativeIP(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member GetNativeIP : System.Diagnostics.StackFrame -&gt; nativeint" Usage="System.Diagnostics.StackFrameExtensions.GetNativeIP stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-105">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-105">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-106">Pobiera wskaźnika interfejsu do uruchomienia kodu natywnego dla metody, która jest wykonywana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-106">Gets an interface pointer to the start of the native code for the method that is being executed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-107">Wskaźnik interfejsu kodu natywnego dla metody, która jest wykonywana na początku lub <see cref="F:System.IntPtr.Zero" /> Jeśli aplikacja jest przeznaczona dla programu .NET Framework.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-107">An interface pointer to the start of the native code for the method that is being executed or <see cref="F:System.IntPtr.Zero" /> if you're targeting the .NET Framework.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasILOffset">
      <MemberSignature Language="C#" Value="public static bool HasILOffset (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasILOffset(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasILOffset(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasILOffset(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member HasILOffset : System.Diagnostics.StackFrame -&gt; bool" Usage="System.Diagnostics.StackFrameExtensions.HasILOffset stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-108">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-108">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-109">Wskazuje, czy przesunięcie od początku kodu IL dla metody, która jest wykonywana jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-109">Indicates whether an offset from the start of the IL code for the method that is executing is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-110">
            <see langword="true" /> Jeśli przesunięcie jest dostępna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-110">
              <see langword="true" /> if the offset is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetILOffset" />
      </Docs>
    </Member>
    <Member MemberName="HasMethod">
      <MemberSignature Language="C#" Value="public static bool HasMethod (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasMethod(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasMethod(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasMethod(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member HasMethod : System.Diagnostics.StackFrame -&gt; bool" Usage="System.Diagnostics.StackFrameExtensions.HasMethod stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-111">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-111">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-112">Wskazuje, czy informacje o metodzie, w którym jest wykonywany określonej ramce jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-112">Indicates whether information about the method in which the specified frame is executing is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-113">
            <see langword="true" /> Jeśli dostępne są informacje o metodzie, w którym jest wykonywany bieżącej ramki. w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-113">
              <see langword="true" /> if information about the method in which the current frame is executing is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetMethod" />
      </Docs>
    </Member>
    <Member MemberName="HasNativeImage">
      <MemberSignature Language="C#" Value="public static bool HasNativeImage (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasNativeImage(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasNativeImage(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasNativeImage(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member HasNativeImage : System.Diagnostics.StackFrame -&gt; bool" Usage="System.Diagnostics.StackFrameExtensions.HasNativeImage stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-114">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-114">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-115">Wskazuje, czy można ramki stosu określonego obrazu macierzystego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-115">Indicates whether the native image is available for the specified stack frame.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-116">
            <see langword="true" /> Jeśli obraz macierzysty będzie dostępny dla tej ramki stosu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-116">
              <see langword="true" /> if a native image is available for this stack frame; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrameExtensions.GetNativeImageBase(System.Diagnostics.StackFrame)" />
      </Docs>
    </Member>
    <Member MemberName="HasSource">
      <MemberSignature Language="C#" Value="public static bool HasSource (this System.Diagnostics.StackFrame stackFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool HasSource(class System.Diagnostics.StackFrame stackFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.StackFrameExtensions.HasSource(System.Diagnostics.StackFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool HasSource(System::Diagnostics::StackFrame ^ stackFrame);" />
      <MemberSignature Language="F#" Value="static member HasSource : System.Diagnostics.StackFrame -&gt; bool" Usage="System.Diagnostics.StackFrameExtensions.HasSource stackFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stackFrame" Type="System.Diagnostics.StackFrame" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stackFrame">
          <span data-ttu-id="ca75c-117">Ramka stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-117">A stack frame.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ca75c-118">Wskazuje, czy plik, który zawiera kod, który wykonuje ramki stosu określony jest dostępna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-118">Indicates whether the file that contains the code that the specified stack frame is executing is available.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ca75c-119">
            <see langword="true" /> Jeśli kod, który wykonuje ramki stosu określony jest dostępna; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ca75c-119">
              <see langword="true" /> if the code that the specified stack frame is executing is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileName" />
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileLineNumber" />
        <altmember cref="M:System.Diagnostics.StackFrame.GetFileColumnNumber" />
      </Docs>
    </Member>
  </Members>
</Type>