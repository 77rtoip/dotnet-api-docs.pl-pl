<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88596074c0bd24dd3f2dd67de13860ad50ec959d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51902868" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia instalowanie i konfigurowanie dziennika zdarzeń, które aplikacja odczytuje lub zapisuje podczas uruchamiania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller> Jest używany przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) podczas instalowania dziennika zdarzeń. <xref:System.Diagnostics.EventLogInstaller> Klasy można zainstalować dzienniki zdarzeń tylko na komputerze lokalnym.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> klasy, gdy aplikacja zapisuje w dzienniku zdarzeń; nie jest konieczne użycie Instalatora dziennik zdarzeń aplikacji do odczytywania z dziennika zdarzeń. Aplikacje i usługi należy zapisać w dzienniku aplikacji lub dziennik niestandardowy. Sterowniki urządzeń należy zapisać w dzienniku systemu.  
  
> [!NOTE]
>  Dziennik zabezpieczeń jest tylko do odczytu.  
  
 Instalator tworzy źródła zdarzeń, który określisz w <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość i rejestruje je w dzienniku zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości. To zachowanie jest podobne do wywoływania <xref:System.Diagnostics.EventLog.CreateEventSource%2A> na <xref:System.Diagnostics.EventLog> składnika.  
  
 Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> i <xref:System.Diagnostics.EventLog.WriteEntry%2A> metody, aby zapisać zdarzeń do dziennika zdarzeń. Należy określić źródło zdarzenia można zapisać zdarzenia; należy utworzyć i skonfigurować źródła zdarzeń przed zapisaniem pierwszy wpis ze źródłem.  
  
 Utwórz nowe źródło zdarzeń podczas instalacji aplikacji. Dzięki temu czas na odświeżenie listy źródeł zarejestrowanych zdarzeń i ich konfiguracji systemu operacyjnego. Jeśli system operacyjny nie odświeżył swoją listę źródeł zdarzeń, a użytkownik podejmie próbę zapisu zdarzenia o nowe źródło operacja zapisu zakończy się niepowodzeniem. Można skonfigurować nowe źródła, używając <xref:System.Diagnostics.EventLogInstaller>, lub za pomocą <xref:System.Diagnostics.EventLog.CreateEventSource%2A> metody. Musi mieć uprawnienia administracyjne na komputerze, aby utworzyć nowe źródło zdarzeń.  
  
 Można utworzyć źródła zdarzeń dla istniejącego dziennika zdarzeń lub utworzenie nowego dziennika zdarzeń. Podczas tworzenia nowego źródła dla nowego dziennika zdarzeń systemu rejestruje źródła dla tego dziennika, ale dziennika nie jest tworzony, dopóki pierwszy wpis jest zapisywany do niego.  
  
 Aby zainstalować dziennika zdarzeń, tworzenie projektu Instalatora klasy dziedziczącej z klasy <xref:System.Configuration.Install.Installer>i ustaw <xref:System.ComponentModel.RunInstallerAttribute> klasy do `true`. W projekcie, Utwórz <xref:System.Diagnostics.EventLogInstaller> dla każdego dziennika zdarzeń, że aplikacja będzie zapisywać i dodaj je do projektu klasy Instalatora.  
  
 Gdy [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) jest wywoływana, wygląda na <xref:System.ComponentModel.RunInstallerAttribute>. Jeśli jest `true`, narzędzie instaluje wszystkie elementy w <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji, które są skojarzone z Instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest `false`, narzędzie ignoruje Instalatora projektu.  
  
 Zmodyfikuj inne właściwości <xref:System.Diagnostics.EventLogInstaller> przed lub po dodaniu wystąpienie <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji projektu Instalatora, ale przed uruchomieniem narzędzia Instalatora. Należy ustawić <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość, jeśli aplikacja będzie zapisywać w dzienniku zdarzeń.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> zmienić istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasy nie modyfikuje właściwości konfiguracji istniejącego źródła do dopasowania właściwości określonej instalacji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest zarejestrowana dla różnych dziennik zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metody nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest już zarejestrowany dla tego samego dziennika zdarzeń, określone w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Za zarejestrowanie źródła zdarzeń i zlokalizowane pliki zasobów ciągów kategorii i komunikat zdarzenia. Aplikację można napisać wpisy dziennika zdarzeń przy użyciu identyfikatorów zasobów zamiast określania rzeczywistego ciągu. Podgląd zdarzeń używa identyfikatora zasobu, aby znaleźć i wyświetlić odpowiedni ciąg z pliku zlokalizowanych zasobów, w oparciu o bieżące ustawienia języka. Możesz zarejestrować osobny plik dla kategorii zdarzeń, komunikatów i ciągi wstawiania parametru lub można zarejestrować tego samego pliku zasobów dla wszystkich trzech typów ciągów znaków. Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, i <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości, aby skonfigurować źródła na zapisywanie wpisów zlokalizowanych w dzienniku zdarzeń. Jeśli aplikacja zapisuje wartości ciągów bezpośrednio do dziennika zdarzeń, nie musisz ustawić te właściwości.  
  
 Źródło musi być skonfigurowany dla zapisywania zlokalizowanego wpisy lub zapisywanie bezpośrednie ciągów. Jeśli aplikacja zapisuje wpisów za pomocą identyfikatorów zasobów i wartości ciągu, należy zarejestrować dwóch oddzielnych źródeł. Na przykład skonfigurować jedno źródło z plikami zasobów, a następnie użyj tego źródła w <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów przy użyciu identyfikatorów zasobów w dzienniku zdarzeń. Utwórz inne źródło bez plików zasobów, a następnie użyj tego źródła w <xref:System.Diagnostics.EventLog.WriteEntry%2A> metodę, aby zapisać ciągi bezpośrednio do dziennika zdarzeń przy użyciu tego źródła.  
  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> klasy z w obrębie kodu; zazwyczaj są one nazywane tylko przez Installutil.exe. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody podczas procesu instalacji. Tworzy kopię się błędy, jeśli to konieczne, wywołując <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody dla obiektu, który wygenerował wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzeń. Przykład kodu ustawia nazwę źródła i nazwę dziennika zdarzeń i dodaje <xref:System.Diagnostics.EventLogInstaller> do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md">Installutil.exe (Narzędzie instalatora)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventLogInstaller" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kategorii w pliku zasobów kategorii.</summary>
        <value>Liczba kategorii w pliku zasobów kategorii. Wartość domyślna wynosi zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości, aby zapisać zdarzeń z zlokalizowanych ciągów kategorii. Podgląd zdarzeń wyświetla kategorię dla wpisu zdarzenia, jeśli podasz kategorię podczas zapisywania zdarzenia. Kategorie dziennika zdarzeń są zdefiniowane przez aplikację ciągi znaków, które pomagają filtrowanie zdarzeń lub zawierają informacje na temat zdarzenia. Na przykład aplikację, można zdefiniować osobne kategorie dla różnych składników lub różnych operacji.  
  
 Kategorie zdarzeń są opcjonalne; Jeśli aplikacja nie korzysta z kategorii, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje dotyczące definiowania komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikatów kompilatora" w dokumentacji zestawu SDK platformy, na [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzeń. Przykład kodu ustawia nazwy źródła zdarzeń, nazwa dziennika zdarzeń i plik zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykład kodu używa następującego pliku tekst komunikatu wbudowana w bibliotekę zasobu EventLogMsgs.dll. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatory zasobów i tekst dla kategorii, komunikatów o zdarzeniach i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobów zawiera ciągi kategorii dla źródła.</summary>
        <value>Ścieżka do pliku zasobów kategorii. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości, aby zapisać zdarzeń z zlokalizowanych ciągów kategorii. Podgląd zdarzeń wyświetla kategorię dla wpisu zdarzenia, jeśli podasz kategorię podczas zapisywania zdarzenia. Kategorie dziennika zdarzeń są zdefiniowane przez aplikację ciągi znaków, które pomagają filtrowanie zdarzeń lub podaj informacje o zdarzeniu. Na przykład aplikacja może mieć osobne kategorie dla różnych składników lub różnych operacji.  
  
 Kategorie zdarzeń są opcjonalne; Jeśli aplikacja nie korzysta z kategorii, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje dotyczące definiowania komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikatów kompilatora" w dokumentacji zestawu SDK platformy, na [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzeń. Przykład kodu ustawia nazwy źródła zdarzeń, nazwa dziennika zdarzeń i plik zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykład kodu używa następującego pliku tekst komunikatu wbudowana w bibliotekę zasobu EventLogMsgs.dll. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatory zasobów i tekst dla kategorii, komunikatów o zdarzeniach i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><see cref="T:System.ComponentModel.IComponent" /> Do użycia jako szablon dla <see cref="T:System.Diagnostics.EventLogInstaller" />.</param>
        <summary>Kopiuje wartości właściwości <see cref="T:System.Diagnostics.EventLog" /> składników, które są wymagane podczas instalacji do dziennika zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnik określony przez `component` parametr musi być <xref:System.Diagnostics.EventLog>; w przeciwnym razie jest zgłaszany wyjątek.  
  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> z w obrębie kodu; są zwykle wywoływane tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe służy do ustawiania wartości właściwości <xref:System.Diagnostics.EventLogInstaller> wartości istniejącego <xref:System.Diagnostics.EventLog>.  
  
 Jeśli <xref:System.Diagnostics.EventLog.Log%2A> z <xref:System.Diagnostics.EventLog> to znaczy przekazanej jest pustym ciągiem (""), należy ustawić <xref:System.Diagnostics.EventLog.Log%2A> właściwości na prawidłową wartość przed wykonaniem Instalatora.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nie jest określony składnik <see cref="T:System.Diagnostics.EventLog" />.  
  
—lub— 
<see cref="P:System.Diagnostics.EventLog.Log" /> Lub <see cref="P:System.Diagnostics.EventLog.Source" /> właściwości określonego składnika <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><see cref="T:System.Collections.IDictionary" /> Użytą do zapisania informacji potrzebnych do wykonania wycofywania lub operacji dezinstalacji.</param>
        <summary>Przeprowadza instalację, a następnie zapisuje informacje w dzienniku zdarzeń w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zapisuje informacje w dzienniku zdarzeń w rejestrze i kojarzy w dzienniku zdarzeń z dziennika, który jest określony przez <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości. Jeśli dziennik jeszcze nie istnieje (i źródłem jest określony) <xref:System.Diagnostics.EventLogInstaller.Install%2A> tworzy dziennik i kojarzy nowe źródło z nim.  
  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> z w obrębie kodu; są zwykle wywoływane tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody podczas procesu instalacji, można zapisać informacji do rejestru, który jest skojarzony z dziennika zdarzeń, instalowana. Instalacja jest transakcyjna, więc w przypadku niepowodzenia jakiegokolwiek składnika projektu instalacji podczas instalacji, wszystkie wcześniej zainstalowane składniki zostaną przywrócone do ich stany przed instalacją. Jest to realizowane przez wywołanie metody każdego składnika <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> zmienić istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasy nie modyfikuje właściwości konfiguracji istniejącego źródła do dopasowania właściwości określonej instalacji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest zarejestrowana dla różnych dziennik zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda Pomija rejestrowanie źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest już zarejestrowany dla tego samego dziennika zdarzeń, określone w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Procedury instalacji aplikacji używa Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie obsługiwać informacje o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Install%2A> jako `stateSaver` parametru jest stale aktualizowany, ponieważ narzędzie instaluje każdego <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest konieczne w kodzie jawnie zmodyfikować informacje o stanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Platformy, na której Instalator próbuje użyć jest Windows NT 4.0 lub nowszym.</exception>
        <exception cref="T:System.ArgumentException">Nazwa określona w <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> właściwość jest już zarejestrowany dla różnych dziennika zdarzeń.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Instalator do porównania.</param>
        <summary>Określa, czy Instalator i innym określonym Instalatora odwołują się do tego samego źródła.</summary>
        <returns><see langword="true" /> Jeśli Instalator i Instalator określił <paramref name="otherInstaller" /> parametru może zainstalować lub odinstalować tego samego źródła; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> z w obrębie kodu; są zwykle nazywane tylko przez narzędzie Instalatora (Installutil.exe).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dziennika, aby ustawić źródło.</summary>
        <value>Nazwa dziennika. Może to być aplikacji, systemu lub nazwa dziennika niestandardowego. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwość do skojarzenia źródłowej określonej w <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości z istniejącego dziennika lub nowy dziennik na komputerze lokalnym. [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) używa tych informacji do mapowania źródła w dzienniku w rejestrze komputera. Aplikacje i usługi należy zapisać w dzienniku aplikacji lub dziennik niestandardowy. Sterowniki urządzeń należy zapisać w dzienniku systemu.  
  
 Na zapisywanie wpisów do dziennika zdarzeń, należy utworzyć źródło i zarejestruj je przy użyciu dziennika zdarzeń. Źródłem zdarzenia tylko napisać jeden dziennik w czasie. Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość, aby zarejestrować aplikację jako poprawne źródło wpisy w dzienniku zdarzeń. Jeśli nie określisz nazwę dziennika, przed uruchomieniem Instalatora, Instalator rejestruje źródła w dzienniku aplikacji. Jeśli określisz nowe źródło i istniejącego dziennika Instalator tworzy nowe źródło zdarzeń i kojarzy ją z dziennika, które określisz. Jeśli określisz zarówno nowe źródło, jak i nowego dziennika Instalatora kojarzy nowe źródło z nowego dziennika w rejestrze, ale dziennika nie jest tworzony, dopóki pierwszy wpis jest zapisywany do niego.  
  
 Dzienniki zdarzeń systemu operacyjnego są przechowywane jako pliki. Kiedy używasz <xref:System.Diagnostics.EventLogInstaller> lub <xref:System.Diagnostics.EventLog.CreateEventSource%2A> metodę w celu utworzenia nowego dziennika zdarzeń, skojarzony plik jest przechowywany w katalogu %SystemRoot%\System32\Config na określonym komputerze. Nazwa pliku jest ustawiona, dodając pierwsze 8 znaków <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości z rozszerzeniem nazwy pliku ".evt".  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> zmienić istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasy nie modyfikuje właściwości konfiguracji istniejącego źródła do dopasowania właściwości określonej instalacji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest zarejestrowana dla różnych dziennik zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metody nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest już zarejestrowany dla tego samego dziennika zdarzeń, określone w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Aby uzyskać szczegółowe informacje na temat działania źródeł oraz dzienniki zdarzeń, zobacz <xref:System.Diagnostics.EventLog> dokumentacji dla klasy <xref:System.Diagnostics.EventLog.Log%2A> i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobu, który zawiera komunikat formatowanie ciągów dla źródła.</summary>
        <value>Ścieżka pliku zasobów komunikatów. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości, aby skonfigurować źródło dziennika zdarzeń do zapisywania komunikatów o zdarzeniach zlokalizowane. Komunikaty o zdarzeniach są zdefiniowanych przez aplikację ciągi znaków, które opisują zdarzenia do użytkownika.  
  
 Aplikację można napisać wpisy dziennika zdarzeń przy użyciu identyfikatorów zasobów. Identyfikator zasobu indeksuje wiadomość na terenie <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>. Podgląd zdarzeń używa identyfikatora zasobu, aby znaleźć i wyświetlić odpowiedni ciąg z pliku zlokalizowanych zasobów, w oparciu o bieżące ustawienia języka.  
  
 Źródło zdarzenia muszą być skonfigurowane dla zapisywania zlokalizowanego wpisy lub zapisywanie bezpośrednie ciągów. Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów zlokalizowane dla źródła skonfigurowany z pliku zasobów komunikatów.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio, zamiast używania identyfikator zasobu w zlokalizowanego pliku zasobu, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości.  
  
 Jeśli <xref:System.Diagnostics.EventLog.MachineName%2A> właściwość nie jest identyfikator komputera lokalnego ("."), .NET Framework zakłada, że plik zasobów znajduje się na komputerze zdalnym. Jeśli <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> wartość właściwości zawiera literę dysku, plik zasobów jest zakłada się, że na \\ \\< NazwaKomputera\>\\< dysk\>udział (na przykład \\\server \c$). Jeśli wartość zawiera ciąg % systemroot %, plik zasobów zakłada się, że na \\ \\< NazwaKomputera\>\admin$ udziału (na przykład \\\server\admin$).  
  
 Aby szczegółowe informacje dotyczące definiowania komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikatów kompilatora" w dokumentacji zestawu SDK platformy, na [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzeń. Przykład kodu ustawia nazwy źródła zdarzeń, nazwa dziennika zdarzeń i plik zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykład kodu używa następującego pliku tekst komunikatu wbudowana w bibliotekę zasobu EventLogMsgs.dll. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatory zasobów i tekst dla kategorii, komunikatów o zdarzeniach i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobu, który zawiera ciągi parametr komunikatów dla źródła.</summary>
        <value>Ścieżka pliku zasobów komunikatów parametru. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości, aby skonfigurować źródło dziennika zdarzeń można zapisać zdarzenia zlokalizowanych komunikatów z wstawiony parametr ciągów. Każdy komunikat zlokalizowane zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwość może zawierać symbole zastępcze ciągi wstawiania. Te symbole zastępcze są używane do określania położenia i identyfikator zasobu ciągu niezależny od języka, w komunikacie zdarzenia. Podgląd zdarzeń zastępuje symbole zastępcze z odpowiednich ciągów z <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> i formatowania komunikatu dziennika zdarzeń dla wpisu zlokalizowane zdarzeń.  
  
 Na przykład poniższa sekcja pliku tekstowego komunikat definiuje ciąg z symbolem zastępczym parametru:  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 W ramach parametru pliku zasobów należy zdefiniować ciągu wstawiania o identyfikatorze zasobu, który odnosi się do symbolu zastępczego, jak pokazano poniżej:  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 Źródło zdarzenia muszą być skonfigurowane dla zapisywania zlokalizowanego wpisy lub zapisywanie bezpośrednie ciągów. Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów zlokalizowane dla źródła skonfigurowany z pliku zasobów komunikatów.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio do dziennika zdarzeń lub z <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> nie zawiera komunikatów z symbolami zastępczymi wstawiania parametru, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje dotyczące definiowania komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikatów kompilatora" w dokumentacji zestawu SDK platformy, na [ http://msdn.microsoft.com ](https://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzeń. Przykład kodu ustawia nazwy źródła zdarzeń, nazwa dziennika zdarzeń i plik zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykład kodu używa następującego pliku tekst komunikatu wbudowana w bibliotekę zasobu EventLogMsgs.dll. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatory zasobów i tekst dla kategorii, komunikatów o zdarzeniach i ciągi wstawiania parametru. W szczególności komunikat zdefiniowany dla identyfikatora zasobów organizacji 1004 używa symbol zastępczy dla parametru ciągu zdefiniowane dla identyfikatora zasobów organizacji 5002.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawierający stanu przed instalacją tego komputera.</param>
        <summary>Przywrócenie komputera do stanu, w jakim znajdował się przed rozpoczęciem instalacji przez wycofanie informacje z dziennika zdarzeń, który zapisano procedurę instalacji, w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Metoda Cofa skutki <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> jest wywoływana, gdy instalacja dowolny składnik w projekcie instalacja nie powiedzie się. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda tworzy lub ustawia właściwości dziennika zdarzeń i źródło zdarzenia. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Usuwa dziennik zdarzeń i źródła lub resetuje właściwości istniejącego źródła do jego wartości przed instalacją.  
  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> z w obrębie kodu; są zwykle wywoływane tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Wywołuje narzędzie <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody, gdy składnik to lub inne nie powiodło się, aby zainstalować, aby cofnąć wszystkie zmiany wprowadzone proces instalacji ma już.  
  
 Procedury instalacji aplikacji używa Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie obsługiwać informacje o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> jako `savedState` parametru jest stale aktualizowany, ponieważ narzędzie gromadzi informacje o każdej kopii <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest konieczne w kodzie jawnie zmodyfikować informacje o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę źródła, aby zarejestrować się w dzienniku.</summary>
        <value>Nazwa do rejestrowania w dzienniku zdarzeń jako źródła wpisów. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło zdarzeń wskazuje, które dzienniki zdarzeń. Często jest nazwa aplikacji lub nazwą składnika w ramach dużych aplikacji.  
  
 Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość, aby zarejestrować aplikację jako poprawne źródło wpisy w dzienniku zdarzeń. Nowej nazwy źródła nie może dopasować istniejącej nazwy źródła lub istniejącą nazwę dziennika zdarzeń. Każde źródło mogą zapisywać wyłącznie do jednego dziennika zdarzeń jednocześnie. Jednak aplikacja może używać wielu źródeł do zapisu do wielu dzienników. Na przykład aplikacja może wymagać wielu źródeł, skonfigurowanych dla różnych dziennikach zdarzeń lub plików innego zasobu.  
  
 Aplikacje i usługi należy zapisać w dzienniku aplikacji lub dziennik niestandardowy. Sterowniki urządzeń należy zapisać w dzienniku systemu. Jeśli nie określisz nazwę dziennika, przed uruchomieniem Instalatora, Instalator rejestruje źródła w dzienniku aplikacji. Jeśli określisz nazwę dziennika, który nie istnieje, system rejestruje <xref:System.Diagnostics.EventLogInstaller.Source%2A> do tego dziennika, ale dziennika nie jest tworzony, dopóki pierwszy wpis jest zapisywany do niego.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> zmienić istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasy nie modyfikuje właściwości konfiguracji istniejącego źródła do dopasowania właściwości określonej instalacji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest zarejestrowana dla różnych dziennik zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metody nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwę źródła, która jest już zarejestrowany dla tego samego dziennika zdarzeń, określone w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Aby uzyskać szczegółowe informacje na temat działania źródeł oraz dzienniki zdarzeń, zobacz <xref:System.Diagnostics.EventLog> dokumentacji dla klasy <xref:System.Diagnostics.EventLog.Log%2A> i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawierający stanu przed instalacją tego komputera.</param>
        <summary>Usuwa instalacji, usuwając informacje w dzienniku zdarzeń z rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> wartość właściwości jest `Remove`, <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> metoda usuwa źródła i dziennika skojarzonej, utworzonego przez Instalatora, jeśli <xref:System.Diagnostics.EventLogInstaller.Log%2A> i <xref:System.Diagnostics.EventLogInstaller.Source%2A> tworzenia nowego dziennika zdarzeń i źródło określone właściwości.  
  
 Zazwyczaj nie wywołuj metody <xref:System.Diagnostics.EventLogInstaller> z w obrębie kodu; są zwykle wywoływane tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) w tryb dezinstalacji. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> metoda przywracania części systemu, które miały wpływ na ich stany przed instalacją instalacji. Dotyczy to również usunięcie informacji rejestru, który jest skojarzony z dziennika zdarzeń odinstalowywane.  
  
 Aplikacja odinstalowania używa procedur Instalatora projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie obsługiwać informacje o składnikach, które zostały już odinstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> jako `savedState` parametru jest stale aktualizowany, ponieważ narzędzie odinstalowuje każdego <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest konieczne w kodzie jawnie zmodyfikować informacje o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil.exe (Narzędzie Instalatora)</see> należy usunąć dziennika zdarzeń lub pozostaw ją w stanie zainstalowanych na dezinstalacji.</summary>
        <value>Jedną z <see cref="T:System.Configuration.Install.UninstallAction" /> wartości, które wskazuje na to, co stanie się pozostawienie w dzienniku zdarzeń w przypadku <see cref="T:System.Diagnostics.EventLog" /> zostanie odinstalowany. Wartość domyślna to <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zainstalowaniu dziennika zdarzeń, można opcjonalnie połączyć do istniejącego dziennika. Jeśli tak zrobisz, należy zdecydować, czy dziennik należy powrócić do stanu przed instalacją lub pozostają w stanie bieżącej, po instalacji. Gdy użytkownik wybierze opcję wróć w dzienniku zdarzeń do stanu przed instalacją zmiany wpisów dziennika zdarzeń podczas instalacji nie są przywracane. Możesz zresetować właściwości dziennika zdarzeń, które są skojarzone z <xref:System.Diagnostics.EventLogInstaller> wartości przed instalacją.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> zawiera nieprawidłową wartość. Jedyne prawidłowe wartości dla tej właściwości to <see langword="Remove" /> i <see langword="NoAction" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>