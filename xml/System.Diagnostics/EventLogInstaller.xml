<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="61fdc2ecf54b60287cf1c2507876fbe664114a7b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36343322" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Służy do instalowania i konfigurowania aplikacji odczytuje z lub podczas uruchamiania zapisuje dane do dziennika zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller> Jest używany przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) podczas instalowania dziennika zdarzeń. <xref:System.Diagnostics.EventLogInstaller> Klasy można zainstalować dzienniki zdarzeń tylko na komputerze lokalnym.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> klasy, gdy aplikacja zapisuje w dzienniku zdarzeń; nie jest konieczne użycie Instalatora dziennik zdarzeń aplikacji do odczytu dziennika zdarzeń. Aplikacje i usługi, należy zapisać dziennik aplikacji lub dziennik niestandardowy. Sterowniki urządzeń, należy zapisać w dzienniku systemu.  
  
> [!NOTE]
>  Dziennika zabezpieczeń jest tylko do odczytu.  
  
 Instalator tworzy źródło zdarzenia, które określisz w <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości i rejestruje go w dzienniku zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości. To zachowanie jest podobne do wywoływania <xref:System.Diagnostics.EventLog.CreateEventSource%2A> na <xref:System.Diagnostics.EventLog> składnika.  
  
 Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> i <xref:System.Diagnostics.EventLog.WriteEntry%2A> metody się zapisać zdarzeń do dziennika zdarzeń. Należy określić źródło zdarzenia się zapisać zdarzeń; należy utworzyć i skonfigurować źródło zdarzeń przed zapisaniem pierwszej pozycji ze źródłem.  
  
 Utwórz nowe źródło zdarzeń podczas instalacji aplikacji. Dzięki temu czas dla systemu operacyjnego odświeżyć jej lista źródeł zdarzeń zarejestrowanych i ich konfiguracji. Jeśli system operacyjny nie odświeżył jego lista źródeł zdarzeń, a następnie spróbuj zapisać zdarzenie z nowego źródła operacja zapisu zakończy się niepowodzeniem. Można skonfigurować, używając nowego źródła <xref:System.Diagnostics.EventLogInstaller>, lub za pomocą <xref:System.Diagnostics.EventLog.CreateEventSource%2A> metody. Musi mieć uprawnienia administracyjne na komputerze, aby utworzyć nowe źródło zdarzeń.  
  
 Można utworzyć źródła zdarzeń dla istniejącego dziennika zdarzeń lub utworzenie nowego dziennika zdarzeń. Podczas tworzenia nowego źródła dla nowego dziennika zdarzeń systemu rejestruje źródła dla tego dziennika, ale dziennik jest tworzone dopiero po pierwszej pozycji są zapisywane do niego.  
  
 Aby zainstalować dziennika zdarzeń, Utwórz klasę Instalatora projektu dziedziczący z <xref:System.Configuration.Install.Installer>i ustaw <xref:System.ComponentModel.RunInstallerAttribute> dla klasy do `true`. W projekcie, Utwórz <xref:System.Diagnostics.EventLogInstaller> dla każdego dziennika zdarzeń, że aplikacja będzie zapisu i dodaj je do projektu klasy Instalatora.  
  
 Gdy [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) jest wywoływana, wygląda na <xref:System.ComponentModel.RunInstallerAttribute>. Jeśli jest `true`, narzędzie instaluje wszystkie elementy w <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji, które są skojarzone z Instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest `false`, narzędzie ignoruje Instalator projektu.  
  
 Zmodyfikuj inne właściwości <xref:System.Diagnostics.EventLogInstaller> przed lub po dodaniu wystąpienia <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji Instalatorem projektu, ale przed uruchomieniem narzędzia Instalatora. Należy ustawić <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości, jeśli aplikacja będzie zapisywanie w dzienniku zdarzeń.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie używaj <xref:System.Diagnostics.EventLogInstaller> zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje istniejącego źródła do dopasowania właściwości instalacji określonych właściwości konfiguracji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwa źródła, który jest zarejestrowany dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> — Metoda nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada Nazwa źródłowego, który jest już zarejestrowany dla tego samego dziennik zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Źródło zdarzenia można zarejestrować z plikami zlokalizowanych zasobów dla zdarzeń ciągów Kategoria i komunikatu. Aplikację można napisać przy użyciu identyfikatorów zasobów, a nie rzeczywiste ciąg określający wpisy w dzienniku zdarzeń. Podgląd zdarzeń używa identyfikatora zasobu można znaleźć i wyświetlić odpowiedni ciąg z pliku zasobów zlokalizowanych oparte na bieżących ustawieniach języka. Możesz zarejestrować osobny plik dla kategorii zdarzeń, wiadomości i ciągi wstawiania parametru lub można zarejestrować tego samego pliku zasobów dla wszystkich trzech typów ciągów. Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A>, <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>, <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>, i <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości, aby skonfigurować źródła na zapisywanie wpisów zlokalizowanego w dzienniku zdarzeń. Jeśli aplikacja zapisuje wartości ciągów bezpośrednio do dziennika zdarzeń, ustaw te właściwości nie jest konieczne.  
  
 Źródło musi być skonfigurowany zapisywania wpisów zlokalizowanych lub zapisywanie ciągów bezpośredniego. Jeśli aplikacja zapisuje wpisów przy użyciu zarówno identyfikatorów zasobów, jak i wartości ciągu, należy zarejestrować dwa oddzielne źródła. Na przykład skonfigurować jedno źródło z plikami zasobów, a następnie użyć tego źródła w <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów przy użyciu identyfikatorów zasobów w dzienniku zdarzeń. Utwórz innego źródła bez pliki zasobów, a następnie użyj tego źródła w <xref:System.Diagnostics.EventLog.WriteEntry%2A> metodę, aby zapisać parametry bezpośrednio do dziennika zdarzeń przy użyciu tego źródła.  
  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> klasy z w kodzie; zwykle są one nazywane tylko przez Installutil.exe. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody w ramach procesu instalacji. Go utworzyć kopię zapasową limit niepowodzeń, jeśli to konieczne, przez wywołanie metody <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody dla obiektu, który wygenerował wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu określa właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła i nazwa dziennika zdarzeń i dodaje <xref:System.Diagnostics.EventLogInstaller> do <xref:System.Configuration.Install.Installer.Installers%2A> kolekcji.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventLogInstaller" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kategorii w pliku zasobów kategorii.</summary>
        <value>Liczba kategorii w pliku zasobów kategorii. Wartość domyślna wynosi zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości, aby zapisać zdarzeń z zlokalizowane ciągi kategorii. Podgląd zdarzeń wyświetla kategorię dla wpisu zdarzenia, jeśli znasz kategorię podczas pisania zdarzenia. Dziennik zdarzeń kategorie są zdefiniowane przez aplikację ciągów, które są pomoc filtrować zdarzenia lub podać informacje w zdarzeniu. Na przykład aplikacji można określić osobne kategorie dla różnych składników lub innej operacji.  
  
 Kategorie zdarzeń jest opcjonalna. Jeśli aplikacja nie korzysta z kategorii, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu określa właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwa dziennika zdarzeń i pliku zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobu, który zawiera ciągi kategorię dla tego źródła.</summary>
        <value>Ścieżka pliku zasobów kategorii. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości, aby zapisać zdarzeń z zlokalizowane ciągi kategorii. Podgląd zdarzeń wyświetla kategorię dla wpisu zdarzenia, jeśli znasz kategorię podczas zapisywania zdarzenia. Dziennik zdarzeń kategorie są zdefiniowane przez aplikację ciągów, które są pomoc filtrować zdarzenia lub podaj informacje o zdarzeniu. Na przykład aplikacja może mieć osobne kategorie dla różnych składników lub innej operacji.  
  
 Kategorie zdarzeń jest opcjonalna. Jeśli aplikacja nie korzysta z kategorii, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> i <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu określa właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwa dziennika zdarzeń i pliku zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <see cref="T:System.ComponentModel.IComponent" /> Do użycia jako szablon dla <see cref="T:System.Diagnostics.EventLogInstaller" />.</param>
        <summary>Kopiuje wartości właściwości <see cref="T:System.Diagnostics.EventLog" /> składników, które są wymagane podczas instalacji dla dziennika zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnik określony przez `component` parametr musi być <xref:System.Diagnostics.EventLog>; w przeciwnym razie jest zwracany wyjątek.  
  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> od w kodzie; zwykle nazywane są tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A> Installutil.exe służy do ustawiania wartości właściwości <xref:System.Diagnostics.EventLogInstaller> wartości istniejącej <xref:System.Diagnostics.EventLog>.  
  
 Jeśli <xref:System.Diagnostics.EventLog.Log%2A> z <xref:System.Diagnostics.EventLog> czyli przekazano to ciąg pusty (""), należy ustawić <xref:System.Diagnostics.EventLog.Log%2A> właściwości na prawidłową wartość przed wykonaniem Instalator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określony składnik nie jest <see cref="T:System.Diagnostics.EventLog" />.  - lub - <see cref="P:System.Diagnostics.EventLog.Log" /> lub <see cref="P:System.Diagnostics.EventLog.Source" /> właściwości określonego składnika <see langword="null" /> lub jest pusty.</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <see cref="T:System.Collections.IDictionary" /> Używany do zapisywania informacji potrzebnych do wykonania wycofywania lub odinstalować operacji.</param>
        <summary>Przeprowadza instalację i zapisuje informacje dziennika zdarzeń w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zapisuje informacje dziennika zdarzeń w rejestrze i kojarzy dziennika zdarzeń z dziennika, który jest określony przez <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości. Jeśli dziennika już nie istnieje (i źródło jest określone), <xref:System.Diagnostics.EventLogInstaller.Install%2A> dziennika tworzy i kojarzy nowe źródło z nim.  
  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> od w kodzie; zwykle nazywane są tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody w ramach procesu instalacji można zapisać informacji rejestru, który jest skojarzony z dziennika zdarzeń, instalowane. Instalacja jest transakcyjna, więc jeśli nastąpiło uszkodzenie instalacji części projektu podczas instalacji, wszystkie wcześniej zainstalowane składniki są z powrotem obniżyć do stanu przed instalacją. Jest to osiągane przez wywołanie każdego składnika <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie używaj <xref:System.Diagnostics.EventLogInstaller> zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje istniejącego źródła do dopasowania właściwości instalacji określonych właściwości konfiguracji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwa źródła, który jest zarejestrowany dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metody Pomija rejestrowanie źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada Nazwa źródłowego, który jest już zarejestrowany dla tego samego dziennik zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie Obsługa informacji o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Install%2A> jako `stateSaver` jako narzędzie instaluje każdego parametru jest stale aktualizowany <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Instalator próbuje użyć platforma nie jest Windows NT 4.0 lub nowszy.</exception>
        <exception cref="T:System.ArgumentException">Nazwa określona w <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> właściwości jest już zarejestrowany dla innego dziennika zdarzeń.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Instalator do porównania.</param>
        <summary>Określa, czy Instalator i innym określonym Instalator odwołują się do tego samego źródła.</summary>
        <returns>
          <see langword="true" /> Jeśli tego Instalatora i Instalator określonego przez <paramref name="otherInstaller" /> parametru może zainstalować lub odinstalować tego samego źródła; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> od w kodzie; zwykle nazywane są tylko za pomocą narzędzia Instalatora (Installutil.exe).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dziennika, aby ustawić źródło.</summary>
        <value>Nazwa dziennika. Może to być aplikacji, System lub niestandardowej nazwy dziennika. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwość do skojarzenia ze źródłem określonym w <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości z istniejącego dziennika lub nowego dziennika na komputerze lokalnym. [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) używa tych informacji do mapowania źródła w dzienniku w rejestrze komputera. Aplikacje i usługi, należy zapisać dziennik aplikacji lub dziennik niestandardowy. Sterowniki urządzeń, należy zapisać w dzienniku systemu.  
  
 Aby tworzyć wpisy dziennika zdarzeń, należy utworzyć źródło i zarejestrowanie go za pomocą dziennika zdarzeń. Źródłem zdarzenia tylko może zapisywać do osobnego pliku dziennika w czasie. Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość, aby zarejestrować aplikację jako prawidłowe źródło wpisów dziennika zdarzeń. Jeśli nie określisz nazwę dziennika przed uruchomieniem Instalatora, Instalator rejestruje źródła w dzienniku aplikacji. Jeśli określisz nowe źródło i istniejącego dziennika, Instalator tworzy nowe źródło zdarzeń i kojarzy ją z dziennika, które określisz. Jeśli określono zarówno nowe źródło, jak i nowy dziennik, Instalator kojarzy nowe źródło z nowego dziennika w rejestrze, ale dziennik jest tworzone dopiero po pierwszej pozycji są zapisywane do niego.  
  
 System operacyjny zapisuje dzienniki zdarzeń jako plików. Jeśli używasz <xref:System.Diagnostics.EventLogInstaller> lub <xref:System.Diagnostics.EventLog.CreateEventSource%2A> metodę w celu utworzenia nowego dziennika zdarzeń, skojarzony plik jest przechowywany w katalogu %SystemRoot%\System32\Config na określonym komputerze. Nazwa pliku jest ustawiona przez dodanie pierwsze 8 znaków <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości z rozszerzeniem nazwy pliku ".evt".  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie używaj <xref:System.Diagnostics.EventLogInstaller> zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje istniejącego źródła do dopasowania właściwości instalacji określonych właściwości konfiguracji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwa źródła, który jest zarejestrowany dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> — Metoda nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada Nazwa źródłowego, który jest już zarejestrowany dla tego samego dziennik zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Aby uzyskać więcej szczegółowych informacji dotyczących zachowania dzienniki zdarzeń i źródeł, zobacz <xref:System.Diagnostics.EventLog> dokumentacji dla klasy <xref:System.Diagnostics.EventLog.Log%2A> i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobu, który zawiera komunikat formatowanie ciągów dla źródła.</summary>
        <value>Ścieżka pliku zasobów komunikatów. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości, aby skonfigurować źródło dziennika zdarzeń mają być zapisywane zdarzenia zlokalizowane. Komunikaty o zdarzeniach są zdefiniowane przez aplikację ciągów zawierających opis zdarzenia do użytkownika.  
  
 Aplikację można napisać wpisów dziennika zdarzeń przy użyciu identyfikatorów zasobów. Identyfikator zasobu indeksuje wiadomość znajduje się w <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>. Podgląd zdarzeń używa identyfikatora zasobu można znaleźć i wyświetlić odpowiedni ciąg z pliku zasobów zlokalizowanych oparte na bieżących ustawieniach języka.  
  
 Źródło zdarzenia musi być skonfigurowany zapisywania wpisów zlokalizowanych lub zapisywanie ciągów bezpośredniego. Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów zlokalizowane dla źródła konfigurowane przy użyciu pliku zasobów komunikatów.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio, zamiast używania identyfikator zasobu w pliku zlokalizowanych zasobów nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości.  
  
 Jeśli <xref:System.Diagnostics.EventLog.MachineName%2A> właściwość nie jest identyfikatorem komputera lokalnego ("."), programu .NET Framework zakłada, że plik zasobów na komputerze zdalnym. Jeśli <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> wartość właściwości zawiera literę dysku, plik zasobu zakłada, że na \\ \\< NazwaKomputera\>\\< dysk\>udział (na przykład \\\server \c$). Jeśli wartość zawiera ciąg % systemroot %, plik zasobu zakłada się, że na \\ \\< NazwaKomputera\>\admin$ udziału (na przykład \\\server\admin$).  
  
 Aby szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu określa właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwa dziennika zdarzeń i pliku zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobu, który zawiera komunikat ciągów parametrów dla źródła.</summary>
        <value>Ścieżka pliku zasobów komunikatów parametru. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości, aby skonfigurować źródło dziennika zdarzeń mają być zapisywane zdarzenia zlokalizowanych z wstawiony parametr ciągów. Każdy komunikat zlokalizowanych zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwość może zawierać symbole zastępcze dla ciągów wstawiania. Te symbole są używane do określenia pozycji i identyfikator zasobu ciągu niezależny od języka w komunikacie zdarzenia. Podgląd zdarzeń zastępuje symbole zastępcze odpowiednie ciągi z <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> i formatuje komunikat dziennika zdarzeń dla wpisu zlokalizowanych zdarzeń.  
  
 Na przykład sekcji poniżej plik tekstowy komunikat definiuje ciąg, symbol zastępczy parametrów:  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 W pliku zasobów parametr ciągu wstawiania musi być zdefiniowana z identyfikatorem zasobu, umożliwiająca symbolu zastępczego, jak pokazano poniżej:  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 Źródło zdarzenia musi być skonfigurowany zapisywania wpisów zlokalizowanych lub zapisywanie ciągów bezpośredniego. Użyj <xref:System.Diagnostics.EventLog.WriteEvent%2A> metody na zapisywanie wpisów zlokalizowane dla źródła konfigurowane przy użyciu pliku zasobów komunikatów.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio do dziennika zdarzeń lub z <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> nie zawiera wiadomości z parametru wstawiania symboli zastępczych, nie należy ustawiać <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> właściwości.  
  
 Aby szczegółowe informacje o zdefiniowanie komunikaty o zdarzeniach i tworzenie plików zasobów dla zdarzeń, zobacz temat "Komunikat kompilatora" w dokumentacji zestawu SDK platformy w [ http://msdn.microsoft.com ](http://msdn.microsoft.com/).  
  
   
  
## Examples  
 Poniższy przykład kodu określa właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwa dziennika zdarzeń i pliku zasobów dla zdarzeń zlokalizowanego tekstu.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 Przykładowy kod używa następującego pliku tekst wiadomości wbudowanych w bibliotece EventLogMsgs.dll zasobów. Plik tekstowy komunikat jest źródło, z którego jest tworzony pliku zasobów komunikatów. Plik tekstowy komunikat definiuje identyfikatorów zasobów i tekst dla kategorii, komunikatu o zdarzeniu i ciągi wstawiania parametru. W szczególności wiadomości zdefiniowane dla zasobu o identyfikatorze 1004 używa symbolu zastępczego dla parametru zdefiniowany dla identyfikatora zasobu 5002.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Collections.IDictionary" /> Zawierający stanu przed instalacją komputera.</param>
        <summary>Przywraca komputer do stanu sprzed instalacji przez wycofanie informacji dziennika zdarzeń, która zarejestrowała procedury instalacji w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Metody cofa skutków <xref:System.Diagnostics.EventLogInstaller.Install%2A> metody. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> jest wywoływana, gdy instalacja każdego składnika w projekcie instalacja nie powiedzie się. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda tworzy lub ustawia właściwości dziennika zdarzeń i źródło zdarzenia. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> Usuwa dziennik zdarzeń i źródła albo resetuje właściwości istniejącego źródła do jego wartości przed instalacją.  
  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> od w kodzie; zwykle nazywane są tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Wywołuje narzędzie <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody, gdy składnik w tym lub innym nie powiodło się, aby zainstalować, aby cofnąć zmiany wprowadzone w proces instalacji został już.  
  
 Procedury instalacji aplikacji korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie Obsługa informacji o składnikach, które zostały już zainstalowane. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> jako `savedState` parametru jest stale aktualizowany, ponieważ narzędzie przedstawia kopii każdego <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę źródła zarejestrować się w dzienniku.</summary>
        <value>Nazwę można zarejestrować się w dzienniku zdarzeń jako źródło wpisów. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło zdarzenia wskazuje co rejestruje zdarzenie. Często jest nazwa aplikacji lub nazwy składnika w dużych aplikacji.  
  
 Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość, aby zarejestrować aplikację jako prawidłowe źródło wpisów dziennika zdarzeń. Nowa nazwa źródła nie może dopasować istniejącej nazwy źródła lub nazwa istniejącego dziennika zdarzeń. Każde źródło tylko może zapisywać do dziennika zdarzeń co jednocześnie. Jednak aplikacja może używać wielu źródeł do zapisu do wielu dzienników zdarzeń. Na przykład aplikacja może wymagać wielu źródeł skonfigurowane dla różnych dzienników zdarzeń lub innego zasobu plików.  
  
 Aplikacje i usługi, należy zapisać dziennik aplikacji lub dziennik niestandardowy. Sterowniki urządzeń, należy zapisać w dzienniku systemu. Jeśli nie określisz nazwę dziennika przed uruchomieniem Instalatora, Instalator rejestruje źródła w dzienniku aplikacji. Jeśli określono nazwę dziennika, który nie istnieje, system rejestruje <xref:System.Diagnostics.EventLogInstaller.Source%2A> w tym dzienniku, ale dziennik jest tworzone dopiero po pierwszej pozycji są zapisywane do niego.  
  
 Użyj <xref:System.Diagnostics.EventLogInstaller> zarejestrować nowe źródło dla nowego lub istniejącego dziennika zdarzeń; nie używaj <xref:System.Diagnostics.EventLogInstaller> zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje istniejącego źródła do dopasowania właściwości instalacji określonych właściwości konfiguracji. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda zgłasza wyjątek, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada nazwa źródła, który jest zarejestrowany dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> — Metoda nie rejestruje źródła, jeśli <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwość odpowiada Nazwa źródłowego, który jest już zarejestrowany dla tego samego dziennik zdarzeń określony w <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości.  
  
 Aby uzyskać więcej szczegółowych informacji dotyczących zachowania dzienniki zdarzeń i źródeł, zobacz <xref:System.Diagnostics.EventLog> dokumentacji dla klasy <xref:System.Diagnostics.EventLog.Log%2A> i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Collections.IDictionary" /> Zawierający stanu przed instalacją komputera.</param>
        <summary>Usuwa instalacji przez usunięcie z rejestru informacji dziennika zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A> wartość właściwości jest `Remove`, <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> metoda usuwa źródła i skojarzone dziennika utworzony przez Instalatora, jeśli <xref:System.Diagnostics.EventLogInstaller.Log%2A> i <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości określone utworzenie nowego dziennika zdarzeń i źródła.  
  
 Zwykle nie należy wywoływać metody <xref:System.Diagnostics.EventLogInstaller> od w kodzie; zwykle nazywane są tylko przez [Installutil.exe (Narzędzie Instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) w tryb dezinstalacji. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> metoda przywracania części systemu, które miały wpływ na ich stany przed instalacją instalacji. Dotyczy to również usunięcie informacji rejestru, który jest skojarzony z dziennika zdarzeń odinstalowywane.  
  
 Aplikacji odinstalować rutynowych korzysta Instalator projektu <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwość, aby automatycznie Obsługa informacji o składnikach, które już został odinstalowany. Tych informacji o stanie, który jest przekazywany do <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> jako `savedState` jako narzędzie odinstalowuje każdego parametru jest stale aktualizowany <xref:System.Diagnostics.EventLogInstaller>. Zazwyczaj nie jest niezbędna dla swój kod, aby jawnie modyfikować tych informacji o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy [Installutil.exe (Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) Instalatora należy usunąć dziennika zdarzeń lub pozostaw on w stanie zainstalowanych na dezinstalacji.</summary>
        <value>Jeden z <see cref="T:System.Configuration.Install.UninstallAction" /> wartości, które wskazuje stan co pozostaw dziennika zdarzeń w przypadku <see cref="T:System.Diagnostics.EventLog" /> zostanie odinstalowana. Wartość domyślna to <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zainstalowaniu dziennika zdarzeń, można opcjonalnie podłącz je do istniejącego dziennika. Jeśli to zrobisz, dlatego należy określić dziennika należy przywrócić stan przed instalacją, czy pozostają w jego stan bieżący, po instalacji. W przypadku wybrania przywrócić dziennik zdarzeń do stanu przed instalacją, zmiany wpisów dziennika zdarzeń podczas instalacji nie są przywracane. Można resetować tylko właściwości dziennika zdarzeń, które są skojarzone z <xref:System.Diagnostics.EventLogInstaller> wartości przed instalacją.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" /> zawiera nieprawidłową wartość. Jedyne prawidłowe wartości dla tej właściwości to <see langword="Remove" /> i <see langword="NoAction" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>