<Type Name="EventLogInstaller" FullName="System.Diagnostics.EventLogInstaller">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebf5fa22cda84c35fafbe169edaec4cdc04e0480" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69076289" /></Metadata><TypeSignature Language="C#" Value="public class EventLogInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogInstaller" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogInstaller&#xA;Inherits ComponentInstaller" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogInstaller : System::Configuration::Install::ComponentInstaller" />
  <TypeSignature Language="F#" Value="type EventLogInstaller = class&#xA;    inherit ComponentInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration.Install</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia zainstalowanie i skonfigurowanie dziennika zdarzeń, z którego aplikacja odczytuje lub zapisuje dane podczas uruchamiania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Program jest używany przez [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) podczas instalacji dziennika zdarzeń. <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLogInstaller> Klasa może instalować dzienniki zdarzeń tylko na komputerze lokalnym.  
  
 Użyj klasy <xref:System.Diagnostics.EventLogInstaller> , gdy aplikacja zapisuje dane w dzienniku zdarzeń; nie jest konieczne używanie Instalatora dziennika zdarzeń dla aplikacji do odczytu z dziennika zdarzeń. Aplikacje i usługi powinny zapisywać w dzienniku aplikacji lub dzienniku niestandardowym. Sterowniki urządzeń powinny zapisywać dane w dzienniku systemu.  
  
> [!NOTE]
>  Dziennik zabezpieczeń jest tylko do odczytu.  
  
 Instalator tworzy źródło zdarzeń określone we <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości i rejestruje je dla dziennika zdarzeń określonego we <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości. Takie zachowanie jest podobne do wywoływania <xref:System.Diagnostics.EventLog.CreateEventSource%2A> <xref:System.Diagnostics.EventLog> na składniku.  
  
 Za pomocą metod <xref:System.Diagnostics.EventLog.WriteEntry%2A>iZapisz zdarzenia w dzienniku zdarzeń. <xref:System.Diagnostics.EventLog.WriteEvent%2A> Należy określić źródło zdarzenia do zapisywania zdarzeń; przed zapisaniem pierwszego wpisu ze źródłem należy utworzyć i skonfigurować źródło zdarzenia.  
  
 Utwórz nowe źródło zdarzenia podczas instalacji aplikacji. Pozwala to czas na odświeżenie listy zarejestrowanych źródeł zdarzeń i ich konfiguracji przez system operacyjny. Jeśli system operacyjny nie odświeżył swojej listy źródeł zdarzeń i podjęto próbę zapisania zdarzenia z nowym źródłem, operacja zapisu zakończy się niepowodzeniem. Nowe źródło można skonfigurować przy użyciu <xref:System.Diagnostics.EventLogInstaller>lub <xref:System.Diagnostics.EventLog.CreateEventSource%2A> przy użyciu metody. Aby utworzyć nowe źródło zdarzeń, musisz mieć uprawnienia administracyjne na komputerze.  
  
 Można utworzyć źródło zdarzenia dla istniejącego dziennika zdarzeń lub nowego dziennika zdarzeń. Gdy tworzysz nowe źródło dla nowego dziennika zdarzeń, system rejestruje źródło tego dziennika, ale dziennik nie zostanie utworzony, dopóki nie zostanie do niego zapisany pierwszy wpis.  
  
 Aby zainstalować dziennik zdarzeń, należy utworzyć klasę Instalatora projektu, która dziedziczy po <xref:System.Configuration.Install.Installer>, i <xref:System.ComponentModel.RunInstallerAttribute> ustawić dla klasy `true`wartość. W projekcie Utwórz <xref:System.Diagnostics.EventLogInstaller> dla każdego dziennika zdarzeń, do którego aplikacja będzie pisać, i Dodaj wystąpienie do klasy Instalatora projektu.  
  
 Gdy [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) jest wywoływana, wygląda na <xref:System.ComponentModel.RunInstallerAttribute>. Jeśli tak jest `true`, narzędzie zainstaluje wszystkie elementy <xref:System.Configuration.Install.Installer.Installers%2A> w kolekcji, które są skojarzone z instalatorem projektu. Jeśli <xref:System.ComponentModel.RunInstallerAttribute> jest`false`, narzędzie ignoruje Instalatora projektu.  
  
 Należy zmodyfikować inne właściwości <xref:System.Diagnostics.EventLogInstaller> przed lub po dodaniu wystąpienia <xref:System.Configuration.Install.Installer.Installers%2A> do kolekcji Instalatora projektu, ale przed uruchomieniem narzędzia Instalatora. Właściwość należy ustawić, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli aplikacja będzie zapisywać w dzienniku zdarzeń.  
  
 Służy <xref:System.Diagnostics.EventLogInstaller> do rejestrowania nowego źródła dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> do zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje właściwości konfiguracji istniejącego źródła, aby pasowały do określonych właściwości instalacji. Metoda zgłasza wyjątek, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródła, która jest zarejestrowana dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda nie rejestruje źródła, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródłową, która jest już zarejestrowana dla tego samego dziennika <xref:System.Diagnostics.EventLogInstaller.Log%2A> zdarzeń określonego we właściwości. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Źródło zdarzeń można zarejestrować przy użyciu zlokalizowanych plików zasobów dla kategorii zdarzeń i ciągów komunikatów. Aplikacja może zapisywać wpisy dziennika zdarzeń przy użyciu identyfikatorów zasobów zamiast określać rzeczywisty ciąg. Podgląd zdarzeń używa identyfikatora zasobu do znajdowania i wyświetlania odpowiedniego ciągu z zlokalizowanego pliku zasobów na podstawie bieżących ustawień języka. Można zarejestrować osobny plik dla kategorii zdarzeń, komunikatów i ciągów wstawiania parametrów lub można zarejestrować ten sam plik zasobu dla wszystkich trzech typów ciągów. Użyj właściwości <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> ,,<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> i<xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> , aby skonfigurować źródło do zapisywania zlokalizowanych wpisów w dzienniku zdarzeń. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Jeśli aplikacja zapisuje wartości ciągów bezpośrednio do dziennika zdarzeń, nie trzeba ustawiać tych właściwości.  
  
 Źródło musi być skonfigurowane do zapisywania zlokalizowanych wpisów lub do pisania ciągów bezpośrednich. Jeśli aplikacja zapisuje wpisy przy użyciu zarówno identyfikatorów zasobów, jak i wartości ciągów, należy zarejestrować dwa oddzielne źródła. Na przykład Skonfiguruj jedno źródło z plikami zasobów, a następnie użyj tego źródła w <xref:System.Diagnostics.EventLog.WriteEvent%2A> metodzie do zapisu wpisów przy użyciu identyfikatorów zasobów do dziennika zdarzeń. Utwórz inne źródło bez plików zasobów, a następnie użyj tego źródła w <xref:System.Diagnostics.EventLog.WriteEntry%2A> metodzie, aby pisać ciągi bezpośrednio do dziennika zdarzeń przy użyciu tego źródła.  
  
 Zazwyczaj nie wywołujemy metod <xref:System.Diagnostics.EventLogInstaller> klasy z poziomu kodu; są one zwykle wywoływane tylko przez Installutil. exe. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metodę w trakcie procesu instalacji. W razie potrzeby wykonuje kopię zapasową błędów, wywołując <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metodę dla obiektu, który wygenerował wyjątek.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła i nazwę dziennika zdarzeń i dodaje <xref:System.Diagnostics.EventLogInstaller> <xref:System.Configuration.Install.Installer.Installers%2A> do kolekcji.  
  
 [!code-cpp[EventLogInstaller#1](~/samples/snippets/cpp/VS_Snippets_CLR/EventLogInstaller/CPP/eventloginstaller.cpp#1)]
 [!code-csharp[EventLogInstaller#1](~/samples/snippets/csharp/VS_Snippets_CLR/EventLogInstaller/CS/eventloginstaller.cs#1)]
 [!code-vb[EventLogInstaller#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/EventLogInstaller/VB/eventloginstaller.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="Overload:System.Diagnostics.EventLog.CreateEventSource" />
    <related type="Article" href="~/docs/framework/tools/installutil-exe-installer-tool.md">Installutil.exe (Narzędzie instalatora)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogInstaller();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventLogInstaller" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryCount">
      <MemberSignature Language="C#" Value="public int CategoryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CategoryCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CategoryCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryCount : int with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kategorii w pliku zasobów kategorii.</summary>
        <value>Liczba kategorii w pliku zasobów kategorii. Wartość domyślna to zero.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> i, aby pisać zdarzenia ze zlokalizowanymi ciągami kategorii. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Podgląd zdarzeń wyświetla kategorię wpisu zdarzenia, jeśli podasz kategorię podczas pisania zdarzenia. Kategorie dzienników zdarzeń są ciągami zdefiniowanymi w aplikacji, które pomagają filtrować zdarzenia, lub podawać informacje dotyczące zdarzenia. Na przykład aplikacja może definiować oddzielne kategorie dla różnych składników lub różnych operacji.  
  
 Kategorie zdarzeń są opcjonalne; Jeśli aplikacja nie korzysta z <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> kategorii, nie ustawiaj właściwości i. <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>  
  
 Aby uzyskać szczegółowe informacje o definiowaniu komunikatów o zdarzeniach i tworzeniu plików zasobów zdarzeń, zobacz temat "kompilator komunikatów" w dokumentacji [http://msdn.microsoft.com](https://msdn.microsoft.com/)zestawu SDK platformy pod adresem.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwę dziennika zdarzeń i plik zasobów dla zlokalizowanego tekstu zdarzenia.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 W przykładzie kodu jest użyty następujący plik tekstowy komunikatu, wbudowany w bibliotekę zasobów EventLogMsgs. dll. Plik tekstowy komunikatu jest źródłem, z którego tworzony jest plik zasobów wiadomości. Plik tekstowy komunikatu określa identyfikatory zasobów i tekst dla kategorii, komunikat zdarzenia i ciągi wstawiania parametrów.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryCount" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CategoryResourceFile">
      <MemberSignature Language="C#" Value="public string CategoryResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.CategoryResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobów, który zawiera ciągi kategorii dla źródła.</summary>
        <value>Ścieżka pliku zasobów kategorii. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A> i, aby pisać zdarzenia ze zlokalizowanymi ciągami kategorii. <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> Podgląd zdarzeń wyświetla kategorię wpisu zdarzenia w przypadku podania kategorii podczas pisania zdarzenia. Kategorie dzienników zdarzeń są ciągami zdefiniowanymi w aplikacji, które pomagają filtrować zdarzenia lub dostarczają informacje o zdarzeniu. Na przykład aplikacja może mieć oddzielne kategorie dla różnych składników lub różnych operacji.  
  
 Kategorie zdarzeń są opcjonalne; Jeśli aplikacja nie korzysta z <xref:System.Diagnostics.EventLogInstaller.CategoryCount%2A> kategorii, nie ustawiaj właściwości i. <xref:System.Diagnostics.EventLogInstaller.CategoryResourceFile%2A>  
  
 Aby uzyskać szczegółowe informacje o definiowaniu komunikatów o zdarzeniach i tworzeniu plików zasobów zdarzeń, zobacz temat "kompilator komunikatów" w dokumentacji [http://msdn.microsoft.com](https://msdn.microsoft.com/)zestawu SDK platformy pod adresem.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwę dziennika zdarzeń i plik zasobów dla zlokalizowanego tekstu zdarzenia.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 W przykładzie kodu jest użyty następujący plik tekstowy komunikatu, wbudowany w bibliotekę zasobów EventLogMsgs. dll. Plik tekstowy komunikatu jest źródłem, z którego tworzony jest plik zasobów wiadomości. Plik tekstowy komunikatu określa identyfikatory zasobów i tekst dla kategorii, komunikat zdarzenia i ciągi wstawiania parametrów.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLogInstaller.CategoryCount" />
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.CategoryResourceFile" />
        <altmember cref="Overload:System.Diagnostics.EventLog.WriteEvent" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CopyFromComponent (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CopyFromComponent(System::ComponentModel::IComponent ^ component);" />
      <MemberSignature Language="F#" Value="override this.CopyFromComponent : System.ComponentModel.IComponent -&gt; unit" Usage="eventLogInstaller.CopyFromComponent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Do użycia jako szablon <see cref="T:System.Diagnostics.EventLogInstaller" />dla. <see cref="T:System.ComponentModel.IComponent" /></param>
        <summary>Kopiuje wartości <see cref="T:System.Diagnostics.EventLog" /> właściwości składnika, który jest wymagany w czasie instalacji dziennika zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnik określony przez `component` parametr musi być elementem <xref:System.Diagnostics.EventLog>; w przeciwnym razie jest zgłaszany wyjątek.  
  
 Zazwyczaj nie są wywoływane metody <xref:System.Diagnostics.EventLogInstaller> z poziomu kodu; są one zwykle wywoływane tylko przez [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). <xref:System.Diagnostics.EventLogInstaller.CopyFromComponent%2A>jest używany przez Installutil. exe do ustawiania wartości właściwości dla <xref:System.Diagnostics.EventLogInstaller> wartości istniejących. <xref:System.Diagnostics.EventLog>  
  
 Jeśli parametr, który jest przesyłany, jest ciągiem pustym ("") <xref:System.Diagnostics.EventLog.Log%2A> , należy ustawić właściwość na prawidłową wartość przed wykonaniem Instalatora. <xref:System.Diagnostics.EventLog> <xref:System.Diagnostics.EventLog.Log%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Określony składnik nie <see cref="T:System.Diagnostics.EventLog" />jest.  
  
—lub— 
Właściwość <see cref="P:System.Diagnostics.EventLog.Log" /> <see langword="null" /> lub <see cref="P:System.Diagnostics.EventLog.Source" /> określonego składnika ma wartość lub jest pusta.</exception>
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Install (stateSaver As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Install(System::Collections::IDictionary ^ stateSaver);" />
      <MemberSignature Language="F#" Value="override this.Install : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Install stateSaver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver"><see cref="T:System.Collections.IDictionary" /> Służy do zapisywania informacji niezbędnych do wykonania operacji wycofywania lub odinstalowania.</param>
        <summary>Wykonuje instalację i zapisuje informacje dziennika zdarzeń do rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zapisuje informacje dziennika zdarzeń w rejestrze i kojarzy dziennik zdarzeń z dziennikiem określonym <xref:System.Diagnostics.EventLogInstaller.Log%2A> przez właściwość. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Jeśli dziennik jeszcze nie istnieje (i określono Źródło), program <xref:System.Diagnostics.EventLogInstaller.Install%2A> tworzy dziennik i kojarzy z nim nowe źródło.  
  
 Zazwyczaj nie są wywoływane metody <xref:System.Diagnostics.EventLogInstaller> z poziomu kodu; są one zwykle wywoływane tylko przez [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Install%2A> metodę podczas instalacji, aby napisać informacje rejestru, które są skojarzone z instalowanym dziennikiem zdarzeń. Instalacja jest transakcyjna, dlatego jeśli podczas instalacji wystąpi awaria dowolnego składnika projektu instalacji, wszystkie wcześniej zainstalowane składniki zostaną wycofane w Stanach sprzed instalacji. Jest to realizowane przez wywołanie <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metody każdego składnika.  
  
 Służy <xref:System.Diagnostics.EventLogInstaller> do rejestrowania nowego źródła dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> do zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje właściwości konfiguracji istniejącego źródła, aby pasowały do określonych właściwości instalacji. Metoda zgłasza wyjątek, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródła, która jest zarejestrowana dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda pomija rejestrowanie źródła, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródłową, która jest już zarejestrowana dla tego samego dziennika <xref:System.Diagnostics.EventLogInstaller.Log%2A> zdarzeń określonego we właściwości. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Procedura instalacji aplikacji używa <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwości Instalatora projektu do automatycznego przechowywania informacji o składnikach, które zostały już zainstalowane. Informacje o stanie, które są przesyłane do <xref:System.Diagnostics.EventLogInstaller.Install%2A> programu `stateSaver` jako parametr, są stale aktualizowane, gdy narzędzie instaluje każdy <xref:System.Diagnostics.EventLogInstaller>. Zwykle nie jest konieczne, aby kod jawnie modyfikował te informacje o stanie.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">Platforma, której Instalator próbuje użyć, nie jest w systemie Windows NT 4,0 lub nowszym.</exception>
        <exception cref="T:System.ArgumentException">Nazwa określona we <see cref="P:System.Diagnostics.EventLogInstaller.Source" /> właściwości jest już zarejestrowana dla innego dziennika zdarzeń.</exception>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IsEquivalentInstaller">
      <MemberSignature Language="C#" Value="public override bool IsEquivalentInstaller (System.Configuration.Install.ComponentInstaller otherInstaller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsEquivalentInstaller(class System.Configuration.Install.ComponentInstaller otherInstaller) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.IsEquivalentInstaller(System.Configuration.Install.ComponentInstaller)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsEquivalentInstaller (otherInstaller As ComponentInstaller) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsEquivalentInstaller(System::Configuration::Install::ComponentInstaller ^ otherInstaller);" />
      <MemberSignature Language="F#" Value="override this.IsEquivalentInstaller : System.Configuration.Install.ComponentInstaller -&gt; bool" Usage="eventLogInstaller.IsEquivalentInstaller otherInstaller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherInstaller" Type="System.Configuration.Install.ComponentInstaller" />
      </Parameters>
      <Docs>
        <param name="otherInstaller">Instalator do porównania.</param>
        <summary>Określa, czy Instalator i inny określony Instalator odwołują się do tego samego źródła.</summary>
        <returns><see langword="true" />Jeśli ten Instalator i Instalator określony przez <paramref name="otherInstaller" /> parametr zainstalują lub odinstalują to samo źródło; <see langword="false" />w przeciwnym razie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zazwyczaj nie są wywoływane metody <xref:System.Diagnostics.EventLogInstaller> z poziomu kodu; są one zwykle wywoływane tylko przez narzędzie Instalatora (Installutil. exe).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public string Log { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Log" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Log" />
      <MemberSignature Language="VB.NET" Value="Public Property Log As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Log { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Log : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę dziennika, dla którego ma zostać ustawione źródło.</summary>
        <value>Nazwa dziennika. Może to być aplikacja, system lub nazwa dziennika niestandardowego. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości, aby skojarzyć Źródło określone <xref:System.Diagnostics.EventLogInstaller.Source%2A> we właściwości z istniejącym dziennikiem lub nowym dziennikiem na komputerze lokalnym. [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) używa tych informacji do mapowania źródła do dziennika w rejestrze komputera. Aplikacje i usługi powinny zapisywać w dzienniku aplikacji lub dzienniku niestandardowym. Sterowniki urządzeń powinny zapisywać dane w dzienniku systemu.  
  
 Aby zapisać wpisy w dzienniku zdarzeń, należy utworzyć źródło i zarejestrować je w dzienniku zdarzeń. Źródło zdarzenia może zapisywać tylko w jednym dzienniku naraz. Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości w celu zarejestrowania aplikacji w dzienniku zdarzeń jako prawidłowego źródła wpisów. Jeśli nie określisz nazwy dziennika przed uruchomieniem Instalatora, Instalator rejestruje źródło w dzienniku aplikacji. W przypadku określenia nowego źródła i istniejącego dziennika Instalator tworzy nowe źródło zdarzenia i kojarzy je z określonym dziennikiem. W przypadku określenia nowego źródła i nowego dziennika Instalator skojarzy nowe źródło z nowym dziennikiem w rejestrze, ale nie zostanie utworzony, dopóki nie zostanie do niego zapisany pierwszy wpis.  
  
 System operacyjny przechowuje dzienniki zdarzeń jako pliki. Jeśli używasz <xref:System.Diagnostics.EventLogInstaller> <xref:System.Diagnostics.EventLog.CreateEventSource%2A> lub metoda tworzenia nowego dziennika zdarzeń, skojarzony plik jest przechowywany w katalogu%SystemRoot%\System32\Config na określonym komputerze. Nazwa pliku jest ustawiana przez dołączenie pierwszych 8 znaków <xref:System.Diagnostics.EventLogInstaller.Log%2A> właściwości z rozszerzeniem nazwy pliku ". evt".  
  
 Służy <xref:System.Diagnostics.EventLogInstaller> do rejestrowania nowego źródła dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> do zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje właściwości konfiguracji istniejącego źródła, aby pasowały do określonych właściwości instalacji. Metoda zgłasza wyjątek, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródła, która jest zarejestrowana dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda nie rejestruje źródła, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródłową, która jest już zarejestrowana dla tego samego dziennika <xref:System.Diagnostics.EventLogInstaller.Log%2A> zdarzeń określonego we właściwości. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Aby uzyskać bardziej szczegółowe informacje na temat zachowań dzienników i źródeł zdarzeń, zobacz <xref:System.Diagnostics.EventLog> dokumentację klasy <xref:System.Diagnostics.EventLog.Log%2A> dla i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Log" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="MessageResourceFile">
      <MemberSignature Language="C#" Value="public string MessageResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MessageResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MessageResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MessageResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.MessageResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobów, który zawiera ciągi formatowania komunikatu dla źródła.</summary>
        <value>Ścieżka pliku zasobów wiadomości. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> , aby skonfigurować źródło dziennika zdarzeń w celu zapisywania zlokalizowanych komunikatów zdarzeń. Komunikaty zdarzeń to ciągi zdefiniowane przez aplikację, które opisują zdarzenie dla użytkownika.  
  
 Aplikacja może zapisywać wpisy dziennika zdarzeń przy użyciu identyfikatorów zasobów. Identyfikator zasobu indeksuje komunikat znajdujący się w <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A>. Podgląd zdarzeń używa identyfikatora zasobu do znajdowania i wyświetlania odpowiedniego ciągu z zlokalizowanego pliku zasobów na podstawie bieżących ustawień języka.  
  
 Źródło zdarzenia musi być skonfigurowane do zapisywania zlokalizowanych wpisów lub do pisania ciągów bezpośrednich. Użyj metody <xref:System.Diagnostics.EventLog.WriteEvent%2A> , aby zapisać zlokalizowane wpisy dla źródła skonfigurowanego przy użyciu pliku zasobów wiadomości.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio, zamiast używać identyfikatora zasobu w zlokalizowanym pliku zasobów, nie ustawiaj <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości.  
  
 <xref:System.Diagnostics.EventLog.MachineName%2A> Jeśli właściwość nie jest identyfikatorem komputera lokalnego ("."), .NET Framework zakłada, że plik zasobów znajduje się na komputerze zdalnym. \> \\ \\ \\\>\\Jeśli wartość właściwościzawieraliterędysku,zakładasię,żeplikzasobówznajdujesięna<MachineName<dysku$Share(naprzykład\Serwer<xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> \c $). Jeśli wartość zawiera ciąg% główny_katalog_systemowy%, zakłada się, że plik \\zasobów znajduje się na \\< MachineName\>\Admin $ Share (na przykład \\\server\admin $).  
  
 Aby uzyskać szczegółowe informacje o definiowaniu komunikatów o zdarzeniach i tworzeniu plików zasobów zdarzeń, zobacz temat "kompilator komunikatów" w dokumentacji [http://msdn.microsoft.com](https://msdn.microsoft.com/)zestawu SDK platformy pod adresem.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwę dziennika zdarzeń i plik zasobów dla zlokalizowanego tekstu zdarzenia.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 W przykładzie kodu jest użyty następujący plik tekstowy komunikatu, wbudowany w bibliotekę zasobów EventLogMsgs. dll. Plik tekstowy komunikatu jest źródłem, z którego tworzony jest plik zasobów wiadomości. Plik tekstowy komunikatu określa identyfikatory zasobów i tekst dla kategorii, komunikat zdarzenia i ciągi wstawiania parametrów.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.MessageResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="ParameterResourceFile">
      <MemberSignature Language="C#" Value="public string ParameterResourceFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterResourceFile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberSignature Language="VB.NET" Value="Public Property ParameterResourceFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ParameterResourceFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ParameterResourceFile : string with get, set" Usage="System.Diagnostics.EventLogInstaller.ParameterResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.FileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ścieżkę pliku zasobów, który zawiera ciągi parametrów komunikatów dla źródła.</summary>
        <value>Ścieżka pliku zasobów parametru komunikatu. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj właściwości <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> , aby skonfigurować źródło dziennika zdarzeń w celu zapisywania zlokalizowanych komunikatów zdarzeń z wstawionymi ciągami parametrów. Każdy zlokalizowany komunikat zdarzenia określony we <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> właściwości może zawierać symbole zastępcze dla ciągów wstawiania. Symbole zastępcze służą do określania pozycji i identyfikatora zasobu dla ciągu niezależnego od języka w komunikacie zdarzenia. Podgląd zdarzeń zastępuje symbole zastępcze odpowiednimi ciągami z <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> i formatuje komunikat dziennika zdarzeń dla zlokalizowanego wpisu zdarzenia.  
  
 Na przykład następująca sekcja pliku tekstowego komunikatu definiuje ciąg z symbolem zastępczym parametru:  
  
```  
  
MessageId = 1501  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_STARTING  
Language=English  
Component %%6050 is starting.  
.  
```  
  
 W pliku zasobu parametru ciąg wstawiania musi być zdefiniowany przy użyciu identyfikatora zasobu odpowiadającego symbolowi zastępczemu, jak pokazano poniżej:  
  
```  
MessageId = 6050  
Severity = Success  
Facility = Application  
SymbolicName = COMPONENT_NAME_MSGID  
Language=English  
TRIGGER.EXE  
.  
```  
  
 Źródło zdarzenia musi być skonfigurowane do zapisywania zlokalizowanych wpisów lub do pisania ciągów bezpośrednich. Użyj metody <xref:System.Diagnostics.EventLog.WriteEvent%2A> , aby zapisać zlokalizowane wpisy dla źródła skonfigurowanego przy użyciu pliku zasobów wiadomości.  
  
 Jeśli aplikacja zapisuje ciągi komunikatów zdarzeń bezpośrednio w dzienniku zdarzeń lub jeśli <xref:System.Diagnostics.EventLogInstaller.MessageResourceFile%2A> nie zawiera komunikatów z symbolami zastępczymi wstawiania parametrów, nie <xref:System.Diagnostics.EventLogInstaller.ParameterResourceFile%2A> ustawiaj właściwości.  
  
 Aby uzyskać szczegółowe informacje o definiowaniu komunikatów o zdarzeniach i tworzeniu plików zasobów zdarzeń, zobacz temat "kompilator komunikatów" w dokumentacji [http://msdn.microsoft.com](https://msdn.microsoft.com/)zestawu SDK platformy pod adresem.  
  
   
  
## Examples  
 Poniższy przykład kodu ustawia właściwości instalacji dla nowego źródła zdarzenia. Przykładowy kod ustawia nazwę źródła zdarzenia, nazwę dziennika zdarzeń i plik zasobów dla zlokalizowanego tekstu zdarzenia.  
  
 [!code-cpp[EventLogInstaller_Resources#1](~/samples/snippets/cpp/VS_Snippets_CLR/eventlogInstaller_Resources/CPP/source.cpp#1)]
 [!code-csharp[EventLogInstaller_Resources#1](~/samples/snippets/csharp/VS_Snippets_CLR/eventlogInstaller_Resources/CS/source.cs#1)]
 [!code-vb[EventLogInstaller_Resources#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventlogInstaller_Resources/VB/source.vb#1)]  
  
 W przykładzie kodu jest użyty następujący plik tekstowy komunikatu, wbudowany w bibliotekę zasobów EventLogMsgs. dll. Plik tekstowy komunikatu jest źródłem, z którego tworzony jest plik zasobów wiadomości. Plik tekstowy komunikatu określa identyfikatory zasobów i tekst dla kategorii, komunikat zdarzenia i ciągi wstawiania parametrów. W przypadku komunikatu zdefiniowanego dla identyfikatora zasobu 1004 jest stosowany symbol zastępczy dla ciągu parametru zdefiniowanego dla identyfikatora zasobu 5002.  
  
```  
; // EventLogMsgs.mc  
; // ********************************************************  
  
; // Use the following commands to build this file:  
  
; //   mc -s EventLogMsgs.mc  
; //   rc EventLogMsgs.rc  
; //   link /DLL /SUBSYSTEM:WINDOWS /NOENTRY /MACHINE:x86 EventLogMsgs.Res   
; // ********************************************************  
  
; // - Event categories -  
; // Categories must be numbered consecutively starting at 1.  
; // ********************************************************  
  
MessageId=0x1  
Severity=Success  
SymbolicName=INSTALL_CATEGORY  
Language=English  
Installation  
.  
  
MessageId=0x2  
Severity=Success  
SymbolicName=QUERY_CATEGORY  
Language=English  
Database Query  
.  
  
MessageId=0x3  
Severity=Success  
SymbolicName=REFRESH_CATEGORY  
Language=English  
Data Refresh  
.  
  
; // - Event messages -  
; // *********************************  
  
MessageId = 1000  
Severity = Success  
Facility = Application  
SymbolicName = AUDIT_SUCCESS_MESSAGE_ID_1000  
Language=English  
My application message text, in English, for message id 1000, called from %1.  
.  
  
MessageId = 1001  
Severity = Warning  
Facility = Application  
SymbolicName = AUDIT_FAILED_MESSAGE_ID_1001  
Language=English  
My application message text, in English, for message id 1001, called from %1.  
.  
  
MessageId = 1002  
Severity = Success  
Facility = Application  
SymbolicName = GENERIC_INFO_MESSAGE_ID_1002  
Language=English  
My generic information message in English, for message id 1002.  
.  
  
MessageId = 1003  
Severity = Warning  
Facility = Application  
SymbolicName = GENERIC_WARNING_MESSAGE_ID_1003  
Language=English  
My generic warning message in English, for message id 1003, called from %1.  
.  
  
MessageId = 1004  
Severity = Success  
Facility = Application  
SymbolicName = UPDATE_CYCLE_COMPLETE_MESSAGE_ID_1004  
Language=English  
The update cycle is complete for %%5002.  
.  
  
MessageId = 1005  
Severity = Warning  
Facility = Application  
SymbolicName = SERVER_CONNECTION_DOWN_MESSAGE_ID_1005  
Language=English  
The refresh operation did not complete because the connection to server %1 could not be established.  
.  
  
; // - Event log display name -  
; // ********************************************************  
  
MessageId = 5001  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_DISPLAY_NAME_MSGID  
Language=English  
Sample Event Log  
.  
  
; // - Event message parameters -  
; //   Language independent insertion strings  
; // ********************************************************  
  
MessageId = 5002  
Severity = Success  
Facility = Application  
SymbolicName = EVENT_LOG_SERVICE_NAME_MSGID  
Language=English  
SVC_UPDATE.EXE  
.  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventSourceCreationData.ParameterResourceFile" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Rollback (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Rollback(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Rollback : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Rollback savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawiera stan sprzed instalacji komputera.</param>
        <summary>Przywraca komputer do stanu sprzed instalacji przez wycofanie informacji dziennika zdarzeń, że procedura instalacji zapisała w rejestrze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda unwykonuje skutki <xref:System.Diagnostics.EventLogInstaller.Install%2A>metody. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>jest wywoływana, jeśli instalacja któregokolwiek składnika w projekcie instalacji zakończy się niepowodzeniem. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda tworzy lub ustawia właściwości dziennika zdarzeń i źródła zdarzeń. <xref:System.Diagnostics.EventLogInstaller.Rollback%2A>usuwa dziennik zdarzeń i źródło lub resetuje właściwości istniejącego źródła do jego wartości sprzed instalacji.  
  
 Zazwyczaj nie są wywoływane metody <xref:System.Diagnostics.EventLogInstaller> z poziomu kodu; są one zwykle wywoływane tylko przez [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md). Narzędzie wywołuje <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> metodę, gdy nie można zainstalować tego lub innego składnika, aby cofnąć zmiany wprowadzone przez proces instalacji.  
  
 Procedura instalacji aplikacji używa <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwości Instalatora projektu do automatycznego przechowywania informacji o składnikach, które zostały już zainstalowane. Informacje o stanie, które są przenoszone <xref:System.Diagnostics.EventLogInstaller.Rollback%2A> do `savedState` jako parametr, są stale aktualizowane, ponieważ narzędzie wycofuje każdy <xref:System.Diagnostics.EventLogInstaller>z nich. Zwykle nie jest konieczne, aby kod jawnie modyfikował te informacje o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="System.Diagnostics.EventLogInstaller.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę źródła do zarejestrowania w dzienniku.</summary>
        <value>Nazwa, która ma zostać zarejestrowana w dzienniku zdarzeń jako źródło wpisów. Wartością domyślną jest ciąg pusty ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło zdarzenia wskazuje, co rejestruje zdarzenie. Często jest to nazwa aplikacji lub nazwa składnika w ramach dużej aplikacji.  
  
 Instalator używa wartości <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości w celu zarejestrowania aplikacji w dzienniku zdarzeń jako prawidłowego źródła wpisów. Nowa nazwa źródła nie może być zgodna z nazwą istniejącego źródła lub nazwą istniejącego dziennika zdarzeń. Każde źródło może zapisywać w danym momencie tylko w jednym dzienniku zdarzeń; Jednak aplikacja może zapisywać w wielu dziennikach zdarzeń przy użyciu wielu źródeł. Na przykład aplikacja może wymagać wielu źródeł skonfigurowanych dla różnych dzienników zdarzeń lub różnych plików zasobów.  
  
 Aplikacje i usługi powinny zapisywać w dzienniku aplikacji lub dzienniku niestandardowym. Sterowniki urządzeń powinny zapisywać dane w dzienniku systemu. Jeśli nie określisz nazwy dziennika przed uruchomieniem Instalatora, Instalator rejestruje źródło w dzienniku aplikacji. Jeśli określisz nazwę dziennika, który nie istnieje, system rejestruje <xref:System.Diagnostics.EventLogInstaller.Source%2A> do tego dziennika, ale dziennik nie zostanie utworzony, dopóki nie zostanie do niego zapisany pierwszy wpis.  
  
 Służy <xref:System.Diagnostics.EventLogInstaller> do rejestrowania nowego źródła dla nowego lub istniejącego dziennika zdarzeń; nie należy używać <xref:System.Diagnostics.EventLogInstaller> do zmiany istniejącego źródła. <xref:System.Diagnostics.EventLogInstaller> Klasa nie modyfikuje właściwości konfiguracji istniejącego źródła, aby pasowały do określonych właściwości instalacji. Metoda zgłasza wyjątek, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródła, która jest zarejestrowana dla innego dziennika zdarzeń na komputerze. <xref:System.Diagnostics.EventLogInstaller.Install%2A> Metoda nie rejestruje źródła, <xref:System.Diagnostics.EventLogInstaller.Source%2A> Jeśli właściwość jest zgodna z nazwą źródłową, która jest już zarejestrowana dla tego samego dziennika <xref:System.Diagnostics.EventLogInstaller.Log%2A> zdarzeń określonego we właściwości. <xref:System.Diagnostics.EventLogInstaller.Install%2A>  
  
 Aby uzyskać bardziej szczegółowe informacje na temat zachowań dzienników i źródeł zdarzeń, zobacz <xref:System.Diagnostics.EventLog> dokumentację klasy <xref:System.Diagnostics.EventLog.Log%2A> dla i <xref:System.Diagnostics.EventLog.Source%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="Uninstall">
      <MemberSignature Language="C#" Value="public override void Uninstall (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Uninstall(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogInstaller.Uninstall(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Uninstall (savedState As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Uninstall(System::Collections::IDictionary ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.Uninstall : System.Collections.IDictionary -&gt; unit" Usage="eventLogInstaller.Uninstall savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Collections.IDictionary" /> Zawiera stan sprzed instalacji komputera.</param>
        <summary>Usuwa instalację, usuwając informacje dziennika zdarzeń z rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventLogInstaller.Log%2A> `Remove` <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> Jeśli wartość <xref:System.Diagnostics.EventLogInstaller.Source%2A> właściwości to, Metoda usuwa źródło i skojarzony dziennik, który został utworzony przez Instalatora, jeśli właściwości i określą Tworzenie nowego dziennika zdarzeń i źródła. <xref:System.Diagnostics.EventLogInstaller.UninstallAction%2A>  
  
 Zazwyczaj nie są wywoływane metody <xref:System.Diagnostics.EventLogInstaller> z poziomu kodu; są one zwykle wywoływane tylko przez [Installutil. exe (Narzędzie instalatora)](~/docs/framework/tools/installutil-exe-installer-tool.md) w trybie odinstalowywania. Narzędzie automatycznie wywołuje <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> metodę w celu przywrócenia części systemu, na które miało wpływ instalacja, do stanu sprzed instalacji. Obejmuje to usuwanie informacji rejestru skojarzonych z odinstalowanym dziennikiem zdarzeń.  
  
 Procedura odinstalowywania aplikacji używa <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=nameWithType> właściwości Instalatora projektu do automatycznego przechowywania informacji o składnikach, które zostały już odinstalowane. Informacje o stanie, które są przesyłane do <xref:System.Diagnostics.EventLogInstaller.Uninstall%2A> programu `savedState` jako parametr, są stale aktualizowane, gdy narzędzie Odinstalowuje każdy z nich <xref:System.Diagnostics.EventLogInstaller>. Zwykle nie jest konieczne, aby kod jawnie modyfikował te informacje o stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.EventLogInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="UninstallAction">
      <MemberSignature Language="C#" Value="public System.Configuration.Install.UninstallAction UninstallAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Install.UninstallAction UninstallAction" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UninstallAction As UninstallAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Install::UninstallAction UninstallAction { System::Configuration::Install::UninstallAction get(); void set(System::Configuration::Install::UninstallAction value); };" />
      <MemberSignature Language="F#" Value="member this.UninstallAction : System.Configuration.Install.UninstallAction with get, set" Usage="System.Diagnostics.EventLogInstaller.UninstallAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.Install</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.Install.UninstallAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy <see href="https://docs.microsoft.com/dotnet/framework/tools/installutil-exe-installer-tool">Installutil. exe (Narzędzie instalatora)</see> powinien usunąć dziennik zdarzeń lub pozostawić go w stanie zainstalowanym w czasie dezinstalacji.</summary>
        <value>Jedna z <see cref="T:System.Configuration.Install.UninstallAction" /> wartości wskazujących stan, w którym należy pozostawić dziennik zdarzeń <see cref="T:System.Diagnostics.EventLog" /> podczas odinstalowywania. Wartość domyślna to <see langword="Remove" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Podczas instalowania dziennika zdarzeń można opcjonalnie połączyć go z istniejącym dziennikiem. W takim przypadku należy zdecydować, czy dziennik ma powrócić do stanu sprzed instalacji, czy pozostaje w bieżącym stanie po instalacji. Jeśli wybierzesz opcję zwrócenia dziennika zdarzeń do stanu sprzed instalacji, zmiany wpisów dziennika zdarzeń podczas instalacji nie zostaną przywrócone. Można resetować tylko właściwości dziennika zdarzeń, które są skojarzone z <xref:System.Diagnostics.EventLogInstaller> do ich wartości sprzed instalacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><see cref="P:System.Diagnostics.EventLogInstaller.UninstallAction" />zawiera nieprawidłową wartość. Jedyne prawidłowe wartości tej właściwości <see langword="Remove" /> to i. <see langword="NoAction" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
