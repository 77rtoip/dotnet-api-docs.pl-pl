<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef7cea92fac30ff5b18e766889b1d3938d0a1eff" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69075364" /></Metadata><TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera zestaw metod i właściwości, które umożliwiają aplikacjom śledzenie wykonywania kodu i kojarzenie komunikatów śledzenia ze źródłem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource> Klasa jest używana przez aplikacje do tworzenia śladów, które mogą być skojarzone z aplikacją. <xref:System.Diagnostics.TraceSource>oferuje metody śledzenia, które umożliwiają łatwe śledzenie zdarzeń, danych śledzenia i wystawianie śladów informacyjnych. Dane wyjściowe śledzenia <xref:System.Diagnostics.TraceSource> z mogą być kontrolowane przez ustawienia pliku konfiguracji. Plik konfiguracji znajduje się w folderze z plikiem wykonywalnym aplikacji i ma nazwę aplikacji z dodaniem rozszerzenia nazwy pliku. config. Na przykład nazwa pliku konfiguracji programu TraceSourceSample. exe to TraceSourceSample. exe. config. Plik konfiguracji może służyć do określenia, gdzie mają być wysyłane informacje o śledzeniu i jakie poziomy działania mają być śledzone. Poniższy przykład przedstawia zawartość przykładowego pliku konfiguracji aplikacji.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <xref:System.Diagnostics.TraceSource> Klasa jest identyfikowana przez nazwę źródła, zazwyczaj nazwę aplikacji.  Komunikaty śledzenia pochodzące z określonego składnika mogą być inicjowane przez określone źródło śledzenia, co pozwala łatwo zidentyfikować wszystkie komunikaty pochodzące z tego składnika.  
  
 <xref:System.Diagnostics.TraceSource>definiuje metody śledzenia, ale w rzeczywistości nie udostępnia żadnego mechanizmu do generowania i przechowywania danych śledzenia. Dane śledzenia są generowane przez detektory śledzenia, które są wtyczkami, które mogą być ładowane przez źródła śledzenia.  
  
> [!NOTE]
>  Nie należy wywoływać metod śledzenia podczas finalizowania. Wykonanie tej operacji może spowodować <xref:System.ObjectDisposedException> zgłoszenie.  
  
 Obiekt docelowy śledzenia można dostosować, dodając lub usuwając <xref:System.Diagnostics.TraceListener> wystąpienia do lub z kolekcji przechowywanej <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> we właściwości. Domyślnie dane wyjściowe śledzenia są tworzone przy użyciu wystąpienia <xref:System.Diagnostics.DefaultTraceListener> klasy. W powyższym przykładzie pliku konfiguracji zademonstrowano usunięcie <xref:System.Diagnostics.DefaultTraceListener> i dodanie elementu <xref:System.Diagnostics.ConsoleTraceListener> do tworzenia wyników śledzenia dla źródła śledzenia. Aby uzyskać więcej informacji, [ &lt;zobacz&gt; detektory](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) i [ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Dodanie odbiornika śledzenia do <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji może spowodować zgłoszenie wyjątku podczas śledzenia, jeśli zasób używany przez odbiornik śledzenia jest niedostępny. Warunki i zgłoszone wyjątki zależą od odbiornika śledzenia i nie mogą być wyliczane w tym temacie. Przydatne może być umieszczenie <xref:System.Diagnostics.TraceSource> wywołań metod w blokach w `try` / `catch` celu wykrywania i obsługi dowolnego wyjątku od detektorów śledzenia.  
  
 <xref:System.Diagnostics.SourceSwitch> Klasa zapewnia metodę umożliwiającą dynamiczne sterowanie danymi wyjściowymi śledzenia. Powyższy przykład pliku konfiguracji pokazuje, jak można wyłączyć śledzenie ze źródła śledzenia i kontrolować poziom, na którym ma nastąpić śledzenie.  Możesz zmodyfikować wartość przełącznika źródłowego bez ponownego kompilowania aplikacji. Aby uzyskać informacje na temat korzystania z pliku konfiguracji w celu ustawienia przełącznika <xref:System.Diagnostics.Switch> , [Zobacz i How to: Tworzenie, inicjowanie i konfigurowanie przełączników](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)śledzenia.  
  
> [!NOTE]
>  Jeśli zmodyfikujesz plik konfiguracji podczas wykonywania aplikacji, aplikacja musi zostać zatrzymana i uruchomiona ponownie lub <xref:System.Diagnostics.Trace.Refresh%2A> Metoda musi zostać wywołana, aby nowe ustawienia zaczęły obowiązywać.  
  
 <xref:System.Diagnostics.TraceEventType> Wyliczenie służy do definiowania typu zdarzenia komunikatu śledzenia. Filtry śledzenia wykorzystują <xref:System.Diagnostics.TraceEventType> do określenia, czy odbiornik śledzenia powinien generować komunikat śledzenia.  
  
 Detektory śledzenia mogą opcjonalnie mieć dodatkową warstwę filtrowania przez filtr śledzenia.  Jeśli odbiornik śledzenia ma skojarzony filtr, odbiornik wywołuje <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> metodę dla tego filtru, aby określić, czy generować informacje o śledzeniu.  
  
 Detektory śledzenia używają <xref:System.Diagnostics.Trace> wartości właściwości <xref:System.Diagnostics.Trace.Indent%2A>klasy, <xref:System.Diagnostics.Trace.IndentSize%2A>i <xref:System.Diagnostics.Trace.AutoFlush%2A> do formatowania danych wyjściowych śledzenia. Można użyć atrybutów pliku konfiguracji <xref:System.Diagnostics.Trace.Indent%2A>, aby ustawić właściwości, <xref:System.Diagnostics.Trace.IndentSize%2A>i. <xref:System.Diagnostics.Trace.AutoFlush%2A> Poniższy przykład ustawia <xref:System.Diagnostics.Trace.AutoFlush%2A> właściwość na `false` i <xref:System.Diagnostics.Trace.IndentSize%2A> właściwość na 3.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource> klasy do przekazywania śladów do odbiorników.  Przykład ilustruje również użycie przełącznika i filtru.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">Schemat ustawień śledzenia i debugowania</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła (zazwyczaj nazwa aplikacji).</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.TraceSource" /> klasy, używając określonej nazwy źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródła służy do identyfikowania śladów. Jest on używany przez, <xref:System.Diagnostics.SourceFilter> aby określić, czy odbiornik śledzenia ma generować ślad. Zalecaną metodą jest użycie nazwy aplikacji dla nazwy źródłowej.  
  
> [!NOTE]
>  Nie jest konieczne tworzenie nowego <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utwórz jedno <xref:System.Diagnostics.TraceSource> wystąpienie i użyj go dla wszystkich żądań śledzenia dla aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.%23ctor%2A> konstruktora do utworzenia nowego <xref:System.Diagnostics.TraceSource> obiektu. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła, zazwyczaj nazwa aplikacji.</param>
        <param name="defaultLevel">Bitowa kombinacja wartości wyliczenia, która określa domyślny poziom źródła, który ma być śledzony.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.TraceSource" /> klasy, używając określonej nazwy dla źródła i domyślnego poziomu źródła, w którym jest wykonywane śledzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródła służy do identyfikowania śladów. Może być używany przez, <xref:System.Diagnostics.SourceSwitch> aby określić, czy śledzenie ma być wykonywane, i <xref:System.Diagnostics.SourceFilter> przez, aby określić, czy ma zostać wygenerowane śledzenie. Domyślny poziom źródła jest używany przez <xref:System.Diagnostics.EventTypeFilter> program, aby określić, czy śledzenie ma być wykonywane na podstawie poziomu źródła wiadomości do śledzenia.  
  
> [!NOTE]
>  Nie jest konieczne tworzenie nowego <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utwórz jedno <xref:System.Diagnostics.TraceSource> wystąpienie i użyj go dla wszystkich żądań śledzenia dla aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="name" />jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera atrybuty przełącznika niestandardowego zdefiniowane w pliku konfiguracyjnym aplikacji.</summary>
        <value><see cref="T:System.Collections.Specialized.StringDictionary" /> Zawierający atrybuty niestandardowe dla przełącznika śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Attributes%2A> Właściwość identyfikuje atrybuty niestandardowe, do których odwołuje się plik konfiguracyjny aplikacji. Atrybuty niestandardowe, do których nie istnieją odwołania, nie są wyliczane. Klasy dziedziczące z <xref:System.Diagnostics.TraceSource> klasy mogą dodawać atrybuty niestandardowe przez <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> zastąpienie metody i zwrócenie tablicy ciągów nazw atrybutów niestandardowych.  
  
 Poniżej znajduje się przykład elementu źródła śledzenia określającego atrybut `SecondTraceSourceAttribute`niestandardowy:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak wyświetlić atrybuty niestandardowe dla <xref:System.Diagnostics.TraceSource>.  Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka wszystkie detektory śledzenia w kolekcji detektorów śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę każdego odbiornika śledzenia w kolekcji. <xref:System.Diagnostics.TraceSource.Listeners%2A> <xref:System.Diagnostics.TraceSource.Close%2A> <xref:System.Diagnostics.TraceListener.Close%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Diagnostics.TraceSource.Close%2A> jak można użyć metody, aby zamknąć wszystkie odbiorniki w kolekcji. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obsługi kodu niezarządzanego. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Skojarzone Wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opróżnia wszystkie detektory śledzenia w kolekcji detektorów śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę każdego odbiornika śledzenia w kolekcji. <xref:System.Diagnostics.TraceSource.Listeners%2A> <xref:System.Diagnostics.TraceSource.Flush%2A> <xref:System.Diagnostics.TraceListener.Flush%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Diagnostics.TraceSource.Flush%2A> jak można użyć metody, aby opróżnić wszystkie detektory w kolekcji. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera atrybuty niestandardowe obsługiwane przez źródło śledzenia.</summary>
        <returns>Tablica ciągów, która nazywa atrybuty niestandardowe obsługiwane przez źródło śledzenia, lub <see langword="null" /> Jeśli nie ma żadnych atrybutów niestandardowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> funkcji Returns `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje przesłonięcie <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> metody w celu zidentyfikowania atrybutów niestandardowych `MyTraceSource` dla klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>W przypadku dziedziczenia z <see cref="T:System.Diagnostics.TraceSource" /> klasy lub klasy pochodnej można <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> zastąpić metodę, aby zapewnić atrybuty niestandardowe klasy.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję detektorów śledzenia dla źródła śledzenia.</summary>
        <value>A <see cref="T:System.Diagnostics.TraceListenerCollection" /> , który zawiera aktywne detektory śledzenia skojarzone ze źródłem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskiwania dostępu i wykonywania operacji na odbiornikach śledzenia.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obsługi kodu niezarządzanego. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Skojarzone Wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę źródła śledzenia.</summary>
        <value>Nazwa źródła śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa jest ustawiana przez `name` parametr przesłany do konstruktora. Można odwołać się do źródła śledzenia przy użyciu `name` atrybutu w pliku konfiguracji.  
  
 Następujący element XML zawiera odwołanie do źródła śledzenia w pliku konfiguracyjnym.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak nazwać Źródło śledzenia w wywołaniu konstruktora.  Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość przełącznika źródłowego.</summary>
        <value><see cref="T:System.Diagnostics.SourceSwitch" /> Obiekt reprezentujący wartość przełącznika źródłowego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A> Właściwość umożliwia filtrowanie komunikatów, zanim źródło śledzenia wywoła odbiorniki.  
  
 Przełącznik służy do sprawdzania, czy wywołania śledzenia powinny być generowane czy ignorowane. Każda metoda śledzenia wywołuje <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metodę, <xref:System.Diagnostics.SourceSwitch> aby określić, czy kontynuować śledzenie. Jeśli wywołanie zwraca `true`, detektory są wywoływane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.TraceSource.Switch" />jest ustawiony na <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do obsługi kodu niezarządzanego. Wartość żądania: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Skojarzone Wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje dane śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, która określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <param name="data">Dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu zdarzenia, identyfikatora zdarzenia i danych śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metoda, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> podobnie jak metoda, jest przeznaczona dla zautomatyzowanych narzędzi, ale umożliwia również Dołączanie dodatkowego obiektu, takiego jak wystąpienie wyjątku, do śledzenia.  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metoda <xref:System.Diagnostics.TraceSource.Switch%2A> wywołuje metodę obiektu<xref:System.Diagnostics.SourceSwitch> zwróconego przez właściwość. <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, wywołuje<xref:System.Diagnostics.TraceSource.TraceData%2A> odpowiednią<xref:System.Diagnostics.TraceListener.TraceData%2A> metodę dla wszystkich odbiorników. W przeciwnym razie zwraca bez wywoływania metod odbiorników. <xref:System.Diagnostics.TraceSource.TraceData%2A>  
  
> [!NOTE]
>  Obiekt jest ograniczony do wartości maksymalnej `id` 65 535. <xref:System.Diagnostics.EventLogTraceListener> Jeśli określona <xref:System.Diagnostics.EventLogTraceListener> wartość jest większa niż 65 535, obiekt używa 65 535. `id`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> metody do filtrowania i przesyłania dalej komunikatów śledzenia do odbiorników. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, która określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <param name="data">Tablica obiektów zawierająca dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu zdarzenia, identyfikatora zdarzenia i tablicy danych śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda, taka <xref:System.Diagnostics.TraceSource.TraceEvent%2A> jak metoda, jest przeznaczona dla zautomatyzowanych narzędzi, ale umożliwia również dołączanie dodatkowych obiektów, takich jak wystąpienie wyjątku i ślad stosu, do śledzenia. <xref:System.Diagnostics.TraceSource.TraceData%2A>  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metoda <xref:System.Diagnostics.TraceSource.Switch%2A> wywołuje metodę obiektu<xref:System.Diagnostics.SourceSwitch> zwróconego przez właściwość. <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, wywołuje<xref:System.Diagnostics.TraceSource.TraceData%2A> odpowiednią<xref:System.Diagnostics.TraceListener.TraceData%2A> metodę dla wszystkich odbiorników. W przeciwnym razie zwraca bez wywoływania metod odbiorników. <xref:System.Diagnostics.TraceSource.TraceData%2A>  
  
> [!NOTE]
>  Obiekt jest ograniczony do wartości maksymalnej `id` 65 535. <xref:System.Diagnostics.EventLogTraceListener> Jeśli określona <xref:System.Diagnostics.EventLogTraceListener> wartość jest większa niż 65 535, obiekt używa 65 535. `id`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat zdarzenia śledzenia do odbiorników śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, która określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu zdarzenia i identyfikatora zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład Narzędzie monitorujące może powiadomić administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda <xref:System.Diagnostics.TraceSource.Switch%2A> wywołuje metodę obiektu<xref:System.Diagnostics.SourceSwitch> zwróconego przez właściwość. <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, wywołuje<xref:System.Diagnostics.TraceSource.TraceEvent%2A> odpowiednią<xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodę każdego odbiornika. W przeciwnym razie zwraca bez wywoływania metod odbiorników. <xref:System.Diagnostics.TraceSource.TraceEvent%2A>  
  
 Zawartość śledzenia jest specyficzna dla odbiornika. Jeśli metoda nie zostanie zastąpiona przez implementację odbiornika, domyślną wartością wyjściową jest nazwa źródła śledzenia, jego tożsamość liczbowa i typ zdarzenia.  Dodatkowa zawartość śledzenia jest zależna od wartości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> właściwości odbiornika.  
  
> [!NOTE]
>  Obiekt jest ograniczony do wartości maksymalnej `id` 65 535. <xref:System.Diagnostics.EventLogTraceListener> Jeśli określona <xref:System.Diagnostics.EventLogTraceListener> wartość jest większa niż 65 535, używa 65 535. `id`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazania zdarzenia śledzenia do detektorów. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, która określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisu.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu zdarzenia, identyfikatora zdarzenia i komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład Narzędzie monitorujące może powiadomić administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda <xref:System.Diagnostics.TraceSource.Switch%2A> wywołuje metodę obiektu<xref:System.Diagnostics.SourceSwitch> zwróconego przez właściwość. <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, wywołuje<xref:System.Diagnostics.TraceSource.TraceEvent%2A> odpowiednią<xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodę każdego odbiornika. W przeciwnym razie zwraca bez wywoływania metod odbiorników. <xref:System.Diagnostics.TraceSource.TraceEvent%2A>  
  
 Zawartość śledzenia jest specyficzna dla odbiornika. Jeśli metoda nie zostanie zastąpiona przez implementację odbiornika, domyślną wartością wyjściową jest nazwa źródła śledzenia, jego tożsamości liczbowej, typu zdarzenia i wiadomości.  Dodatkowa zawartość śledzenia jest zależna od wartości <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> właściwości odbiornika.  
  
> [!NOTE]
>  Obiekt jest ograniczony do wartości maksymalnej `id` 65 535. <xref:System.Diagnostics.EventLogTraceListener> Jeśli określona <xref:System.Diagnostics.EventLogTraceListener> wartość jest większa niż 65 535, obiekt używa 65 535. `id`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazania zdarzenia śledzenia do detektorów. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, która określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <param name="format">Ciąg formatu złożonego, który zawiera tekst, który jest przemieszany do zera lub więcej elementów formatu, które odpowiadają obiektom w <paramref name="args" /> tablicy.</param>
        <param name="args"><see langword="object" /> Tablica zawierająca zero lub więcej obiektów do sformatowania.</param>
        <summary>Zapisuje zdarzenie śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu zdarzenia, identyfikatora zdarzenia i tablicy i formatu argumentu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na `format` temat parametru, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład Narzędzie monitorujące może powiadomić administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda <xref:System.Diagnostics.TraceSource.Switch%2A> wywołuje metodę obiektu<xref:System.Diagnostics.SourceSwitch> zwróconego przez właściwość. <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, wywołuje<xref:System.Diagnostics.TraceSource.TraceEvent%2A> odpowiednią<xref:System.Diagnostics.TraceListener.TraceEvent%2A> metodę każdego odbiornika. W przeciwnym razie zwraca bez wywoływania metod odbiorników. <xref:System.Diagnostics.TraceSource.TraceEvent%2A>  
  
 Zawartość śledzenia jest specyficzna dla odbiornika. Metoda Domyślna <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> zapisuje nazwę źródła, typ zdarzenia i tożsamość liczbową w nagłówku śledzenia, a następnie <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> wywołuje metodę, przekazując `format` ciąg i `args` tablicę oraz używając <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> właściwości do formatowania ciąg jako dane wyjściowe komunikatu.  
  
> [!NOTE]
>  Obiekt jest ograniczony do wartości maksymalnej `id` 65 535. <xref:System.Diagnostics.EventLogTraceListener> Jeśli określona <xref:System.Diagnostics.EventLogTraceListener> wartość jest większa niż 65 535, obiekt używa 65 535. `id`  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazania zdarzenia śledzenia do detektorów. Ten przykład kodu jest częścią większego przykładu dostarczonego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> jest nieprawidłowy.  
  
—lub— 
Liczba, która wskazuje argument do sformatowania, jest mniejsza od zera lub większa lub równa liczbie określonych obiektów do sformatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Wyliczanie ciągów formatujących</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat informacyjny do odbiorników śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat informacyjny do zapisu.</param>
        <summary>Zapisuje komunikat informacyjny do odbiorników śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zawiera komunikat informacyjny, który ma być odczytywany przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29>wywołuje metodę, ustawiając `eventType` do <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> i przekazując komunikat informacyjny jako ciąg komunikatu. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> Metoda z kolei <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> wywołuje metodę każdego odbiornika śledzenia. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego, który zawiera tekst, który jest przemieszany do zera lub więcej elementów formatu, które odpowiadają obiektom w <paramref name="args" /> tablicy.</param>
        <param name="args">Tablica zawierająca zero lub więcej obiektów do sformatowania.</param>
        <summary>Zapisuje komunikat informacyjny do odbiorników śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonej tablicy obiektów i informacji o formatowaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na `format` temat parametru, zobacz [formatowanie złożone](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zawiera komunikat informacyjny, który ma być odczytywany przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29>wywołuje metodę, ustawia `eventType`jakoiprzekazując zawartość wiadomości jako tablicę obiektów z informacjami o formatowaniu. <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Metoda z kolei <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> wywołuje metodę każdego odbiornika śledzenia. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="format" />jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="format" /> jest nieprawidłowy.  
  
—lub— 
Liczba, która wskazuje argument do sformatowania, jest mniejsza od zera lub większa lub równa liczbie określonych obiektów do sformatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Podjęto próbę śledzenia zdarzenia podczas finalizowania.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Standardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Niestandardowe ciągi formatujące DateTime</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Wyliczanie ciągów formatujących</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatowanie typów w programie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="message" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="relatedActivityId" Type="System.Guid" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator liczbowy zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisu.</param>
        <param name="relatedActivityId">Struktura, która identyfikuje powiązane działanie.</param>
        <summary>Zapisuje komunikat transferu śledzenia do detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego identyfikatora liczbowego, komunikatu i identyfikatora powiązanego działania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda wywołuje metodę każdego odbiornika śledzenia we właściwości, aby zapisać informacje o śledzeniu. <xref:System.Diagnostics.TraceSource.Listeners%2A> <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> Metoda Domyślna <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> w klasie bazowej <xref:System.Diagnostics.TraceListener> wywołuje <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> metodę w celu przetworzenia wywołania, ustawienia `eventType` do <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> i dołączania ciągu reprezentującego `relatedActivityId` identyfikator GUID do `message`.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A>jest przeznaczony do użycia z operacjami logicznymi elementu <xref:System.Diagnostics.CorrelationManager>. Parametr odnosi <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> się do właściwości <xref:System.Diagnostics.CorrelationManager> obiektu. `relatedActivityId` Po rozpoczęciu operacji logicznej w jednym działaniu i przeniesieniu do innej, drugie działanie rejestruje transfer <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> przez wywołanie metody. <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Wywołanie wiąże nową tożsamość działania z poprzednią tożsamością. Najprawdopodobniej konsumentem tej funkcji jest podgląd śledzenia, który może raportować operacje logiczne obejmujące wiele działań.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>
