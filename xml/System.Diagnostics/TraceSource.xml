<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fab066643666c5a5bea1336ceae217a86b35cc34" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36674237" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zestaw metod i właściwości, które umożliwiają aplikacjom śledzić realizację kodu oraz kojarzyć komunikaty śledzenia ze swoim źródłem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource> Klasa jest używana przez aplikacje do tworzenia śledzenia, które mogą być skojarzone z aplikacją. <xref:System.Diagnostics.TraceSource> udostępnia metody śledzenia, które pozwalają łatwo śledzić zdarzenia, dane śledzenia i zapisy informacyjne problem. Dane wyjściowe z śledzenia <xref:System.Diagnostics.TraceSource> mogą być kontrolowane przez ustawienia pliku konfiguracji. Plik konfiguracji znajduje się w folderze plik wykonywalny aplikacji i ma nazwę aplikacji z rozszerzeniem nazwy pliku .config dodane. Na przykład nazwa pliku konfiguracyjnego TraceSourceSample.exe jest TraceSourceSample.exe.config. Plik konfiguracji może służyć do określenia, gdzie ma być wysyłane informacje o śledzeniu i poziomy działania są do śledzenia. W poniższym przykładzie przedstawiono zawartość przykładowy plik konfiguracyjny aplikacji.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <xref:System.Diagnostics.TraceSource> Klasy jest identyfikowane przez nazwę źródła, zwykle nazwa aplikacji.  Komunikaty śledzenia pochodzących z określonego składnika może być inicjowane przez źródło określonego śledzenia, dzięki czemu wszystkie komunikaty pochodzące z tych składników, można łatwo zidentyfikować.  
  
 <xref:System.Diagnostics.TraceSource> definiuje metody śledzenia, ale w rzeczywistości nie zapewnia żadnych szczególnych mechanizm do generowania i przechowywania danych śledzenia. Dane śledzenia jest generowany przez obiekty nasłuchujące śledzenia, które są wtyczek, które mogą być ładowane przez źródła śledzenia.  
  
> [!NOTE]
>  Nie należy wywołać metody śledzenia podczas finalizacji. To może spowodować <xref:System.ObjectDisposedException> został zgłoszony.  
  
 Docelowego dane wyjściowe śledzenia można dostosować, dodając lub usuwając <xref:System.Diagnostics.TraceListener> wystąpień do lub z kolekcji przechowywane w <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> właściwości. Domyślnie dane wyjściowe śledzenia jest tworzony za pomocą wystąpienia <xref:System.Diagnostics.DefaultTraceListener> klasy. Usuwanie pokazano w powyższym przykładzie plik konfiguracji <xref:System.Diagnostics.DefaultTraceListener> i dodawanie <xref:System.Diagnostics.ConsoleTraceListener> do generowania danych wyjściowych śledzenia dla źródła śledzenia. Aby uzyskać więcej informacji, zobacz [ &lt;odbiorników&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) i [ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Dodawanie odbiornik śledzenia do <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji może spowodować wyjątek zostanie wygenerowany podczas śledzenia, jeśli zasób stosowany przez odbiornik śledzenia nie jest dostępna. Warunki i zgłoszono wyjątek zależą od obiektu nasłuchującego śledzenia i nie można wyliczyć w tym temacie. Może być przydatne do wywołania <xref:System.Diagnostics.TraceSource> metod w `try` / `catch` bloków do wykrywania i obsługi wyjątków z obiektów nasłuchujących śledzenia.  
  
 <xref:System.Diagnostics.SourceSwitch> Klasa umożliwia dynamiczne kontroli danych wyjściowych śledzenia. W poprzednim przykładzie plik konfiguracji pokazuje, jak wyłączyć śledzenie źródła śledzenia i kontroli występuje poziom, na którym śledzenia.  Można zmodyfikować wartości przełącznik źródła bez konieczności ponownego kompilowania aplikacji. Uzyskać informacji dotyczących używania pliku konfiguracji do ustawiona przełącznik, zobacz <xref:System.Diagnostics.Switch> i [porady: tworzenie, inicjowanie i konfigurowanie przełączników śledzenia](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).  
  
> [!NOTE]
>  Jeśli zmodyfikujesz plik konfiguracji, gdy aplikacja jest wykonywany, aplikacja musi zatrzymana i uruchomiona ponownie lub <xref:System.Diagnostics.Trace.Refresh%2A> metoda musi zostać wywołana przed wprowadzeniem nowych ustawień.  
  
 <xref:System.Diagnostics.TraceEventType> Wyliczenia służy do definiowania typ zdarzenia śledzenia wiadomości. Użyj filtrów śledzenia <xref:System.Diagnostics.TraceEventType> ustalenie, jeśli odbiornik śledzenia powinny wywoływać komunikat śledzenia.  
  
 Obiekty nasłuchujące śledzenia można opcjonalnie stosować dodatkowe warstwy filtrowania przez filtr śledzenia.  Jeśli odbiornik śledzenia ma skojarzone filtr, wywołuje metodę odbiornika <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> metody dla tego filtru, aby określić, czy należy utworzyć informacje o śledzeniu.  
  
 Obiekty nasłuchujące śledzenia, użyj wartości <xref:System.Diagnostics.Trace> właściwościami klasy <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, i <xref:System.Diagnostics.Trace.AutoFlush%2A> do formatowania danych wyjściowych śledzenia. Można ustawić atrybutów pliku konfiguracji <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, i <xref:System.Diagnostics.Trace.AutoFlush%2A> właściwości. W poniższym przykładzie <xref:System.Diagnostics.Trace.AutoFlush%2A> właściwości `false` i <xref:System.Diagnostics.Trace.IndentSize%2A> właściwości do 3.  
  
```  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource> klasy do przekazywania danych śledzenia do odbiorników.  W przykładzie pokazano również użycie przełącznika i filtru.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła (zwykle nazwa aplikacji).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> przy użyciu określonej nazwy źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródła jest używana do identyfikowania śladów. Jest on używany przez <xref:System.Diagnostics.SourceFilter> ustalenie, czy odbiornik śledzenia powinny wywoływać śledzenia. Zalecaną praktyką jest należy użyć nazwy aplikacji dla nazwę źródła.  
  
> [!NOTE]
>  Nie jest konieczne utworzyć nową <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utworzyć <xref:System.Diagnostics.TraceSource> wystąpienia i użyć jej do wszystkich żądań śledzenia dla aplikacji.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource.%23ctor%2A> konstruktora, aby utworzyć nową <xref:System.Diagnostics.TraceSource> obiektu. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> to ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła, zwykle nazwa aplikacji.</param>
        <param name="defaultLevel">Bitowe połączenie wartości wyliczenia, który określa poziom źródła domyślnego, na którym mają być śledzone.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy, w których śledzenia przy użyciu określona nazwa źródła i domyślny poziom źródła jest obsługiwane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródła jest używana do identyfikowania śladów. Mogą być używane przez <xref:System.Diagnostics.SourceSwitch> można określić, czy śledzenie jest występuje oraz <xref:System.Diagnostics.SourceFilter> do ustalenia, czy do tworzenia śledzenia. Domyślny poziom źródłowego jest używana przez <xref:System.Diagnostics.EventTypeFilter> ustalenie, czy śledzenie jest obsługiwane na podstawie poziomu źródła komunikat, który ma być śledzone.  
  
> [!NOTE]
>  Nie jest konieczne utworzyć nową <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utworzyć <xref:System.Diagnostics.TraceSource> wystąpienia i użyć jej do wszystkich żądań śledzenia dla aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> to ciąg pusty ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera atrybuty niestandardowe przełącznika zdefiniowane w pliku konfiguracyjnym aplikacji.</summary>
        <value>A <see cref="T:System.Collections.Specialized.StringDictionary" /> zawierający atrybuty niestandardowe dla przełącznika śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Attributes%2A> Właściwość identyfikuje atrybutów niestandardowych, do których odwołuje się w pliku konfiguracyjnym aplikacji. Nieużywane atrybutów niestandardowych, które nie są wyliczone. Klasy, które dziedziczą z <xref:System.Diagnostics.TraceSource> klasy można dodawać atrybuty niestandardowe przez zastąpienie <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> — metoda i zwracanie tablica ciągów nazw atrybutu niestandardowego.  
  
 Poniżej przedstawiono przykład elementu źródła śledzenia określenie atrybutu niestandardowego `SecondTraceSourceAttribute`:  
  
```  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób wyświetlania atrybutów niestandardowych dla <xref:System.Diagnostics.TraceSource>.  Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka wszystkie odbiorniki śledzenia w kolekcji odbiornika śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Close%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.Close%2A> metody każdego nasłuchującego śledzenia w <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używasz <xref:System.Diagnostics.TraceSource.Close%2A> metodę, aby zamknąć wszystkich odbiorników w kolekcji. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Liczba opróżnień odbiorniki śledzenia w kolekcji odbiornika śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Flush%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.Flush%2A> metody każdego nasłuchującego śledzenia w <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak używasz <xref:System.Diagnostics.TraceSource.Flush%2A> metody Flush wszystkich odbiorników w kolekcji. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera atrybuty niestandardowe obsługiwane przez źródło śladu.</summary>
        <returns>Tablica ciągów nazw atrybutów niestandardowych, obsługiwane przez źródło śledzenia lub <see langword="null" /> , jeśli nie ma żadnych atrybutów niestandardowych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja dla <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> zwraca `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje zastępująca <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> metodę identyfikowania atrybutów niestandardowych dla `MyTraceSource` klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Podczas dziedziczenia z <see cref="T:System.Diagnostics.TraceSource" /> klasy lub klasy pochodnej, można zastąpić <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> metodę w celu zapewnienia atrybutów niestandardowych dla klasy.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów nasłuchujących śledzenia dla źródła śledzenia.</summary>
        <value>A <see cref="T:System.Diagnostics.TraceListenerCollection" /> zawierający odbiorników aktywne śledzenie skojarzone ze źródłem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do uzyskania dostępu i wykonywania operacji na obiekty nasłuchujące śledzenia.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę źródła śledzenia.</summary>
        <value>Nazwa źródła śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa jest ustawiana przez `name` parametr przekazany do konstruktora. Mogą odwoływać się do źródła śledzenia przy użyciu `name` atrybutu w pliku konfiguracji.  
  
 Następujący element XML zawiera odwołujące się do źródła śledzenia w pliku konfiguracji.  
  
```  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób nazwa źródła śledzenia w wywołaniu konstruktora.  Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość przełącznik źródła.</summary>
        <value>A <see cref="T:System.Diagnostics.SourceSwitch" /> obiekt reprezentujący wartość przełącznik źródła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A> Właściwość umożliwia filtrowanie wiadomości przed źródło śladu wywołuje odbiorniki.  
  
 Przełącznik jest używany do sprawdzania, czy wygenerowany lub ignorowane śledzenie wywołań. Każda metoda śledzenia wywołuje <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> ustalenie, czy kontynuować śledzenia. Jeśli wywołanie zwraca `true`, są nazywane odbiorniki.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.TraceSource.Switch" /> ustawiono <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">do pracy z kodem niezarządzanym. Żądanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje dane śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określają typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <param name="data">Dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu typu określonego zdarzenia, identyfikator zdarzenia i dane śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metody, takiej jak <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metoda, jest przeznaczona dla narzędzia automatycznych, ale również umożliwia dołączanie dodatkowych obiektu, na przykład wystąpienie wyjątku do śledzenia.  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> wywołuje odpowiadającego <xref:System.Diagnostics.TraceListener.TraceData%2A> metody dla wszystkich odbiorników. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceData%2A> zwraca bez wywołania metody odbiorników.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczone do maksymalnie `id` wartość 65 535. Jeśli `id` jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiekt używa 65 535.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> metody służące do filtrowania i przesyła komunikat śledzenia odbiorniki. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określają typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <param name="data">Tablica obiektów zawierająca dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu typu określonego zdarzenia, identyfikator zdarzenia i Tablica danych śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metody, takiej jak <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metoda, jest przeznaczona dla narzędzia automatycznych, ale również umożliwia dołączanie dodatkowych obiektów, takich jak wystąpienie wyjątku i ślad stosu do śledzenia.  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> wywołuje odpowiadającego <xref:System.Diagnostics.TraceListener.TraceData%2A> metody dla wszystkich odbiorników. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceData%2A> zwraca bez wywołania metody odbiorników.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczone do maksymalnie `id` wartość 65 535. Jeśli `id` jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiekt używa 65 535.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat zdarzenia śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określają typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego zdarzenia, typ i identyfikator zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie za pomocą narzędzi. Na przykład narzędzie monitorowania można Powiadom administratora określonego zdarzenia są śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiadającego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metody każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zwraca bez wywołania metody odbiorników.  
  
 Zawartość śledzenia jest określonych odbiornika. Jeśli metoda nie jest zastępowany przez implementację odbiornika, domyślnego wyjścia jest nazwą źródła śledzenia, jego tożsamość liczbowych i typ zdarzenia.  Dodatkowe śledzenia zawartości jest zależny od obiektu nasłuchującego <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> wartości właściwości.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczone do maksymalnie `id` wartość 65 535. Jeśli `id` jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> używa 65 535.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazywania zdarzenia śledzenia do odbiorników. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określają typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisania.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu typu określonego zdarzenia, identyfikator zdarzenia i komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie za pomocą narzędzi. Na przykład narzędzie monitorowania można Powiadom administratora określonego zdarzenia są śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiadającego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metody każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zwraca bez wywołania metody odbiorników.  
  
 Zawartość śledzenia jest określonych odbiornika. Jeśli metoda nie jest zastępowany przez implementację odbiornika, domyślnego wyjścia jest nazwą źródła śledzenia, jego tożsamość liczbowa typ zdarzenia i komunikatu.  Dodatkowe śledzenia zawartości jest zależny od obiektu nasłuchującego <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> wartości właściwości.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczone do maksymalnie `id` wartość 65 535. Jeśli `id` jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiekt używa 65 535.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazywania zdarzenia śledzenia do odbiorników. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określają typ zdarzenia danych śledzenia.</param>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <param name="format">Ciąg formatu złożony, który zawiera tekst zmieszać zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</param>
        <param name="args">
          <see langword="object" /> Tablicę zawierającą zero lub więcej obiektów do formatowania.</param>
        <summary>Zapisuje zdarzenia śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu typu określonego zdarzenia, identyfikator zdarzenia i Tablica argumentów i formatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `format` parametrów, zobacz [złożone formatowanie](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie za pomocą narzędzi. Na przykład narzędzie monitorowania można Powiadom administratora określonego zdarzenia są śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiadającego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metody każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> zwraca bez wywołania metody odbiorników.  
  
 Zawartość śledzenia jest określonych odbiornika. Wartość domyślna <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metoda zapisuje nazwa źródła, typ zdarzenia i Tożsamość liczbowa w nagłówku śledzenia, następnie wywołuje <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> jest metoda `format` ciągu i `args` tablicy i przy użyciu <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> właściwości formatowania ciąg jako komunikat dane wyjściowe.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczone do maksymalnie `id` wartość 65 535. Jeśli `id` jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiekt używa 65 535.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano sposób użycia <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metody do przekazywania zdarzenia śledzenia do odbiorników. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> jest nieprawidłowy.  - lub - liczba, która wskazuje argument formatu nie może być większa niż zero, większa niż lub równe liczba określonych obiektów do formatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Komunikat informacyjny do zapisania.</param>
        <summary>Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zapewnia komunikat informacyjny odczytywane przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> wywołania <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metody ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> i przekazywanie komunikat informacyjny jako ciąg z komunikatem. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> Metoda z kolei wywołuje <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metody każdego nasłuchującego śledzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożony, który zawiera tekst zmieszać zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>argumentów</c> tablicy.</param>
        <param name="args">Tablica zawierająca zero lub więcej obiektów do formatowania.</param>
        <summary>Zapisuje komunikat informacyjny odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu tablicy określony obiekt i informacje dotyczące formatowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `format` parametrów, zobacz [złożone formatowanie](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zapewnia komunikat informacyjny odczytywane przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> wywołania <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metody ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> i przekazywanie zawartość komunikatu jako tablica obiektów z formatowaniem informacji. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Metoda z kolei wywołuje <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metody każdego nasłuchującego śledzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> jest nieprawidłowy.  - lub - liczba, która wskazuje argument formatu nie może być większa niż zero, większa niż lub równe liczba określonych obiektów do formatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Została podjęta próba śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Identyfikator numeryczny dla zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisania.</param>
        <param name="relatedActivityId">Struktura, która identyfikuje powiązane działania.</param>
        <summary>Zapisuje komunikat transfer śledzenia odbiorniki śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego identyfikator numeryczny, wiadomości i identyfikator działania powiązane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metody każdego nasłuchującego śledzenia w <xref:System.Diagnostics.TraceSource.Listeners%2A> właściwość do zapisania informacji śledzenia. Wartość domyślna <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metody w podstawowym <xref:System.Diagnostics.TraceListener> klasy wywołania <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> metody przetwarzania wywołania, ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> i dołączenie reprezentację ciągu `relatedActivityId` identyfikator GUID na `message`.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> jest przeznaczony do użycia z operacjami logicznej <xref:System.Diagnostics.CorrelationManager>. `relatedActivityId` Parametr odnosi się do <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> właściwość <xref:System.Diagnostics.CorrelationManager> obiektu. Jeśli operacja logiczna rozpoczyna się w jednym działaniu i przesyła do innego, drugi działania dzienniki transferu przez wywołanie metody <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> metody. <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Wywołania dotyczy nowej tożsamości działania poprzedniej tożsamości. Konsument najprawdopodobniej z tej funkcji jest przeglądarka śledzenia, który może raportować operacji logicznych, które obejmują kilka działań.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>