<Type Name="TraceSource" FullName="System.Diagnostics.TraceSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a320149b89e99f7e277e30e96ed2bdff68ffc24" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48758494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceSource" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceSource" />
  <TypeSignature Language="F#" Value="type TraceSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia zestaw metod i właściwości, które umożliwiają aplikacjom śledzić realizację kodu oraz kojarzyć komunikaty śledzenia ze swoim źródłem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource> Klasa jest używana przez aplikacje do tworzenia śladów, które mogą być skojarzone z aplikacją. <xref:System.Diagnostics.TraceSource> udostępnia metody śledzenia, które pozwalają na łatwe śledzenie zdarzeń, dane śledzenia i ślady informacyjne problemu. Dane wyjściowe śledzenia z <xref:System.Diagnostics.TraceSource> mogą być kontrolowane przez ustawienia pliku konfiguracji. Plik konfiguracji znajduje się w folderze o plik wykonywalny aplikacji i ma przypisaną nazwę aplikacji z rozszerzeniem nazwy pliku .config dodane. Na przykład nazwa pliku konfiguracji TraceSourceSample.exe jest TraceSourceSample.exe.config. Plik konfiguracji można określić, gdzie ma być wysyłane informacje o śledzeniu i co poziomów działania mają być śledzone. Poniższy przykład pokazuje zawartość pliku konfiguracji aplikacji przykładowej.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest" switchName="SourceSwitch"   
        switchType="System.Diagnostics.SourceSwitch" >  
        <listeners>  
          <add name="console" />  
          <remove name ="Default" />  
        </listeners>  
      </source>  
    </sources>  
    <switches>  
      <!-- You can set the level at which tracing is to occur -->  
      <add name="SourceSwitch" value="Warning" />  
        <!-- You can turn tracing off -->  
        <!--add name="SourceSwitch" value="Off" -->  
    </switches>  
    <sharedListeners>  
      <add name="console"   
        type="System.Diagnostics.ConsoleTraceListener"   
        initializeData="false"/>  
    </sharedListeners>  
    <trace autoflush="true" indentsize="4">  
      <listeners>  
        <add name="console" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <xref:System.Diagnostics.TraceSource> Klasy jest identyfikowane przez nazwę źródła, zazwyczaj jest to nazwa aplikacji.  Komunikaty śledzenia pochodzących z określonego składnika może być inicjowane przez źródła śledzenia w szczególności, dzięki czemu wszystkie komunikaty pochodzące z tych składników, można łatwo zidentyfikować.  
  
 <xref:System.Diagnostics.TraceSource> definiuje metody śledzenia, ale w rzeczywistości nie zapewnia żadnych szczególnych mechanizm do generowania i przechowywania danych śledzenia. Śledzenie danych jest generowany przez odbiorniki śledzenia, które są wtyczki, które mogą być ładowane przez źródła śledzenia.  
  
> [!NOTE]
>  Nie należy wywołać metody śledzenia podczas finalizacji. To może doprowadzić do <xref:System.ObjectDisposedException> zgłaszane.  
  
 Dane wyjściowe śledzenia docelowych można dostosować, dodając lub usuwając <xref:System.Diagnostics.TraceListener> wystąpień do lub z kolekcji, przechowywane w <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> właściwości. Domyślnie dane wyjściowe śledzenia jest generowany przy użyciu wystąpienia <xref:System.Diagnostics.DefaultTraceListener> klasy. Usuwanie pokazano w powyższym przykładzie plik konfiguracji <xref:System.Diagnostics.DefaultTraceListener> i dodawanie <xref:System.Diagnostics.ConsoleTraceListener> do generowania danych wyjściowych śledzenia dla źródła śledzenia. Aby uzyskać więcej informacji, zobacz [ &lt;odbiorników&gt; ](~/docs/framework/configure-apps/file-schema/trace-debug/listeners-element-for-source.md) i [ &lt;sharedListeners&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/sharedlisteners-element.md).  
  
> [!NOTE]
>  Dodawanie odbiornika śledzenia, aby <xref:System.Diagnostics.TraceSource.Listeners%2A> bezużytecznych może powodować zgłoszenie wyjątku podczas śledzenia, jeśli zasób stosowany przez odbiornik śledzenia nie jest dostępna. Warunki wyjątku są zależne od odbiornika śledzenia i nie można wyliczyć w tym temacie. Może być przydatne do wywołania <xref:System.Diagnostics.TraceSource> metody `try` / `catch` bloki wykrywania i obsługi wszystkich wyjątków z detektorów śledzenia.  
  
 <xref:System.Diagnostics.SourceSwitch> Klasy zapewnia sposób dynamicznie kontrolować dane wyjściowe śledzenia. W poprzednim przykładzie plik konfiguracji pokazuje, jak wyłączyć śledzenie od źródła śledzenia i kontroli występuje poziom, na które śledzenia.  Wartość przełącznik źródła można zmodyfikować bez konieczności ponownego kompilowania aplikacji. Instrukcje dotyczące przy użyciu pliku konfiguracji, aby ustawić przełącznik, zobacz <xref:System.Diagnostics.Switch> i [porady: tworzenie, inicjowanie i konfigurowanie przełączników śledzenia](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md).  
  
> [!NOTE]
>  Modyfikacja pliku konfiguracji podczas wykonywania aplikacji aplikacji musi być zatrzymana i uruchomiona ponownie lub <xref:System.Diagnostics.Trace.Refresh%2A> metoda musi zostać wywołana przed nowe ustawienia zaczęły obowiązywać.  
  
 <xref:System.Diagnostics.TraceEventType> Wyliczenie jest używane do definiowania typ zdarzenia śledzenia komunikatu. Śledzenia filtrów użyj <xref:System.Diagnostics.TraceEventType> ustalenie, jeśli odbiornik śledzenia powinno to dawać komunikat śledzenia.  
  
 Obiekty nasłuchujące śledzenia mogą opcjonalnie mieć dodatkową warstwę filtrowania przez filtr śledzenia.  Jeśli odbiornik śledzenia ma skojarzony filtr, wywołuje metodę odbiornik <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> metody dla tego filtru, aby określić, czy do uzyskania informacji śledzenia.  
  
 Obiekty nasłuchujące śledzenia użycia wartości <xref:System.Diagnostics.Trace> właściwościami klasy <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, i <xref:System.Diagnostics.Trace.AutoFlush%2A> danych wyjściowych śledzenia formatu. Atrybuty pliku konfiguracji służą do ustawiania <xref:System.Diagnostics.Trace.Indent%2A>, <xref:System.Diagnostics.Trace.IndentSize%2A>, i <xref:System.Diagnostics.Trace.AutoFlush%2A> właściwości. Poniższy przykład ustawia <xref:System.Diagnostics.Trace.AutoFlush%2A> właściwości `false` i <xref:System.Diagnostics.Trace.IndentSize%2A> właściwości do 3.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="3" />  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource> klasy w celu przekazywania danych śledzenia do odbiorników.  W przykładzie pokazano również użycie przełącznika i filtru.  
  
 [!code-cpp[System.Diagnostics.TraceSource2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CPP/tracesource2.cpp#1)]
 [!code-csharp[System.Diagnostics.TraceSource2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#1)]
 [!code-vb[System.Diagnostics.TraceSource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Ten typ jest bezpieczny wątkowo.</threadsafe>
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/trace-debug/index.md">Schemat ustawień śledzenia i debugowania</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła (zazwyczaj nazwa aplikacji).</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy przy użyciu określonej nazwy źródła.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródłowego jest używana do identyfikowania danych śledzenia. Jest on używany przez <xref:System.Diagnostics.SourceFilter> do określenia, czy odbiornik śledzenia powinno to dawać śledzenia. Zaleca się nazwę aplikacji na użytek nazwę źródła.  
  
> [!NOTE]
>  Nie jest konieczne utworzyć nowy <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utwórz je <xref:System.Diagnostics.TraceSource> wystąpienie i użyj go dla wszystkich żądań śledzenia dla aplikacji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.%23ctor%2A> Konstruktor do tworzenia nowego <xref:System.Diagnostics.TraceSource> obiektu. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceSource (string name, System.Diagnostics.SourceLevels defaultLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Diagnostics.SourceLevels defaultLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultLevel As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceSource(System::String ^ name, System::Diagnostics::SourceLevels defaultLevel);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.TraceSource : string * System.Diagnostics.SourceLevels -&gt; System.Diagnostics.TraceSource" Usage="new System.Diagnostics.TraceSource (name, defaultLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultLevel" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa źródła, zazwyczaj jest to nazwa aplikacji.</param>
        <param name="defaultLevel">Bitowe połączenie wartości wyliczenia, która określa domyślny poziom źródła jaką do śledzenia.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceSource" /> klasy przy użyciu określonej nazwie źródła i domyślny poziom źródła poziomu śledzenia, które jest obsługiwane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa źródłowego jest używana do identyfikowania danych śledzenia. Mogą być używane przez <xref:System.Diagnostics.SourceSwitch> ustalenie, czy występują śledzenia i <xref:System.Diagnostics.SourceFilter> do określenia, czy możliwe jest śledzenie. Domyślny poziom źródłowego jest używana przez <xref:System.Diagnostics.EventTypeFilter> ustalenie, czy występują śledzenia na podstawie poziomu źródła komunikat, który ma być śledzony.  
  
> [!NOTE]
>  Nie jest konieczne utworzyć nowy <xref:System.Diagnostics.TraceSource> wystąpienia dla każdego żądania śledzenia. Utwórz je <xref:System.Diagnostics.TraceSource> wystąpienie i użyj go dla wszystkich żądań śledzenia dla aplikacji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ Attributes { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.TraceSource.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera atrybuty niestandardowe przełącznika, zdefiniowana w pliku konfiguracyjnym aplikacji.</summary>
        <value>Element <see cref="T:System.Collections.Specialized.StringDictionary" /> zawierający atrybuty niestandardowe dla przełącznika śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Attributes%2A> Właściwość identyfikuje atrybutów niestandardowych, do którego odwołuje się plik konfiguracji aplikacji. Nieużywany atrybutów niestandardowych, które nie są wyliczane. Klasy, które dziedziczą z <xref:System.Diagnostics.TraceSource> klasy można dodawać atrybutów niestandardowych, które przez zastąpienie <xref:System.Diagnostics.Switch.GetSupportedAttributes%2A?displayProperty=nameWithType> metodę i zwraca tablicę ciągów, nazw atrybutów niestandardowych.  
  
 Poniżej przedstawiono przykładowe element źródła śledzenia, określanie niestandardowego atrybutu `SecondTraceSourceAttribute`:  
  
```xml  
<sources>  
  <source name="TraceTest" switchName="TestSourceSwitch"   
    switchType="Testing.MySourceSwitch, TraceSample"   
    SecondTraceSourceAttribute="two">  
  </source>  
</sources>  
```  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób wyświetlania atrybutów niestandardowych dla <xref:System.Diagnostics.TraceSource>.  Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#14)]
 [!code-vb[System.Diagnostics.TraceSource2#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="traceSource.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka wszystkie śledzenia słuchaczy w kolekcji odbiornika śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Close%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.Close%2A> metoda każdego odbiornik śledzenia <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można użyć <xref:System.Diagnostics.TraceSource.Close%2A> metodę, aby zamknąć wszystkie słuchaczy w kolekcji. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem niezarządzanym. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="traceSource.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści wszystkie śledzenia słuchaczy w kolekcji odbiornika śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Flush%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.Flush%2A> metoda każdego odbiornik śledzenia <xref:System.Diagnostics.TraceSource.Listeners%2A> kolekcji.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak można użyć <xref:System.Diagnostics.TraceSource.Flush%2A> metodę, aby opróżnić wszystkich słuchaczy w kolekcji. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource2#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected internal virtual string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="traceSource.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera atrybuty niestandardowe, obsługiwane przez źródła śledzenia.</summary>
        <returns>Tablica ciągów nazw atrybutów niestandardowych, obsługiwane przez źródła śledzenia lub <see langword="null" /> Jeśli istnieją żadne atrybuty niestandardowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja dla <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> zwraca `null`.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje nadpisanie <xref:System.Diagnostics.TraceSource.GetSupportedAttributes%2A> metodę identyfikowania atrybutów niestandardowych dla `MyTraceSource` klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/CS/program.cs#33)]
 [!code-vb[System.Diagnostics.TraceSource#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource/VB/program.vb#33)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Gdy dziedziczenie z <see cref="T:System.Diagnostics.TraceSource" /> klasy lub pochodnej klasy, można zastąpić <see cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" /> metody w celu zapewnienia atrybuty niestandardowe dla swojej klasy.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Listeners">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceListenerCollection Listeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceListenerCollection Listeners" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Listeners" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Listeners As TraceListenerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceListenerCollection ^ Listeners { System::Diagnostics::TraceListenerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Listeners : System.Diagnostics.TraceListenerCollection" Usage="System.Diagnostics.TraceSource.Listeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceListenerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów nasłuchujących śledzenia dla źródła śledzenia.</summary>
        <value>Element <see cref="T:System.Diagnostics.TraceListenerCollection" /> zawierający obiekty nasłuchujące śledzenia aktywnych, skojarzone ze źródłem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość służy do dostępu i wykonywać operacje na obiekty nasłuchujące śledzenia.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem niezarządzanym. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Diagnostics.TraceSource.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę źródła śledzenia.</summary>
        <value>Nazwa źródła śledzenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa jest ustawiana `name` parametr przekazany do konstruktora. Mogą odwoływać się do źródła śledzenia przy użyciu `name` atrybutu w pliku konfiguracji.  
  
 Następujący element XML pokazuje odwołujące się do źródła śledzenia w pliku konfiguracji.  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <sources>  
      <source name="TraceTest">  
      </source>  
    </sources>  
  </system.diagnostics>  
</configuration>  
```  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, jak nazwa źródła śledzenia w wywołaniu konstruktora.  Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#9)]
 [!code-vb[System.Diagnostics.TraceSource2#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Switch">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceSwitch Switch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SourceSwitch Switch" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceSource.Switch" />
      <MemberSignature Language="VB.NET" Value="Public Property Switch As SourceSwitch" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceSwitch ^ Switch { System::Diagnostics::SourceSwitch ^ get(); void set(System::Diagnostics::SourceSwitch ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Switch : System.Diagnostics.SourceSwitch with get, set" Usage="System.Diagnostics.TraceSource.Switch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceSwitch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość przełącznik źródła.</summary>
        <value>A <see cref="T:System.Diagnostics.SourceSwitch" /> obiekt reprezentujący wartość przełącznik źródła.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.Switch%2A> Właściwość umożliwia filtrowanie komunikatów, zanim źródła śledzenia wywołań odbiorniki.  
  
 Przełącznik jest używany do sprawdzenia, czy śledzenie wywołań powinny być generowane lub ignorowane. Każda metoda śledzenia wywołuje <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> do ustalenia, czy należy kontynuować śledzenie. Jeśli to wywołanie zwraca `true`, są nazywane odbiorników.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.Diagnostics.TraceSource.Switch" /> ustawiono <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">za działanie z kodem niezarządzanym. Zapotrzebowanie wartość: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje dane śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <param name="data">Dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji za pomocą typu określonego zdarzenia, identyfikator zdarzenia i dane śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metody, takiej jak <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metoda, jest przeznaczona dla zautomatyzowanych narzędzi, ale również umożliwia dołączenie dodatkowych obiektu, takiego jak wystąpienie wyjątku do śledzenia.  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A?displayProperty=nameWithType> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> wywołuje odpowiedniego <xref:System.Diagnostics.TraceListener.TraceData%2A> metody na wszystkich odbiorników. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceData%2A> jest zwracane bez wywoływania metod odbiorników.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczona do maksymalnie `id` wartość 65 535. Jeśli `id` określona wartość jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiektu używa 65 535.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceData%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.Object%29> metodę, aby filtrować i przesyła komunikat śledzenia do odbiorników. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#28)]
 [!code-vb[System.Diagnostics.TraceSource2#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public void TraceData (System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceData(valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceData (eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceData(System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.TraceData : System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="traceSource.TraceData (eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <param name="data">Tablica obiektów zawierających dane śledzenia.</param>
        <summary>Zapisuje dane śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego typu określonego zdarzenia, identyfikator zdarzenia, a tablica danych śledzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Metody, takiej jak <xref:System.Diagnostics.TraceSource.TraceEvent%2A> metoda, jest przeznaczona dla zautomatyzowanych narzędzi, ale również umożliwia dołączenie dodatkowych obiektów, takich jak wystąpienie wyjątku i ślad stosu do śledzenia.  
  
 <xref:System.Diagnostics.TraceSource.TraceData%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceData%2A> wywołuje odpowiedniego <xref:System.Diagnostics.TraceListener.TraceData%2A> metody na wszystkich odbiorników. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceData%2A> jest zwracane bez wywoływania metod odbiorników.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczona do maksymalnie `id` wartość 65 535. Jeśli `id` określona wartość jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiektu używa 65 535.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat zdarzenia śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int -&gt; unit" Usage="traceSource.TraceEvent (eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego zdarzenia typu i identyfikatora zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład narzędzia do monitorowania może generować powiadomienia administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiedniego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metoda każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> jest zwracane bez wywoływania metod odbiorników.  
  
 Zawartość śledzenia jest określonego odbiornika. Jeśli metoda nie jest zastępowany przez implementację odbiornika, domyślne dane wyjściowe jest nazwą źródła śledzenia, jego tożsamość liczbowa i typu zdarzenia.  Zawartość śledzenia dodatkowe jest zależne od odbiornika <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> wartości właściwości.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczona do maksymalnie `id` wartość 65 535. Jeśli `id` określona wartość jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> używa 65 535.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodę, aby przekazać zdarzenia śledzenia do odbiorników. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#17)]
 [!code-vb[System.Diagnostics.TraceSource2#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisania.</param>
        <summary>Zapisuje komunikat zdarzenia śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji za pomocą typu określonego zdarzenia, identyfikator zdarzenia i komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład narzędzia do monitorowania może generować powiadomienia administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiedniego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metoda każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> jest zwracane bez wywoływania metod odbiorników.  
  
 Zawartość śledzenia jest określonego odbiornika. Jeśli metoda nie jest zastępowany przez implementację odbiornika, domyślne dane wyjściowe jest nazwą źródła śledzenia, jego tożsamość liczbowa, typ zdarzenia i komunikatu.  Zawartość śledzenia dodatkowe jest zależne od odbiornika <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> wartości właściwości.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczona do maksymalnie `id` wartość 65 535. Jeśli `id` określona wartość jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiektu używa 65 535.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodę, aby przekazać zdarzenia śledzenia do odbiorników. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#18)]
 [!code-vb[System.Diagnostics.TraceSource2#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public void TraceEvent (System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceEvent(valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceEvent (eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceEvent(System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceEvent : System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="traceSource.TraceEvent (eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">Jedna z wartości wyliczenia, które określa typ zdarzenia danych śledzenia.</param>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <param name="format">Ciąg formatu złożonego, który zawiera tekst zmieszać z zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>args</c> tablicy.</param>
        <param name="args">
          <see langword="object" /> Tablica zawierająca zero lub więcej obiektów do sformatowania.</param>
        <summary>Zapisuje zdarzenia śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji za pomocą typu określonego zdarzenia, identyfikator zdarzenia i Tablica argumentów i format.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `format` parametrów, zobacz [formatowania złożonego](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Metoda jest przeznaczona do śledzenia zdarzeń, które mogą być przetwarzane automatycznie przez narzędzia. Na przykład narzędzia do monitorowania może generować powiadomienia administratora, jeśli określone zdarzenie jest śledzone przez określone źródło.  
  
 <xref:System.Diagnostics.TraceSource.TraceEvent%2A> Wywołania metody <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> metody <xref:System.Diagnostics.SourceSwitch> obiektu zwróconego przez <xref:System.Diagnostics.TraceSource.Switch%2A> właściwości. Jeśli <xref:System.Diagnostics.SourceSwitch.ShouldTrace%2A> zwraca `true`, <xref:System.Diagnostics.TraceSource.TraceEvent%2A> wywołuje odpowiedniego <xref:System.Diagnostics.TraceListener.TraceEvent%2A> metoda każdego odbiornika. W przeciwnym razie <xref:System.Diagnostics.TraceSource.TraceEvent%2A> jest zwracane bez wywoływania metod odbiorników.  
  
 Zawartość śledzenia jest określonego odbiornika. Wartość domyślna <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metoda zapisuje nazwa źródła typu zdarzenia i Tożsamość liczbowa w nagłówku śledzenia, następnie wywołuje <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> jest metoda `format` ciągu i `args` tablicy i przy użyciu <xref:System.Globalization.CultureInfo.InvariantCulture?displayProperty=nameWithType> właściwości formatowania ciąg jako dane wyjściowe komunikatu.  
  
> [!NOTE]
>  <xref:System.Diagnostics.EventLogTraceListener> Obiekt jest ograniczona do maksymalnie `id` wartość 65 535. Jeśli `id` określona wartość jest większa niż 65 535 <xref:System.Diagnostics.EventLogTraceListener> obiektu używa 65 535.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje użycie <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%29> metodę, aby przekazać zdarzenia śledzenia do odbiorników. Ten przykład kodu jest częścią większego przykładu przewidzianego dla <xref:System.Diagnostics.TraceSource> klasy.  
  
 [!code-csharp[System.Diagnostics.TraceSource2#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/CS/program.cs#24)]
 [!code-vb[System.Diagnostics.TraceSource2#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.TraceSource2/VB/program.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> jest nieprawidłowy.  
  
—lub— 
Liczba, która określa argument do formatowania jest mniejsza od zera, lub większa niż lub równe liczbie określonych obiektów do sformatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Ciągi standardowego formatu daty i godziny</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Ciągi formatów niestandardowych daty/godziny</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Wyliczanie ciągów formatujących</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Typy formatowania na platformie .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceInformation">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje komunikat informacyjny detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string -&gt; unit" Usage="traceSource.TraceInformation message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Szczegółowy komunikat do zapisania.</param>
        <summary>Zapisuje komunikat informacyjny detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu określonego komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zapewnia komunikat informacyjny odczytywane przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%29> wywołania <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metody, ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> i przekazanie komunikat informacyjny jako ciąg komunikatu. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> Metoda z kolei wywołuje <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29> metoda każdego odbiornika śledzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
      </Docs>
    </Member>
    <Member MemberName="TraceInformation">
      <MemberSignature Language="C#" Value="public void TraceInformation (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceInformation(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceInformation (format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceInformation(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.TraceInformation : string * obj[] -&gt; unit" Usage="traceSource.TraceInformation (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Ciąg formatu złożonego, który zawiera tekst zmieszać z zero lub więcej elementów formatu, które odnoszą się do obiektów w <c>args</c> tablicy.</param>
        <param name="args">Tablica zawierająca zero lub więcej obiektów do sformatowania.</param>
        <summary>Zapisuje komunikat informacyjny detektorów śledzenia w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji przy użyciu tablicy określony obiekt i informacje o formatowaniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat `format` parametrów, zobacz [formatowania złożonego](~/docs/standard/base-types/composite-formatting.md).  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%2A> Metoda zapewnia komunikat informacyjny odczytywane przez użytkowników, a nie przez narzędzia.  
  
 <xref:System.Diagnostics.TraceSource.TraceInformation%28System.String%2CSystem.Object%5B%5D%29> wywołania <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metody, ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Information?displayProperty=nameWithType> i przekazywanie zawartość komunikatu jako tablica obiektów oraz informacje o formatowaniu. <xref:System.Diagnostics.TraceSource.TraceEvent%28System.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> Metoda z kolei wywołuje <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%2CSystem.Object%5B%5D%29> metoda każdego odbiornika śledzenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="format" /> jest nieprawidłowy.  
  
—lub— 
Liczba, która określa argument do formatowania jest mniejsza od zera, lub większa niż lub równe liczbie określonych obiektów do sformatowania.</exception>
        <exception cref="T:System.ObjectDisposedException">Nastąpiła próba do śledzenia zdarzenia podczas finalizacji.</exception>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md">Złożone formatowanie</related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">Standardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">Niestandardowe ciągi formatujące liczby</related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md">Ciągi standardowego formatu daty i godziny</related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md">Ciągi formatów niestandardowych daty/godziny</related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md">Wyliczanie ciągów formatujących</related>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Typy formatowania na platformie .NET</related>
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public void TraceTransfer (int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TraceTransfer(int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceSource.TraceTransfer(System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TraceTransfer (id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TraceTransfer(int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="member this.TraceTransfer : int * string * Guid -&gt; unit" Usage="traceSource.TraceTransfer (id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.Conditional("TRACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">Numeryczny identyfikator zdarzenia.</param>
        <param name="message">Komunikat śledzenia do zapisania.</param>
        <param name="relatedActivityId">Struktura, która identyfikuje powiązane działania.</param>
        <summary>Zapisuje komunikat transferu śledzenia do śledzenia słuchaczy w <see cref="P:System.Diagnostics.TraceSource.Listeners" /> kolekcji za pomocą określony identyfikator liczbowy, wiadomości i identyfikator powiązane działania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Wywołania metody <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metoda każdego odbiornik śledzenia <xref:System.Diagnostics.TraceSource.Listeners%2A> właściwość do zapisania informacji śledzenia. Wartość domyślna <xref:System.Diagnostics.TraceListener.TraceTransfer%2A> metody w podstawowym <xref:System.Diagnostics.TraceListener> klasy wywołania <xref:System.Diagnostics.TraceListener.TraceEvent%28System.Diagnostics.TraceEventCache%2CSystem.String%2CSystem.Diagnostics.TraceEventType%2CSystem.Int32%2CSystem.String%29?displayProperty=nameWithType> metody przetwarzania wywołania, ustawienie `eventType` do <xref:System.Diagnostics.TraceEventType.Transfer?displayProperty=nameWithType> i dołączenie reprezentację ciągu `relatedActivityId` identyfikator GUID służący do `message`.  
  
 <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> jest przeznaczony do użycia przy użyciu operacji logicznych z <xref:System.Diagnostics.CorrelationManager>. `relatedActivityId` Parametr odnosi się do <xref:System.Diagnostics.CorrelationManager.ActivityId%2A> właściwość <xref:System.Diagnostics.CorrelationManager> obiektu. Jeśli operacja logiczna rozpoczyna się w jedno działanie i przesyła do innego, drugiego działania dzienniki transferu, wywołując <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> metody. <xref:System.Diagnostics.TraceSource.TraceTransfer%2A> Wywołanie odnosi się nową tożsamość działania do poprzedniej tożsamości. Najbardziej prawdopodobną konsumenta o tej funkcji jest przeglądarka śledzenia, który może zgłaszać operacje logiczne, które rozciągają się wiele działań.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.XmlWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventSchemaTraceListener" />
        <altmember cref="T:System.Diagnostics.DelimitedListTraceListener" />
      </Docs>
    </Member>
  </Members>
</Type>