<Type Name="UnescapedXmlDiagnosticData" FullName="System.Diagnostics.UnescapedXmlDiagnosticData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="906b655156e678923acb581b7b0e75ae928f4e07" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30448695" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnescapedXmlDiagnosticData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.UnescapedXmlDiagnosticData" />
  <TypeSignature Language="VB.NET" Value="Public Class UnescapedXmlDiagnosticData" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnescapedXmlDiagnosticData" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane XML niezmienionym znaczeniu dla rejestrowanie danych śledzenia dostarczane przez użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest używana przez <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> metody. Może również służyć do przekazywania danych XML do <xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A> metody.  
  
> [!NOTE]
>  Dane dostarczone przez użytkownika nie jest sprawdzana poprawność schematu.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Diagnostics.UnescapedXmlDiagnosticData> klasy. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.EventSchemaTraceListener> klasy.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnescapedXmlDiagnosticData (string xmlPayload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlPayload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlPayload As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnescapedXmlDiagnosticData(System::String ^ xmlPayload);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlPayload" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlPayload">Dane XML mają być rejestrowane <see langword="UserData" /> węzła schematu zdarzeń.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> przy użyciu określonego ciągu danych XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli chcesz, aby swój kod, aby być na trasie schematu zgodne, `xmlPayload` parametr musi być fragment XML, który może zostać zweryfikowany względem schematu zdarzeń end-to-end. Jeśli `xmlPayload` jest `null`, <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> właściwość jest ciągiem pustym.  
  
> [!NOTE]
>  `xmlPayload` nie jest sprawdzana poprawność XML.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje sposób użycia <xref:System.Diagnostics.UnescapedXmlDiagnosticData.%23ctor%2A> konstruktora. Ten przykładowy kod jest częścią większego przykładu udostępnionego dla <xref:System.Diagnostics.EventSchemaTraceListener> klasy.  
  
 [!code-csharp[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/cs/program.cs#11)]
 [!code-vb[System.Diagnostics.EventSchemaTraceListener#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.EventSchemaTraceListener/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.UnescapedXmlDiagnosticData.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> obiektu.</summary>
        <returns>Reprezentacja ciągu <see cref="T:System.Diagnostics.UnescapedXmlDiagnosticData" /> obiektu. Jeśli obiekt jest <see langword="null" />, ta metoda zwraca pusty ciąg.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnescapedXml">
      <MemberSignature Language="C#" Value="public string UnescapedXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnescapedXml" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml" />
      <MemberSignature Language="VB.NET" Value="Public Property UnescapedXml As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnescapedXml { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg niezmienionym znaczeniu danych XML.</summary>
        <value>Ciąg XML niezmienionym znaczeniu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli chcesz, aby swój kod, aby być na trasie schematu zgodne, <xref:System.Diagnostics.UnescapedXmlDiagnosticData.UnescapedXml%2A> wartość właściwości musi być fragment XML, który może zostać zweryfikowany względem schematu zdarzeń end-to-end.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>