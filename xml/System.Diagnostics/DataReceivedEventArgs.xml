<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="512efbab93320933478311ee04c44018863b11df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39982416" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia dane dla <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> i <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchronicznie zbierać przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> strumień danych wyjściowych procesów, należy utworzyć metodę, która obsługuje zdarzenia wyjściowe strumienia przekierowane. Metoda obsługi zdarzeń jest wywoływana, gdy proces zapisuje w strumieniu przekierowane. Delegat zdarzenia wywołuje procedury obsługi zdarzenia z wystąpieniem <xref:System.Diagnostics.DataReceivedEventArgs>. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość zawiera wiersz tekstu, który proces zapisano przekierowanego strumienia.  
  
   
  
## Examples  
 Poniższy przykładowy kod przedstawia sposób wykonywania asynchronicznych operacji odczytu na przekierowanym <xref:System.Diagnostics.Process.StandardOutput%2A> strumień `sort` polecenia. `sort` Polecenie jest aplikacja konsolowa która odczytuje i sortuje wprowadzanie tekstu.  
  
 Przykład tworzy delegata zdarzenia `SortOutputHandler` programu obsługi zdarzeń i kojarzy ją z <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeń. Program obsługi zdarzeń odbierze wiersze tekstu z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst na ekranie.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wiersz znaków, który został napisany na przekierowanym <see cref="T:System.Diagnostics.Process" /> strumienia wyjściowego.</summary>
        <value>Wiersz, który został napisany przez skojarzony <see cref="T:System.Diagnostics.Process" /> do jego przekierowanego <see cref="P:System.Diagnostics.Process.StandardOutput" /> lub <see cref="P:System.Diagnostics.Process.StandardError" /> strumienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli przekierować <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> strumień <xref:System.Diagnostics.Process> do obsługi zdarzenia, zdarzenie jest zgłaszane w każdym procesie zapisuje linię w strumieniu przekierowanego. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość jest wiersz, <xref:System.Diagnostics.Process> napisany w strumieniu przekierowanego danych wyjściowych. Można użyć procedury obsługi zdarzenia <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości, aby filtrować dane wyjściowe z procesu lub zapisywać dane wyjściowe do lokalizacji alternatywnej. Na przykład może utworzyć program obsługi zdarzeń, który przechowuje wszystkie wiersze danych wyjściowych błędu w pliku dziennika błędów wyznaczonym.  
  
 Wiersz jest zdefiniowany jako sekwencja znaków, a następnie LF ("\n") lub znak powrotu karetki bezpośrednio po nim wiersz źródła danych ("\r\n"). Znaki wiersza są kodowane za pomocą domyślną stronę kodową ANSI systemu. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwości nie obejmują kończącego znaku powrotu karetki lub wiersz źródła danych.  
  
 Gdy przekierowanego strumień zostanie zamknięty, wiersz o wartości null są wysyłane do programu obsługi zdarzeń. Upewnij się, Twoje kontroli programu obsługi zdarzeń <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości odpowiednio przed uzyskiwanie do niej dostępu. Na przykład, można użyć statycznej metody <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> do sprawdzania poprawności <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwość obsługi zdarzenia.  
  
   
  
## Examples  
 W poniższym przykładzie kodu pokazano skojarzony program obsługi zdarzenia prostego <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeń. Program obsługi zdarzeń odbierze wiersze tekstu z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst na ekranie.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>