<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="aecf2-101">Udostępnia dane dla <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> i <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-101">Provides data for the <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> and <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aecf2-102">Asynchronicznie zbierać przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> strumień wyjściowy procesu, należy utworzyć metodę, która obsługuje zdarzenia dane wyjściowe przekierowane strumienia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-102">To asynchronously collect the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream output of a process, you must create a method that handles the redirected stream output events.</span></span> <span data-ttu-id="aecf2-103">Metoda obsługi zdarzeń jest wywoływane, gdy proces zapisuje przekierowanego strumienia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-103">The event-handler method is called when the process writes to the redirected stream.</span></span> <span data-ttu-id="aecf2-104">Obsługi zdarzenia z wystąpieniem klasy wywołuje delegata zdarzenia <xref:System.Diagnostics.DataReceivedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="aecf2-104">The event delegate calls your event handler with an instance of <xref:System.Diagnostics.DataReceivedEventArgs>.</span></span> <span data-ttu-id="aecf2-105"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość zawiera wiersza tekstu, która zarejestrowała procesu do przekierowywania strumienia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-105">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property contains the text line that the process wrote to the redirected stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aecf2-106">W poniższym przykładzie przedstawiono sposób wykonywania asynchronicznych operacji odczytu na przekierowanym <xref:System.Diagnostics.Process.StandardOutput%2A> strumień `sort` polecenia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-106">The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the `sort` command.</span></span> <span data-ttu-id="aecf2-107">`sort` Polecenie jest aplikacja konsolowa, która odczytuje i sortuje wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="aecf2-107">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="aecf2-108">W przykładzie jest tworzony delegata zdarzenia dla `SortOutputHandler` obsługi zdarzeń i kojarzy ją z <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="aecf2-108">The example creates an event delegate for the `SortOutputHandler` event handler and associates it with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="aecf2-109">Program obsługi zdarzeń odbiera wierszy tekstu z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst do ekranu.</span><span class="sxs-lookup"><span data-stu-id="aecf2-109">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aecf2-110">Pobiera wiersz znaków, który został zapisany do przekierowywania <see cref="T:System.Diagnostics.Process" /> strumienia wyjściowego.</span><span class="sxs-lookup"><span data-stu-id="aecf2-110">Gets the line of characters that was written to a redirected <see cref="T:System.Diagnostics.Process" /> output stream.</span></span></summary>
        <value><span data-ttu-id="aecf2-111">Wiersz napisanego przez skojarzony <see cref="T:System.Diagnostics.Process" /> do jego przekierowanego <see cref="P:System.Diagnostics.Process.StandardOutput" /> lub <see cref="P:System.Diagnostics.Process.StandardError" /> strumienia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-111">The line that was written by an associated <see cref="T:System.Diagnostics.Process" /> to its redirected <see cref="P:System.Diagnostics.Process.StandardOutput" /> or <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aecf2-112">Podczas przekierowywania <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> strumienia <xref:System.Diagnostics.Process> do obsługi zdarzenia, zdarzenie jest wywoływane każdorazowo proces zapisuje wiersz do przekierowywania strumienia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-112">When you redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> or <xref:System.Diagnostics.Process.StandardError%2A> stream of a <xref:System.Diagnostics.Process> to your event handler, an event is raised each time the process writes a line to the redirected stream.</span></span> <span data-ttu-id="aecf2-113"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość jest wiersz który <xref:System.Diagnostics.Process> zapisano do strumienia wyjściowego przekierowane.</span><span class="sxs-lookup"><span data-stu-id="aecf2-113">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property is the line that the <xref:System.Diagnostics.Process> wrote to the redirected output stream.</span></span> <span data-ttu-id="aecf2-114">Można użyć obsługi zdarzenia <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości, aby filtrować dane wyjściowe procesu lub zapisywania danych wyjściowych do lokalizacji alternatywnej.</span><span class="sxs-lookup"><span data-stu-id="aecf2-114">Your event handler can use the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property to filter process output or write output to an alternate location.</span></span> <span data-ttu-id="aecf2-115">Może na przykład utworzyć obsługi zdarzeń, który przechowuje wszystkie wiersze danych wyjściowych błędu w pliku dziennika wyznaczonych błędu.</span><span class="sxs-lookup"><span data-stu-id="aecf2-115">For example, you might create an event handler that stores all error output lines into a designated error log file.</span></span>  
  
 <span data-ttu-id="aecf2-116">Wiersz jest zdefiniowany jako znak sekwencji znaków wiersza źródła danych ("\n") lub znak powrotu karetki poprzedzającą wiersz źródła danych ("\r\n").</span><span class="sxs-lookup"><span data-stu-id="aecf2-116">A line is defined as a sequence of characters followed by a line feed ("\n") or a carriage return immediately followed by a line feed ("\r\n").</span></span> <span data-ttu-id="aecf2-117">Znaki wiersza są zakodowane przy użyciu domyślnej strony kodowej ANSI systemu.</span><span class="sxs-lookup"><span data-stu-id="aecf2-117">The line characters are encoded using the default system ANSI code page.</span></span> <span data-ttu-id="aecf2-118"><xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwości nie obejmują Trwa przerywanie działania powrotu karetki lub wiersz źródła danych.</span><span class="sxs-lookup"><span data-stu-id="aecf2-118">The <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property does not include the terminating carriage return or line feed.</span></span>  
  
 <span data-ttu-id="aecf2-119">Gdy przekierowanego strumień jest zamknięty, pustym wierszu są wysyłane do programu obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="aecf2-119">When the redirected stream is closed, a null line is sent to the event handler.</span></span> <span data-ttu-id="aecf2-120">Upewnij się, Twoje kontroli programu obsługi zdarzeń <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości odpowiednio przed uzyskują do niej dostęp.</span><span class="sxs-lookup"><span data-stu-id="aecf2-120">Ensure your event handler checks the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property appropriately before accessing it.</span></span> <span data-ttu-id="aecf2-121">Na przykład można użyć metody statycznej <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> do sprawdzania poprawności <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> właściwości w obsługi zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="aecf2-121">For example, you can use the static method <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> to validate the <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> property in your event handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aecf2-122">Poniższy przykładowy kod przedstawia skojarzonej obsługi zdarzenia prostego <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="aecf2-122">The following code example illustrates a simple event handler associated with the <xref:System.Diagnostics.Process.OutputDataReceived> event.</span></span> <span data-ttu-id="aecf2-123">Program obsługi zdarzeń odbiera wierszy tekstu z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst do ekranu.</span><span class="sxs-lookup"><span data-stu-id="aecf2-123">The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.</span></span>  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>