<Type Name="DataReceivedEventArgs" FullName="System.Diagnostics.DataReceivedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24682d8d98bf71ce57b52a0544cc49ca120af4cc" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253158" /></Metadata><TypeSignature Language="C#" Value="public class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataReceivedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DataReceivedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataReceivedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReceivedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type DataReceivedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Dostarcza dane dla <see cref="E:System.Diagnostics.Process.OutputDataReceived" /> zdarzeń i <see cref="E:System.Diagnostics.Process.ErrorDataReceived" /> .</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby asynchroniczne zbieranie danych wyjściowych <xref:System.Diagnostics.Process.StandardError%2A> przekierowanych <xref:System.Diagnostics.Process.StandardOutput%2A> lub przesyłanych strumieniowo z procesu, należy utworzyć metodę, która obsługuje przekierowane zdarzenia wyjściowe strumienia. Metoda obsługi zdarzeń jest wywoływana, gdy proces zapisuje dane w przekierowanym strumieniu. Obiekt delegowany zdarzeń wywołuje program obsługi zdarzeń z wystąpieniem <xref:System.Diagnostics.DataReceivedEventArgs>. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość zawiera wiersz tekstu, który proces zapisał w przekierowanym strumieniu.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje sposób wykonywania asynchronicznych operacji odczytu w przekierowanym <xref:System.Diagnostics.Process.StandardOutput%2A> strumieniu `sort` polecenia. `sort` Polecenie jest aplikacją konsolową, która odczytuje i sortuje dane wejściowe tekstu.  
  
 Przykład tworzy delegata zdarzenia dla `SortOutputHandler` programu obsługi zdarzeń i kojarzy go <xref:System.Diagnostics.Process.OutputDataReceived> ze zdarzeniem. Program obsługi zdarzeń odbiera wiersze tekstowe z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst na ekranie.  
  
 [!code-cpp[Process_AsyncStreams#1](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/sort_async.cpp#1)]
 [!code-csharp[Process_AsyncStreams#1](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/sort_async.cs#1)]
 [!code-vb[Process_AsyncStreams#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/sort_async.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.DataReceivedEventHandler" />
    <altmember cref="E:System.Diagnostics.Process.OutputDataReceived" />
    <altmember cref="E:System.Diagnostics.Process.ErrorDataReceived" />
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public string Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Data { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Data : string" Usage="System.Diagnostics.DataReceivedEventArgs.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wiersz znaków, który został zapisany w przekierowanym <see cref="T:System.Diagnostics.Process" /> strumieniu wyjściowym.</summary>
        <value>Wiersz, który został zapisany przez skojarzony <see cref="T:System.Diagnostics.Process" /> ze swoim przekierowanym <see cref="P:System.Diagnostics.Process.StandardError" /> <see cref="P:System.Diagnostics.Process.StandardOutput" /> lub przesyłanym strumieniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po przekierowaniu <xref:System.Diagnostics.Process.StandardOutput%2A> lub <xref:System.Diagnostics.Process.StandardError%2A> przesłaniu strumienia <xref:System.Diagnostics.Process> do programu obsługi zdarzeń zdarzenie jest wywoływane za każdym razem, gdy proces zapisuje wiersz w przekierowanym strumieniu. Właściwość jest wierszem, <xref:System.Diagnostics.Process> który zapisano w przekierowanym strumieniu wyjściowym. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Program obsługi zdarzeń może użyć właściwości <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> , aby filtrować dane wyjściowe procesu lub zapisywać dane wyjściowe do lokalizacji alternatywnej. Można na przykład utworzyć procedurę obsługi zdarzeń, która przechowuje wszystkie wiersze wyjściowe błędów w wytworzonym pliku dziennika błędów.  
  
 Wiersz jest definiowany jako sekwencja znaków, po którym następuje znak wysuwu wiersza ("\n") lub znak powrotu karetki bezpośrednio po znaku wysuwu wiersza ("\r\n"). Znaki wiersza są kodowane przy użyciu domyślnej strony kodowej ANSI. <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Właściwość nie zawiera przerywanego powrotu karetki ani wysuwu wiersza.  
  
 Gdy strumień przekierowany zostanie zamknięty, do procedury obsługi zdarzeń jest wysyłany wiersz o wartości null. Upewnij się, <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> że program obsługi zdarzeń odpowiednio sprawdza właściwość przed uzyskaniem dostępu do niej. Na przykład można użyć statycznej metody <xref:System.String.IsNullOrEmpty%2A?displayProperty=nameWithType> do <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> walidacji właściwości w programie obsługi zdarzeń.  
  
   
  
## Examples  
 Poniższy przykład kodu ilustruje prostą procedurę obsługi zdarzeń skojarzoną ze <xref:System.Diagnostics.Process.OutputDataReceived> zdarzeniem. Program obsługi zdarzeń odbiera wiersze tekstowe z przekierowanego <xref:System.Diagnostics.Process.StandardOutput%2A> strumienia, formatuje tekst i zapisuje tekst na ekranie.  
  
 [!code-cpp[Process_AsyncStreams#4](~/samples/snippets/cpp/VS_Snippets_CLR/process_asyncstreams/CPP/datareceivedevent.cpp#4)]
 [!code-csharp[Process_AsyncStreams#4](~/samples/snippets/csharp/VS_Snippets_CLR/process_asyncstreams/CS/datareceivedevent.cs#4)]
 [!code-vb[Process_AsyncStreams#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/process_asyncstreams/VB/datareceivedevent.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
