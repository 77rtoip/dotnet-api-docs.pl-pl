<Type Name="EventTypeFilter" FullName="System.Diagnostics.EventTypeFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="557c930b54c9e8cc1eb9b86a24f207c2d5265f6a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30448980" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventTypeFilter : System.Diagnostics.TraceFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTypeFilter extends System.Diagnostics.TraceFilter" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventTypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTypeFilter&#xA;Inherits TraceFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTypeFilter : System::Diagnostics::TraceFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wskazuje, czy należy śledzenia odbiornik oparty na typie zdarzenia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jedną z wielu różnych typów filtrów można przypisać do odbiornik śledzenia za pomocą <xref:System.Diagnostics.TraceListener.Filter%2A> właściwości, aby zapewnić warstwę osłaniania poza zapewnianej przez <xref:System.Diagnostics.TraceSwitch>. Filtr może służyć do kontrolowania typy zdarzeń, które są tworzone przez odbiornik.  
  
 Ta klasa filtruje zdarzenia na podstawie wartości z <xref:System.Diagnostics.EventTypeFilter.EventType%2A> właściwości.  Tej właściwości można ustawić kodu lub w pliku konfiguracji, aby określić typ zdarzenia wiadomości, które powinny być śledzone przez odbiornik. Wartość właściwości wskazuje wartość progową, od której ma rozpocząć śledzenie. Typy zdarzeń w i powyżej określonego poziomu są śledzone. <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A> Metody wywoływane przez odbiorników, aby określić, czy zdarzenie powinny być śledzone, używa wartości <xref:System.Diagnostics.EventTypeFilter.EventType%2A> właściwości.  
  
 Ustawić zdarzenia w typ, od którego należy zacząć śledzenia, edycję pliku konfiguracyjnego, który odpowiada nazwie aplikacji. W tym pliku należy dodać odbiornik, ustaw jej typ filtru i określić typ zdarzenia śledzenia. Plik konfiguracji powinien być sformatowany w następujący sposób.  
  
```  
<configuration>  
  <system.diagnostics>  
    <sharedListeners>  
      <add name="Console" type="System.Diagnostics.ConsoleTraceListener">  
        <filter type="System.Diagnostics.EventTypeFilter"   
          initializeData="Warning" />  
      </add>  
    </sharedListeners>  
  </system.diagnostics>  
</configuration>  
```  
  
 Aby uzyskać więcej informacji o tym, jak zainicjować danych dla <xref:System.Diagnostics.EventTypeFilter>, zobacz [ &lt;filtru&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/filter-element-for-add-for-sharedlisteners.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTypeFilter (System.Diagnostics.SourceLevels level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SourceLevels level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.#ctor(System.Diagnostics.SourceLevels)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (level As SourceLevels)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTypeFilter(System::Diagnostics::SourceLevels level);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="level" Type="System.Diagnostics.SourceLevels" />
      </Parameters>
      <Docs>
        <param name="level">Bitowe połączenie <see cref="T:System.Diagnostics.SourceLevels" /> wartości, które określają typ zdarzenia śledzenia wiadomości.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.EventTypeFilter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość `level` parametr jest używany do inicjowania <xref:System.Diagnostics.EventTypeFilter.EventType%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SourceLevels EventType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SourceLevels EventType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventTypeFilter.EventType" />
      <MemberSignature Language="VB.NET" Value="Public Property EventType As SourceLevels" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::SourceLevels EventType { System::Diagnostics::SourceLevels get(); void set(System::Diagnostics::SourceLevels value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SourceLevels</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zdarzenia komunikatów śledzenia.</summary>
        <value>Bitowe połączenie <see cref="T:System.Diagnostics.SourceLevels" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.EventTypeFilter.EventType%2A> Właściwość wskazuje poziom, na którym mają być śledzone.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldTrace">
      <MemberSignature Language="C#" Value="public override bool ShouldTrace (System.Diagnostics.TraceEventCache cache, string source, System.Diagnostics.TraceEventType eventType, int id, string formatOrMessage, object[] args, object data1, object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldTrace(class System.Diagnostics.TraceEventCache cache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string formatOrMessage, object[] args, object data1, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ShouldTrace (cache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, formatOrMessage As String, args As Object(), data1 As Object, data As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ShouldTrace(System::Diagnostics::TraceEventCache ^ cache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ formatOrMessage, cli::array &lt;System::Object ^&gt; ^ args, System::Object ^ data1, cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="formatOrMessage" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="data1" Type="System.Object" />
        <Parameter Name="data" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="cache">A <see cref="T:System.Diagnostics.TraceEventCache" /> reprezentujący w pamięci podręcznej informacje śledzenia zdarzeń.</param>
        <param name="source">Nazwa źródła.</param>
        <param name="eventType">Jeden z <see cref="T:System.Diagnostics.TraceEventType" /> wartości.</param>
        <param name="id">Liczba identyfikator śledzenia.</param>
        <param name="formatOrMessage">Format do użycia przy zapisie tablicę argumentów lub komunikat do zapisania.</param>
        <param name="args">Tablica obiektów argumentu.</param>
        <param name="data1">Obiekt danych śledzenia.</param>
        <param name="data">Tablica obiektów danych śledzenia.</param>
        <summary>Określa, czy nasłuchującego śledzenia powinien śledzenia zdarzeń.</summary>
        <returns>
          <see langword="true" /> Jeśli śledzenie będą tworzone; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wartość `eventType` parametr jest większa niż lub równa wartości <xref:System.Diagnostics.EventTypeFilter.EventType%2A> właściwości, metoda zwraca `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>