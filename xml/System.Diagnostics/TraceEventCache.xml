<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8a11ff8549563b2a37cda1e0a18c8dcf3731da03" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39870857" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="46de1-101">Udostępnia dane śledzenia zdarzeń specyficznych dla wątku i procesu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="46de1-101">Provides trace event data specific to a thread and a process.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="46de1-102"><xref:System.Diagnostics.TraceEventCache> Klasy, zaprojektowana jako optymalizacji wydajności dla wywołań odbiornik śledzenia ma znaczenie tylko dla deweloperów, tworzenie obiektów nasłuchujących śledzenia niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="46de1-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="46de1-103"><xref:System.Diagnostics.TraceEventCache> Klasa jest używana jako parametr metody śledzenia, aby dokładnie zidentyfikować źródło zdarzenia śledzenia.</span><span class="sxs-lookup"><span data-stu-id="46de1-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="46de1-104">Przykładowe metody, które używają <xref:System.Diagnostics.TraceEventCache> są <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> i <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="46de1-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="46de1-105"><xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> Właściwość zawiera dane, który może służyć do skorelowania śledzenia przy użyciu powiązanych danych śledzenia.</span><span class="sxs-lookup"><span data-stu-id="46de1-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="46de1-106">Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.TraceEventCache" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-107">Pobiera stos wywołań dla bieżącego wątku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-107">Gets the call stack for the current thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-108">Ciąg zawierający informacje o śladzie stosu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-108">A string containing stack trace information.</span>
          </span>
          <span data-ttu-id="46de1-109">Ta wartość może być pustym ciągiem ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-109">This value can be an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-110"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> Właściwości pobiera stos wywołań z <xref:System.Environment.StackTrace%2A> właściwość <xref:System.Environment> klasy.</span><span class="sxs-lookup"><span data-stu-id="46de1-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="46de1-111">Wartość właściwości zawiera wywołania metody w odwrotnej kolejności chronologicznej.</span><span class="sxs-lookup"><span data-stu-id="46de1-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="46de1-112">Oznacza to najbardziej aktualną wywołania metody opisano najpierw.</span><span class="sxs-lookup"><span data-stu-id="46de1-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="46de1-113">Jeden wiersz informacje śledzenia stosu jest wyświetlana dla każdego wywołania metody na stosie.</span><span class="sxs-lookup"><span data-stu-id="46de1-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="46de1-114">Aby uzyskać więcej informacji, zobacz <xref:System.Environment.StackTrace%2A>.</span><span class="sxs-lookup"><span data-stu-id="46de1-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="46de1-115">Aby uzyskać pełny dostęp do zasobów chronionych przez uprawnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-115">for full access to the resource protected by the permission.</span>
          </span>
          <span data-ttu-id="46de1-116">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-117">Pobiera datę i godzinę, w którym wystąpił śledzenia zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-117">Gets the date and time at which the event trace occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-118">A <see cref="T:System.DateTime" /> struktury, którego wartością jest datę i godzinę, wyrażone w uniwersalnego czasu koordynowanego (UTC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-119">Po raz pierwszy uzyskano dostęp do właściwości w wystąpieniu <xref:System.Diagnostics.TraceEventCache> klasy bieżący czas jest zwracany.</span><span class="sxs-lookup"><span data-stu-id="46de1-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="46de1-120">Kolejne zapytania dotyczące tej właściwości w tym wystąpieniu zwracają takim samym <xref:System.DateTime> wartości, dzięki czemu może być ona używana jako sygnaturę czasową.</span><span class="sxs-lookup"><span data-stu-id="46de1-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-121">Pobiera dane korelacji, znajdujących się w stosie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-121">Gets the correlation data, contained in a stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-122">A <see cref="T:System.Collections.Stack" /> zawierające dane korelacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-123">Dane korelacji są przechowywane jako obiekt w kontekście wywołań o nazwie "System.Diagnostics.Trace.CorrelationManagerSlot".</span><span class="sxs-lookup"><span data-stu-id="46de1-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="46de1-124"><xref:System.Diagnostics.CorrelationManager> Klasa udostępnia metody używane do przechowywania tożsamości operacji logicznej w kontekście wątku wiązaniem i automatycznie dodają tagi każdego zdarzenia śledzenia generowane przez wątek przy użyciu przechowywanych tożsamości.</span><span class="sxs-lookup"><span data-stu-id="46de1-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="46de1-125"><xref:System.Diagnostics.CorrelationManager> Odbywa się za pośrednictwem <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="46de1-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="46de1-126">Każde wywołanie <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> metoda wypycha nową tożsamość operacji logicznej na stosie.</span><span class="sxs-lookup"><span data-stu-id="46de1-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="46de1-127">Każde wywołanie <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> metoda POP tożsamości operacji logicznej ze stosu</span><span class="sxs-lookup"><span data-stu-id="46de1-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-128">Pobiera unikatowy identyfikator bieżącego procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-128">Gets the unique identifier of the current process.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-129">Wygenerowana przez system Unikatowy identyfikator bieżącego procesu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-129">The system-generated unique identifier of the current process.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-130">Aż do zakończenia procesu, identyfikator procesu unikatowo identyfikuje proces w całym systemie.</span><span class="sxs-lookup"><span data-stu-id="46de1-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="46de1-131">Aby uzyskać możliwość wywoływania niezarządzanego kodu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-131">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="46de1-132">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-133">Pobiera unikatowy identyfikator dla bieżącego wątku zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-133">Gets a unique identifier for the current managed thread.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-134">Ciąg, który reprezentuje identyfikator unikatowy liczby całkowitej dla tego wątku zarządzanych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-134">A string that represents a unique integer identifier for this managed thread.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-135">Identyfikator wątku jest wartością <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> właściwość sformatowany jako ciąg.</span><span class="sxs-lookup"><span data-stu-id="46de1-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="46de1-136">Pobiera bieżącą liczbę taktów w mechanizmie czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-136">Gets the current number of ticks in the timer mechanism.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="46de1-137">Wartość licznika znaczników podstawowego mechanizmu czasomierza.</span>
          <span class="sxs-lookup">
            <span data-stu-id="46de1-137">The tick counter value of the underlying timer mechanism.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="46de1-138">Wywołania metody dostępu get <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> metodę, aby uzyskać sygnaturę czasową.</span><span class="sxs-lookup"><span data-stu-id="46de1-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="46de1-139">Jeśli <xref:System.Diagnostics.Stopwatch> klasa używa licznika wydajności o wysokiej rozdzielczości, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> zwraca bieżącą wartość tego licznika.</span><span class="sxs-lookup"><span data-stu-id="46de1-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="46de1-140">Jeśli <xref:System.Diagnostics.Stopwatch> klasa używa czasomierz systemowy <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> zwraca <xref:System.DateTime.Ticks%2A> właściwość <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="46de1-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>