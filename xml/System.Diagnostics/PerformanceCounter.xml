<Type Name="PerformanceCounter" FullName="System.Diagnostics.PerformanceCounter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a438b67b7f265f3cbb8289a9a710426788f23d93" /><Meta Name="ms.sourcegitcommit" Value="a81314feefaa9d10797d6bfe39dab52ca7fd1709" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/22/2019" /><Meta Name="ms.locfileid" Value="69973185" /></Metadata><TypeSignature Language="C#" Value="public sealed class PerformanceCounter : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PerformanceCounter extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.PerformanceCounter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PerformanceCounter&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class PerformanceCounter sealed : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type PerformanceCounter = class&#xA;    inherit Component&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.Diagnostics.PerformanceCounterInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.PerformanceCounterDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType("System.Diagnostics.PerformanceCounterInstaller,System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje składnik licznika wydajności systemu Windows NT.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Składnik <xref:System.Diagnostics.PerformanceCounter> ten może służyć do odczytywania istniejących wstępnie zdefiniowanych lub niestandardowych liczników oraz publikowania (zapisywania) danych wydajności do liczników niestandardowych.  
  
 W oknie [dialogowym Dodawanie liczników](https://go.microsoft.com/fwlink/p/?LinkId=257854)monitora wydajności systemu Windows jest dostępnych wiele wstępnie zdefiniowanych liczników. Aby dowiedzieć się więcej o licznikach wydajności .NET Framework, zobacz [liczniki wydajności](~/docs/framework/debug-trace-profile/performance-counters.md).  
  
 Ten typ implementuje <xref:System.IDisposable> interfejs. Po zakończeniu korzystania z typu należy usunąć jego wartość bezpośrednio lub pośrednio. Aby usunąć typ bezpośrednio <xref:System.IDisposable.Dispose%2A> , wywołaj jego metodę `try` / `catch` w bloku. Aby usunąć go pośrednio, użyj konstrukcji języka, takiej jak `using` (in C#) lub `Using` (w Visual Basic). Aby uzyskać więcej informacji, zobacz sekcję "Używanie obiektu implementującego <xref:System.IDisposable> interfejs IDisposable" w temacie dotyczącym interfejsu.  
  
> [!IMPORTANT]
>  W wersjach 1,0 i 1,1 .NET Framework Ta klasa wymaga, aby natychmiastowe wywołania były w pełni zaufane. Począwszy od .NET Framework w wersji 2,0, ta klasa jest <xref:System.Diagnostics.PerformanceCounterPermission> wymagana dla określonych akcji. Zdecydowanie zaleca się, <xref:System.Diagnostics.PerformanceCounterPermission> aby nie przydzielić mu kodu częściowo zaufanego.  Możliwość odczytu i zapisu liczników wydajności umożliwia kod do wykonywania akcji, takich jak Wyliczenie procesów wykonywania i uzyskiwanie informacji o nich.  
>   
>  Ponadto przekazywanie <xref:System.Diagnostics.PerformanceCounter> obiektu do bardziej zaufanego kodu może spowodować problem z zabezpieczeniami. Nigdy nie przekazuj obiektów liczników wydajności, takich jak <xref:System.Diagnostics.PerformanceCounterCategory> lub <xref:System.Diagnostics.PerformanceCounter>, do mniej zaufanych kodów.  
  
 Aby odczytać z licznika <xref:System.Diagnostics.PerformanceCounter> wydajności, Utwórz wystąpienie klasy, <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>ustaw parametry, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i, opcjonalnie, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> właściwości lub <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> , a następnie Wywołaj <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodę, aby uzyskać wydajność Odczytywanie licznika.  
  
 Aby opublikować dane licznika wydajności, należy utworzyć co najmniej jeden niestandardowy licznik przy <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> użyciu metody, utworzyć wystąpienie <xref:System.Diagnostics.PerformanceCounter> klasy, ustawić <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> i, opcjonalnie <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> lub <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> właściwości, a następnie Wywołaj <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A>metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>,, <xref:System.Diagnostics.PerformanceCounter.Decrement%2A> lub ustaw <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość, aby zmienić wartość licznika niestandardowego.  
  
> [!NOTE]
>  Metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> i<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> służą do aktualizowania wartości licznika. Dzięki temu wartość licznika jest poprawna w scenariuszach wielowątkowych lub wielowątkowych, ale również powstaje spadek wydajności. Jeśli nie potrzebujesz dokładności zapewnianej przez operacje wykonywane w sposób niezbędny, możesz zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość bezpośrednio przez maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowych niektóre aktualizacje wartości licznika mogą zostać zignorowane, co spowodowało niedokładne dane.  
  
 Licznik jest mechanizmem, za pomocą którego zbierane są dane wydajności. W rejestrze są przechowywane nazwy wszystkich liczników, z których każdy jest powiązany z określonym obszarem funkcji systemu. Przykłady obejmują czas zajętości procesora, użycie pamięci lub liczbę bajtów odebranych za pośrednictwem połączenia sieciowego.  
  
 Każdy licznik jest jednoznacznie identyfikowany za jego nazwą i lokalizacją. W taki sam sposób, w jaki ścieżka pliku zawiera dysk, katalog, jeden lub więcej podkatalogów i nazwę pliku, informacje o licznikach składają się z czterech elementów: komputera, kategorii, wystąpienia kategorii i nazwy licznika.  
  
 Informacje o licznikach muszą obejmować kategorię lub obiekt wydajności, z których Licznik mierzy dane. Kategorie komputerów obejmują składniki fizyczne, takie jak procesory, dyski i pamięć. Istnieją także kategorie systemowe, takie jak procesy i wątki. Każda kategoria jest powiązana z elementem funkcjonalnym w ramach komputera i ma zestaw przypisanych do niego standardowych liczników. Te obiekty są wymienione na liście rozwijanej obiekt wydajności okna dialogowego Dodawanie liczników w ramach monitora systemu Windows 2000 i należy je uwzględnić w ścieżce licznika. Dane wydajności są pogrupowane według kategorii, z którą jest powiązana.  
  
 W niektórych przypadkach może istnieć kilka kopii tej samej kategorii. Na przykład kilka procesów i wątków działa jednocześnie, a niektóre komputery zawierają więcej niż jeden procesor. Kopie kategorii są nazywane wystąpieniami kategorii, a każde wystąpienie ma przypisany zestaw standardowych liczników. Jeśli kategoria może mieć więcej niż jedno wystąpienie, Specyfikacja wystąpienia musi być uwzględniona w informacjach o liczniku.  
  
 Aby uzyskać dane dotyczące wydajności dla liczników, które wymagały początkowej lub poprzedniej wartości do wykonania niezbędnych obliczeń, wywołaj <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metodę dwukrotnie i Użyj informacji zwracanych w zależności od potrzeb aplikacji.  
  
> [!NOTE]
>  Kategorie licznika wydajności zainstalowane z [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] użyciem oddzielnej udostępnionej pamięci, z każdą kategorią licznika wydajności mającą własną pamięć. Można określić rozmiar oddzielnej pamięci współdzielonej przez utworzenie typu DWORD o nazwie FileMappingSize w kluczu rejestru\\HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services*\<Category Name >* \Performance. Wartość FileMappingSize jest ustawiona na rozmiar pamięci współdzielonej kategorii. Domyślny rozmiar to 131072 dziesiętny. Jeśli FileMappingSize wartość nie istnieje, `fileMappingSize` zostanie użyta wartość atrybutu dla elementu określonego w pliku Machine. config, co spowoduje dodatkowe obciążenie związane z `performanceCounters` przetwarzaniem plików konfiguracyjnych. Zwiększenie wydajności uruchamiania aplikacji można zrealizować przez ustawienie rozmiaru mapowania plików w rejestrze. Aby uzyskać więcej informacji o rozmiarze mapowania plików, zobacz [ &lt;liczniki wydajności&gt;](~/docs/framework/configure-apps/file-schema/trace-debug/performancecounters-element.md).  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje użycie <xref:System.Diagnostics.PerformanceCounter> klasy do tworzenia i <xref:System.Diagnostics.PerformanceCounterType.AverageCount64> używania typu licznika. Przykład tworzy kategorie, konfiguruje liczniki, zbiera dane z liczników i wywołuje <xref:System.Diagnostics.CounterSampleCalculator> klasę, aby interpretować dane licznika wydajności. Wyniki pośrednie i końcowe są wyświetlane w oknie konsoli. Dodatkowe przykłady dotyczące innych typów liczników wydajności można znaleźć w <xref:System.Diagnostics.PerformanceCounterType> wyliczeniu.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
    <altmember cref="T:System.Diagnostics.CounterCreationData" />
    <altmember cref="T:System.Diagnostics.CounterCreationDataCollection" />
    <altmember cref="T:System.Diagnostics.CounterSample" />
    <altmember cref="T:System.Diagnostics.CounterSampleCalculator" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">aby uzyskać pełne zaufanie dla bezpośredniego obiektu wywołującego. Nie można użyć tej klasy w kodzie częściowo zaufanym.</permission>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Diagnostics.PerformanceCounter" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.PerformanceCounter" /> tylko do odczytu klasy, bez kojarzenia wystąpienia z dowolnym system lub niestandardowy licznik wydajności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>przeciążenie konstruktora ustawia właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> na puste ciągi <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> ("") i ustawia właściwość na komputer lokalny (".").  
  
 Ten konstruktor nie inicjuje licznika wydajności, dlatego nie kojarzy wystąpienia z istniejącym licznikiem na komputerze lokalnym. Aby wskazać określony licznik wydajności, należy <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>ustawić, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> i, opcjonalnie, właściwości i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> przed odczytaniem innych właściwości lub próby odczytu z licznika. Aby zapisać dane <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> w liczniku wydajności, należy ustawić właściwość `false`na.  
  
> [!NOTE]
>  &#124; <xref:System.Security.Permissions.HostProtectionResource.SharedState> <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> <xref:System.Security.Permissions.HostProtectionResource.Synchronization> Atrybut zastosowany do tego elementu członkowskiego ma następującą wartość właściwości:. <xref:System.Security.Permissions.HostProtectionAttribute> Atrybut <xref:System.Security.Permissions.HostProtectionAttribute> nie ma wpływu na aplikacje pulpitu (które typowo są uruchamiane przez dwukrotne kliknięcie ikony, wpisanie polecenia albo wprowadzenie adresu URL w przeglądarce). Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.HostProtectionAttribute> [atrybuty programowania klasy lub SQL Server i ochrony hosta](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie <xref:System.Diagnostics.PerformanceCounter> domyślne klasy. Po utworzeniu <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>wystąpienia wartości właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> są ustawiane, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> a wyniki wywołania metody są wyświetlane.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</param>
        <param name="counterName">Nazwa licznika wydajności.</param>
        <summary>Inicjuje nowe wystąpienie tylko do <see cref="T:System.Diagnostics.PerformanceCounter" /> odczytu klasy i kojarzy je z określonym systemem lub niestandardowym licznikiem wydajności na komputerze lokalnym. Ten Konstruktor wymaga, aby Kategoria miała pojedyncze wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ciągach parametrów nie jest rozróżniana wielkość liter.  
  
 Użyj tego przeciążenia, aby uzyskać dostęp do licznika na komputerze lokalnym, który należy do kategorii zawierającej pojedyncze wystąpienie kategorii licznika wydajności. Jeśli próbujesz użyć tego konstruktora do wskazywania tego <xref:System.Diagnostics.PerformanceCounter> wystąpienia dla kategorii zawierającej wiele wystąpień, Konstruktor zgłosi wyjątek. To Przeciążenie może uzyskać dostęp do dowolnego licznika tylko do odczytu lub odczytu/zapisu, ale robi to w trybie tylko do odczytu. <xref:System.Diagnostics.PerformanceCounter> Wystąpienie utworzone za pomocą tego przeciążenia nie może zapisywać w liczniku, nawet jeśli sam licznik jest odczyt/zapis.  
  
 To <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> przeciążenie konstruktora ustawia właściwości i <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> dla <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> przekazywanych wartości, ustawia właściwość na komputer lokalny <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> , "." i ustawia właściwość na ciąg pusty ("").  
  
 Ten konstruktor inicjuje licznik wydajności i kojarzy wystąpienie z istniejącym licznikiem (system lub licznik niestandardowy) na komputerze lokalnym. Wartości, które są przekazywane dla <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> właściwości i, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> muszą wskazywać na istniejący licznik wydajności na komputerze lokalnym.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" />jest pustym ciągiem ("").  
  
—lub— 
 <paramref name="counterName" />jest pustym ciągiem ("").  
  
—lub— 
Określona Kategoria nie istnieje.  
  
—lub— 
Określona kategoria jest oznaczona jako wiele wystąpień i wymaga, aby licznik wydajności został utworzony przy użyciu nazwy wystąpienia.  
  
—lub— 
 <paramref name="categoryName" />i <paramref name="counterName" /> zostały zlokalizowane w różnych językach.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" />lub <paramref name="counterName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
       <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</param>
        <param name="counterName">Nazwa licznika wydajności.</param>
        <param name="readOnly"><see langword="true" />Aby uzyskać dostęp do licznika w trybie tylko do odczytu (chociaż licznik może być tylko do odczytu/zapisu); <see langword="false" /> Aby uzyskać dostęp do licznika w trybie odczytu/zapisu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.PerformanceCounter" /> , tylko do odczytu lub odczytu/zapisu klasy i kojarzy je z określonym systemem lub niestandardowym licznikiem wydajności na komputerze lokalnym. Ten Konstruktor wymaga, aby Kategoria zawierała pojedyncze wystąpienie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ciągach parametrów nie jest rozróżniana wielkość liter.  
  
 Użyj tego przeciążenia, aby uzyskać dostęp do licznika tylko do odczytu lub odczytu/zapisu na komputerze lokalnym, który należy do kategorii zawierającej pojedyncze wystąpienie kategorii licznika wydajności. Jeśli próbujesz użyć tego konstruktora do wskazywania tego <xref:System.Diagnostics.PerformanceCounter> wystąpienia dla kategorii zawierającej wiele wystąpień, Konstruktor zgłosi wyjątek.  
  
 <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>To przeciążenie konstruktora ustawia właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> na przekazywane wartości, ustawia <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> właściwość na komputer lokalny, "." i ustawia <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> właściwość na pusty ciąg ("").  
  
 Ten konstruktor inicjuje licznik wydajności i kojarzy wystąpienie z istniejącym licznikiem (system lub licznik niestandardowy) na komputerze lokalnym. Wartości, które są przekazywane dla <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A> właściwości i, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> muszą wskazywać na istniejący licznik wydajności na komputerze lokalnym. Jeśli wystąpienie licznika wydajności, które wskazuje, jest nieprawidłowe, wywołanie konstruktora zgłasza wyjątek.  
  
> [!NOTE]
>  Tego przeciążenia można użyć do nawiązania połączenia z licznikiem systemowym, ale nie można zapisać do licznika systemowego. W związku z `readOnly` tym `false` ustawienie podczas łączenia z licznikiem systemu powoduje, że Konstruktor zgłosi wyjątek.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie <xref:System.Diagnostics.PerformanceCounter> klasy. Przykład przebiega w nazwach kategorii, nazwach liczników i wartości flagi wskazujących, że licznik nie jest tylko do odczytu. Ten przykład kodu jest częścią większego przykładu dla <xref:System.Diagnostics.PerformanceCounter> klasy.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#2)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#2)]
 [!code-vb[PerformanceCounterType.AverageCounter64#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" /> Jest pustym ciągiem ("").  
  
—lub— 
<paramref name="counterName" /> Jest pustym ciągiem ("").  
  
—lub— 
Określona Kategoria nie istnieje. (Jeśli <paramref name="readOnly" /> jest <see langword="true" />).  
  
—lub— 
Określona Kategoria nie jest kategorią niestandardową .NET Framework ( <paramref name="readOnly" /> Jeśli <see langword="false" />jest).  
  
—lub— 
Określona kategoria jest oznaczona jako wiele wystąpień i wymaga, aby licznik wydajności został utworzony przy użyciu nazwy wystąpienia.  
  
—lub— 
 <paramref name="categoryName" />i <paramref name="counterName" /> zostały zlokalizowane w różnych językach.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" />lub <paramref name="counterName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</param>
        <param name="counterName">Nazwa licznika wydajności.</param>
        <param name="instanceName">Nazwa wystąpienia kategorii licznika wydajności lub pusty ciąg (""), jeśli kategoria zawiera pojedyncze wystąpienie.</param>
        <summary>Inicjuje nowe wystąpienie tylko do <see cref="T:System.Diagnostics.PerformanceCounter" /> odczytu klasy i kojarzy je z określonym systemem lub niestandardowym licznikiem wydajności i wystąpieniem kategorii na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ciągach parametrów nie jest rozróżniana wielkość liter.  
  
 To <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>przeciążenie konstruktora ustawia właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> na przekazywane <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> wartości, a następnie ustawia właściwość na komputer lokalny, ".".  
  
 Ten konstruktor inicjuje licznik wydajności i kojarzy wystąpienie z istniejącym licznikiem (system lub licznik niestandardowy) na komputerze lokalnym. Wartości, które są przekazywane dla <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> muszą wskazywać na istniejący licznik wydajności na komputerze lokalnym. Jeśli wystąpienie licznika wydajności wskazywane jest nieprawidłowe, wywołanie konstruktora zgłasza wyjątek.  
  
 To Przeciążenie może uzyskać dostęp do dowolnego licznika tylko do odczytu lub odczytu/zapisu, ale robi to w trybie tylko do odczytu. <xref:System.Diagnostics.PerformanceCounter> Wystąpienie utworzone za pomocą tego przeciążenia nie może zapisywać w liczniku, nawet jeśli sam licznik jest odczyt/zapis.  
  
 Aby utworzyć wystąpienie kategorii wydajności, określ `instanceName` wartość <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> w konstruktorze. Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje, nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" />jest pustym ciągiem ("").  
  
—lub— 
 <paramref name="counterName" />jest pustym ciągiem ("").  
  
—lub— 
Określona kategoria jest nieprawidłowa.  
  
—lub— 
Określona kategoria jest oznaczona jako wiele wystąpień i wymaga, aby licznik wydajności został utworzony przy użyciu nazwy wystąpienia.  
  
—lub— 
 <paramref name="instanceName" />jest dłuższa niż 127 znaków.  
  
—lub— 
 <paramref name="categoryName" />i <paramref name="counterName" /> zostały zlokalizowane w różnych językach.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" />lub <paramref name="counterName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, bool readOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, bool readOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, readOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, bool readOnly);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * bool -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, readOnly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="readOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</param>
        <param name="counterName">Nazwa licznika wydajności.</param>
        <param name="instanceName">Nazwa wystąpienia kategorii licznika wydajności lub pusty ciąg (""), jeśli kategoria zawiera pojedyncze wystąpienie.</param>
        <param name="readOnly"><see langword="true" />Aby uzyskać dostęp do licznika w trybie tylko do odczytu; <see langword="false" /> Aby uzyskać dostęp do licznika w trybie do odczytu/zapisu.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.PerformanceCounter" /> , tylko do odczytu lub odczytu/zapisu klasy i kojarzy je z określonym systemem lub niestandardowym licznikiem wydajności i wystąpieniem kategorii na komputerze lokalnym.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ciągach parametrów nie jest rozróżniana wielkość liter.  
  
 Użyj tego przeciążenia, aby uzyskać dostęp do licznika wydajności w trybie tylko do odczytu lub do odczytu/zapisu.  
  
 To <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>przeciążenie konstruktora ustawia właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> na przekazane wartości, a <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> następnie ustawia właściwość na komputer lokalny, ".".  
  
 Ten konstruktor inicjuje licznik wydajności i kojarzy wystąpienie z istniejącym licznikiem (system lub licznik niestandardowy) na komputerze lokalnym. Wartości, które są przekazywane dla <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> muszą wskazywać na istniejący licznik wydajności na komputerze lokalnym. Jeśli wystąpienie licznika wydajności, które wskazuje, jest nieprawidłowe, wywołanie konstruktora zgłasza wyjątek.  
  
> [!NOTE]
>  Tego przeciążenia można użyć do nawiązania połączenia z licznikiem systemowym, ale nie można zapisać do licznika systemowego. W związku z `readOnly` tym `false` ustawienie podczas łączenia z licznikiem systemu powoduje, że Konstruktor zgłosi wyjątek.  
  
 Aby utworzyć wystąpienie kategorii wydajności, określ `instanceName` wartość <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> w konstruktorze. Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje, nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" />jest pustym ciągiem ("").  
  
—lub— 
 <paramref name="counterName" />jest pustym ciągiem ("").  
  
—lub— 
Żądane ustawienie uprawnienia do odczytu/zapisu jest nieprawidłowe dla tego licznika.  
  
—lub— 
Określona Kategoria nie istnieje (Jeśli <paramref name="readOnly" /> jest <see langword="true" />).  
  
—lub— 
Określona Kategoria nie jest kategorią niestandardową .NET Framework ( <paramref name="readOnly" /> Jeśli <see langword="false" />jest).  
  
—lub— 
Określona kategoria jest oznaczona jako wiele wystąpień i wymaga, aby licznik wydajności został utworzony przy użyciu nazwy wystąpienia.  
  
—lub— 
 <paramref name="instanceName" />jest dłuższa niż 127 znaków.  
  
—lub— 
 <paramref name="categoryName" />i <paramref name="counterName" /> zostały zlokalizowane w różnych językach.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" />lub <paramref name="counterName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PerformanceCounter (string categoryName, string counterName, string instanceName, string machineName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string categoryName, string counterName, string instanceName, string machineName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (categoryName As String, counterName As String, instanceName As String, machineName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PerformanceCounter(System::String ^ categoryName, System::String ^ counterName, System::String ^ instanceName, System::String ^ machineName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.PerformanceCounter : string * string * string * string -&gt; System.Diagnostics.PerformanceCounter" Usage="new System.Diagnostics.PerformanceCounter (categoryName, counterName, instanceName, machineName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="categoryName" Type="System.String" />
        <Parameter Name="counterName" Type="System.String" />
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="machineName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="categoryName">Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</param>
        <param name="counterName">Nazwa licznika wydajności.</param>
        <param name="instanceName">Nazwa wystąpienia kategorii licznika wydajności lub pusty ciąg (""), jeśli kategoria zawiera pojedyncze wystąpienie.</param>
        <param name="machineName">Komputer, na którym istnieje licznik wydajności i skojarzona z nim Kategoria.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Diagnostics.PerformanceCounter" /> tylko do odczytu klasy i kojarzy je z określonym systemem lub niestandardowym licznikiem wydajności i wystąpieniem kategorii na określonym komputerze.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W ciągach parametrów nie jest rozróżniana wielkość liter.  
  
 To <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>przeciążenie konstruktora ustawia właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>, <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A>i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> na przekazane wartości.  
  
 Ten konstruktor inicjuje licznik wydajności i kojarzy wystąpienie z istniejącym licznikiem (system lub licznik niestandardowy) na określonym komputerze. Wartości, które są <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>przekazywane dla właściwości <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> , <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> muszą wskazywać na istniejący licznik wydajności. Jeśli wystąpienie licznika wydajności wskazywane jest nieprawidłowe, wywołanie konstruktora zgłasza wyjątek. To Przeciążenie może uzyskać dostęp do dowolnego licznika tylko do odczytu lub odczytu/zapisu, ale robi to w trybie tylko do odczytu. <xref:System.Diagnostics.PerformanceCounter> Wystąpienie utworzone za pomocą tego przeciążenia nie może zapisywać w liczniku, nawet jeśli sam licznik jest odczyt/zapis.  
  
> [!NOTE]
>  Nie można zapisywać w zdalnych licznikach wydajności. Nie ma przeciążenia, które pozwala określić wystąpienie <xref:System.Diagnostics.PerformanceCounter> odczytu/zapisu klasy, która łączy się z komputerem zdalnym.  
  
 Aby utworzyć wystąpienie kategorii wydajności, określ `instanceName` wartość <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> w konstruktorze. Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje, nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
> [!NOTE]
>  W systemie Windows Vista, gdy komputer zdalny jest członkiem grupy roboczej, może być konieczne wyłączenie funkcji Kontrola konta użytkownika, aby nie odfiltrowanych kont użytkowników lokalnych i umożliwić podwyższenie poziomu konta administratora. Ze względów bezpieczeństwa wyłączenie funkcji Kontrola konta użytkownika powinno być ostatnim etapem. Aby uzyskać informacje na temat wyłączania funkcji UAC, zobacz [Kontrola konta użytkownika i WMI](https://go.microsoft.com/fwlink/?LinkId=91617).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="categoryName" />jest pustym ciągiem ("").  
  
—lub— 
 <paramref name="counterName" />jest pustym ciągiem ("").  
  
—lub— 
Żądane ustawienie uprawnienia do odczytu/zapisu jest nieprawidłowe dla tego licznika.  
  
—lub— 
Licznik nie istnieje na określonym komputerze.  
  
—lub— 
Określona kategoria jest oznaczona jako wiele wystąpień i wymaga, aby licznik wydajności został utworzony przy użyciu nazwy wystąpienia.  
  
—lub— 
 <paramref name="instanceName" />jest dłuższa niż 127 znaków.  
  
—lub— 
 <paramref name="categoryName" />i <paramref name="counterName" /> zostały zlokalizowane w różnych językach.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="machineName" /> Parametr jest nieprawidłowy.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="categoryName" />lub <paramref name="counterName" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="performanceCounter.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rozpoczyna inicjowanie <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpienia używanego w formularzu lub przez inny składnik. Inicjalizacja odbywa się w czasie wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] projektowe używa tej metody do uruchamiania inicjowania składnika, który jest używany w formularzu lub przez inny składnik. <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> Metoda przerywa inicjalizację. Użycie metod <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> i uniemożliwia użycie składnika przed jego pełnym zainicjowaniem. <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CategoryValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę kategorii licznika wydajności dla tego licznika wydajności.</summary>
        <value>Nazwa kategorii licznika wydajności (obiekt wydajności), z którą jest skojarzony Ten licznik wydajności.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest wyświetlana w polu okna`Add Counter` dialogowego Menedżer licznika wydajności MMC przyciąganie. `Performance Object` <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>  
  
 Licznik wydajności monitoruje zachowanie kategorii lub obiektu wydajności na komputerze. Kategorie obejmują składniki fizyczne (takie jak procesory, dyski i pamięć) oraz obiekty systemowe (na przykład procesy i wątki). Liczniki systemowe, które są powiązane z tym samym obiektem wydajności, są pogrupowane w kategorię, która wskazuje ich typowy fokus. Gdy tworzysz wystąpienie <xref:System.Diagnostics.PerformanceCounter> klasy, najpierw wskaż kategorię, z którą będzie korzystać składnik, a następnie wybierz licznik z tej kategorii.  
  
 Na przykład jedna kategoria licznika systemu Windows jest kategorią pamięci. Liczniki systemowe w tej kategorii śledzą dane pamięci, takie jak liczba dostępnych bajtów i liczba buforowanych bajtów. Jeśli chcesz korzystać z bajtów w pamięci podręcznej w aplikacji, Utwórz wystąpienie <xref:System.Diagnostics.PerformanceCounter> składnika, połącz je z kategorią pamięci, a następnie wybierz odpowiedni licznik (w tym przypadku bajty w pamięci podręcznej) z tej kategorii.  
  
 Mimo że system udostępnia wiele większej liczby kategorii liczników, kategorie, z którymi najprawdopodobniej będzie najczęściej korzystać, to pamięć podręczna, pamięć, obiekty, DyskFizyczny, procesy, procesory, serwery, systemy i wątki.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie <xref:System.Diagnostics.PerformanceCounter> domyślne klasy. Po utworzeniu <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>wystąpienia wartości właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> są ustawiane, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> a wyniki wywołania metody są wyświetlane.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CategoryName" /> Ma<see langword="null" />wartość.</exception>
        <altmember cref="P:System.Diagnostics.Process.ProcessName" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="performanceCounter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka licznik wydajności i zwalnia wszystkie zasoby przydzielone przez to wystąpienie licznika wydajności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po skojarzeniu tego <xref:System.Diagnostics.PerformanceCounter> wystąpienia z licznikiem wydajności, który znajduje się na serwerze, system Inicjuje wystąpienie i przydzieli pamięć, aby zawierały informacje o przykładach licznika. <xref:System.Diagnostics.PerformanceCounter.Close%2A> Metoda zwalnia zasoby przydzielone przez obiekt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseSharedResources">
      <MemberSignature Language="C#" Value="public static void CloseSharedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CloseSharedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.CloseSharedResources" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CloseSharedResources ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CloseSharedResources();" />
      <MemberSignature Language="F#" Value="static member CloseSharedResources : unit -&gt; unit" Usage="System.Diagnostics.PerformanceCounter.CloseSharedResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia współużytkowany stan biblioteki licznika wydajności przydzielonej przez liczniki.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do odczytywania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterHelp">
      <MemberSignature Language="C#" Value="public string CounterHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterHelp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterHelp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterHelp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterHelp : string" Usage="System.Diagnostics.PerformanceCounter.CounterHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("A description describing the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterHelp")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera opis tego licznika wydajności.</summary>
        <value>Opis elementu lub ilości, którą mierzą Ten licznik wydajności.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno dialogowe Dodawanie liczników w przystawce Menedżer licznika wydajności w programie MMC wyświetla <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> tekst, gdy użytkownik wybierze licznik z listy liczniki i kliknie przycisk Wyjaśnij.  
  
 Podczas tworzenia nowego licznika Użyj <xref:System.Diagnostics.PerformanceCounter.CounterHelp%2A> tekstu, aby opisać, co monitoruje licznik, aby użytkownik mógł określić, czy dodać licznik do ekranu monitora systemu.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Diagnostics.PerformanceCounter" /> Wystąpienie nie jest skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do odczytywania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CounterName">
      <MemberSignature Language="C#" Value="public string CounterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CounterName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberSignature Language="VB.NET" Value="Public Property CounterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CounterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CounterName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.CounterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.CounterNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę licznika wydajności, który jest skojarzony z tym <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpieniem.</summary>
        <value>Nazwa licznika, która ogólnie opisuje obliczoną ilość. Ta nazwa jest wyświetlana na liście liczników okna dialogowego Dodawanie liczników Menedżera licznika wydajności w programie MMC.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Listę dostępnych już istniejących liczników można uzyskać z [okna dialogowego Dodawanie liczników](https://go.microsoft.com/fwlink/p/?LinkId=257854)w Menedżerze wydajności systemu Windows.  
  
   
  
## Examples  
 Poniższy przykład kodu pokazuje, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A> jak ustawić właściwość na nazwę typowego licznika.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Diagnostics.PerformanceCounter.CounterName" /> Ma<see langword="null" />wartość.</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterType">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterType CounterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterType CounterType" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterType As PerformanceCounterType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterType CounterType { System::Diagnostics::PerformanceCounterType get(); };" />
      <MemberSignature Language="F#" Value="member this.CounterType : System.Diagnostics.PerformanceCounterType" Usage="System.Diagnostics.PerformanceCounter.CounterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The type of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_CounterType")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ licznika skojarzonego licznika wydajności.</summary>
        <value>A <see cref="T:System.Diagnostics.PerformanceCounterType" /> , który opisuje, jak licznik współdziała z aplikacją monitorowania i istotą wartości, które zawiera (na przykład obliczone lub nieobliczeniowe).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Diagnostics.PerformanceCounterType> Wyliczenie zawiera typy liczników wydajności, z którymi można korzystać. Niektóre typy licznika reprezentują wartości obliczeniowe, takie jak średnia pomiarów licznika wykonanych przez system. Inne typy reprezentują wartości nieprzetworzone lub nieobliczone. W poniższej tabeli przedstawiono typy liczników, z którymi będziesz korzystać najczęściej.  
  
|Odpowiedzialność za dany licznik|PerformanceCounterType wartość|Przykład|  
|------------------------------|----------------------------------|-------------|  
|Obsługuj prostą liczbę elementów lub operacji.|`NumberOfItems32`|Śledzenie liczby otrzymanych zamówień jako 32-bitowej liczby całkowitej.|  
|Obsługuj prostą liczbę o większej pojemności.|`NumberOfItems64`|Śledzenie liczby zamówień dla witryny o bardzo dużym woluminie przechowywanych jako 64-bitowa liczba całkowita.|  
|Śledź liczbę elementów lub operacji na sekundę.|`RateOfCountsPerSecond32`|Śledzone zamówienia na sekundę w witrynie.|  
|Śledź liczbę elementów lub operacji na sekundę o większej pojemności.|`RateOfCountsPerSecond64`|Śledzenie zamówień odebranych na sekundę w witrynie z bardzo dużą ilością woluminów.|  
|Oblicz średni czas wykonywania procesu lub przetwarzania elementu|`AverageTimer32`|Oblicz średni czas przetwarzania zamówienia.|  
  
 Podczas tworzenia licznika, którego typ wymaga użycia odpowiadającego licznika bazowego, należy zadeklarować licznik i bazę w <xref:System.Diagnostics.CounterCreationDataCollection> przejściu <xref:System.Diagnostics.PerformanceCounterCategory.Create%2A?displayProperty=nameWithType> do metody.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do odczytywania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
        <altmember cref="T:System.Diagnostics.PerformanceCounterType" />
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public long Decrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Decrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Decrement" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrement () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Decrement();" />
      <MemberSignature Language="F#" Value="member this.Decrement : unit -&gt; int64" Usage="performanceCounter.Decrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zmniejsza skojarzony licznik wydajności o jeden przez wydajną operację niepodzielną.</summary>
        <returns>Zmniejszenie wartości licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można pisać tylko do liczników niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.  
  
> [!NOTE]
>  Metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> i<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> służą do aktualizowania wartości licznika. Dzięki temu wartość licznika jest poprawna w scenariuszach wielowątkowych lub wielowątkowych, ale również powstaje spadek wydajności. Jeśli nie potrzebujesz dokładności zapewnianej przez operacje wykonywane w sposób niezbędny, możesz zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość bezpośrednio przez maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowych niektóre aktualizacje wartości licznika mogą zostać zignorowane, co spowodowało niedokładne dane.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Licznik jest tylko do odczytu, więc aplikacja nie może go zmniejszyć.  
  
—lub— 
Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Ta metoda nie jest metodą o bezpiecznych wątkach.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileMappingSize">
      <MemberSignature Language="C#" Value="public static int DefaultFileMappingSize;" />
      <MemberSignature Language="ILAsm" Value=".field public static int32 DefaultFileMappingSize" />
      <MemberSignature Language="DocId" Value="F:System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared DefaultFileMappingSize As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static int DefaultFileMappingSize;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultFileMappingSize : int" Usage="System.Diagnostics.PerformanceCounter.DefaultFileMappingSize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
          <AttributeName>System.Obsolete("This field has been deprecated and is not used.  Use machine.config or an application configuration file to set the size of the PerformanceCounter file mapping.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa rozmiar pamięci globalnej udostępnionej przez liczniki wydajności w bajtach. Domyślny rozmiar to 524 288 bajtów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="performanceCounter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="performanceCounter.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zamyka inicjowanie <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpienia, które jest używane w formularzu lub przez inny składnik. Inicjalizacja odbywa się w czasie wykonywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Środowisko [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] projektowe używa tej metody do zakończenia inicjowania składnika, który jest używany w formularzu lub przez inny składnik. <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A> Metoda uruchamia inicjalizację. Użycie metod <xref:System.Diagnostics.PerformanceCounter.EndInit%2A> i uniemożliwia użycie składnika przed jego pełnym zainicjowaniem. <xref:System.Diagnostics.PerformanceCounter.BeginInit%2A>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public long Increment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Increment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.Increment" />
      <MemberSignature Language="VB.NET" Value="Public Function Increment () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Increment();" />
      <MemberSignature Language="F#" Value="member this.Increment : unit -&gt; int64" Usage="performanceCounter.Increment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwiększa skojarzony licznik wydajności o jeden przez wydajną operację niepodzielną.</summary>
        <returns>Wartość przyrostka licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można pisać tylko do liczników niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.  
  
> [!NOTE]
>  Metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> i<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> służą do aktualizowania wartości licznika. Dzięki temu wartość licznika jest poprawna w scenariuszach wielowątkowych lub wielowątkowych, ale również powstaje spadek wydajności. Jeśli nie potrzebujesz dokładności zapewnianej przez operacje wykonywane w sposób niezbędny, możesz zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość bezpośrednio przez maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowych niektóre aktualizacje wartości licznika mogą zostać zignorowane, co spowodowało niedokładne dane.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Licznik jest tylko do odczytu, więc aplikacja nie może go zwiększyć.  
  
—lub— 
Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Ta metoda nie jest metodą o bezpiecznych wątkach.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="IncrementBy">
      <MemberSignature Language="C#" Value="public long IncrementBy (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementBy(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.IncrementBy(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function IncrementBy (value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long IncrementBy(long value);" />
      <MemberSignature Language="F#" Value="member this.IncrementBy : int64 -&gt; int64" Usage="performanceCounter.IncrementBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">Wartość do zwiększenia przez. (Wartość ujemna zmniejsza licznik).</param>
        <summary>Zwiększa lub zmniejsza wartość skojarzonego licznika wydajności o określoną wartość za pomocą wydajnej operacji niepodzielnej.</summary>
        <returns>Nowa wartość licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można pisać tylko do liczników niestandardowych. Wszystkie liczniki systemu są tylko do odczytu.  
  
> [!NOTE]
>  Metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> i<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> służą do aktualizowania wartości licznika. Dzięki temu wartość licznika jest poprawna w scenariuszach wielowątkowych lub wielowątkowych, ale również powstaje spadek wydajności. Jeśli nie potrzebujesz dokładności zapewnianej przez operacje wykonywane w sposób niezbędny, możesz zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość bezpośrednio przez maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowych niektóre aktualizacje wartości licznika mogą zostać zignorowane, co spowodowało niedokładne dane.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> metody w celu dodania przyrostów do licznika. Ten przykład kodu jest częścią większego przykładu dla <xref:System.Diagnostics.PerformanceCounter> klasy.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Licznik jest tylko do odczytu, więc aplikacja nie może go zwiększyć.  
  
—lub— 
Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do zapisania kategorii licznika wydajności, <see cref="P:System.Diagnostics.PerformanceCounter.ReadOnly" /> Jeśli właściwość jest. <see langword="false" /> Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
        <threadsafe>Ta metoda nie jest metodą o bezpiecznych wątkach.</threadsafe>
      </Docs>
    </Member>
    <Member MemberName="InstanceLifetime">
      <MemberSignature Language="C#" Value="public System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.PerformanceCounterInstanceLifetime InstanceLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceLifetime As PerformanceCounterInstanceLifetime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::PerformanceCounterInstanceLifetime InstanceLifetime { System::Diagnostics::PerformanceCounterInstanceLifetime get(); void set(System::Diagnostics::PerformanceCounterInstanceLifetime value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceLifetime : System.Diagnostics.PerformanceCounterInstanceLifetime with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.PerformanceCounterInstanceLifetime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia okres istnienia procesu.</summary>
        <value>Jedna z <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> wartości. Wartość domyślna to <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Global" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli kategoria licznika wydajności została utworzona przy użyciu .NET Framework w wersji 1,0 lub 1,1, używa globalnej pamięci współdzielonej, a wartość parametru <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.CounterType%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterCategoryType.SingleInstance>, <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartością licznika wydajności musi być <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Zestaw wartości nie jest elementem członkowskim <see cref="T:System.Diagnostics.PerformanceCounterInstanceLifetime" /> wyliczenia.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" />jest ustawiony po <see cref="T:System.Diagnostics.PerformanceCounter" /> zainicjowaniu.</exception>
      </Docs>
    </Member>
    <Member MemberName="InstanceName">
      <MemberSignature Language="C#" Value="public string InstanceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstanceName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InstanceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.InstanceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.InstanceNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wystąpienia dla tego licznika wydajności.</summary>
        <value>Nazwa wystąpienia kategorii licznika wydajności lub pusty ciąg (""), jeśli licznik jest licznikiem pojedynczym wystąpieniem.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Długość nazw wystąpień musi być krótsza niż 128 znaków.  
  
 W niektórych sytuacjach kategorie są podzielone na wystąpienia, które śledzą dane dotyczące wielu wystąpień obiektu, do których odnosi się kategoria. Wystąpienia dotyczą kategorii jako całości, a nie do poszczególnych liczników. Każdy licznik w danej kategorii ma każde wystąpienie zdefiniowane dla kategorii. Na przykład kategoria proces zawiera wystąpienia o nazwie Idle i system. Każdy licznik w kategorii proces zawiera dane dla każdego wystąpienia, pokazując informacje o procesach bezczynności lub procesach systemowych.  
  
 Wiele kategorii nie zawiera wielu wystąpień, więc można pozostawić tę właściwość pustą, aby wskazać, że żadne wystąpienie nie jest skojarzone z kategorią.  
  
 Jeśli to <xref:System.Diagnostics.PerformanceCounter> wystąpienie wskazuje niestandardową kategorię, można wybrać tylko spośród istniejących wystąpień kategorii. Nowe wystąpienia kategorii można tworzyć tylko w kategoriach niestandardowych, które umożliwiają zdefiniowanie tylu liczników i wystąpień kategorii, ile potrzebujesz.  
  
 Aby utworzyć wystąpienie kategorii wydajności, określ `instanceName` wartość <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> w konstruktorze. Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje, nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.  
  
> [!NOTE]
>  Nie używaj znaków "(", ")", "#", "\\" lub "/" w nazwie wystąpienia. Jeśli którykolwiek z tych znaków jest używany, konsola wydajności (zobacz [profilowanie środowiska uruchomieniowego](~/docs/framework/debug-trace-profile/runtime-profiling.md)) może nieprawidłowo wyświetlić wartości wystąpień.  
  
 Jeśli nazwa wystąpienia jest generowana automatycznie i może zawierać znaki "(", ")", "#", "\\" lub "/", użyj mapowania znaków w poniższej tabeli.  
  
|Znak|Zamapowany znak|  
|---------------|----------------------|  
|(|[|  
|)|]|  
|#|\_|  
|\|_|  
|/|\_|  
  
 Właściwość obiektu uzyskanego na podstawie <xref:System.AppDomain.CurrentDomain%2A?displayProperty=nameWithType> właściwości jest wspólnym źródłem nazw wystąpień, które mogą zawierać nieprawidłowe znaki. <xref:System.AppDomain> <xref:System.AppDomain.FriendlyName%2A>  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy wystąpienie <xref:System.Diagnostics.PerformanceCounter> domyślne klasy. Po utworzeniu <xref:System.Diagnostics.PerformanceCounter.CategoryName%2A>wystąpienia wartości właściwości, <xref:System.Diagnostics.PerformanceCounter.CounterName%2A>i <xref:System.Diagnostics.PerformanceCounter.InstanceName%2A> są ustawiane, <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> a wyniki wywołania metody są wyświetlane.  
  
 [!code-cpp[PerfCounter#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerfCounter/CPP/perfcounter.cpp#1)]
 [!code-csharp[PerfCounter#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerfCounter/CS/perfcounter.cs#1)]
 [!code-vb[PerfCounter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerfCounter/VB/perfcounter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string with get, set" Usage="System.Diagnostics.PerformanceCounter.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(".")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("What's the machine name format?")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę komputera dla tego licznika wydajności.</summary>
        <value>Serwer, na którym znajduje się licznik wydajności i skojarzona z nim Kategoria.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można zapisać wartości tylko dla liczników, które znajdują się na komputerze lokalnym. Można jednak odczytywać wartości liczników z dowolnego komputera w przedsiębiorstwie, do którego masz uprawnienia dostępu.  
  
 Po ustawieniu <xref:System.Diagnostics.PerformanceCounter.MachineName%2A> właściwości tak <xref:System.Diagnostics.PerformanceCounter> , aby wskazywała komputer zdalny, wystąpienie próbuje otworzyć licznik na tym komputerze. Jeśli licznik nie istnieje, ustawienie tej właściwości zgłasza wyjątek.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Diagnostics.PerformanceCounter.MachineName" /> Format jest nieprawidłowy.</exception>
      </Docs>
    </Member>
    <Member MemberName="NextSample">
      <MemberSignature Language="C#" Value="public System.Diagnostics.CounterSample NextSample ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Diagnostics.CounterSample NextSample() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextSample" />
      <MemberSignature Language="VB.NET" Value="Public Function NextSample () As CounterSample" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::CounterSample NextSample();" />
      <MemberSignature Language="F#" Value="member this.NextSample : unit -&gt; System.Diagnostics.CounterSample" Usage="performanceCounter.NextSample " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.CounterSample</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje przykład licznika i zwraca nieprzetworzoną lub nieobliczoną wartość.</summary>
        <returns><see cref="T:System.Diagnostics.CounterSample" /> Reprezentuje następną wartość pierwotną, którą system uzyskuje dla tego licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda jest zwykle używana w przypadku liczników, które zawierają wartości nieobliczone.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu demonstruje sposób użycia <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> metody w celu uzyskania następnej nieobliczonej wartości licznika. Ten przykład kodu jest częścią większego przykładu dla <xref:System.Diagnostics.PerformanceCounter> klasy.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#3)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#3)]
 [!code-vb[PerformanceCounterType.AverageCounter64#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do odczytywania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="NextValue">
      <MemberSignature Language="C#" Value="public float NextValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 NextValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.NextValue" />
      <MemberSignature Language="VB.NET" Value="Public Function NextValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float NextValue();" />
      <MemberSignature Language="F#" Value="member this.NextValue : unit -&gt; single" Usage="performanceCounter.NextValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uzyskuje próbkę licznika i zwraca obliczoną wartość dla niej.</summary>
        <returns>Kolejna obliczona wartość, którą system pobiera dla tego licznika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Jeśli obliczona wartość licznika zależy od dwóch odczytów liczników, pierwsza operacja odczytu zwraca 0,0. Zresetowanie właściwości licznika wydajności w celu określenia innego licznika jest równoznaczne z utworzeniem nowego licznika wydajności, a pierwsza operacja odczytu przy użyciu nowych właściwości zwraca 0,0. Zalecany czas opóźnienia między wywołaniami <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> metody to jedna sekunda, aby zezwolić na licznik do wykonania następnego odczytu przyrostowego.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności, musisz mieć uprawnienia administracyjne. W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
   
  
## Examples  
 Poniższy przykład kodu tworzy <xref:System.Diagnostics.PerformanceCounterType.ElapsedTime> licznik i <xref:System.Diagnostics.PerformanceCounter.NextValue%2A> używa metody do wyświetlania wartości licznika w przedziale czasu.  
  
 [!code-cpp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CPP/elapsedtime.cpp#2)]
 [!code-csharp[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/CS/elapsedtime.cs#2)]
 [!code-vb[PerformanceCounterType.ElapsedTime#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.ElapsedTime/VB/elapsedtime.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do odczytywania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Read" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="RawValue">
      <MemberSignature Language="C#" Value="public long RawValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RawValue" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RawValue As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RawValue { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.RawValue : int64 with get, set" Usage="System.Diagnostics.PerformanceCounter.RawValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The raw value of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_RawValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość nieprzetworzoną lub nieobliczoną dla tego licznika.</summary>
        <value>Wartość pierwotna licznika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli typ licznika ma rozmiar 32-bitowy i podjęto próbę ustawienia tej właściwości na wartość, która jest zbyt duża, aby zmieścić, właściwość obcina wartość do 32 bitów. Podczas odczytywania niestandardowych liczników na komputerze lokalnym użycie <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwości zamiast obliczonej wartości może spowodować znaczne zwiększenie wydajności w scenariuszach, w których wartość pierwotna jest wystarczająca.  
  
 Jeśli odczytywany licznik jest tylko do odczytu, pobranie <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwości powoduje pobranie próbek licznika w momencie wywołania właściwości. Ta akcja jest równoważna z wykonywaniem początkowego wywołania <xref:System.Diagnostics.PerformanceCounter.NextSample%2A> metody. W przypadku późniejszego <xref:System.Diagnostics.PerformanceCounter.NextSample%2A>wywołania można wykonać obliczenia dla wartości zwracanych przez oba wywołania.  
  
 Ponieważ liczniki systemowe są tylko do odczytu, można uzyskać, ale nie ustawiać ich nieprzetworzonych wartości.  
  
> [!NOTE]
>  Metody <xref:System.Diagnostics.PerformanceCounter.Increment%2A>, <xref:System.Diagnostics.PerformanceCounter.IncrementBy%2A> i<xref:System.Diagnostics.PerformanceCounter.Decrement%2A> służą do aktualizowania wartości licznika. Dzięki temu wartość licznika jest poprawna w scenariuszach wielowątkowych lub wielowątkowych, ale również powstaje spadek wydajności. Jeśli nie potrzebujesz dokładności zapewnianej przez operacje wykonywane w sposób niezbędny, możesz zaktualizować <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwość bezpośrednio przez maksymalnie 5 razy zwiększenie wydajności.  Jednak w scenariuszach wielowątkowych niektóre aktualizacje wartości licznika mogą zostać zignorowane, co spowodowało niedokładne dane.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
> [!NOTE]
>  Aby odczytać liczniki wydajności w systemie Windows Vista, Windows XP Professional x64 Edition lub Windows Server 2003, trzeba być członkiem grupy Użytkownicy monitora wydajności lub mieć uprawnienia administracyjne.  
>   
>  Aby uniknąć konieczności podniesienia uprawnień dostępu do liczników wydajności w systemie Windows Vista, należy dodać siebie do grupy Użytkownicy monitora wydajności.  
>   
>  W systemie Windows Vista Kontrola konta użytkownika (UAC) określa uprawnienia użytkownika. Jeśli jesteś członkiem wbudowanej grupy Administratorzy, masz przypisane dwa tokeny dostępu w czasie wykonywania: token dostępu użytkownika standardowego i token dostępu administratora. Domyślnie jesteś w roli użytkownika standardowego. Aby wykonać kod, który uzyskuje dostęp do liczników wydajności, należy najpierw podnieść poziom uprawnień użytkownika standardowego do administratora. Można to zrobić podczas uruchamiania aplikacji przez kliknięcie prawym przyciskiem myszy ikony aplikacji i wskazanie, że chcesz uruchomić program jako administrator.  
  
   
  
## Examples  
 Poniższy przykład używa klasy, <xref:System.Diagnostics.CounterSample> aby wyświetlić wartość <xref:System.Diagnostics.PerformanceCounter.RawValue%2A> właściwości dla licznika.  
  
 [!code-cpp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/cpp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CPP/averagecount32.cpp#1)]
 [!code-csharp[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/csharp/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/CS/averagecount32.cs#1)]
 [!code-vb[PerformanceCounterType.AverageCounter64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PerformanceCounterType.AverageCounter64/VB/averagecount32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Podjęto próbę ustawienia nieprzetworzonej wartości licznika, ale licznik jest tylko do odczytu.  
  
—lub— 
Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Kod wykonywany bez uprawnień administracyjnych próbował odczytać licznik wydajności.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do pisania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Diagnostics.PerformanceCounter.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The accessability level of the counter.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PC_ReadOnly")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy to <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpienie jest w trybie tylko do odczytu.</summary>
        <value><see langword="true" />, jeśli <see cref="T:System.Diagnostics.PerformanceCounter" /> wystąpienie jest w trybie tylko do odczytu (nawet jeśli sam licznik jest niestandardowym licznikiem .NET Framework); <see langword="false" /> jeśli jest w trybie do odczytu/zapisu. Wartością domyślną jest wartość ustawiona przez konstruktora.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dla licznika <xref:System.Diagnostics.PerformanceCounter.ReadOnly%2A> systemowego powinien być zawsze `true`. Nie można zapisać do licznika systemowego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveInstance">
      <MemberSignature Language="C#" Value="public void RemoveInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.PerformanceCounter.RemoveInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveInstance();" />
      <MemberSignature Language="F#" Value="member this.RemoveInstance : unit -&gt; unit" Usage="performanceCounter.RemoveInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.PerformanceCounter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Usuwa wystąpienie kategorii określone przez <see cref="T:System.Diagnostics.PerformanceCounter" /> Właściwość Object. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceName" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wystąpienie można usunąć tylko dla licznika niestandardowego. Wszystkie liczniki systemu są tylko do odczytu, więc próba usunięcia jednego z nich zgłasza wyjątek.  
  
> [!NOTE]
>  Aby uniknąć możliwego warunku wyścigu w przypadku zwolnienia pamięci współdzielonej licznika wydajności, zaleca <xref:System.Diagnostics.PerformanceCounter.RemoveInstance%2A> się wywoływanie metody <xref:System.AppDomain.DomainUnload> z programu obsługi zdarzeń.  
  
 Aby utworzyć wystąpienie kategorii wydajności, określ `instanceName` wartość <xref:System.Diagnostics.PerformanceCounter.%23ctor%2A> w konstruktorze. Jeśli wystąpienie kategorii określone przez `instanceName` już istnieje, nowy obiekt będzie odwoływać się do istniejącego wystąpienia kategorii.  
  
> [!NOTE]
>  Jeśli wartość <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> właściwości jest <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Process> i została utworzona kategoria licznika wydajności z .NET Framework wersja <xref:System.InvalidOperationException> 1,0 lub 1,1, zostanie zgłoszony. Kategorie licznika wydajności utworzone przy użyciu wcześniejszych wersji używają globalnej pamięci współdzielonej, a <xref:System.Diagnostics.PerformanceCounter.InstanceLifetime%2A> wartość parametru <xref:System.Diagnostics.PerformanceCounterInstanceLifetime.Global>musi być równa. Jeśli kategoria nie jest używana przez aplikacje działające w wersji 1,0 lub 1,1 .NET Framework, Usuń i Utwórz ponownie kategorię.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ten licznik jest tylko do odczytu, więc nie można usunąć żadnego wystąpienia skojarzonego z kategorią.  
  
—lub— 
Wystąpienie nie jest poprawnie skojarzone z licznikiem wydajności.  
  
—lub— 
Właściwość jest ustawiona na, <see cref="F:System.Diagnostics.PerformanceCounterInstanceLifetime.Process" /> gdy używana jest globalna pamięć współdzielona. <see cref="P:System.Diagnostics.PerformanceCounter.InstanceLifetime" /></exception>
        <exception cref="T:System.ComponentModel.Win32Exception">Wystąpił błąd podczas uzyskiwania dostępu do interfejsu API systemu.</exception>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">do pisania kategorii licznika wydajności. Powiązane wartość typu wyliczeniowego: <see cref="F:System.Diagnostics.PerformanceCounterPermissionAccess.Write" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>
