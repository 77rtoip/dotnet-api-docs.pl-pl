<Type Name="IRemoteMethodInfoContract" FullName="System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da0d2962d7e5d05edfc83be0ffe6574eac1f5f03" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337720" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteMethodInfoContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteMethodInfoContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteMethodInfoContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteMethodInfoContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteMethodInfoContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2dcda-101">Definiuje kontrakt, za pomocą którego składniki mogą uzyskać dostęp do informacji o metodzie między domeną aplikacji i granicami procesów.</span><span class="sxs-lookup"><span data-stu-id="2dcda-101">Defines a contract that components can use to access information about a method across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dcda-102">Reprezentuje metodę obiektu zdalnego, który <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> implementuje interfejs. <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract></span><span class="sxs-lookup"><span data-stu-id="2dcda-102">An <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract> represents a method of a remote object that implements the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interface.</span></span>  
  
 <span data-ttu-id="2dcda-103">Aby uzyskać dostęp do co najmniej jednej metody obiektu zdalnego, użyj <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metody w celu <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> uzyskania, która reprezentuje typ obiektu zdalnego.</span><span class="sxs-lookup"><span data-stu-id="2dcda-103">To access one or more methods of a remote object, use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to get an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> that represents the type of the remote object.</span></span> <span data-ttu-id="2dcda-104">Następnie Wywołaj <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> metodę or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> .</span><span class="sxs-lookup"><span data-stu-id="2dcda-104">Then, call the <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> or <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteMethodData GetMethodData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteMethodData GetMethodData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodData () As RemoteMethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteMethodData GetMethodData();" />
      <MemberSignature Language="F#" Value="abstract member GetMethodData : unit -&gt; System.AddIn.Contract.Automation.RemoteMethodData" Usage="iRemoteMethodInfoContract.GetMethodData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteMethodData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dcda-105">Zwraca informacje o metodzie, którą <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikuje.</span><span class="sxs-lookup"><span data-stu-id="2dcda-105">Returns information about the method that this <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identifies.</span></span></summary>
        <returns><span data-ttu-id="2dcda-106">A <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> , który zawiera informacje na temat metody <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikowanej przez program.</span><span class="sxs-lookup"><span data-stu-id="2dcda-106">A <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> that provides information about the method that this <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identifies.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dcda-107">Informacje podane przez <xref:System.AddIn.Contract.Automation.RemoteMethodData> strukturę obejmują typy wartości zwracanej i parametrów metody.</span><span class="sxs-lookup"><span data-stu-id="2dcda-107">The information provided by the <xref:System.AddIn.Contract.Automation.RemoteMethodData> structure includes the types of the method's return value and parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument Invoke (System.AddIn.Contract.Automation.IRemoteObjectContract target, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument Invoke(class System.AddIn.Contract.Automation.IRemoteObjectContract target, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument Invoke(System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ parameters, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : System.AddIn.Contract.Automation.IRemoteObjectContract * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteMethodInfoContract.Invoke (target, bindingFlags, parameters, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="parameters" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="2dcda-108"><see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> Identyfikuje obiekt, który zawiera metodę do wywołania.</span><span class="sxs-lookup"><span data-stu-id="2dcda-108">The <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> that identifies the object that contains the method to invoke.</span></span></param>
        <param name="bindingFlags"><span data-ttu-id="2dcda-109">Bitowa kombinacja <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="2dcda-109">A bitwise combination of the <see cref="T:System.Reflection.BindingFlags" /> values that specifies how to invoke the method.</span></span></param>
        <param name="parameters"><span data-ttu-id="2dcda-110"><see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> Określa parametry metody; <see langword="null" /> Jeśli metoda nie ma żadnych parametrów.</span><span class="sxs-lookup"><span data-stu-id="2dcda-110">An <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> that specifies the method parameters; <see langword="null" /> if the method does not have any parameters.</span></span></param>
        <param name="localeId"><span data-ttu-id="2dcda-111">Identyfikator ustawień regionalnych, który będzie używany przez metodę dla wszelkich konwersji typów argumentów lub wartości zwracanych specyficznych dla ustawień regionalnych.</span><span class="sxs-lookup"><span data-stu-id="2dcda-111">The locale ID that the method will use for any locale-specific type conversions of the arguments or return value.</span></span></param>
        <summary><span data-ttu-id="2dcda-112">Wywołuje metodę, którą <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikuje.</span><span class="sxs-lookup"><span data-stu-id="2dcda-112">Invokes the method that this <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identifies.</span></span></summary>
        <returns><span data-ttu-id="2dcda-113">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> , która określa wartość zwracaną wywołanej metody.</span><span class="sxs-lookup"><span data-stu-id="2dcda-113">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that specifies the return value of the invoked method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dcda-114">Jeśli wywołana metoda nie ma wartości zwracanej (na przykład metoda jest konstruktorem), zwraca wartość domyślną <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke%2A> <xref:System.AddIn.Contract.RemoteArgument> , w której <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> właściwość jest ustawiona na wartość <xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType> , a właściwość jest ustawiona na wartość. <xref:System.TypeCode.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="2dcda-114">If the invoked method does not have a return value (for example, the method is a constructor), <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke%2A> returns a default <xref:System.AddIn.Contract.RemoteArgument> in which the <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> property is set to the value <xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType> and the <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> property is set to the value <xref:System.TypeCode.Empty?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
