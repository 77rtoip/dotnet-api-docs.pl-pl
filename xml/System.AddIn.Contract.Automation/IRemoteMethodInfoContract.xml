<Type Name="IRemoteMethodInfoContract" FullName="System.AddIn.Contract.Automation.IRemoteMethodInfoContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5f6ad739dbf75641c2d8407a1c7addd77cce122a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36716019" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteMethodInfoContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteMethodInfoContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteMethodInfoContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteMethodInfoContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteMethodInfoContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje kontrakt składniki umożliwiają dostęp do informacji dotyczących metody między granicami domeny i procesu aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract> Reprezentuje metodę obiektu zdalnego, który implementuje <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interfejsu.  
  
 Aby uzyskać dostęp do co najmniej jedną metodę obiektu zdalnego, należy użyć <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metodę, aby pobrać <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> reprezentujący typ obiektu zdalnego. Następnie wywołaj metodę <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod%2A> lub <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods%2A> metody.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteMethodData GetMethodData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteMethodData GetMethodData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.GetMethodData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodData () As RemoteMethodData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteMethodData GetMethodData();" />
      <MemberSignature Language="F#" Value="abstract member GetMethodData : unit -&gt; System.AddIn.Contract.Automation.RemoteMethodData" Usage="iRemoteMethodInfoContract.GetMethodData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteMethodData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca informacje o metodzie tego <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikuje.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.Automation.RemoteMethodData" /> udostępniająca informacje na temat metody tego <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikuje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje dostarczane przez <xref:System.AddIn.Contract.Automation.RemoteMethodData> struktura zawiera typy wartości zwracanej i parametrów metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument Invoke (System.AddIn.Contract.Automation.IRemoteObjectContract target, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument Invoke(class System.AddIn.Contract.Automation.IRemoteObjectContract target, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract parameters, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke(System.AddIn.Contract.Automation.IRemoteObjectContract,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument Invoke(System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ parameters, int localeId);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : System.AddIn.Contract.Automation.IRemoteObjectContract * System.Reflection.BindingFlags * System.AddIn.Contract.Collections.IRemoteArgumentArrayContract * int -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteMethodInfoContract.Invoke (target, bindingFlags, parameters, localeId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="parameters" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> , Które identyfikują obiekt, który zawiera metody do wywołania.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określa sposób wywołania metody.</param>
        <param name="parameters">
          <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> , Który określa parametry metody; <see langword="null" /> Jeśli metoda nie ma żadnych parametrów.</param>
        <param name="localeId">Identyfikator ustawień regionalnych, którego metoda będzie używał do żadnych ustawień regionalnych konwersje argumentów typów ani zwracanej wartości.</param>
        <summary>Wywołuje metodę tego <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> identyfikuje.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> , który określa wartość zwracaną wywoływanej metody.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wywołana metoda nie ma wartości zwracanej (na przykład metoda jest konstruktorem), <xref:System.AddIn.Contract.Automation.IRemoteMethodInfoContract.Invoke%2A> zwraca domyślną <xref:System.AddIn.Contract.RemoteArgument> w którym <xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A> właściwości ustawiono wartość <xref:System.AddIn.Contract.RemoteArgumentKind.Missing?displayProperty=nameWithType> i <xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A> właściwość jest ustawiona na wartość <xref:System.TypeCode.Empty?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>