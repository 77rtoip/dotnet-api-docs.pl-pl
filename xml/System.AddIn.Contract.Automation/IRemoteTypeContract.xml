<Type Name="IRemoteTypeContract" FullName="System.AddIn.Contract.Automation.IRemoteTypeContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e828623e05f0027402df3db956a017bc005a571e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30437679" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteTypeContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteTypeContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteTypeContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteTypeContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje kontrakt składniki umożliwiają dostęp do informacji o typie i wywoływać elementy członkowskie między granicami domeny i procesu aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>, składniki mogą wywoływać <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metody obiektu, który implementuje <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> interfejsu.  
  
 Aby uzyskać informacje o typie obiektu, wywołaj składniki <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A> metody.  
  
 Aby uzyskać informacje o elementach członkowskich obiektu, składniki wywołać jednej z metod, które zwraca informacje dotyczące określonego rodzaju elementu członkowskiego. Na przykład, aby uzyskać informacje o zdarzeniach obiektu, składniki można użyć <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A> lub <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A> metody.  
  
 Aby wywołać element członkowski obiektu, należy użyć składników <xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A> metody.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCanonicalName">
      <MemberSignature Language="C#" Value="public string GetCanonicalName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCanonicalName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCanonicalName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCanonicalName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca bieżącą nazwą <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>Nazwa kanoniczna bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kanoniczna jest globalnie unikatowej nazwy, takie jak nazwa FQDN typu. Ciągi w formacie \< *nazwy zestawu*>, \< *pełni kwalifikowana nazwa typu*> są zalecane w typach zarządzanych. Ciągi w formacie \< *nazwy biblioteki typów*>, \< *nazwy typu*> są zalecane w przypadku typów COM.  
  
 Po opublikowaniu typ, nie należy zmieniać nazwy kanonicznej dla typu. Zmiana nazwy kanonicznej dla typu w przyszłych wersjach programu podziały składnik zgodność składnika i klientów, które już używają tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvent">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteEventInfoContract GetEvent(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteEventInfoContract ^ GetEvent(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteEventInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa zdarzenia bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla zdarzenia.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> , który zapewnia dostęp do określonego zdarzenia bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> , Który zapewnia dostęp do określonego zdarzenia, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt; GetEvents(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteEventInfoContract ^&gt; ^ GetEvents(System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteEventInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określa sposób wyszukać zdarzenia.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> obiektów, które zapewnia dostęp do określonych zdarzeń bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /> obiektów, które zapewnia dostęp do zdarzeń, które są zgodne z określonymi ograniczeniami wiązania; w przeciwnym razie wartość pustą <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField (string name, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteFieldInfoContract GetField(string name, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteFieldInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa pola z bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla pola.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> , który zapewnia dostęp do określonego pola bieżącej <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> , Który zapewnia dostęp do określonego pola, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt; GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteFieldInfoContract ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteFieldInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla pól.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> obiektów, które zapewnia dostęp do określonego pola bieżącej <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /> obiektów, które zapewnia dostęp do pola, które są zgodne z określonymi ograniczeniami wiązania; w przeciwnym razie wartość pustą <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterface">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetInterface(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterface (canonicalName As String) As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetInterface(System::String ^ canonicalName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Nazwa kanoniczna interfejsu implementowanego przez bieżący <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <summary>Zwraca interfejs, który jest implementowany przez bieżący <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> Czy reprezentuje interfejs z określonym canonical nazwa tego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> implementuje. <see langword="null" /> Jeśli ta <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> nie implementuje interfejsu o określonej nazwie kanonicznej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kanoniczna jest globalnie unikatowej nazwy, takie jak identyfikator GUID. Ciągi w formacie \< *nazwy zestawu*>, \< *pełni kwalifikowana nazwa typu*> są zalecane w typach zarządzanych. Ciągi w formacie \< *nazwy biblioteki typów*>, \< *nazwy typu*> są zalecane w przypadku typów COM.  
  
 Po opublikowaniu typ, nie należy zmieniać nazwy kanonicznej dla typu. Zmiana nazwy kanonicznej dla typu w przyszłych wersjach programu podziały składnik zgodność składnika i klientów, które już używają tego typu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInterfaces">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; GetInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInterfaces () As IArrayContract(Of IRemoteTypeContract)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ GetInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca interfejsy implementowane przez bieżący <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> obiekty reprezentujące wszystkie interfejsy implementowane przez bieżący <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMember (string name, System.Reflection.MemberTypes memberTypes, System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMember(string name, valuetype System.Reflection.MemberTypes memberTypes, valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMember(System::String ^ name, System::Reflection::MemberTypes memberTypes, System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="memberTypes" Type="System.Reflection.MemberTypes" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />. Nazwa może reprezentować wiele elementów członkowskich, które mają taką samą nazwę.</param>
        <param name="memberTypes">Bitowe połączenie <see cref="T:System.Reflection.MemberTypes" /> wartości, które określa elementy członkowskie do wyszukania.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania elementów członkowskich.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.IContract" /> obiektów, które zapewnia dostęp do wszystkich członków określonego typu określonego elementu członkowskiego w bieżącym <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, korzystanie z określonymi ograniczeniami wiązania.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.IContract" /> obiekty reprezentujące członków bieżącej <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> tym określonej nazwy, który spełnia kryteria określone przez <paramref name="memberTypes" /> i <paramref name="bindingFlags" /> parametrów.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda może służyć do pobrania pojedynczego elementu członkowskiego lub wiele elementów członkowskich, które mają taką samą nazwę, np. przeciążenia konstruktora lub metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt; GetMembers (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.IContract&gt; GetMembers(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::IContract ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.IContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania elementów członkowskich.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.IContract" /> obiektów, które zapewnia dostęp do wszystkich elementów członkowskich w bieżącym <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> zgodnego z określonymi ograniczeniami wiązania.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.IContract" /> obiektów, które zapewnia dostęp do członków bieżącej <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> zgodne z określonymi ograniczeniami wiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteMethodInfoContract GetMethod(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^ GetMethod(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteMethodInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa metody bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla metody.</param>
        <param name="remoteTypes">
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> obiektów, które reprezentują numer, kolejność i typy parametrów dla metody, aby uzyskać.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> , który zapewnia dostęp do określonej metody bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> , Który zapewnia dostęp do określonej metody, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt; GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteMethodInfoContract ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteMethodInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla metod.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> obiektów, które zapewnia dostęp do określonych metod bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /> obiektów, które zapewnia dostęp do metody, które są zgodne z określonymi ograniczeniami wiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt; GetProperties(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^&gt; ^ GetProperties(System::Reflection::BindingFlags bindingFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemotePropertyInfoContract&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania właściwości.</param>
        <summary>Zwraca kolekcję <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> obiektów, które zapewnia dostęp do określonych właściwości bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> obiektów, które zapewnia dostęp do właściwości, które są zgodne z określonymi ograniczeniami wiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemotePropertyInfoContract GetProperty(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteTypeContract remoteReturnType, class System.AddIn.Contract.Collections.IArrayContract`1&lt;class System.AddIn.Contract.Automation.IRemoteTypeContract&gt; remoteTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemotePropertyInfoContract ^ GetProperty(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteTypeContract ^ remoteReturnType, System::AddIn::Contract::Collections::IArrayContract&lt;System::AddIn::Contract::Automation::IRemoteTypeContract ^&gt; ^ remoteTypes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemotePropertyInfoContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="remoteReturnType" Type="System.AddIn.Contract.Automation.IRemoteTypeContract" />
        <Parameter Name="remoteTypes" Type="System.AddIn.Contract.Collections.IArrayContract&lt;System.AddIn.Contract.Automation.IRemoteTypeContract&gt;" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla metody.</param>
        <param name="remoteReturnType">
          <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> , Który określa zwracany typ właściwości.</param>
        <param name="remoteTypes">
          <see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /> z <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> obiektów, które reprezentują parametry dla określonej właściwości.</param>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> , który zapewnia dostęp do określonej właściwości bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /> , Który zapewnia dostęp do określonej właściwości, jeśli je znaleziono; w przeciwnym razie <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeData">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.RemoteTypeData GetTypeData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.Automation.RemoteTypeData GetTypeData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeData () As RemoteTypeData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::RemoteTypeData GetTypeData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.RemoteTypeData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość typu informacji o obiekcie bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identyfikuje.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /> zawierający informacje o obiekcie, który bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> identyfikuje.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeMember">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument InvokeMember (string name, System.Reflection.BindingFlags bindingFlags, System.AddIn.Contract.Automation.IRemoteObjectContract target, System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int localeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument InvokeMember(string name, valuetype System.Reflection.BindingFlags bindingFlags, class System.AddIn.Contract.Automation.IRemoteObjectContract target, class System.AddIn.Contract.Collections.IRemoteArgumentArrayContract remoteArgs, bool[] remoteArgModifiers, int32 localeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument InvokeMember(System::String ^ name, System::Reflection::BindingFlags bindingFlags, System::AddIn::Contract::Automation::IRemoteObjectContract ^ target, System::AddIn::Contract::Collections::IRemoteArgumentArrayContract ^ remoteArgs, cli::array &lt;bool&gt; ^ remoteArgModifiers, int localeId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        <Parameter Name="target" Type="System.AddIn.Contract.Automation.IRemoteObjectContract" />
        <Parameter Name="remoteArgs" Type="System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" />
        <Parameter Name="remoteArgModifiers" Type="System.Boolean[]" />
        <Parameter Name="localeId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa elementu członkowskiego do wywołania.</param>
        <param name="bindingFlags">Bitowe połączenie <see cref="T:System.Reflection.BindingFlags" /> wartości, które określają sposób wyszukiwania dla elementu członkowskiego.</param>
        <param name="target">
          <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> Do wywołania określonego elementu członkowskiego.</param>
        <param name="remoteArgs">
          <see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /> Zawiera argumenty do przekazania do elementu członkowskiego do wywołania.</param>
        <param name="remoteArgModifiers">Tablica wartości logiczne, które wskazują czy każdy z <c>remoteArgs</c> wartości jest przekazywana przez odwołanie.</param>
        <param name="localeId">Identyfikator ustawień regionalnych na potrzeby konwersje specyficzne dla ustawień regionalnych, które mogą zostać wykonane przez wywołany element.</param>
        <summary>Wywołuje określony element członkowski bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> reprezentujący wartość zwracaną wywołany element członkowski.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `remoteArgModifiers` Parametr jest używany tylko dla składników, które zostały napisane przy użyciu modelu COM. Każda wartość w `remoteArgModifiers` parametr wskazuje, czy odpowiednie wartości w `remoteArgs` parametr jest przekazywany przez odwołanie. Długość `remoteArgModifiers` powinna być taka sama jak długość `remoteArgs`.  
  
 W przypadku przekazania `null` dla `remoteArgModifiers`, ta metoda używa domyślnej logiki w celu określenia, czy argument jest przekazywany przez odwołanie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>