<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="49ddba3fbd91cace87e14cf7e3ff245896419e19" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36648130" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiuje kontrakt używanego przez składniki dostępu do obiektu między granicami domeny i procesu aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po zaimplementowaniu <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> w danym typie składniki umożliwiają kontrakt dostęp do informacji o typie dla obiektów typu. Składniki dostęp do informacji typu przez wywołanie metody <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metodę, aby uzyskać <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> Interfejs definiuje kontrakt, które składniki umożliwiają dostęp do określonego typu i informacje o użytkowniku i wywoływanie elementów członkowskich.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> , który określa typ bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> , Który określa typ bieżącego <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metody członkami zdalnego dostępu do obiektu, który bieżącego <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identyfikuje.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Nazwa kanoniczna typu można rzutować obiektu na.</param>
        <summary>Rzutuje identyfikowana na podstawie bieżącego obiektu <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> do określonego typu.</summary>
        <returns>A <see cref="T:System.AddIn.Contract.RemoteArgument" /> reprezentujący wynik operacji rzutowania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa kanoniczna jest globalnie unikatowej nazwy, takie jak identyfikator GUID. Ciągi w formacie \< *nazwy zestawu*>, \< *pełni kwalifikowana nazwa typu*> są zalecane. Przykład zalecany nazwę kanoniczną jest "ShapeApp Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".  
  
 Nazwa kanoniczna typu nie można zmienić typu jest opublikowana w składniku. Zmiana nazwa kanoniczna typu w przyszłych wersjach programu podziały składnik zgodność składnika i klientów, które już używają tego typu.  
  
 Zalecane jest <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> throw implementacje <xref:System.InvalidCastException> w przypadku niepowodzenia operacji rzutowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>