<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ac605ded964ff1254edaa30d789e562e95ae866" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63916196" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="350bf-101">Definiuje kontrakt, używanego przez składniki dostępu do obiektu między granicami domeny i procesów aplikacji.</span><span class="sxs-lookup"><span data-stu-id="350bf-101">Defines a contract that components can use to access an object across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350bf-102">Podczas implementacji <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> w danym typie składniki umożliwiają kontrakt dostęp do informacji o typie dla obiektów tego typu.</span><span class="sxs-lookup"><span data-stu-id="350bf-102">When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type.</span></span> <span data-ttu-id="350bf-103">Składniki dostęp do informacji o typie, wywołując <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metodę, aby uzyskać <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span><span class="sxs-lookup"><span data-stu-id="350bf-103">Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="350bf-104"><xref:System.AddIn.Contract.Automation.IRemoteTypeContract> Interfejs definiuje kontrakt, używanego przez składniki mogą uzyskiwać dostęp do określonego typu i informacje o członku i wywoływanie elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="350bf-104">The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="350bf-105">Zwraca <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> , który określa typ bieżącego elementu <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span><span class="sxs-lookup"><span data-stu-id="350bf-105">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span></span></summary>
        <returns><span data-ttu-id="350bf-106"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> , Który określa typ bieżącego elementu <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span><span class="sxs-lookup"><span data-stu-id="350bf-106">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350bf-107">Użyj <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> metodę, aby dostęp do elementów członkowskich zdalnego obiektu, który bieżącego <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identyfikuje.</span><span class="sxs-lookup"><span data-stu-id="350bf-107">Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName"><span data-ttu-id="350bf-108">Nazwa kanoniczna typu można rzutować obiektu na.</span><span class="sxs-lookup"><span data-stu-id="350bf-108">The canonical name of the type to cast the object to.</span></span></param>
        <summary><span data-ttu-id="350bf-109">Rzutuje obiektu identyfikowane przez bieżącą <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> do określonego typu.</span><span class="sxs-lookup"><span data-stu-id="350bf-109">Casts the object identified by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> to a specified type.</span></span></summary>
        <returns><span data-ttu-id="350bf-110">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> reprezentujący wynik operacji rzutowania.</span><span class="sxs-lookup"><span data-stu-id="350bf-110">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the result of the cast operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="350bf-111">Nazwa kanoniczna jest globalnie unikatową nazwę, np. identyfikator GUID.</span><span class="sxs-lookup"><span data-stu-id="350bf-111">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="350bf-112">Ciągi w formacie \< *nazwy zestawu*>, \< *w pełni kwalifikowaną nazwę typu*> są zalecane.</span><span class="sxs-lookup"><span data-stu-id="350bf-112">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended.</span></span> <span data-ttu-id="350bf-113">Przykład zalecanym formatem nazwy kanonicznej jest "ShapeApp Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".</span><span class="sxs-lookup"><span data-stu-id="350bf-113">An example of the recommended format of a canonical name is "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".</span></span>  
  
 <span data-ttu-id="350bf-114">Nazwa kanoniczna typu nie można zmienić po opublikowaniu typu w składniku.</span><span class="sxs-lookup"><span data-stu-id="350bf-114">The canonical name for a type cannot change after a type is published in a component.</span></span> <span data-ttu-id="350bf-115">Zmiana nazwy kanonicznej typu w przyszłych wersjach programu podziały składnika kompatybilność składnika i klientów, które już używają typu.</span><span class="sxs-lookup"><span data-stu-id="350bf-115">Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 <span data-ttu-id="350bf-116">Zalecane jest, <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> throw implementacje <xref:System.InvalidCastException> w przypadku niepowodzenia operacji rzutowania.</span><span class="sxs-lookup"><span data-stu-id="350bf-116">It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>