<Type Name="ClientWebSocket" FullName="System.Net.WebSockets.ClientWebSocket">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dfd938a8fc180d8f467191a599c76077c80c0016" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69112721" /></Metadata><TypeSignature Language="C#" Value="public class ClientWebSocket : System.Net.WebSockets.WebSocket, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientWebSocket extends System.Net.WebSockets.WebSocket implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebSockets.ClientWebSocket" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientWebSocket&#xA;Inherits WebSocket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientWebSocket : System::Net::WebSockets::WebSocket, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientWebSocket = class&#xA;    inherit WebSocket&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebSockets.WebSocket</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3a2a2-101">Umożliwia klientowi łączenie się z usługami WebSocket.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-101">Provides a client for connecting to WebSocket services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-102">Niektóre klasy i elementy klas w <xref:System.Net.WebSockets> przestrzeni nazw są obsługiwane w systemach Windows 7, Windows Vista z dodatkiem SP2 i Windows Server 2008.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-102">Some of the classes and class elements in the <xref:System.Net.WebSockets> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</span></span> <span data-ttu-id="3a2a2-103">Jednak tylko publiczne implementacje obiektów WebSockets klienta i serwera są obsługiwane w systemach Windows 8 i Windows Server 2012.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-103">However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</span></span> <span data-ttu-id="3a2a2-104">Elementy klasy w <xref:System.Net.WebSockets> przestrzeni nazw, które są obsługiwane w systemie Windows 7, Windows Vista z dodatkiem SP2 i Windows Server 2008 są elementami klas abstrakcyjnych.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-104">The class elements in the <xref:System.Net.WebSockets> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</span></span> <span data-ttu-id="3a2a2-105">Pozwala to deweloperom aplikacji na dziedziczenie i poszerzenie klas klasy abstrakcyjnej i elementów klasy z rzeczywistą implementacją obiektów WebSockets klienta.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-105">This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientWebSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientWebSocket();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a2a2-106">Tworzy wystąpienie <see cref="T:System.Net.WebSockets.ClientWebSocket" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-106">Creates an instance of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="clientWebSocket.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a2a2-107">Przerywa połączenie i anuluje wszystkie oczekujące operacje we/wy.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-107">Aborts the connection and cancels any pending IO operations.</span></span></summary>
        <remarks><span data-ttu-id="3a2a2-108">Nie `ClientWebSocket` można ponownie użyć, gdy zostanie on przerwany.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-108">The `ClientWebSocket` cannot be reused once it is aborted.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="3a2a2-109">Stan zamknięcia obiektu WebSocket.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-109">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="3a2a2-110">Opis stanu zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-110">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-111">Token anulowania służący do propagowania powiadomienia, że ta operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-111">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-112"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> Zamknij wystąpienie jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-112">Close the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-113">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-113">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-114">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-114">This operation will not block.</span></span> <span data-ttu-id="3a2a2-115">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony <xref:System.Net.WebSockets.ClientWebSocket> po zamknięciu wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-115">The returned <xref:System.Threading.Tasks.Task> object will complete after the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task CloseOutputAsync (System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task CloseOutputAsync(valuetype System.Net.WebSockets.WebSocketCloseStatus closeStatus, string statusDescription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ CloseOutputAsync(System::Net::WebSockets::WebSocketCloseStatus closeStatus, System::String ^ statusDescription, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.CloseOutputAsync : System.Net.WebSockets.WebSocketCloseStatus * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.CloseOutputAsync (closeStatus, statusDescription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeStatus" Type="System.Net.WebSockets.WebSocketCloseStatus" />
        <Parameter Name="statusDescription" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="closeStatus"><span data-ttu-id="3a2a2-116">Stan zamknięcia obiektu WebSocket.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-116">The WebSocket close status.</span></span></param>
        <param name="statusDescription"><span data-ttu-id="3a2a2-117">Opis stanu zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-117">A description of the close status.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-118">Token anulowania służący do propagowania powiadomienia, że ta operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-118">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-119">Zamknij dane wyjściowe <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienia jako operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-119">Close the output for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-120">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-120">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-121">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-121">This operation will not block.</span></span> <span data-ttu-id="3a2a2-122">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po zamknięciu danych wyjściowych <xref:System.Net.WebSockets.ClientWebSocket> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-122">The returned <xref:System.Threading.Tasks.Task> object will complete after the output on the <xref:System.Net.WebSockets.ClientWebSocket> instance is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatus">
      <MemberSignature Language="C#" Value="public override Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Net.WebSockets.WebSocketCloseStatus&gt; CloseStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatus As Nullable(Of WebSocketCloseStatus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; CloseStatus { Nullable&lt;System::Net::WebSockets::WebSocketCloseStatus&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatus : Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Net.WebSockets.WebSocketCloseStatus&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a2a2-123">Pobiera przyczynę zainicjowania uzgadniania zamknięcia w <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-123">Gets the reason why the close handshake was initiated on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="3a2a2-124">Powód, dla którego zainicjowano uzgadnianie zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-124">The reason why the close handshake was initiated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseStatusDescription">
      <MemberSignature Language="C#" Value="public override string CloseStatusDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseStatusDescription" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CloseStatusDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseStatusDescription { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseStatusDescription : string" Usage="System.Net.WebSockets.ClientWebSocket.CloseStatusDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a2a2-125">Pobiera opis przyczyny <see cref="T:System.Net.WebSockets.ClientWebSocket" /> zamknięcia wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-125">Gets a description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></summary>
        <value><span data-ttu-id="3a2a2-126">Opis przyczyny <see cref="T:System.Net.WebSockets.ClientWebSocket" /> zamknięcia wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-126">The description of the reason why the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance was closed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (Uri uri, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Uri uri, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(Uri ^ uri, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : Uri * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.ConnectAsync (uri, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="uri"><span data-ttu-id="3a2a2-127">Identyfikator URI serwera WebSocket, z którym ma zostać nawiązane połączenie.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-127">The URI of the WebSocket server to connect to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-128">Token anulowania służący do propagowania powiadomienia, że operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-128">A cancellation token used to propagate notification that the  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-129">Nawiąż połączenie z serwerem WebSocket jako operacją asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-129">Connect to a WebSocket server as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-130">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-130">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-131"><xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> Metoda inicjuje uzgadnianie protokołu WebSocket ze zdalnym miejscem docelowym sieci, a następnie negocjuje protokół podrzędny.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-131">The <xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</span></span>  
  
 <span data-ttu-id="3a2a2-132">W przypadku zwykłych połączeń z użyciem protokołu `ws://` WebSocket Użyj schematu w identyfikatorze URI.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-132">For plain WebSocket connections, use the `ws://` scheme in the uri.</span></span> <span data-ttu-id="3a2a2-133">W przypadku bezpiecznych połączeń protokołu WebSocket za pośrednictwem protokołu TLS `wss://` /SSL Użyj schematu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-133">For secure WebSocket connections over TLS/SSL, use the `wss://` scheme.</span></span>  
  
 <span data-ttu-id="3a2a2-134">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-134">This operation will not block.</span></span> <span data-ttu-id="3a2a2-135">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po zakończeniu żądania połączenia <xref:System.Net.WebSockets.ClientWebSocket> w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-135">The returned <xref:System.Threading.Tasks.Task> object will complete after the connect request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="clientWebSocket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3a2a2-136">Zwalnia niezarządzane zasoby używane przez <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-136">Releases the unmanaged resources used by the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.WebSockets.ClientWebSocketOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebSockets.ClientWebSocketOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ClientWebSocketOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::WebSockets::ClientWebSocketOptions ^ Options { System::Net::WebSockets::ClientWebSocketOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.WebSockets.ClientWebSocketOptions" Usage="System.Net.WebSockets.ClientWebSocket.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.ClientWebSocketOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a2a2-137">Pobiera opcje protokołu WebSocket dla tego <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-137">Gets the WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="3a2a2-138">Opcje protokołu WebSocket dla tego <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-138">The WebSocket options for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync (ArraySegment&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.WebSocketReceiveResult&gt; ReceiveAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::WebSockets::WebSocketReceiveResult ^&gt; ^ ReceiveAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : ArraySegment&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.WebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3a2a2-139">Bufor, w którym ma zostać odebrana odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-139">The buffer to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-140">Token odwołania, wykorzystywany do propagowania powiadomienia, że niniejsza operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-140">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-141">Odbiera dane przy <see cref="T:System.Net.WebSockets.ClientWebSocket" /> użyciu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-141">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-142">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-142">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-143">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-143">This operation will not block.</span></span> <span data-ttu-id="3a2a2-144">Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po zakończeniu żądania Receive <xref:System.Net.WebSockets.ClientWebSocket> w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-144">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="3a2a2-145">Dla każdego <xref:System.Net.WebSockets.ClientWebSocket> obiektu równolegle obsługiwane jest tylko jedno wysyłanie i jeden odbierający.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-145">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a2a2-146">Nie <see cref="T:System.Net.WebSockets.ClientWebSocket" /> jest połączony.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-146">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3a2a2-147"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-147">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.Net.WebSockets.ValueWebSocketReceiveResult&gt; ReceiveAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.ReceiveAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask&lt;System::Net::WebSockets::ValueWebSocketReceiveResult&gt; ReceiveAsync(Memory&lt;System::Byte&gt; buffer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReceiveAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;" Usage="clientWebSocket.ReceiveAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Net.WebSockets.ValueWebSocketReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3a2a2-148">Region pamięci, w którym ma zostać odebrana odpowiedź.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-148">The region of memory to receive the response.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-149">Token odwołania, wykorzystywany do propagowania powiadomienia, że niniejsza operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-149">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-150">Odbiera dane <see cref="T:System.Net.WebSockets.ClientWebSocket" /> z przedziału pamięci bajtowej jako operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-150">Receives data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> to a byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-151">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-151">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3a2a2-152">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-152">This operation will not block.</span></span> <span data-ttu-id="3a2a2-153">Zwrócony <xref:System.Threading.Tasks.Task%601> obiekt zostanie ukończony po zakończeniu żądania Receive <xref:System.Net.WebSockets.ClientWebSocket> w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the receive request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="3a2a2-154">Dla każdego <xref:System.Net.WebSockets.ClientWebSocket> obiektu równolegle obsługiwane jest tylko jedno wysyłanie i jeden odbierający.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-154">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a2a2-155">Nie <see cref="T:System.Net.WebSockets.ClientWebSocket" /> jest połączony.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-155">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3a2a2-156"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-156">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task SendAsync (ArraySegment&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task SendAsync(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ SendAsync(ArraySegment&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ArraySegment&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" />
        <Parameter Name="endOfMessage" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3a2a2-157">Bufor zawierający komunikat do wysłania.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-157">The buffer containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="3a2a2-158">Jedna z wartości wyliczenia określająca, czy bufor jest czystym tekstem czy w formacie binarnym.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-158">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="3a2a2-159"><see langword="true" />Aby wskazać, że jest to ostateczne wysyłanie asynchroniczne; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="3a2a2-159"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-160">Token odwołania, wykorzystywany do propagowania powiadomienia, że niniejsza operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-160">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-161">Wysyła dane przy <see cref="T:System.Net.WebSockets.ClientWebSocket" /> użyciu operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-161">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-162">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-162">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 <span data-ttu-id="3a2a2-163">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-163">This operation will not block.</span></span> <span data-ttu-id="3a2a2-164">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po zakończeniu żądania wysłania <xref:System.Net.WebSockets.ClientWebSocket> w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-164">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>  
  
 <span data-ttu-id="3a2a2-165">Dla każdego <xref:System.Net.WebSockets.ClientWebSocket> obiektu równolegle obsługiwane jest tylko jedno wysyłanie i jeden odbierający.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-165">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a2a2-166">Nie <see cref="T:System.Net.WebSockets.ClientWebSocket" /> jest połączony.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-166">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3a2a2-167"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-167">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask SendAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask SendAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Net.WebSockets.WebSocketMessageType messageType, bool endOfMessage, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebSockets.ClientWebSocket.SendAsync(System.ReadOnlyMemory{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask SendAsync(ReadOnlyMemory&lt;System::Byte&gt; buffer, System::Net::WebSockets::WebSocketMessageType messageType, bool endOfMessage, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : ReadOnlyMemory&lt;byte&gt; * System.Net.WebSockets.WebSocketMessageType * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="clientWebSocket.SendAsync (buffer, messageType, endOfMessage, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="messageType" Type="System.Net.WebSockets.WebSocketMessageType" Index="1" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="endOfMessage" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="3a2a2-168">Region pamięci zawierający komunikat do wysłania.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-168">The region of memory containing the message to be sent.</span></span></param>
        <param name="messageType"><span data-ttu-id="3a2a2-169">Jedna z wartości wyliczenia określająca, czy bufor jest czystym tekstem czy w formacie binarnym.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-169">One of the enumeration values that specifies whether the buffer is clear text or in a binary format.</span></span></param>
        <param name="endOfMessage"><span data-ttu-id="3a2a2-170"><see langword="true" />Aby wskazać, że jest to ostateczne wysyłanie asynchroniczne; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="3a2a2-170"><see langword="true" /> to indicate this is the final asynchronous send; otherwise, <see langword="false" />.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="3a2a2-171">Token odwołania, wykorzystywany do propagowania powiadomienia, że niniejsza operacja powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-171">A cancellation token used to propagate notification that this operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="3a2a2-172">Wysyła dane <see cref="T:System.Net.WebSockets.ClientWebSocket" /> z zakresu pamięci bajtów tylko do odczytu jako operacji asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-172">Sends data on <see cref="T:System.Net.WebSockets.ClientWebSocket" /> from a read-only byte memory range as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="3a2a2-173">Obiekt zadania reprezentujący operację asynchroniczną.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-173">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="3a2a2-174">Ta operacja nie będzie blokować.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-174">This operation will not block.</span></span> <span data-ttu-id="3a2a2-175">Zwrócony <xref:System.Threading.Tasks.Task> obiekt zostanie ukończony po zakończeniu żądania wysłania <xref:System.Net.WebSockets.ClientWebSocket> w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-175">The returned <xref:System.Threading.Tasks.Task> object will complete after the send request on the <xref:System.Net.WebSockets.ClientWebSocket> instance has completed.</span></span>
  
<span data-ttu-id="3a2a2-176">Dla każdego <xref:System.Net.WebSockets.ClientWebSocket> obiektu równolegle obsługiwane jest tylko jedno wysyłanie i jeden odbierający.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-176">Exactly one send and one receive is supported on each <xref:System.Net.WebSockets.ClientWebSocket> object in parallel.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3a2a2-177">Nie <see cref="T:System.Net.WebSockets.ClientWebSocket" /> jest połączony.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-177">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> is not connected.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3a2a2-178"><see cref="T:System.Net.WebSockets.ClientWebSocket" /> Został zamknięty.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-178">The <see cref="T:System.Net.WebSockets.ClientWebSocket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Net.WebSockets.WebSocketState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.WebSockets.WebSocketState State" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As WebSocketState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebSockets::WebSocketState State { System::Net::WebSockets::WebSocketState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Net.WebSockets.WebSocketState" Usage="System.Net.WebSockets.ClientWebSocket.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebSockets.WebSocketState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a2a2-179">Pobiera stan <see cref="T:System.Net.WebSockets.ClientWebSocket" /> obiektu WebSocket wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-179">Gets the WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="3a2a2-180">Stan obiektu WebSocket <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-180">The WebSocket state of the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProtocol">
      <MemberSignature Language="C#" Value="public override string SubProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SubProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SubProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProtocol : string" Usage="System.Net.WebSockets.ClientWebSocket.SubProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.WebSockets.Client</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3a2a2-181">Pobiera obsługiwany podprotokół WebSocket dla tego <see cref="T:System.Net.WebSockets.ClientWebSocket" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-181">Gets the supported WebSocket sub-protocol for the <see cref="T:System.Net.WebSockets.ClientWebSocket" /> instance.</span></span></summary>
        <value><span data-ttu-id="3a2a2-182">Obsługiwany podprotokół WebSocket.</span><span class="sxs-lookup"><span data-stu-id="3a2a2-182">The supported WebSocket sub-protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
