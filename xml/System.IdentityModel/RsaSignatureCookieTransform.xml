<Type Name="RsaSignatureCookieTransform" FullName="System.IdentityModel.RsaSignatureCookieTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="28aa1c87c1c338c2018612dfc9de8f883286046e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36479653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RsaSignatureCookieTransform : System.IdentityModel.CookieTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RsaSignatureCookieTransform extends System.IdentityModel.CookieTransform" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.RsaSignatureCookieTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class RsaSignatureCookieTransform&#xA;Inherits CookieTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RsaSignatureCookieTransform : System::IdentityModel::CookieTransform" />
  <TypeSignature Language="F#" Value="type RsaSignatureCookieTransform = class&#xA;    inherit CookieTransform" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.CookieTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Przy użyciu integralności plików cookie <see cref="T:System.Security.Cryptography.RSA" /> podpisu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.RsaSignatureCookieTransform> dodaje MAC RSA dane pliku cookie. Zapewnia integralność, ale nie poufności. Domyślnie MAC używa algorytmu SHA-256, ale może zostać wyświetlony SHA-1.  
  
 Pliki cookie chronione przy użyciu tej transformacji, mogą zostać odczytane przez dowolnego komputera, który udostępnia ten sam klucz prywatny RSA (związany z X509 certyfikatu).  
  
> [!IMPORTANT]
>  Korzystając z <xref:System.IdentityModel.RsaSignatureCookieTransform> za pomocą usługi, jeśli klucz podany przez zmianę certyfikatu musi zostać ponownie uruchomiona.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.RSA key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.RSA key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As RSA)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaSignatureCookieTransform(System::Security::Cryptography::RSA ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaSignatureCookieTransform : System.Security.Cryptography.RSA -&gt; System.IdentityModel.RsaSignatureCookieTransform" Usage="new System.IdentityModel.RsaSignatureCookieTransform key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
      </Parameters>
      <Docs>
        <param name="key">Klucz RSA do użycia jako domyślne podpisywanie i klucz weryfikacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> przy użyciu określonego klucza RSA.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> Właściwość jest inicjowana do `key`. <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> Właściwość jest inicjowana do kolekcji zawierającej `key` jako jego jedynym elementem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaSignatureCookieTransform (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaSignatureCookieTransform(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaSignatureCookieTransform : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.RsaSignatureCookieTransform" Usage="new System.IdentityModel.RsaSignatureCookieTransform certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Certyfikat, którego klucz prywatny jest służący do podpisywania i sprawdzania.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.IdentityModel.RsaSignatureCookieTransform" /> przy użyciu klucza prywatnego określonego certyfikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> Właściwość jest inicjowana do klucza prywatnego certyfikatu. <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> Właściwość jest inicjowana do kolekcji, który zawiera klucz prywatny certyfikatu jako jego jedynym elementem.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="certificate" /> nie ma klucza prywatnego 
—lub— 
Klucz prywatny <paramref name="certificate" /> nie jest kluczem RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public override byte[] Decode (byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decode(unsigned int8[] encoded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decode (encoded As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decode(cli::array &lt;System::Byte&gt; ^ encoded);" />
      <MemberSignature Language="F#" Value="override this.Decode : byte[] -&gt; byte[]" Usage="rsaSignatureCookieTransform.Decode encoded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoded">Dane, które poprzednio zwróconej z <see cref="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" /> metody.</param>
        <summary>Weryfikuje określony podpis i zwraca dane oryginalne, bez znaku.</summary>
        <returns>Oryginalne dane (bez znaku).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie klucze w kolekcji określonej w <xref:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys%2A> właściwości są sprawdzane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encoded" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="encoded" /> zawiera zero bajtów.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Podpis jest nieprawidłowy.</exception>
        <exception cref="T:System.FormatException">Dane są w nieprawidłowym formacie.</exception>
        <exception cref="T:System.InvalidOperationException">Brak kluczy weryfikacji.</exception>
        <exception cref="T:System.NotSupportedException">Platforma nie obsługuje określonego algorytmu.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public override byte[] Encode (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encode(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaSignatureCookieTransform.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encode (value As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encode(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="override this.Encode : byte[] -&gt; byte[]" Usage="rsaSignatureCookieTransform.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">Dane, które były podpisane.</param>
        <summary>Rejestruje określone dane.</summary>
        <returns>Podpisane dane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klucz określony przez <xref:System.IdentityModel.RsaSignatureCookieTransform.SigningKey%2A> właściwości musi zawierać klucz prywatny, aby zarejestrować dane.  
  
 Podpisane dane mogą być weryfikowane przez wywołanie metody <xref:System.IdentityModel.RsaSignatureCookieTransform.Decode%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> zawiera zero bajtów.</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> Właściwość <see langword="null" />.  
  
—lub— 
Klucz określony przez <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> właściwość nie jest możliwy do przypisania jako <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" />.  
  
—lub— 
Klucz określony przez <see cref="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" /> właściwości nie zawiera klucza prywatnego.</exception>
        <exception cref="T:System.NotSupportedException">System operacyjny nie obsługuje określonego algorytmu.</exception>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.IdentityModel.RsaSignatureCookieTransform.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę algorytmu wyznaczania wartości skrótu do użycia.</summary>
        <value>Nazwa algorytmu wyznaczania wartości skrótu. Wartość domyślna to "SHA256".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Algorytm SHA256 jest algorytm domyślny. Może to wymagać system operacyjny [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] i .NET 3.5 z dodatkiem SP1.  
  
 Jeśli nie jest obsługiwany algorytm SHA256, ustaw <xref:System.IdentityModel.RsaSignatureCookieTransform.HashName%2A> właściwość "SHA1".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.RSA SigningKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RSA SigningKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningKey As RSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::RSA ^ SigningKey { System::Security::Cryptography::RSA ^ get(); void set(System::Security::Cryptography::RSA ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningKey : System.Security.Cryptography.RSA with get, set" Usage="System.IdentityModel.RsaSignatureCookieTransform.SigningKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia klucz RSA, który jest używany do podpisywania.</summary>
        <value>Klucz RSA, który jest używany do podpisywania.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerificationKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt; VerificationKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.RSA&gt; VerificationKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VerificationKeys As ReadOnlyCollection(Of RSA)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ VerificationKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VerificationKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;" Usage="System.IdentityModel.RsaSignatureCookieTransform.VerificationKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję kluczami używanymi na potrzeby weryfikacji podpisu.  
  
Domyślnie ta właściwość zwraca listę zawierającą tylko klucz podpisywania.</summary>
        <value>Kolekcja kluczami używanymi na potrzeby weryfikacji podpisu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>