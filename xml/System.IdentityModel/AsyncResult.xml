<Type Name="AsyncResult" FullName="System.IdentityModel.AsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23d8860c780243a3a6d8738333fbea20284fb841" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30455043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsyncResult : IAsyncResult, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncResult&#xA;Implements IAsyncResult, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult abstract : IAsyncResult, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Abstrakcyjna klasa podstawowa, która implementuje <see cref="T:System.IAsyncResult" /> interfejsu. Pełni rolę klasy podstawowej, z którego ma pochodzić <see cref="T:System.IAsyncResult" /> obiektów, które mogą być używane dla typowych scenariuszy programowania asynchronicznego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult?displayProperty=nameWithType> interfejsu.  
  
 <xref:System.IdentityModel.TypedAsyncResult%601> Pochodną klasy <xref:System.IdentityModel.AsyncResult>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Metoda wywoływana z konstruktorów w klasach pochodnych zainicjować <see cref="T:System.IdentityModel.AsyncResult" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Metoda wywoływana z konstruktorów w klasach pochodnych, aby zainicjować wystąpienia <see cref="T:System.IdentityModel.AsyncResult" /> klasy, która nie ma delegata wywołania zwrotnego lub obiekt stanu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Zdefiniowane przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</param>
        <summary>Metoda wywoływana z konstruktorów w klasach pochodnych, aby zainicjować wystąpienia <see cref="T:System.IdentityModel.AsyncResult" /> klasy, która nie ma delegata wywołania zwrotnego, ale ma obiekt stanu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (callback As AsyncCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Metoda wywoływana po zakończeniu operacji asynchronicznej.</param>
        <param name="state">Zdefiniowane przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</param>
        <summary>Metoda wywoływana z konstruktorów w klasach pochodnych, aby zainicjować wystąpienia <see cref="T:System.IdentityModel.AsyncResult" /> klasy, która ma delegata wywołania zwrotnego i obiektu stanu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt użytkownika, który kwalifikacji lub zawierający informacje o operacji asynchronicznej.</summary>
        <value>Zdefiniowane przez użytkownika obiekt podlegający kwalifikacji lub zawierający informacje o operacji asynchronicznej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Threading.WaitHandle" /> umożliwiające poczekaj na zakończenie operacji asynchronicznych.</summary>
        <value>A <see cref="T:System.Threading.WaitHandle" /> umożliwiające poczekaj na zakończenie operacji asynchronicznych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wywołuje się, by zakończyć operację asynchroniczną.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Complete (completedSynchronously As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <see langword="true" /> Jeśli operacja asynchroniczna ukończona synchronicznie; w przeciwnym razie <see langword="false" />.</param>
        <summary>Po zakończeniu operacji asynchronicznych i nie wystąpił, należy wywołać tej wersji pełnej. Aktualizuje stan operacji, a powiadamia wywołania zwrotnego.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <see langword="true" /> Jeśli operacja asynchroniczna ukończona synchronicznie; w przeciwnym razie <see langword="false" />.</param>
        <param name="exception">Wyjątek, który wystąpił podczas przetwarzania operacji asynchronicznej.</param>
        <summary>Wywołanie tej wersji pełnej, po podniesieniu Wystąpił wyjątek podczas przetwarzania. Oprócz powiadamiania wywołania zwrotnego, przechwytuje wyjątek i zapisze go do zostać zgłoszony podczas wywołania <see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /> metody.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy operacja asynchroniczna została ukończona synchronicznie.</summary>
        <value>
          <see langword="true" /> Jeśli operacja asynchroniczna ukończona synchronicznie; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji, zobacz <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zwalnia zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.IdentityModel.AsyncResult" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia zasoby używane przez bieżące wystąpienie klasy <see cref="T:System.IdentityModel.AsyncResult" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool isExplicitDispose);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool isExplicitDispose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (isExplicitDispose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool isExplicitDispose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isExplicitDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isExplicitDispose">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane. <see langword="true" /> Wskazuje, że jest jawnym wywołaniem metody Dispose.</param>
        <summary>Wywoływane przez <see cref="M:System.IdentityModel.AsyncResult.Dispose" /> i <see cref="M:System.IdentityModel.AsyncResult.Finalize" /> metod, aby zwolnić zasoby zarządzane i niezarządzane używane przez bieżące wystąpienie klasy <see cref="T:System.IdentityModel.AsyncResult" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static void End (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void End(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub End (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void End(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> Reprezentujący stan operacji asynchronicznej.</param>
        <summary>Ta metoda jest wywoływana po <c>zakończenia</c> funkcji dla operacji asynchronicznej jest pełny. Zapewnia operacja asynchroniczna została ukończona czy jest niektórych typowych sprawdzania poprawności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncResult ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia <see cref="T:System.IdentityModel.AsyncResult" /> obiektu, próby zwolnienia zasobów i wykonywać inne operacje oczyszczania, przed jego jest odzyskana przez wyrzucanie elementów bezużytecznych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy operacja asynchroniczna została ukończona.</summary>
        <value>
          <see langword="true" /> Jeśli operacja została zakończona; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>