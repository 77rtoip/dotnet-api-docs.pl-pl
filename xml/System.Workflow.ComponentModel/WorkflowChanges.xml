<Type Name="WorkflowChanges" FullName="System.Workflow.ComponentModel.WorkflowChanges">
  <Metadata><Meta Name="ms.openlocfilehash" Value="112523fd00469db491beacc38442e54060316043" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51863062" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowChanges" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowChanges extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.WorkflowChanges" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowChanges" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowChanges sealed" />
  <TypeSignature Language="F#" Value="type WorkflowChanges = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje zestaw proponowanych zmian do uruchomionego wystąpienia przepływu pracy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Wszystkie proponowane zmiany do uruchomionego wystąpienia przepływu pracy należy wprowadzać za pomocą <xref:System.Workflow.ComponentModel.WorkflowChanges> obiektu.  
  
 Gdy <xref:System.Workflow.ComponentModel.WorkflowChanges> obiekt jest konstruowany w kodzie aplikacji (poza wystąpieniem przepływu pracy) <xref:System.Workflow.ComponentModel.Activity> obiektu, który jest przekazywany do konstruktora musi być obiektem, który jest zwracany przez <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowDefinition%2A> metody <xref:System.Workflow.Runtime.WorkflowInstance> klasy.  
  
   
  
## Examples  
 W poniższym przykładzie pokazano tworzenie nowego wystąpienia <xref:System.Workflow.ComponentModel.WorkflowChanges> obiektu. W tym przykładzie pochodzi z przykładu porządkowanie SDK maszyny stanu. Aby uzyskać więcej informacji, zobacz [porządkowanie przykładowe maszyny stanu](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[WF_Samples#87](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#87)]
 [!code-vb[WF_Samples#87](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#87)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms734775(v=vs.90)">Za pomocą przepływu pracy zmiany w przepływach pracy</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowChanges (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowChanges(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.WorkflowChanges : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.WorkflowChanges" Usage="new System.Workflow.ComponentModel.WorkflowChanges rootActivity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">Katalog główny <see cref="T:System.Workflow.ComponentModel.Activity" /> przepływu pracy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rootActivity" /> to odwołanie o wartości null (Visual Basic <see langword="Nothing" />).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="rootActivity" /> nie jest <see cref="T:System.Workflow.ComponentModel.CompositeActivity" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="rootActivity" /> jest w trybie projektowania.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConditionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ConditionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ConditionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConditionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ConditionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConditionProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa warunek, który muszą być spełnione, aby zastosować <see cref="T:System.Workflow.ComponentModel.WorkflowChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić na działania głównego zabrania aktualizacje dynamiczne uruchomiony przepływ pracy.  
  
 Gdy właściwość jest ustawiona na działania głównego i warunek to `false`, aktualizacji dynamicznych są niedozwolone w wystąpieniu przepływu pracy. Jeśli warunek jest `true`, lub warunek nie jest ustawiona, aktualizacji dynamicznych są dozwolone.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCondition">
      <MemberSignature Language="C#" Value="public static object GetCondition (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetCondition(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCondition (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetCondition(System::Object ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetCondition : obj -&gt; obj" Usage="System.Workflow.ComponentModel.WorkflowChanges.GetCondition dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">A <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (lub typu pochodnego) zawierający właściwości warunku, takich jak <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> i <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> działań.</param>
        <summary>Pobiera właściwość condition obiektu zależności.</summary>
        <returns>A warunku typ właściwości, takie jak <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> Jest właściwością dołączonych zależności, oznacza to, jest zadeklarowana i używane przez jeden typ i ustawić na innej. W związku z tym, muszą być statyczne `get` i `set` metody w typie deklarowanie właściwości.  
  
 Metodę pomocnika na potrzeby pobierania <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyObject" /> ma wartość null (<see langword="Nothing" /> w języku Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dependencyObject" /> nie jest <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> lub typ pochodzący z <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</exception>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="SetCondition">
      <MemberSignature Language="C#" Value="public static void SetCondition (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCondition(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCondition (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCondition(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCondition : obj * obj -&gt; unit" Usage="System.Workflow.ComponentModel.WorkflowChanges.SetCondition (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">A <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> (lub typu pochodnego) zawierający właściwości warunku, takich jak <see cref="T:System.Workflow.Activities.SequentialWorkflowActivity" /> i <see cref="T:System.Workflow.Activities.StateMachineWorkflowActivity" /> działań.</param>
        <param name="value">Typ warunku, aby ustawić dla obiektu zależności, takie jak <see cref="T:System.Workflow.ComponentModel.ActivityCondition" />.</param>
        <summary>Ustawia właściwość condition obiektu zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty> Jest właściwością dołączonych zależności, oznacza to, jest zadeklarowana i używane przez jeden typ i ustawić na innej. W związku z tym, muszą być statyczne `get` i `set` metody w typie deklarowanie właściwości.  
  
 Metoda pomocnika dla ustawienia <xref:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Workflow.Activities.SequentialWorkflowActivity.DynamicUpdateCondition" />
        <altmember cref="P:System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition" />
      </Docs>
    </Member>
    <Member MemberName="TransientWorkflow">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.CompositeActivity TransientWorkflow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.CompositeActivity TransientWorkflow" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransientWorkflow As CompositeActivity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::CompositeActivity ^ TransientWorkflow { System::Workflow::ComponentModel::CompositeActivity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransientWorkflow : System.Workflow.ComponentModel.CompositeActivity" Usage="System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.CompositeActivity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca drzewo działania sklonowany, do której zmiany może być wykonywane i następnie stosowane do uruchomionego wystąpienia przepływu pracy.</summary>
        <value>Element <see cref="T:System.Workflow.ComponentModel.CompositeActivity" /> zawiera działania głównego sklonowanego przepływu pracy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie pokazano dodawanie działań do właściwości TransientWorkflow. W tym przykładzie pochodzi z przykładu porządkowanie SDK maszyny stanu. Aby uzyskać więcej informacji, zobacz [porządkowanie przykładowe maszyny stanu](https://msdn.microsoft.com/library/59272cf4-bc98-439c-bcfa-b66999ebce5c).  
  
 [!code-csharp[WF_Samples#88](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#88)]
 [!code-vb[WF_Samples#88](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#88)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.Compiler.ValidationErrorCollection Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Function Validate () As ValidationErrorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::ValidationErrorCollection ^ Validate();" />
      <MemberSignature Language="F#" Value="member this.Validate : unit -&gt; System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" Usage="workflowChanges.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.ValidationErrorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sprawdza poprawność bieżący zestaw proponowanych zmian, które zostały wprowadzone do drzewa działań, reprezentowane przez <see cref="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" /> właściwości.</summary>
        <returns>A <see cref="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" /> obiekt, który zawiera wszelkie błędy lub ostrzeżenia, które wystąpiły podczas sprawdzania poprawności.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>