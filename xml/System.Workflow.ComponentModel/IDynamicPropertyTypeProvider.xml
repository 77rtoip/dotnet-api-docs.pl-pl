<Type Name="IDynamicPropertyTypeProvider" FullName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="783343007c3db8c127aba82af9273f7074522f20" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39899148" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type IDynamicPropertyTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0a5ae-101">Zawiera typ właściwości w infrastrukturze powiązania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a5ae-101">Provides a property type to the bind infrastructure.</span>
      </span>
      <span data-ttu-id="0a5ae-102">Jest stosowana przez działania, które zawierają właściwość typu zmiennej, gdzie typ może się różnić w zależności od innych ustawień działania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0a5ae-102">It is implemented by activities that contain a property of variable type, where the type can vary depending on other activity settings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="0a5ae-103">Ten interfejs umożliwia działanie nadrzędne do kojarzenia dwie właściwości i wskazać infrastruktury powiązania typu, który ma być używane podczas weryfikowania powiązania.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-103">This interface allows the parent activity to associate two properties and indicate to the bind infrastructure the type to be used in validating the bind.</span></span> <span data-ttu-id="0a5ae-104">Na przykład, Niewykluczone, że działania o dwie właściwości `TypeProperty` i `ValueProperty`, gdzie `TypeProperty` określa prawidłowy typ wartości `ValueProperty`.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-104">For example, you might have an activity with two properties, `TypeProperty` and `ValueProperty`, where `TypeProperty` specifies a valid type for the value of `ValueProperty`.</span></span> <span data-ttu-id="0a5ae-105">W takim przypadku implementuje działania nadrzędnego <xref:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-105">In such a case, the parent activity implements the <xref:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider> interface.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAccessType">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::AccessTypes GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessType : IServiceProvider * string -&gt; System.Workflow.ComponentModel.Compiler.AccessTypes" Usage="iDynamicPropertyTypeProvider.GetAccessType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="0a5ae-106">Obiekt, który implementuje <see cref="T:System.IServiceProvider" /> zapewniać dostęp do usługi czasu projektowania, jeśli są one potrzebne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-106">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design time services if they are needed.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="0a5ae-107">Nazwa właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-107">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ae-108">Zwraca typ dostępu dla określonej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-108">Returns the access type for the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ae-109">
            <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> Wartości wyliczenia, która oznacza poziom dostępu właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-109">An <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> enumeration value that denotes the access level of the property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5ae-110">Używane w czasie kompilacji, aby sprawdzić, czy właściwości są prawidłowo powiązane ze sobą.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-110">Used at compile time to validate if the properties are correctly bound to one other.</span></span> <span data-ttu-id="0a5ae-111">Bez tego interfejsu informacja ta wynika bezpośrednio z metody pobierającej/metod ustawiających właściwości.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-111">Without this interface, this information is inferred directly from property getter/setters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyType">
      <MemberSignature Language="C#" Value="public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyType : IServiceProvider * string -&gt; Type" Usage="iDynamicPropertyTypeProvider.GetPropertyType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="0a5ae-112">Obiekt, który implementuje <see cref="T:System.IServiceProvider" /> zapewniać dostęp do usługi w czasie projektowania, jeśli są one potrzebne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-112">An object that implements <see cref="T:System.IServiceProvider" /> to provide access to design-time services if they are needed.</span>
          </span>
        </param>
        <param name="propertyName">
          <span data-ttu-id="0a5ae-113">Nazwa właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-113">The name of the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0a5ae-114">Zwraca <see cref="T:System.Type" /> określonej właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-114">Returns the <see cref="T:System.Type" /> of the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0a5ae-115">
            <see cref="T:System.Type" /> Dla właściwości, których nazwa jest przekazywany jako <paramref name="propertyName" /> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0a5ae-115">The <see cref="T:System.Type" /> for the property whose name is passed as the <paramref name="propertyName" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a5ae-116">Używane w czasie kompilacji, aby sprawdzić, czy właściwości są prawidłowo powiązane ze sobą.</span><span class="sxs-lookup"><span data-stu-id="0a5ae-116">Used at compile time to validate if the properties are correctly bound to one other.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>