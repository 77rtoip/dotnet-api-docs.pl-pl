<Type Name="ContractBasedImportDefinition" FullName="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4f5993b9dd4e87ed0ff88cef2f4726b948dbf5c8" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56777339" /></Metadata><TypeSignature Language="C#" Value="public class ContractBasedImportDefinition : System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContractBasedImportDefinition extends System.ComponentModel.Composition.Primitives.ImportDefinition" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />
  <TypeSignature Language="VB.NET" Value="Public Class ContractBasedImportDefinition&#xA;Inherits ImportDefinition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContractBasedImportDefinition : System::ComponentModel::Composition::Primitives::ImportDefinition" />
  <TypeSignature Language="F#" Value="type ContractBasedImportDefinition = class&#xA;    inherit ImportDefinition" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ImportDefinition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2dace-101">Reprezentuje importu, który jest wymagany przez <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> obiektu i że można określić zarówno Nazwa kontraktu, jak i metadane.</span><span class="sxs-lookup"><span data-stu-id="2dace-101">Represents an import that is required by a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> object and that can specify both a contract name and metadata.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2dace-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2dace-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContractBasedImportDefinition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ContractBasedImportDefinition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dace-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="2dace-103">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean, requiredCreationPolicy As CreationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBasedImportDefinition(System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt; * System.ComponentModel.Composition.Primitives.ImportCardinality * bool * bool * System.ComponentModel.Composition.CreationPolicy -&gt; System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" Usage="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition (contractName, requiredTypeIdentity, requiredMetadata, cardinality, isRecomposable, isPrerequisite, requiredCreationPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
        <Parameter Name="isRecomposable" Type="System.Boolean" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="2dace-104">Nazwa kontraktu <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektu wymagane zgodnie z definicją importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-104">The contract name of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object required by the import definition.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="2dace-105">Tożsamość typu oczekiwanego typu eksportu.</span><span class="sxs-lookup"><span data-stu-id="2dace-105">The type identity of the export type expected.</span></span> <span data-ttu-id="2dace-106">Użyj <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> metodę w celu wygenerowania tożsamości typu dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="2dace-106">Use the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method to generate a type identity for a given type.</span></span> <span data-ttu-id="2dace-107">Jeśli wymagana jest nie określonego typu, użyj <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-107">If no specific type is required, use <see langword="null" />.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="2dace-108">Kolekcja par klucz/wartość, które zawierają metadane nazwy i typy wymagane zgodnie z definicją importu; lub <see langword="null" /> można ustawić <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> właściwość pustą <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2dace-108">A collection of key/value pairs that contain the metadata names and types required by the import definition; or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></param>
        <param name="cardinality"><span data-ttu-id="2dace-109">Jedną z wartości wyliczenia, które wskazuje Kardynalność <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiekty wymagane zgodnie z definicją importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-109">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable"><span data-ttu-id="2dace-110"><see langword="true" /> Aby określić, że definicja importowania może się odbyć wiele razy w okresie istnienia <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-110"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="2dace-111"><see langword="true" /> Aby określić, że definicji importu jest wymagany do spełnienia przed <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> produkujących start eksportowane obiekty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-111"><see langword="true" /> to specify that the import definition is required to be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="2dace-112">Wartość, która wskazuje, że importera wymaga zasad tworzenia określonych eksporty użyte do zaspokojenia importowania.</span><span class="sxs-lookup"><span data-stu-id="2dace-112">A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</span></span> <span data-ttu-id="2dace-113">Jeśli jest potrzebna żadna zasada tworzenia określonych, wartością domyślną jest <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-113">If no specific creation policy is needed, the default is <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span></span></param>
        <summary><span data-ttu-id="2dace-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> klasy o nazwie określonej umowy, wymagany typ tożsamości, wymagane metadane, kardynalność i tworzenia zasad i wskazuje, czy definicja importu jest recomposable lub warunek wstępny.</span><span class="sxs-lookup"><span data-stu-id="2dace-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class with the specified contract name, required type identity, required metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dace-115"><paramref name="contractName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-115"><paramref name="contractName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2dace-116"><paramref name="contractName" /> jest pustym ciągiem ("").</span><span class="sxs-lookup"><span data-stu-id="2dace-116"><paramref name="contractName" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="2dace-117">—lub—</span><span class="sxs-lookup"><span data-stu-id="2dace-117">-or-</span></span> 
 <span data-ttu-id="2dace-118"><paramref name="requiredMetadata" /> zawiera element, który jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-118"><paramref name="requiredMetadata" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dace-119">—lub—</span><span class="sxs-lookup"><span data-stu-id="2dace-119">-or-</span></span> 
 <span data-ttu-id="2dace-120"><paramref name="cardinality" /> nie jest jednym z <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="2dace-120"><paramref name="cardinality" /> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContractBasedImportDefinition (string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, string requiredTypeIdentity, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; requiredMetadata, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, valuetype System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, requiredTypeIdentity As String, requiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type)), cardinality As ImportCardinality, isRecomposable As Boolean, isPrerequisite As Boolean, requiredCreationPolicy As CreationPolicy, metadata As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContractBasedImportDefinition(System::String ^ contractName, System::String ^ requiredTypeIdentity, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ requiredMetadata, System::ComponentModel::Composition::Primitives::ImportCardinality cardinality, bool isRecomposable, bool isPrerequisite, System::ComponentModel::Composition::CreationPolicy requiredCreationPolicy, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt; * System.ComponentModel.Composition.Primitives.ImportCardinality * bool * bool * System.ComponentModel.Composition.CreationPolicy * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" Usage="new System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition (contractName, requiredTypeIdentity, requiredMetadata, cardinality, isRecomposable, isPrerequisite, requiredCreationPolicy, metadata)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredTypeIdentity" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredMetadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isRecomposable" Type="System.Boolean" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="isPrerequisite" Type="System.Boolean" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredCreationPolicy" Type="System.ComponentModel.Composition.CreationPolicy" Index="6" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" Index="7" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="2dace-121">Nazwa kontraktu <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektu wymagane zgodnie z definicją importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-121">The contract name of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object required by the import definition.</span></span></param>
        <param name="requiredTypeIdentity"><span data-ttu-id="2dace-122">Tożsamość typu oczekiwanego typu eksportu.</span><span class="sxs-lookup"><span data-stu-id="2dace-122">The type identity of the export type expected.</span></span> <span data-ttu-id="2dace-123">Użyj <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> metodę w celu wygenerowania tożsamości typu dla danego typu.</span><span class="sxs-lookup"><span data-stu-id="2dace-123">Use the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method to generate a type identity for a given type.</span></span> <span data-ttu-id="2dace-124">Jeśli wymagana jest nie określonego typu, użyj <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-124">If no specific type is required, use <see langword="null" />.</span></span></param>
        <param name="requiredMetadata"><span data-ttu-id="2dace-125">Kolekcja par klucz/wartość, które zawierają metadane nazwy i typy wymagane zgodnie z definicją importu; lub <see langword="null" /> można ustawić <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> właściwość pustą <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2dace-125">A collection of key/value pairs that contain the metadata names and types required by the import definition; or <see langword="null" /> to set the <see cref="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" /> property to an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></param>
        <param name="cardinality"><span data-ttu-id="2dace-126">Jedną z wartości wyliczenia, które wskazuje Kardynalność <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiekty wymagane zgodnie z definicją importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-126">One of the enumeration values that indicates the cardinality of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the import definition.</span></span></param>
        <param name="isRecomposable"><span data-ttu-id="2dace-127"><see langword="true" /> Aby określić, że definicja importowania może się odbyć wiele razy w okresie istnienia <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-127"><see langword="true" /> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="isPrerequisite"><span data-ttu-id="2dace-128"><see langword="true" /> Aby określić, że definicji importu jest wymagany do spełnienia przed <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> produkujących start eksportowane obiekty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-128"><see langword="true" /> to specify that the import definition is required to be satisfied before a <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /> can start producing exported objects; otherwise, <see langword="false" />.</span></span></param>
        <param name="requiredCreationPolicy"><span data-ttu-id="2dace-129">Wartość, która wskazuje, że importera wymaga zasad tworzenia określonych eksporty użyte do zaspokojenia importowania.</span><span class="sxs-lookup"><span data-stu-id="2dace-129">A value that indicates that the importer requires a specific creation policy for the exports used to satisfy this import.</span></span> <span data-ttu-id="2dace-130">Jeśli jest potrzebna żadna zasada tworzenia określonych, wartością domyślną jest <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-130">If no specific creation policy is needed, the default is <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />.</span></span></param>
        <param name="metadata"><span data-ttu-id="2dace-131">Metadane skojarzone z tym importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-131">The metadata associated with this import.</span></span></param>
        <summary><span data-ttu-id="2dace-132">Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> klasy o nazwie określonej umowy, wymagany typ tożsamości, wymagane i opcjonalne metadane, kardynalność i zasady tworzenia i wskazuje, czy definicja importu jest recomposable lub warunek wstępny.</span><span class="sxs-lookup"><span data-stu-id="2dace-132">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> class with the specified contract name, required type identity, required and optional metadata, cardinality, and creation policy, and indicates whether the import definition is recomposable or a prerequisite.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2dace-133"><paramref name="contractName" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-133"><paramref name="contractName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2dace-134"><paramref name="contractName" /> jest pustym ciągiem ("").</span><span class="sxs-lookup"><span data-stu-id="2dace-134"><paramref name="contractName" /> is an empty string ("").</span></span>  
  
<span data-ttu-id="2dace-135">—lub—</span><span class="sxs-lookup"><span data-stu-id="2dace-135">-or-</span></span> 
 <span data-ttu-id="2dace-136"><paramref name="requiredMetadata" /> zawiera element, który jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-136"><paramref name="requiredMetadata" /> contains an element that is <see langword="null" />.</span></span>  
  
<span data-ttu-id="2dace-137">—lub—</span><span class="sxs-lookup"><span data-stu-id="2dace-137">-or-</span></span> 
 <span data-ttu-id="2dace-138"><paramref name="cardinality" /> nie jest jednym z <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="2dace-138"><paramref name="cardinality" /> is not one of the <see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constraint">
      <MemberSignature Language="C#" Value="public override System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,bool&gt;&gt; Constraint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt; Constraint" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Constraint As Expression(Of Func(Of ExportDefinition, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ Constraint { System::Linq::Expressions::Expression&lt;Func&lt;System::ComponentModel::Composition::Primitives::ExportDefinition ^, bool&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Constraint : System.Linq.Expressions.Expression&lt;Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition, bool&gt;&gt;" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.Constraint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression&lt;System.Func&lt;System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dace-139">Pobiera wyrażenie, który definiuje warunki, które powinny być dopasowane do zaspokojenia importu, opisanego przez tę definicję importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-139">Gets an expression that defines conditions that must be matched to satisfy the import described by this import definition.</span></span></summary>
        <value><span data-ttu-id="2dace-140">Wyrażenie, które zawiera <see cref="T:System.Func`2" /> obiekt, który definiuje warunki, które powinny być dopasowane do <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> muszą być spełnione przez <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-140">An expression that contains a <see cref="T:System.Func`2" /> object that defines the conditions that must be matched for the <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> to be satisfied by an <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstraintSatisfiedBy">
      <MemberSignature Language="C#" Value="public override bool IsConstraintSatisfiedBy (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsConstraintSatisfiedBy(class System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsConstraintSatisfiedBy(System::ComponentModel::Composition::Primitives::ExportDefinition ^ exportDefinition);" />
      <MemberSignature Language="F#" Value="override this.IsConstraintSatisfiedBy : System.ComponentModel.Composition.Primitives.ExportDefinition -&gt; bool" Usage="contractBasedImportDefinition.IsConstraintSatisfiedBy exportDefinition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exportDefinition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
      </Parameters>
      <Docs>
        <param name="exportDefinition"><span data-ttu-id="2dace-141">Definicja eksportu do testowania.</span><span class="sxs-lookup"><span data-stu-id="2dace-141">The export definition to test.</span></span></param>
        <summary><span data-ttu-id="2dace-142">Zwraca wartość wskazującą, czy ograniczenie reprezentowany przez ten obiekt określony przez eksportu, reprezentowane przez definicję danego eksportu.</span><span class="sxs-lookup"><span data-stu-id="2dace-142">Returns a value indicating whether the constraint represented by this object is satisfied by the export represented by the given export definition.</span></span></summary>
        <returns><span data-ttu-id="2dace-143"><see langword="true" /> Jeśli zostanie spełnione ograniczenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-143"><see langword="true" /> if the constraint is satisfied; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredCreationPolicy As CreationPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Composition::CreationPolicy RequiredCreationPolicy { System::ComponentModel::Composition::CreationPolicy get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredCreationPolicy : System.ComponentModel.Composition.CreationPolicy" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dace-144">Pobiera lub ustawia wartość wskazującą, że importera wymaga określonego <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> wywóz użyte do zaspokojenia importowania.</span><span class="sxs-lookup"><span data-stu-id="2dace-144">Gets or sets a value that indicates that the importer requires a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> for the exports used to satisfy this import.</span></span></summary>
        <value><span data-ttu-id="2dace-145">Jeden z następujących wartości:</span><span class="sxs-lookup"><span data-stu-id="2dace-145">One of the following values:</span></span> 
 <span data-ttu-id="2dace-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, jeśli importera nie wymaga określonej <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-146"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, if the importer does not require a specific <see cref="T:System.ComponentModel.Composition.CreationPolicy" />.</span></span>  
  
 <span data-ttu-id="2dace-147"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> Aby wymagać, że wszystkich eksporty używane powinny być współużytkowane przez wszystkich importerów w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="2dace-147"><see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> to require that all exports used should be shared by all importers in the container.</span></span>  
  
 <span data-ttu-id="2dace-148"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> Aby wymagać wszystkich eksporty używane powinny być, nieudostępniany w kontenerze.</span><span class="sxs-lookup"><span data-stu-id="2dace-148"><see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> to require that all exports used should be non-shared in the container.</span></span> <span data-ttu-id="2dace-149">W takim przypadku każdy importer odbiera oddzielnego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="2dace-149">In this case, each importer receives a separate instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetadata">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Type&gt;&gt; RequiredMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Type&gt;&gt; RequiredMetadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetadata As IEnumerable(Of KeyValuePair(Of String, Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ RequiredMetadata { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, Type ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetadata : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, Type&gt;&gt;" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Type&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dace-150">Pobiera nazwy metadanych eksportu wymagane zgodnie z definicją importu.</span><span class="sxs-lookup"><span data-stu-id="2dace-150">Gets the metadata names of the export required by the import definition.</span></span></summary>
        <value><span data-ttu-id="2dace-151">Kolekcja <see cref="T:System.String" /> obiektów, które zawierają nazwy metadanych <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiekty wymagane przez <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-151">A collection of <see cref="T:System.String" /> objects that contain the metadata names of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects required by the <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span></span> <span data-ttu-id="2dace-152">Wartość domyślna to pusta <see cref="T:System.Collections.Generic.IEnumerable`1" /> kolekcji.</span><span class="sxs-lookup"><span data-stu-id="2dace-152">The default is an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2dace-153">Zastąpienia tej właściwości nigdy nie powinna zwracać `null` lub je zwracają <xref:System.Collections.Generic.IEnumerable%601> kolekcji, która zawiera element, który jest `null`.</span><span class="sxs-lookup"><span data-stu-id="2dace-153">Overrides of this property should never return `null` or return an <xref:System.Collections.Generic.IEnumerable%601> collection that contains an element that is `null`.</span></span> <span data-ttu-id="2dace-154">Jeśli definicja nie zawiera wymaganych metadanych, zwrócona pusta <xref:System.Collections.Generic.IEnumerable%601> kolekcji zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="2dace-154">If the definition does not contain required metadata, return an empty <xref:System.Collections.Generic.IEnumerable%601> collection instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredTypeIdentity">
      <MemberSignature Language="C#" Value="public virtual string RequiredTypeIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredTypeIdentity" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredTypeIdentity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredTypeIdentity { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredTypeIdentity : string" Usage="System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.RequiredTypeIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2dace-155">Pobiera oczekiwany typ eksportu, który odpowiada to <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="2dace-155">Gets the expected type of the export that matches this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" />.</span></span></summary>
        <value><span data-ttu-id="2dace-156">Ciąg, który jest generowany przez wywołanie metody <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> metody na typ, który oczekuje, że operacja importowania.</span><span class="sxs-lookup"><span data-stu-id="2dace-156">A string that is generated by calling the <see cref="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" /> method on the type that this import expects.</span></span> <span data-ttu-id="2dace-157">Jeśli wartość jest <see langword="null" />, operacja importowania nie oczekuje określonego typu.</span><span class="sxs-lookup"><span data-stu-id="2dace-157">If the value is <see langword="null" />, this import does not expect a particular type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="contractBasedImportDefinition.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2dace-158">Zwraca reprezentację ciągu tego <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2dace-158">Returns the string representation of this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> object.</span></span></summary>
        <returns><span data-ttu-id="2dace-159">Reprezentacja ciągu <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="2dace-159">The string representation of this <see cref="T:System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>