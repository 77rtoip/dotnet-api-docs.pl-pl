<Type Name="Export" FullName="System.ComponentModel.Composition.Primitives.Export">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0c30714e4abe3d50d64738179343222120408d1b" /><Meta Name="ms.sourcegitcommit" Value="634678f7ccd2928c6b2cf792a301b079b63639af" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="07/26/2019" /><Meta Name="ms.locfileid" Value="68541071" /></Metadata><TypeSignature Language="C#" Value="public class Export" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Export extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Primitives.Export" />
  <TypeSignature Language="VB.NET" Value="Public Class Export" />
  <TypeSignature Language="C++ CLI" Value="public ref class Export" />
  <TypeSignature Language="F#" Value="type Export = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje eksport, który jest typem, który składa się z wyeksportowanego z opóźnieniem obiektu i metadanych, które opisują ten obiekt.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Export ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.Export.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Export();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typy pochodne wywołujące tego konstruktora muszą przesłaniać <xref:System.ComponentModel.Composition.Primitives.Export.Definition%2A> Właściwość <xref:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore%2A> i metodę.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Export (System.ComponentModel.Composition.Primitives.ExportDefinition definition, Func&lt;object&gt; exportedValueGetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ExportDefinition definition, class System.Func`1&lt;object&gt; exportedValueGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.ComponentModel.Composition.Primitives.ExportDefinition,System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (definition As ExportDefinition, exportedValueGetter As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Export(System::ComponentModel::Composition::Primitives::ExportDefinition ^ definition, Func&lt;System::Object ^&gt; ^ exportedValueGetter);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.Export : System.ComponentModel.Composition.Primitives.ExportDefinition * Func&lt;obj&gt; -&gt; System.ComponentModel.Composition.Primitives.Export" Usage="new System.ComponentModel.Composition.Primitives.Export (definition, exportedValueGetter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ExportDefinition" />
        <Parameter Name="exportedValueGetter" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="definition">Obiekt, który opisuje kontrakt, który <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> spełnia obiekt.</param>
        <param name="exportedValueGetter">Metoda, która jest wywoływana w celu utworzenia wyeksportowanego obiektu <see cref="T:System.ComponentModel.Composition.Primitives.Export" />. Opóźnia to utworzenie obiektu do momentu <see cref="P:System.ComponentModel.Composition.Primitives.Export.Value" /> wywołania właściwości.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> klasy z określoną definicją eksportu i pobieraną wyeksportowanym obiektem.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="definition" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="exportedObjectGetter" />jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Export (string contractName, Func&lt;object&gt; exportedValueGetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Func`1&lt;object&gt; exportedValueGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, exportedValueGetter As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Export(System::String ^ contractName, Func&lt;System::Object ^&gt; ^ exportedValueGetter);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.Export : string * Func&lt;obj&gt; -&gt; System.ComponentModel.Composition.Primitives.Export" Usage="new System.ComponentModel.Composition.Primitives.Export (contractName, exportedValueGetter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValueGetter" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> kontraktu obiektu.</param>
        <param name="exportedValueGetter">Metoda, która jest wywoływana w celu utworzenia wyeksportowanego obiektu <see cref="T:System.ComponentModel.Composition.Primitives.Export" />. Opóźnia to utworzenie obiektu do momentu <see cref="P:System.ComponentModel.Composition.Primitives.Export.Value" /> wywołania metody.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> klasy z określoną nazwą kontraktu i pobieraną wyeksportowaną wartością.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contractName" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="exportedObjectGetter" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contractName" />jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Export (string contractName, System.Collections.Generic.IDictionary&lt;string,object&gt; metadata, Func&lt;object&gt; exportedValueGetter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata, class System.Func`1&lt;object&gt; exportedValueGetter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.Export.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, metadata As IDictionary(Of String, Object), exportedValueGetter As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Export(System::String ^ contractName, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata, Func&lt;System::Object ^&gt; ^ exportedValueGetter);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Primitives.Export : string * System.Collections.Generic.IDictionary&lt;string, obj&gt; * Func&lt;obj&gt; -&gt; System.ComponentModel.Composition.Primitives.Export" Usage="new System.ComponentModel.Composition.Primitives.Export (contractName, metadata, exportedValueGetter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="exportedValueGetter" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contractName">Nazwa <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> kontraktu obiektu.</param>
        <param name="metadata">Metadane <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> obiektu lub <see langword="null" /> ustawienia <see cref="P:System.ComponentModel.Composition.Primitives.Export.Metadata" /> właściwości na pusty obiekt tylko <see cref="T:System.Collections.Generic.IDictionary`2" /> do odczytu.</param>
        <param name="exportedValueGetter">Metoda, która jest wywoływana w celu utworzenia wyeksportowanego obiektu <see cref="T:System.ComponentModel.Composition.Primitives.Export" />. Opóźnia to utworzenie obiektu do momentu <see cref="P:System.ComponentModel.Composition.Primitives.Export.Value" /> wywołania metody.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> klasy z określoną nazwą kontraktu, metadanymi i pobieraną wyeksportowaną wartością.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="contractName" />jest <see langword="null" />.  
  
—lub— 
 <paramref name="exportedObjectGetter" />jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="contractName" />jest pustym ciągiem ("").</exception>
      </Docs>
    </Member>
    <Member MemberName="Definition">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.Composition.Primitives.ExportDefinition Definition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ExportDefinition Definition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.Export.Definition" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Definition As ExportDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Composition::Primitives::ExportDefinition ^ Definition { System::ComponentModel::Composition::Primitives::ExportDefinition ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Definition : System.ComponentModel.Composition.Primitives.ExportDefinition" Usage="System.ComponentModel.Composition.Primitives.Export.Definition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ExportDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera definicję opisującą kontrakt, który spełnia eksport.</summary>
        <value>Definicja opisująca kontrakt, który <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> spełnia obiekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zastąpienia tej właściwości nigdy nie powinny zwracać `null`wartości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Ta właściwość nie została zastąpiona przez klasę pochodną.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueCore">
      <MemberSignature Language="C#" Value="protected virtual object GetExportedValueCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetExportedValueCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetExportedValueCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetExportedValueCore();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedValueCore : unit -&gt; obj&#xA;override this.GetExportedValueCore : unit -&gt; obj" Usage="export.GetExportedValueCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wyeksportowany obiekt, który zapewnia eksport.</summary>
        <returns>Wyeksportowany obiekt, który zawiera eksport.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## <a name="note-to-inheritors"></a>Uwaga dla dziedziczeń

Zastąpienia tej metody nigdy nie powinny zwracać `null`wartości.
          ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore" /> Metoda nie została przesłonięta przez klasę pochodną.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">Wystąpił błąd podczas tworzenia kompozycji. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />będzie zawierać kolekcję błędów, które wystąpiły.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Bieżące wystąpienie jest wystąpieniem <see cref="T:System.Lazy`1" />i nie można rzutować bazowej wartości wyeksportowanej na <c>T</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.Export.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Metadata { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.ComponentModel.Composition.Primitives.Export.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera metadane eksportu.</summary>
        <value>Metadane <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wartość <xref:System.ComponentModel.Composition.Primitives.ExportDefinition.Metadata%2A> <xref:System.ComponentModel.Composition.Primitives.Export.Definition%2A> właściwości.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><see cref="P:System.ComponentModel.Composition.Primitives.Export.Definition" /> Właściwość nie została zastąpiona przez klasę pochodną.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Primitives.Export.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.ComponentModel.Composition.Primitives.Export.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Udostępnia obiekt, który reprezentuje ten eksport.</summary>
        <value>Obiekt reprezentujący ten eksport.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">Wystąpił błąd podczas tworzenia kompozycji. <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" />będzie zawierać kolekcję błędów, które wystąpiły.</exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">Bieżące wystąpienie jest wystąpieniem <see cref="T:System.Lazy`1" />i nie można rzutować bazowej wartości wyeksportowanej na <c>T</c>.</exception>
        <exception cref="T:System.NotImplementedException"><see cref="M:System.ComponentModel.Composition.Primitives.Export.GetExportedValueCore" /> Metoda nie została przesłonięta przez klasę pochodną.</exception>
      </Docs>
    </Member>
  </Members>
</Type>