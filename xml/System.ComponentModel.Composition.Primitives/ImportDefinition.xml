<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ImportDefinition.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac536ccf0e6bd424b9b3aef4d00cd6b33a1b77c5e6d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36ccf0e6bd424b9b3aef4d00cd6b33a1b77c5e6d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Primitives.ImportDefinition">
          <source>Represents an import that is required by a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object.</source>
          <target state="translated">Reprezentuje importu, który jest wymagany przez <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> obiektu.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Primitives.ImportDefinition">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor">
          <source>Derived types that call this constructor must override the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint%2A&gt;</ph> property, and optionally, the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable%2A&gt;</ph> properties.</source>
          <target state="translated">Typy pochodne, które wywołują tego konstruktora musi zastąpić <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint%2A&gt;</ph> właściwości oraz opcjonalnie <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite%2A&gt;</ph> i <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable%2A&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source>An expression that contains a <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> object that defines the conditions an <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> must match to satisfy the import definition.</source>
          <target state="translated">Wyrażenie, które zawiera <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> obiektu, który definiuje warunki <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> musi być zgodny z definicji importu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source>The contract name.</source>
          <target state="translated">Nazwa kontraktu.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source>One of the enumeration values that indicates the cardinality of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the import definition.</source>
          <target state="translated">Jedna z wartości wyliczenia wskazujących Kardynalność <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> obiekty wymagane przez definicję importu.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby określić, że definicja importu można spełnić kilka razy w okresie istnienia <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> obiektu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition must be satisfied before a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> can start producing exported objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby określić, że definicja importu muszą zostać spełnione przed <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> produkujących start wyeksportować obiekty; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> class with the specified constraint, contract name, and cardinality, and indicates whether the import definition is recomposable or a prerequisite.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> klasy z określonym ograniczeniem, Nazwa kontraktu i kardynalność i wskazuje, czy definicja importu jest ponownemu składaniu lub wymagań wstępnych.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="constraint" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> is not one of the values of <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cardinality" /&gt;</ph> nie jest jedną z wartości <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportCardinality" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>An expression that contains a <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> object that defines the conditions an <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> must match to satisfy the import definition.</source>
          <target state="translated">Wyrażenie, które zawiera <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> obiektu, który definiuje warunki <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> musi być zgodny z definicji importu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The contract name.</source>
          <target state="translated">Nazwa kontraktu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>One of the enumeration values that indicates the cardinality of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the import definition.</source>
          <target state="translated">Jedna z wartości wyliczenia wskazujących Kardynalność <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> obiekty wymagane przez definicję importu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition can be satisfied multiple times throughout the lifetime of a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby określić, że definicja importu można spełnić kilka razy w okresie istnienia <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> obiektu; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to specify that the import definition must be satisfied before a <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> can start producing exported objects; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby określić, że definicja importu muszą zostać spełnione przed <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> produkujących start wyeksportować obiekty; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The metadata associated with the import.</source>
          <target state="translated">Metadane skojarzone z importu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.#ctor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Primitives.ExportDefinition,System.Boolean}},System.String,System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> class with the specified constraint, contract name, cardinality, and metadata, and indicates whether the import definition is recomposable or a prerequisite.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> klasy z określonym ograniczeniem, Nazwa kontraktu, kardynalność i metadanych, a także wskazuje, czy definicja importu jest ponownemu składaniu lub wymagań wstępnych.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality">
          <source>Gets the cardinality of the exports required by the import definition.</source>
          <target state="translated">Pobiera Kardynalność eksportuje wymagane przez definicja importu.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality">
          <source>One of the enumeration values that indicates the cardinality of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects required by the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph>.</source>
          <target state="translated">Jedna z wartości wyliczenia wskazujących Kardynalność <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> obiekty wymagane przez <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
          <source>Gets an expression that defines conditions that the import must satisfy to match the import definition.</source>
          <target state="translated">Pobiera wyrażenie definiujące warunki, które muszą spełniać importu, aby dopasować definicję importu.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
          <source>An expression that contains a <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> object that defines the conditions an <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> must satisfy to match the <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph>.</source>
          <target state="translated">Wyrażenie, które zawiera <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> obiektu, który definiuje warunki <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> musi spełniać w celu dopasowania <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
          <source>Overrides of this property should never return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Nigdy nie powinien zwrócić zastąpienia tej właściwości <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Constraint">
          <source>The property was not overridden by a derived class.</source>
          <target state="translated">Właściwość nie została zastąpiona przez klasę pochodną.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName">
          <source>Gets the name of the contract.</source>
          <target state="translated">Pobiera nazwę kontraktu.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.ContractName">
          <source>The contract name.</source>
          <target state="translated">Nazwa kontraktu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source>The export definition to test.</source>
          <target state="translated">Definicja eksportu do testowania.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source>Gets a value that indicates whether the export represented by the specified definition satisfies the constraints of this import definition.</source>
          <target state="translated">Pobiera wartość wskazującą, czy eksportu reprezentowany przez określona definicja spełnia ograniczenia tej definicji importu.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.IsConstraintSatisfiedBy(System.ComponentModel.Composition.Primitives.ExportDefinition)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the constraints are satisfied; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli spełnione są wszystkie ograniczenia; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite">
          <source>Gets a value that indicates whether the import definition must be satisfied before a part can start producing exported objects.</source>
          <target state="translated">Pobiera wartość wskazującą, czy definicja importu muszą zostać spełnione przed rozpoczęciem części produkujących wyeksportowane obiektów.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> must be satisfied before a <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object can start producing exported objects; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> muszą zostać spełnione przed <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> obiektu można rozpocząć tworzenie wyeksportować obiekty; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsPrerequisite">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable">
          <source>Gets a value that indicates whether the import definition can be satisfied multiple times.</source>
          <target state="translated">Pobiera wartość wskazującą, czy definicja importu można spełnić wiele razy.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> can be satisfied multiple times throughout the lifetime of a <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> mogą być spełnione wiele razy w okresie istnienia <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> obiektu; w przeciwnym razie <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.IsRecomposable">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata">
          <source>Gets the metadata associated with this import.</source>
          <target state="translated">Pobiera metadane skojarzone z tym importu.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata">
          <source>A collection that contains the metadata associated with this import.</source>
          <target state="translated">Kolekcja, która zawiera metadane skojarzone z tym importu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata">
          <source>This property should never return null.</source>
          <target state="translated">Ta właściwość nigdy nie powinien zwrócić wartość null.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Metadata">
          <source>Imports with no metadata should return an empty <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> collection.</source>
          <target state="translated">Importy z metadanych nie powinien zwrócić pustą <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> kolekcji.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.ToString">
          <source>Returns a string representation of the import definition.</source>
          <target state="translated">Zwraca reprezentację ciągu definicja importu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Primitives.ImportDefinition.ToString">
          <source>A string representation of the import definition.</source>
          <target state="translated">Reprezentacja ciągu definicja importu.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>