<Type Name="Legend" FullName="System.Web.UI.DataVisualization.Charting.Legend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eaf9f52c574370ac090061d34136003318bc10aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585871" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Legend : System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Legend extends System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.Legend" />
  <TypeSignature Language="VB.NET" Value="Public Class Legend&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Legend : System::Web::UI::DataVisualization::Charting::ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje legendy obrazu wykresu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> Klasa hermetyzuje wszystkie funkcje <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu elementu legendy i jest udostępniany przy użyciu <xref:System.Web.UI.DataVisualization.Charting.Chart.Legends%2A> właściwości kolekcji głównego <xref:System.Web.UI.DataVisualization.Charting.Chart> obiektu.  
  
 Może być dowolną liczbę legendy obrazu wykresu.  
  
 Legendy można:  
  
-   Zadokowane i wyrównane.  
  
-   Można wyświetlić wewnątrz lub na zewnątrz obszarów wykresu kreślony.  
  
-   Automatycznie dopasuj ich zawartość.  
  
-   Użyj wstępnie zdefiniowany styl, na przykład wierszy, kolumny lub tabeli.  
  
-   Użyj obrazów tła, kolorami gradientu i kreskowaniu.  
  
-   O rozmiarze i znajduje się w dowolnym miejscu w obrębie obrazu wykresu.  
  
 Elementy legendy są reprezentowane przez <xref:System.Web.UI.DataVisualization.Charting.LegendItem> obiektu i są domyślnych lub niestandardowych elementów. Niestandardowe elementy nie są powiązane z danymi, można dodać, usunąć i modyfikować za pomocą <xref:System.Web.UI.DataVisualization.Charting.Legend.CustomItems%2A> właściwości.  
  
 Domyślne elementy są domyślnie automatycznie dodawane do legendy i nazw punktów danych kreślony dla pierścieniowego i wykresy kołowe.  
  
 Dla wszystkich innych typów wykresów elementy domyślne są nazwy serii kreślony danych. Każda seria zawiera <xref:System.Web.UI.DataVisualization.Charting.Series.Legend%2A> właściwości, który definiuje nazwę legendy, który będzie używany. Element legendy nie zostaną utworzone dla serii, jeśli <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> właściwość jest ustawiona na `false`. Tekst dla tych elementów domyślne można zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> właściwości. Ta właściwość pozwoli określić wstępnie zdefiniowanych słów kluczowych, które zostaną zastąpione ich odpowiednie wartości w czasie wykonywania.  
  
 Jeśli masz wykresu kołowego i ustawisz <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label%2A> właściwości, zostanie również ustawiony tekst legendy na wartość ustawioną dla etykiety. Jeśli chcesz skonfigurować tekst innej wartości, możesz ustawić <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> właściwości. W większości przypadków, czy chcesz ustawić <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> właściwości "#AXISLABEL" lub "#VALX".  
  
 Symbole serii legendy są prostokąty, kropek lub linii. Typ symbolu jest automatycznie ustawiony na wykresie i zależy od typu kreślony wykresu.  
  
 Rozmiar tekstu legendy domyślnie jest automatycznie dopasowywany. Rozmiar automatyczny tekstu legendy można wyłączyć przez wyłączenie <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> właściwości. Jeśli ta właściwość jest skonfigurowana `false`, rozmiar tekstu legendy jest określany przez właściwość rozmiar legendy <xref:System.Web.UI.DataVisualization.Charting.Legend.Font%2A>. Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> właściwość jest włączona, <xref:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A> właściwość określa minimalny rozmiar czcionki, który może mieć elementu legendy, podczas zmiany rozmiaru.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> Właściwość definiuje limit liczby znaków, które mogą być pokazywane w jednym wierszu, zanim tekst jest zawijany do nowego wiersza. Jeśli nie chcesz zawijać tekst w legendzie, ustaw wartość <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> właściwości wartość zero. Domyślnie gdy tekst legendy całego nie mieści się w legendzie, tekst zostanie obcięta. Można ustawić <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> w legendzie, aby skopiować tekst do zakodowania zamiast obcięcie.  
  
 Jeśli zawartość legendy nie mieści się w danym obszarze, są skracane pozycji legendy. Wielokropek jest wyświetlane, aby wskazać, że ma więcej wpisów niż legendy ma miejsce. Aby zapobiec obcięcie elementów legendy, ustaw położenie i rozmiar przy użyciu legendy <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> właściwości. Gdy ustawienie pozycja legendy lub rozmiar, wykres nie będzie automatycznie można umieścić elementy na wykresie. W niektórych przypadkach wiele należy ręcznie pozycji innych elementów wykresu, do uzyskania żądanej wyglądu.  
  
 Innym rozwiązaniem byłoby definiować własne kolumny komórki zamiast z ustawieniami domyślnymi legendy.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> Obiekt ma kolekcję CellColumn; każdy obiekt CellColumn przedstawia kolumnę legendy. Kolumna komórek ma <xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> i <xref:System.Web.UI.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A> właściwości, które można dostosować rozmiar kolumn.  
  
 Gdy legenda zawiera wiele wpisów <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A> można użyć w celu zwiększenia czytelności. Gdy ta właściwość jest ustawiona na wartość True, będzie wyświetlany kolor tła, który można ustawić za pomocą <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> właściwości.  
  
 Domyślnie legendy znajduje się w prawym górnym rogu wykresu. Tej pozycji może być modyfikowane za pomocą <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A> i <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> właściwości legendy. Legenda również może być skojarzony z obszaru wykresu przy użyciu <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> właściwości. Ta właściwość określa nazwę obszaru wykresu, dla którego Legenda jest zadokowana. Ponadto <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> właściwość może być używana do wyświetlania legendy wewnątrz obszaru wykresu.  
  
 Gdy <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> ma wartość False, <xref:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize%2A> właściwość definiuje maksymalny rozmiar jako procent legendy w obrębie wykresu dostępne legendy automatycznie jest ustawiony. Tej właściwości należy ustawić, jeśli chcesz dopasować szerokości lub wysokości legendy, po ustawieniu właściwości dokowania.  
  
 Legenda może zostać zmodyfikowany za pomocą <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> zdarzeń.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> obiektu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.AnnotationPathPoint" /> klasy o nazwie legendy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie legendy.</summary>
        <value>.NET Framework <see cref="T:System.Drawing.StringAlignment" /> wartości wyliczenia, która reprezentuje wyrównanie legendy. Wartość domyślna to <see cref="F:System.Drawing.StringAlignment.Near" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Legendy można wyrównać tak, aby <xref:System.Drawing.StringAlignment.Near>, <xref:System.Drawing.StringAlignment.Center> lub <xref:System.Drawing.StringAlignment.Far>; również dotyczy jego wyrównanie <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A> ustawienie właściwości.  
  
 Jeśli Legenda jest zadokowana do góry lub u dołu, <xref:System.Drawing.StringAlignment.Near> znajduje się po lewej; Jeśli jest zadokowany do lewej lub do prawej, <xref:System.Drawing.StringAlignment.Near> znajduje się na górze. <xref:System.Drawing.StringAlignment.Far> Ustawienie właściwości właśnie odwrotny i wyrównuje legendy do prawej lub dolnej, w zależności od tego, gdzie jest zadokowany.  
  
 <xref:System.Drawing.StringAlignment.Center> zawsze centrach legendy, w pionie lub poziomie.  
  
 Ustawienie <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> właściwości nie przyniesie efektu Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> nie ustawiono właściwości <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int AutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia minimalny rozmiar czcionki używany w algorytmie Autodopasowanie w tekstu legendy.</summary>
        <value>
          <see langword="integer" /> Wartość, która reprezentuje minimalny rozmiar czcionki.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor tła legendy. Domyślny kolor jest <see cref="System.Drawing.Color.White" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić dowolną wartość z prawidłową ARGB (alfa, czerwony, zielony, niebieski).  
  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> Wartość będzie pierwszy kolor używany, gdy określono kolorami gradientu tła.  
  
 Wartości alfa określa Przezroczystość koloru. Jeśli ustawisz ten kolor "przezroczyste" — oznacza to, korzystając z wartości alfa 0 — kolor nie zostanie przypisana do tła legendy. W związku z tym będzie przezroczyste tło.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Web::UI::DataVisualization::Charting::GradientStyle get(); void set(System::Web::UI::DataVisualization::Charting::GradientStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia orientację gradientu tła legendy. Określa również, czy gradient jest używana.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> wyliczenie reprezentujące orientację gradientu tła legendy. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> właściwość, aby określić, czy legendy wyświetli gradientu i ustalenie orientację gradientu, jeśli jest używany.  
  
 Aby uzyskać listę dostępnych wzorców, zapoznaj się <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> wyliczenia.  
  
 Aby użyć kolorami gradientu:  
  
 Ustaw podstawowego koloru tła legendy z <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> właściwości.  
  
 Ustaw pomocniczy kolor tła legendy z <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> właściwości.  
  
 Ustaw tę wartość <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> właściwości na żądany styl gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Web::UI::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl kreskowaniu legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> wyliczenie reprezentujące styl kreskowaniu legendy. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> Wyliczenie Określa wzorzec kreskowania, używany przez pędzla typu <xref:System.Drawing.Drawing2D.HatchBrush>. Wzorzec kreskowania obejmuje pełny kolor tła i linii w tle.  
  
 Listę dostępnych kreskowaniu stylów, można znaleźć <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> wyliczenia.  
  
 **Uwaga** kreskowaniu wierszy kolor jest określany przez <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obraz tła legendy.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje adres URL pliku obrazu. Wartością domyślną jest ciąg pusty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa ścieżkę do obraz tła dla <xref:System.Web.UI.DataVisualization.Charting.Chart> legendy, i może być bezwzględny lub względny adres URL.  
  
 Aby położenie obrazu, należy użyć <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A> i <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> właściwości.  
  
 Można również określić jeden z kolorów wyświetlany przez obraz jako "przezroczyste", ustawiając <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor%2A> właściwości.  
  
 Obraz może pochodzi z dowolnego pliku prawidłowe obsługiwane przez platformę .NET, w tym ikony.  
  
 Obrazy tła mają pierwszeństwo przed innych właściwości tła, takich jak kolor gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia wyrównanie obrazu tła używany dla <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> tryb rysowania.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> wartości wyliczenia, która reprezentuje wyrównanie obrazu tła. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość określa wyrównanie obrazu tła legendy; jest tylko dotyczy sytuacji, gdy <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor, który zostanie zastąpiony kolor przezroczysty podczas rysowania obrazu tła.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która będzie wyświetlana jako przezroczysty. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Web::UI::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Web::UI::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tryb rysowania obrazu tła legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> wartości wyliczenia, która reprezentuje tryb rysowania obrazu tła legendy. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> Właściwość określa sposób wyświetlania obrazu; obraz można rozmieszczany, skalowana itd.  
  
 W przypadku zmiany skali obraz będzie rozciągany mieścić się w granicach legendy. Obraz jest rozmieszczany, wielokrotnie narysowana, zaczynając od lewego górnego narożnika legendy.  
  
 Aby uzyskać więcej informacji na temat trybów dostępne zawijania zobacz <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> wyliczenie tematu.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageWrapMode%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, lokalizacji, gdzie jest rysowany obrazu jest określany przez <xref:System.Web.UI.DataVisualization.Charting.Legend.BackImageAlignment%2A> ustawienie właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia pomocniczy kolor tła legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość używana dla pomocniczy kolor tła z wypełnienia gradiencie lub kreskowaniu. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> Właściwość określa kolor tła dodatkowej wielu <xref:System.Web.UI.DataVisualization.Charting.Chart> obiekty i jest używany, gdy są stosowane kolorami gradientu.  
  
 Można ustawić <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> prawidłowe wartości ARGB (alfa, czerwony, zielony, niebieski).  
  
 Użycie kreskowaniu <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> właściwość określa kolor linii kreskowaniu legendy.  
  
 Aby użyć kolorami gradientu tła legendy:  
  
-   Kolor podstawowy z <xref:System.Web.UI.DataVisualization.Charting.Legend.BackColor%2A> właściwości.  
  
-   Ustawia kolor pomocniczy z <xref:System.Web.UI.DataVisualization.Charting.Legend.BackSecondaryColor%2A> właściwości.  
  
-   Ustaw <xref:System.Web.UI.DataVisualization.Charting.Legend.BackGradientStyle%2A> właściwości na żądany styl gradientu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor obramowania elementu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor obramowania elementu legendy. Domyślny kolor jest <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę właściwość można ustawić dowolną wartość z prawidłową ARGB (alfa, czerwony, zielony, niebieski).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Web::UI::DataVisualization::Charting::ChartDashStyle get(); void set(System::Web::UI::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl obramowania elementu legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> wartości wyliczenia, która określa styl obramowania elementu wykresu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.BorderDashStyle%2A> Właściwość określa styl linii dla obramowanie. Wiersz może być stałe, kropkami itd.  
  
 Dla innych style obramowania <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> wyliczenie tematu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia szerokość obramowania elementu legendy.</summary>
        <value>
          <see langword="integer" /> Wartość, która określa szerokość obramowania w pikselach legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pamiętać, że <xref:System.Web.UI.DataVisualization.Charting.Legend.BorderWidth%2A> właściwości można również ustawić szerokość linii elementów takich, jak w przypadku wykresów liniowych, niestandardowe elementy legendy wyświetlony z stylu "wiersz" itd.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellColumns">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection CellColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CellColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellColumns As LegendCellColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ CellColumns { System::Web::UI::DataVisualization::Charting::LegendCellColumnCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" /> dla legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendCellColumnCollection" /> obiekt do legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomItems">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.LegendItemsCollection CustomItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.CustomItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomItems As LegendItemsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ CustomItems { System::Web::UI::DataVisualization::Charting::LegendItemsCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> obiekt używany do niestandardowe elementy legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemsCollection" /> obiekt używany do niestandardowe elementy legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość kolekcji można dodać, usunąć ani zmodyfikować niestandardowe elementy legendy.  
  
 Niestandardowe elementy legendy, w odróżnieniu od elementów legendy domyślne, nie mają skojarzonych punktów serii lub danych.  
  
 Aby zmodyfikować elementów legendy, użyj <xref:System.Web.UI.DataVisualization.Charting.Chart.CustomizeLegend> zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.Legend.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby niezarządzane używane przez <see cref="T:System.Web.UI.DataVisualization.Charting.Legend" /> i opcjonalnie zwalnia zasoby zarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockedToChartArea">
      <MemberSignature Language="C#" Value="public string DockedToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockedToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property DockedToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DockedToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> której będzie zadokowany legendy.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje nazwę <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> której będzie zadokowany tego legendy. Wartość domyślna to ciąg pusty.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Docking">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Docking Docking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.Docking Docking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Docking" />
      <MemberSignature Language="VB.NET" Value="Public Property Docking As Docking" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::Docking Docking { System::Web::UI::DataVisualization::Charting::Docking get(); void set(System::Web::UI::DataVisualization::Charting::Docking value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Docking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, którym legenda jest zadokowana.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.Docking" /> wartości wyliczenia, która określa, gdzie Legenda jest zadokowana. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.Docking.Right" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend> Może być zadokowany u góry, lewo, dołu lub w prawo obrazu wykresu całego lub wewnątrz lub na zewnątrz obszaru wykresu. Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> właściwość jest ustawiona na `false`, dokowanie ma zastosowanie do całego wykresu obrazu. Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> właściwość jest ustawiona na `true`, dokowanie dotyczy <xref:System.Web.UI.DataVisualization.Charting.ChartArea> obiekt określony przez <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> właściwości  
  
 Ta właściwość nie ma efektu Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> nie ustawiono właściwości <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy włączono legendy.</summary>
        <value>
          <see langword="true" /> Jeśli włączono legendy; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby ukryć legendy, ustaw tę właściwość `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Drawing.Font" /> obiektu, który jest używany do ustawiania właściwości czcionki legendy.</summary>
        <value>A <see cref="T:System.Drawing.Font" /> obiektu, który jest używany do ustawiania właściwości czcionki legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli spróbujesz zmienić właściwości to <xref:System.Drawing.Font> obiektów w czasie wykonywania, wystąpi błąd kompilacji. Aby ustawić właściwości font w czasie wykonywania, należy utworzyć nowy <xref:System.Drawing.Font> obiektu.  
  
> [!NOTE]
>  Jeśli właściwość Legend.Font.Size <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> właściwość zostanie ustawiona na wartość false. Ponadto jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit%2A> właściwości na wartość true, ta właściwość zostanie zresetowana do wartości domyślnej, która jest 8 punktów.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tekstu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor tekstu legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ForeColor%2A> Właściwość jest używana, aby ustawić kolor tekstu legendy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle HeaderSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ separatora wizualnego nagłówka legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> wartości wyliczenia, który reprezentuje typ separatora wizualnego nagłówka legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor separatora dla nagłówka legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor separatora dla nagłówka legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsideChartArea">
      <MemberSignature Language="C#" Value="public string InsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsideChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę obszaru wykresu, w którym ma zostać narysowana Legenda.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje nazwę obszaru wykresu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRows">
      <MemberSignature Language="C#" Value="public bool InterlacedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterlacedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterlacedRows { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy wiersze legendy będzie rysowany naprzemienny kolor tła.</summary>
        <value>A <see langword="Boolean" /> wartość, która określa, czy określony kolorem są rysowane przemiennych wierszy w legendzie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy legenda zawiera wiele wpisów <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRows%2A> właściwości może służyć do zwiększenia czytelności. Jeśli ta właściwość jest skonfigurowana `true`, legendy wyświetli kolor tła wierszy, które są naprzemiennych, które można ustawić za pomocą <xref:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRowsColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedRowsColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedRowsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRowsColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedRowsColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła naprzemiennych wierszy legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor tła legendy naprzemiennych wierszy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko jeśli są używane naprzemiennych wierszy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDockedInsideChartArea">
      <MemberSignature Language="C#" Value="public bool IsDockedInsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDockedInsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDockedInsideChartArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDockedInsideChartArea { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy Legenda jest zadokowana wewnątrz lub na zewnątrz obszaru wykresu.</summary>
        <value>
          <see langword="true" /> Jeśli Legenda jest zadokowana wewnątrz obszaru wykresu; <see langword="false" /> Jeśli jest zadokowany poza obszarem wykresu. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość będzie miał wpływ tylko, jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> właściwość jest ustawiona na nazwę <xref:System.Web.UI.DataVisualization.Charting.ChartArea> obiektu.  
  
> [!NOTE]
>  Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> wartość właściwości jest równa wartości innych niż <xref:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> właściwość również nie ma wpływu. Jest to spowodowane pozycji legendy jest określany przez <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> ustawienie właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquallySpacedItems">
      <MemberSignature Language="C#" Value="public bool IsEquallySpacedItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEquallySpacedItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEquallySpacedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEquallySpacedItems { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy wszystkie elementy legendy są równomiernie rozłożone.</summary>
        <value>
          <see langword="true" /> Jeśli elementy legendy są równomiernie rozłożone; <see langword="false" /> Jeśli nie są one. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAutoFit">
      <MemberSignature Language="C#" Value="public bool IsTextAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextAutoFit { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy tekst legendy jest automatycznie o rozmiarze.</summary>
        <value>
          <see langword="true" /> Jeśli rozmiar tekstu legendy jest automatycznie dopasowywany; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle ItemColumnSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ separatora wizualnego kolumn tabeli legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> wartości wyliczenia, który reprezentuje typ separatora wizualnego kolumn tabeli legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ItemColumnSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ItemColumnSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ItemColumnSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor separatora kolumn tabeli legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartości używany do rysowania Kolor separatora kolumn tabeli legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSpacing">
      <MemberSignature Language="C#" Value="public int ItemColumnSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemColumnSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemColumnSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia odstępy między kolumnami tabeli legendy.</summary>
        <value>
          <see langword="integer" /> Wartość, która reprezentuje odstępy między kolumnami tabeli.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.Legend.ItemColumnSpacing%2A> Wartość właściwości jest obliczana jako procent czcionki tekstu legendy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendItemOrder">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendItemOrder LegendItemOrder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendItemOrder As LegendItemOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendItemOrder LegendItemOrder { System::Web::UI::DataVisualization::Charting::LegendItemOrder get(); void set(System::Web::UI::DataVisualization::Charting::LegendItemOrder value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendItemOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę określającą kolejność wyświetlania elementów legendy. Ta właściwość ma wpływ tylko na elementy legendy dodawane automatycznie dla serii wykresu; go nie ma wpływu na niestandardowe elementy legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendItemOrder" /> wartości wyliczenia, która określa kolejność legendy, w której mają być wyświetlane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.LegendItemOrder.Auto>, legendy automatycznie zostanie wycofana, jeśli są używane w wykresach StackedColumn, StackedColumn100, StackedArea lub StackedArea100.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendStyle LegendStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendStyle As LegendStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendStyle LegendStyle { System::Web::UI::DataVisualization::Charting::LegendStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendStyle" /> wartości wyliczenia, która określa styl legendy. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.LegendStyle.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie Legenda jest wyświetlana jako szereg elementów w tabeli. Można określić, czy rozszerzenia elementów w tabeli width-wise lub height-wise przez ustawienie <xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A> właściwości. Gdy <xref:System.Web.UI.DataVisualization.Charting.Legend.TableStyle%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.LegendTableStyle.Auto>, <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli określi, czy do rysowania szerokości tabeli lub wysokie tabelę, w zależności od wyrównania i umieszczenia na wykresie. Może to spowodować, że Legenda jest narysowanie przy użyciu wielu kolumn elementu legendy.  
  
 Istnieją trzy możliwe style legendy: tabela, wierszy i kolumn. Można skorzystać z poniższej tabeli podsumowanie tych stylów:  
  
|Styl|Opis|  
|-|-|  
|Kolumny|Elementy legendy są wyświetlane w jednej kolumnie, wiele wierszy. Najczęściej używane, gdy legenda jest zadokowana po lewej lub po prawej stronie wykresu.|  
|Wiersz|Elementy legendy są wyświetlane w jednym wierszu z wieloma kolumnami. Najczęściej używane, gdy legenda jest zadokowana do góry lub u dołu wykresu.|  
|tabela|Elementy legendy są wyświetlane przy użyciu wielu kolumn i wierszy.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalny rozmiar legendy, mierzona w procentach obszaru wykresu. Ta wartość jest używana przez algorytm automatycznego określania układu.</summary>
        <value>A <see langword="float" /> wartość, która reprezentuje maksymalny rozmiar legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli Legenda jest zadokowana do lewej lub prawej strony obszaru wykresu, ta właściwość określa maksymalną szerokość legendy, w której jest mierzona w procentach obszaru wykresu. Jeśli Legenda jest zadokowana do góry lub u dołu, ta właściwość określa maksymalną wysokość legendy, który również jest mierzony jako procent.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę legendy.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje nazwę legendy.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::ElementPosition ^ Position { System::Web::UI::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Web::UI::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> obiektu, który może służyć do pobierania lub ustawiania pozycji legendy.</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> Wartość, która reprezentuje pozycji legendy. Wartość domyślna to <see cref="P:System.Web.UI.DataVisualization.Charting.ElementPosition.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.Position%2A> właściwości odbywa się automatycznie (to znaczy Legend.Position.Auto = `true`) pozycji legendy jest obliczana automatycznie przez <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli, biorąc pod uwagę <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.Alignment%2A> i <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> ustawienia właściwości.  
  
 Jeśli nie jest automatyczne, <xref:System.Web.UI.DataVisualization.Charting.Legend.Docking%2A>, <xref:System.Web.UI.DataVisualization.Charting.Legend.DockedToChartArea%2A> i <xref:System.Web.UI.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> właściwości są ignorowane i pozycji legendy wyłącznie jest określana przez wartość zwracana <xref:System.Web.UI.DataVisualization.Charting.ElementPosition> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 0, 0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor cienia legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartość, która reprezentuje kolor cienia legendy. Domyślny kolor jest <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej właściwości można ustawić dowolną wartość z prawidłową ARGB (alfa, czerwony, zielony, niebieski).  
  
 Wartości alfa może służyć do osiągnięcia "realistyczne" wpływu przesłaniania; Spróbuj wartości koloru "128,0,0,0" dla cieni.  
  
 Aby zaimplementować cienia, ustaw <xref:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset%2A> właściwości na wartość inną niż zero (0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia przesunięcie cienia w pikselach legendy.</summary>
        <value>
          <see langword="integer" /> Wartość, która reprezentuje przesunięcie cienia w pikselach legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby zaimplementować cieniowania, należy ustawić tę właściwość na wartość inną niż zero (0). Wartość dodatnią spowoduje w tle, który przenosi w dół i w prawo; wartości ujemnej spowoduje w tle, który przenosi w górę i w lewo.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendTableStyle TableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As LegendTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendTableStyle TableStyle { System::Web::UI::DataVisualization::Charting::LegendTableStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendTableStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia styl tabeli legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendTableStyle" /> wartości wyliczenia, która określa styl tabeli legendy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość ma zastosowanie tylko jeśli <xref:System.Web.UI.DataVisualization.Charting.Legend.LegendStyle%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.LegendStyle.Table>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapThreshold">
      <MemberSignature Language="C#" Value="public int TextWrapThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWrapThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextWrapThreshold { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę znaków, które mogą być sekwencyjnie wyświetlane w legendzie, zanim tekst jest zawijany.</summary>
        <value>
          <see langword="integer" /> Wartość reprezentującą liczbę znaków, które można umieścić w legendzie sekwencyjnie przed tekst jest zawijany. Wartość domyślna to 25.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy tekst legendy przekracza wartość określoną przez tę właściwość, tekst zostanie automatycznie zawijany, po napotkaniu następnej znak odstępu. Tekst nie będzie zawijany, jeśli nie są odstępu znaki w tekście.  
  
 Ustaw <xref:System.Web.UI.DataVisualization.Charting.Legend.TextWrapThreshold%2A> właściwości wartości zero spowoduje wyłączenie funkcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia tekst tytułu legendy.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje tekstu tytułu legendy. Wartość domyślna to ciąg o zerowej długości.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Wyrównanie tytułu legendy.</summary>
        <value>A <see cref="T:System.Drawing.StringAlignment" /> wartości wyliczenia, która reprezentuje wyrównania tytułu legendy. Wartość domyślna to <see cref="F:System.Drawing.StringAlignment.Center" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tła tytułu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartości używany do rysowania tła tytułu legendy. Wartość domyślna to <see cref="F:System.Drawing.Color.Empty" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt, style=Bold")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia czcionkę tytułu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Font" /> obiekt, który określa czcionkę tytułu legendy. Wartość domyślna to "Microsoft Sans Serif, 8pt, Bold".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej właściwości można ustawić właściwości czcionki tytułu legendy.  
  
 Jeśli spróbujesz zmienić właściwości to <xref:System.Drawing.Font> obiektów w czasie wykonywania, wystąpi błąd kompilacji. Aby ustawić właściwości font w czasie wykonywania, należy utworzyć nowy <xref:System.Drawing.Font> obiektu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor tekstu tytułu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartości używany do rysowania kolor tekstu tytułu. Wartość domyślna to <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparator">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle TitleSeparator { System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Web::UI::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ separatora wizualnego tytułu legendy.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle" /> wartość, która reprezentuje typ separatora, który będzie rysowany pod tytułem. Wartość domyślna to <see cref="F:System.Web.UI.DataVisualization.Charting.LegendSeparatorStyle.None" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia kolor separatora tytułu legendy.</summary>
        <value>A <see cref="T:System.Drawing.Color" /> wartości używany do rysowania Kolor separatora tytułu legendy. Wartość domyślna to <see cref="P:System.Drawing.Color.Black" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>