<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b068e64fce2d0c45832844045864d0044982d2a9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256122" /></Metadata><TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Włącza serializację <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest udostępniona jako <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> właściwość klasy głównej. <xref:System.Web.UI.DataVisualization.Charting.Chart>  
  
 Serializacja zapisuje stan wykresu, a także udostępnia opcję ładowania serializowanych danych do wykresu. Wszystkie właściwości wykresu mogą być utrwalane, łącznie z danymi wykresu. Ponadto można resetować wszystkie właściwości wykresu oznaczone do serializacji.  
  
 Opcjonalnie można użyć tej klasy podczas zarządzania stanem widoku zdefiniowanym przez użytkownika. Jedną z `Load` metod można użyć do załadowania stanu widoku, a jedna `Save` z metod może być używana podczas ustawiania stanu widoku.  
  
 Formaty XML lub binarne mogą służyć do przechowywania serializowanych danych. Kod XML jest domyślnie używany, ale można go zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Właściwości wykresu są zapisywane i ładowane odpowiednio przy `Save` użyciu `Load` metod i. Należy zauważyć, że zostaną zapisane tylko właściwości z wartościami innymi niż domyślne. Dane można zapisywać i/lub ładować przy użyciu plików, <xref:System.IO.TextWriter>strumienia, <xref:System.Xml.XmlWriter> , <xref:System.IO.TextReader>i <xref:System.Xml.XmlReader> obiektów. Podczas zapisywania i/lub ładowania danych przy użyciu obiektu pochodnego od <xref:System.IO.TextReader> <xref:System.IO.TextWriter> <xref:System.Xml.XmlReader> klas, lub <xref:System.Xml.XmlWriter> , format danych musi być XML.  
  
 Na poniższej liście opisano trzy techniki, od Basic do Advanced, używane do definiowania możliwych do serializacji danych. Należy zauważyć, że można również zdefiniować dane, których nie można serializować. Ta technika jest opisana w następnym akapicie.  
  
-   <xref:System.Web.UI.DataVisualization.Charting.Chart> Serializacja `Load` przy użyciu metod ibezokreślaniawłaściwości`Save` możliwych do serializacji. Wszystkie właściwości wykresu z wartościami innymi niż domyślne, które zawierają dane wykresu, zostaną serializowane.  
  
-   Serializacja właściwości wykresu określonych przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwość grupuje właściwości wykresu, które mają być serializowane do kategorii, takich jak dane, wygląd i tak dalej. Należy zauważyć, że nazwy <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiekty są automatycznie serializowane; serializowane dane są następnie stosowane do istniejących obszarów wykresu i serii po załadowaniu.  
  
> [!IMPORTANT]
>  Właściwość jest implementowana wewnętrznie <xref:System.Web.UI.DataVisualization.Charting.Chart> przez formant jako <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A>Właściwość <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>  
  
-   Serializacja właściwości wykresu określonych przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość. Jest to rozdzielona przecinkami lista wszystkich właściwości wykresu, które są możliwe do serializacji. Po ustawieniu tej właściwości na wartość jawną należy określić wszystkie właściwości, które mają zostać zapisane. Innymi słowy, w przeciwieństwie do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, nazwy obszarów wykresu i serii nie będą automatycznie utrwalane. Właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> i<xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> mogą być również używane w połączeniu. Należy jednak upewnić się <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> , że jest połączone z samym sobą podczas ustawiania, w przeciwnym razie właściwości wykresu określone <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> przez właściwość zostaną zastąpione.  
  
 Aby uniemożliwić Serializowanie niektórych właściwości, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości. Gdy jedna właściwość jest ustawiona jako możliwy do serializacji i nie można jej serializować, która jest wspólna, gdy są używane <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> symbole wieloznaczne, właściwość ma pierwszeństwo. Jednak pierwszeństwo zależy także od tego, ile symboli wieloznacznych użyto, gdy właściwość została określona.  
  
 Domyślnie właściwości, które można serializować, są resetowane do wartości domyślnych przed ich załadowaniem. To zachowanie można zmienić przy użyciu <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Metoda może również służyć do jawnego resetowania właściwości wykresu do ich wartości domyślnych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zawartości wykresu do serializacji.</summary>
        <value>Wartość <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> wyliczenia, która reprezentuje zawartość wykresu, który zostanie Zserializowany podczas operacji ładowania, zapisywania lub resetowania. Domyślnie wszystkie właściwości wykresu inne niż domyślne, w tym dane, są utrwalane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu będą serializowane w przypadku wywołania dowolnej `Save` metody i. `Load` Aby zapewnić większą kontrolę nad tym, co jest serializowane <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , użyj właściwości. Należy zauważyć, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości i mogą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> być również używane razem z właściwością.  
  
 > [!IMPORTANT]
 > Właściwość określa typy właściwości wykresu, takie jak "wygląd", które mają być serializowane i faktycznie implementowane wewnętrznie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> jako właściwość. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Oznacza to, że ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, a następnie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości spowoduje przepełnienie wartości właściwości, chyba że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> zostanie połączone. Przykład tej procedury można znaleźć w poniższym przykładzie kodu.  
  
 Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość, wszystkie <xref:System.Web.UI.DataVisualization.Charting.ChartArea> nazwy obiektów <xref:System.Web.UI.DataVisualization.Charting.Series> i są automatycznie serializowane. oznacza to, że serializowane dane, które odnoszą się do obszarów wykresu i serii, zostaną zastosowane do istniejących obiektów po załadowaniu.  
  
 Ustawienie tej właściwości ma wpływ na wszystkie operacje ładowania, zapisywania i resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format używany, gdy wykres jest serializowany.</summary>
        <value>Wartość <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> wyliczenia, która reprezentuje format serializowanych danych. Wartość domyślna to XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane można serializować w formacie XML lub binarnym. Format binarny jest kompaktowy i pobiera mniej pamięci niż w formacie XML. KOD XML jest jednak formatem tekstowym, który jest czytelny dla człowieka.  
  
 Podczas zapisywania lub ładowania serializowanych danych format musi być XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Zawartość do serializacji.</param>
        <param name="serializable"><see langword="true" />Aby uzyskać ciąg możliwy do serializacji; <see langword="false" /> Aby uzyskać ciąg, którego nie można serializować.</param>
        <summary>Zwraca możliwy do serializacji lub nie można serializować nazw klas i/lub właściwości, w zależności od określonej wartości flagi.</summary>
        <returns><see langword="string" /> Wartość, która reprezentuje serializacji lub nie można serializować nazw klas i/lub właściwości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy przed załadowaniem właściwości obiektu są resetowane do wartości domyślnych.</summary>
        <value><see langword="true" />Jeśli właściwości obiektu są resetowane do wartości domyślnych przed załadowaniem; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy serializator wykresu działa w trybie tworzenia szablonu.</summary>
        <value><see langword="true" />Jeśli serializator wykresu działa w trybie tworzenia szablonu; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy nieznane właściwości XML i elementy zostaną zignorowane bez zgłaszania wyjątku.</summary>
        <value><see langword="true" />Jeśli nieznane właściwości XML i elementy są ignorowane bez zgłaszania wyjątku; w przeciwnym razie. <see langword="false" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładuje zserializowane dane do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> kontrolki.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodny <see cref="T:System.IO.Stream" /> klasy, na przykład <see cref="T:System.IO.MemoryStream" /> obiekt.</param>
        <summary>Ładuje zserializowane dane do formantu z obiektu pochodnego od <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować zserializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> dane do kontrolki.  
  
 W przypadku wystąpienia operacji ładowania właściwości, które można serializować, są domyślnie przywracane do wartości domyślnych, zanim zostaną ustawione na wartości utrwalone, jeśli zostały zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie serializowane właściwości wykresu. Aby załadować określone serializowane właściwości, przed <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> załadowaniem danych ustaw <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Należy pamiętać, że gdy dane są zapisywane `Save` przy użyciu metody, tylko te właściwości, które mają wartości inne niż domyślne, są w rzeczywistości serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">Czytnik, taki jak <see cref="T:System.IO.StringReader" />, który pochodzi od klasy abstrakcyjnej. <see cref="T:System.IO.TextReader" /></param>
        <summary>Ładuje zserializowane dane do formantu z obiektu czytnika, który pochodzi od <see cref="T:System.IO.TextReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować zserializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> dane do kontrolki.  
  
 Po wystąpieniu operacji ładowania domyślnie właściwości, które można serializować, są najpierw resetowane do wartości domyślnych, zanim zostaną one ustawione na wartości utrwalone, jeśli zostały zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie serializowane właściwości wykresu. Ustawiając <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>właściwości, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> , można załadować określony zestaw właściwości.  
  
 Jeśli używasz tej definicji, należy pamiętać, że format, który jest ustawiany przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwość, musi być XML.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Jeśli właściwość <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu jest używana do utrwalania stanu, ta metoda może służyć do ładowania serializowanych danych, które są wysyłane przez klienta z powrotem do <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka pliku służącego do przechowywania serializowanych danych. Jeśli ścieżka względna jest określona, ścieżka będzie odnosi się do bieżącego katalogu.</param>
        <summary>Ładuje zserializowane dane zapisane na dysku do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> kontrolki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować zserializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> dane do kontrolki.  
  
 W przypadku wystąpienia operacji ładowania właściwości, które można serializować, są domyślnie przywracane do wartości domyślnych, zanim zostaną ustawione na wartości utrwalone, jeśli zostały zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie serializowane właściwości wykresu. Aby załadować określone serializowane właściwości, przed <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> załadowaniem danych ustaw <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Należy pamiętać, że gdy dane są zapisywane `Save` przy użyciu metody, tylko te właściwości, które mają wartości inne niż domyślne, są w rzeczywistości serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Obiekt, z którego mają zostać odczytane utrwalone dane. Obiekt pochodzi od <see cref="T:System.Xml.XmlReader" /> klasy i może być obiektem .NET Framework lub obiektem zdefiniowanym przez użytkownika.</param>
        <summary>Ładuje zserializowane dane do formantu z obiektu pochodnego od <see cref="T:System.Xml.XmlReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować zserializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> dane do kontrolki.  
  
 Po wystąpieniu operacji ładowania domyślnie właściwości, które można serializować, są najpierw resetowane do wartości domyślnych, zanim zostaną one ustawione na wartości utrwalone, jeśli zostały zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie serializowane właściwości wykresu. W przypadku ustawienia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> można załadować określony zestaw właściwości.  
  
 W przypadku użycia tej definicji format musi być XML; można ją zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 W przypadku pracy z plikami tekstowymi w formacie XML dla uproszczenia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> Użyj metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, które nie będą serializowane.</summary>
        <value>Wyrażenie oddzielane <see langword="string" /> przecinkami, które reprezentuje właściwości wykresu, które nie będą serializowane. Składnia to "Class. Property [, Class. Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu będą serializowane, gdy `Save` metody i `Load` są wywoływane. Możesz użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć właściwości wykresu do serializacji, wraz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> z właściwościami i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> .  
  
 Ta właściwość określa, które cechy wykresu nie będą serializowane. Symboli wieloznacznych można używać w wyrażeniu ciągu w taki sam sposób, jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość. Na przykład aby wykluczyć wszystkie właściwości wykresu `BackColor` z serializacji, należy ustawić tę właściwość na "*". Kolor ".  
  
 Czasami Właściwość można ustawić jako serializowaną i nieserializowaną, która jest często używana w przypadku używania symboli wieloznacznych. Wyrażenie ma niższy priorytet <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> w porównaniu z wyrażeniem. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Należy jednak pamiętać, że mniej wagi jest przyznany do wyrażeń ciągów, które używają symboli wieloznacznych. Na przykład, jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość jest ustawiona na wartość "*. Kolor BackColor " <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> i właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartArea> wszystkie właściwości B`ackColor` z wyjątkiem obiektów będą serializowane.  
  
 Jeśli właściwość została ustawiona, priorytet zależy od tego, ile symboli wieloznacznych jest używanych <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> w wyrażeniu. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Na przykład ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości na <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> spowoduje powstanie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości zawierającej "\*. Wstecz\*"wyrażenie. Jeśli właściwość jest ustawiona na "\*. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Z\*powrotem "wszystkie `Back*` właściwości wykresu, takie `BackColor`jak `BackGradient`, i tak dalej, będą nadal serializowane. Wynika to z faktu, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wartość właściwości ma wyższy priorytet w porównaniu <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> z właściwością.  
  
 Ta właściwość ma wpływ na wszystkie operacje zapisywania, ładowania i resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie właściwości wykresu oznaczone do serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda resetuje wszystkie właściwości wykresu do wartości domyślnych.  
  
 Aby ograniczyć właściwości wykresu, które są resetowane do wartości domyślnych, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Należy zauważyć, że ta metoda jest również wywoływana automatycznie `Load` <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> , gdy metoda jest używana i właściwość jest ustawiona `true`na.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje właściwości wykresu, które mają wartości inne niż domyślne. Wszystkie właściwości wykresu można serializować; obejmuje to dane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodny <see cref="T:System.IO.Stream" /> klasy, <see cref="T:System.IO.MemoryStream" />na przykład, który jest używany do zapisywania właściwości wykresu.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartościami niedomyślnymi do obiektu, który pochodzi od <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu z wartościami innymi niż domyślne, które zawierają punkty danych, zostaną zserializowane w przypadku wywołania tej metody. Aby kontrolować charakterystyki wykresu do serializacji, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Jeśli ta metoda jest używana do zapisywania właściwości wyglądu jako szablonu, przed wywołaniem tej metody <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> upewnij się, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> że właściwość obiektu jest najpierw `true` ustawiona na wartość.  
  
 Serializacja wykresu jako szablonu występuje inaczej od serializacji bez szablonu; Koncentraty serializacji szablonu na właściwościach wyglądu.  
  
 Gdy szablon jest serializowany, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> Metoda może służyć do ładowania szablonu, aby zapewnić właściwości wyglądu wykresu.  
  
 Szablony mogą służyć do symulowania palet niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodny <see cref="T:System.IO.TextWriter" /> klasy, na <see cref="T:System.IO.StringWriter" />przykład, który służy do zapisywania właściwości wykresu.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartościami niedomyślnymi dla danego obiektu, który jest pochodną <see cref="T:System.IO.TextWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu z wartościami innymi niż domyślne, które zawierają punkty danych, zostaną zserializowane w przypadku wywołania tej metody. Aby kontrolować, które cechy wykresu są serializowane, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>Użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> i.  
  
 W przypadku użycia tej definicji format musi być XML; Format można ustawić przy użyciu <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 <xref:System.IO.TextWriter> <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> Jeśli właściwość formantu<xref:System.Web.UI.DataVisualization.Charting.Chart> jest używana do utrwalania stanu, ta metoda może służyć do zapisywania serializowanych danych do obiektu pochodnego, który jest następnie używany do zapisywania danych do właściwości. <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka pliku służącego do przechowywania serializowanych danych. Należy pamiętać, że jeśli ścieżka względna jest określona, ścieżka będzie odnosi się do bieżącego katalogu.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartościami niedomyślnymi dla danego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu z wartościami innymi niż domyślne, które zawierają punkty danych, zostaną zserializowane w przypadku wywołania tej metody. Aby kontrolować charakterystyki wykresu do serializacji <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Użyj właściwości i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> .  
  
 Domyślnie dane są zapisywane w formacie XML. Aby zapisać dane w formacie binarnym, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Należy pamiętać, że w katalogu, w którym jest przechowywany plik, muszą być włączone uprawnienia do zapisu. Domyślnie jest to folder bin aplikacji.  
  
 Jeśli ta metoda jest używana do zapisywania właściwości wyglądu jako szablonu, przed wywołaniem tej metody upewnij <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> się, że właściwość jest `true` najpierw ustawiona na wartość.  
  
 Serializacja wykresu jako szablonu działa inaczej niż Serializacja nietemplateowa, głównie dlatego, że Serializacja szablonu koncentruje się na właściwościach wyglądu.  
  
 Gdy szablon jest serializowany, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> Metoda może służyć do ładowania szablonu, aby zapewnić właściwości wyglądu wykresu.  
  
 Szablony mogą służyć do symulowania palet niestandardowych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodzący z <see cref="T:System.Xml.XmlWriter" /> użycia do zapisywania <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> właściwości.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartościami niedomyślnymi dla danego obiektu, który jest pochodną <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu z wartościami innymi niż domyślne, które zawierają punkty danych, zostaną zserializowane w przypadku wywołania tej metody. Aby kontrolować, które cechy wykresu są serializowane, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>Użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> i.  
  
 W przypadku użycia tej definicji format musi być XML; Format można zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 W przypadku pracy z plikami tekstowymi w formacie XML dla uproszczenia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> Użyj metody.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, które mogą być serializowane.</summary>
        <value>Wyrażenie oddzielane <see langword="string" /> przecinkami, które reprezentuje właściwości wykresu do serializacji. Składnia to "Class. Property [, Class. Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu będą serializowane, gdy `Save` metody i `Load` są wywoływane. Możesz użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć właściwości wykresu do serializacji, wraz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> z właściwościami i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> .  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Właściwość określa, które cechy wykresu będą serializowane. Symboli wieloznacznych można używać w wyrażeniu ciągu w taki sam sposób, jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość. Na przykład, aby serializować wszystkie właściwości `BackColor` wykresu, należy ustawić tę właściwość na "*". Kolor ".  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartArea> są określone właściwości <xref:System.Web.UI.DataVisualization.Charting.Series> i/lub elementy podrzędne, należy również określić nazwy <xref:System.Web.UI.DataVisualization.Charting.ChartArea> wszystkich <xref:System.Web.UI.DataVisualization.Charting.Series> i obiektów, aby umożliwić stosowanie utrwalonych danych do istniejących <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiektów. oznacza to, że należy określić wyrażenia "Series.Name" i "ChartArea.Name". Przykład tej procedury można znaleźć w poniższym przykładzie kodu. Podobnie, jeśli są używane wiele obszarów wykresu, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> Właściwość wszystkie kreślone <xref:System.Web.UI.DataVisualization.Charting.Series> musi również zostać zapisana.  
  
 Czasami Właściwość można ustawić jako serializowaną i nieserializowaną, która jest często używana w przypadku używania symboli wieloznacznych. Wyrażenie ma niższy priorytet <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> w porównaniu z wyrażeniem. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Należy jednak pamiętać, że mniej wagi jest przyznany do wyrażeń ciągów, które używają symboli wieloznacznych. Na przykład, jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość jest ustawiona na wartość "*. Kolor BackColor " <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> i właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartArea> wszystkie właściwości B`ackColor` z wyjątkiem obiektów będą serializowane.  
  
 W przypadku ustawienia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość zostanie ustawiona wewnętrznie. Jeśli właściwość jest już ustawiona, ale inna właściwość musi być serializowana, upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość jest połączona podczas określania dodatkowej właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Przykład tej procedury można znaleźć w poniższym przykładzie kodu.  
  
 Ta właściwość ma wpływ na wszystkie operacje zapisywania, ładowania i resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
