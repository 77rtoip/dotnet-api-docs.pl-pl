<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="977ca3d32fcb9de0ad28ddc3f5e84ab5172b7682" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52595272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Włącza serializacji <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> kontroli.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest przedstawiany jako <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> właściwości głównego <xref:System.Web.UI.DataVisualization.Charting.Chart> klasy.  
  
 Serializacji zapisuje stan wykresu, a także zapewnia możliwość ładowania serializowane dane wykresu. Wszystkie właściwości wykresu może być utrwalony, włącznie z danymi wykresu. Ponadto można zresetować wszystkie właściwości wykresu, oznaczony do serializacji.  
  
 Opcjonalnie można tej klasy, związane z zarządzaniem stan widoku zdefiniowane przez użytkownika. Jeden z jego `Load` metody może służyć do ładowania stanu widoku, a jedna z `Save` metody mogą być używane podczas ustawiania stanu widoku.  
  
 XML lub binarnym podzielony na fragmenty może służyć do przechowywania, serializacji danych. Domyślnie używany jest XML, ale można zmienić format z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Właściwości wykresu są zapisywane i załadowany przy użyciu `Save` i `Load` metod, odpowiednio. Należy pamiętać, zostanie zapisany tylko właściwości przy użyciu wartości innych niż domyślne. Dane można zapisywać i/lub ładowane przy użyciu pliku, przesyłanie strumieniowe <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> i <xref:System.Xml.XmlReader> obiektów. Podczas zapisywania i/lub podczas ładowania danych przy użyciu obiektu pochodną <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> lub <xref:System.Xml.XmlWriter> klas, formatu danych musi być kodem XML.  
  
 Na poniższej liście opisano trzy technik, od podstawowych po zaawansowane, używane do definiowania danych serializacji. Należy pamiętać, że istnieje również możliwość definiowania danych nie można serializować. Ta technika jest opisana w następnego akapitu.  
  
-   Serializowanie <xref:System.Web.UI.DataVisualization.Charting.Chart> przy użyciu `Save` i `Load` metody bez określania żadnych właściwości możliwych do serializacji. Wszystkie właściwości wykresu za pomocą wartości innych niż domyślne, które zawiera dane wykresu, będzie serializowana.  
  
-   Serializowanie właściwości wykresu, określony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwości grupy właściwości wykresu być serializowana w kategorie, takie jak dane, wygląd i tak dalej. Należy pamiętać, że nazwy <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiekty automatycznie są serializowane; serializowanych danych jest następnie stosowane do istniejących obszarów wykresu i serii po załadowaniu.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwości są implementowane wewnętrznie przez <xref:System.Web.UI.DataVisualization.Charting.Chart> powinna być kontrolka <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości  
  
-   Serializacja właściwości wykresu określonego przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Jest to rozdzielana przecinkami lista wszystkich właściwości wykresu, które są możliwe do serializacji. Po ustawieniu na wartość tej właściwości jest odpowiedzialność deweloperów, aby określić wszystkie właściwości, które mają być zapisywane. Innymi słowy, w odróżnieniu od <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, nazwy obszarów wykresu i serii nie zostaną automatycznie utrwalone. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości również mogą być używane w połączeniu. Jednak upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> połączonych z samym sobą, gdy jest ustawiona, w przeciwnym razie właściwości wykresu, określony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości zostaną zastąpione.  
  
 Aby uniemożliwić serializowanego niektóre właściwości, należy użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości. Gdy jedna właściwość jest ustawiona jako możliwy do serializacji i nie można serializować, co jest typowe w przypadku używania symboli wieloznacznych <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość ma pierwszeństwo. Jednak pierwszeństwo także od tego, jak wiele symboli wieloznacznych zostały użyte podczas określono właściwość.  
  
 Domyślnie można serializować właściwości są resetowane do wartości domyślnych, przed załadowaniem. To zachowanie można zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Metodę można również jawnie zresetować właściwości wykresu, do wartości domyślnych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zawartości wykresu być serializowana.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> wartości wyliczenia, które reprezentuje zawartość wykresu, który będzie serializowany podczas ładowania zapisać ani resetowania operacji. Domyślnie wszystkie właściwości wykresu innych niż domyślne, włącznie z danymi, są zachowywane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie będzie serializowana wszystkich właściwości wykresu, gdy którykolwiek z `Save` i `Load` metody są wywoływane. Aby zapewnić większą kontrolę nad tym, co jest serializowana, należy użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości. Należy pamiętać, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości również mogą być używane razem z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 > [!IMPORTANT]
 > <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwość określa typy właściwości wykresu, takie jak "wygląd", aby można było serializować i faktycznie jest zaimplementowany wewnętrznie jako <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Oznacza to, że ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, a następnie ustawiając <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> spowoduje właściwość <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> wartość właściwości została zastąpiona, chyba że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> jest połączona. Zobacz przykładowy kod poniżej przedstawiono przykład tej procedury.  
  
 Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości wszystkich <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> nazwy obiektów będą automatycznie wykonywane szeregowo; oznacza to, że serializowane dane, które odnoszą się do obszarów wykresu i serii zostaną zastosowane do istniejących obiektów podczas ładowania.  
  
 Ustawienie to ma wpływ na właściwość, którą wszystkie obciążenia, Zapisz i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format używany, gdy wykres jest serializowana.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> wartości wyliczenia, który reprezentuje format serializacji danych. Wartość domyślna to XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane mogą być zserializowane w XML lub format binarny. Format binarny jest zwarty i zajmuje mniej miejsca niż XML. Kod XML, jednak jest format tekstu, który jest czytelny dla człowieka.  
  
 Podczas zapisywania lub załadować danych serializacji XML musi mieć format.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Możliwy do serializacji zawartość.</param>
        <param name="serializable">
          <see langword="True" /> Aby uzyskać ciąg do serializacji. <see langword="false" /> można pobrać ciągu serializaable innych.</param>
        <summary>Zwraca klasę do serializacji lub nie można serializować i/lub nazwy właściwości, w zależności od wartości określone flagi.</summary>
        <returns>A <see langword="string" /> wartość, która reprezentuje możliwy do serializacji lub serializacji bez nazwy klasy i/lub właściwość.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy właściwości obiektu są resetowane do wartości domyślnych przed załadowaniem.</summary>
        <value>
          <see langword="True" /> Jeśli właściwości obiektu są resetowane do wartości domyślnych przed załadowaniem; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy serializator wykresu działa w trybie tworzenia szablonu.</summary>
        <value>
          <see langword="True" /> Jeśli serializator wykresu działa w trybie tworzenia szablonu; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy nieznane właściwości XML i elementy będą ignorowane bez generowania wyjątku.</summary>
        <value>
          <see langword="True" /> Jeśli nieznane właściwości XML i elementy są ignorowane bez generowania wyjątku; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ładunki serializowane dane <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> kontroli.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodzi od <see cref="T:System.IO.Stream" /> klasy, na przykład <see cref="T:System.IO.MemoryStream" /> obiektu.</param>
        <summary>Ładunki serializacji danych do kontrolki z obiektem pochodzącym z <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli.  
  
 W przypadku operacji ładowania można serializować właściwości domyślnie najpierw zresetować do wartości domyślnych przed ich są ustawione na wartości trwałe, jeśli zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Aby załadować konkretne właściwości serializacji, należy ustawić <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości przed załadowaniem danych.  
  
 Należy pamiętać, że gdy dane są zapisywane przy użyciu `Save` metody, tylko te właściwości, które mają wartości inne niż domyślne faktycznie są serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">A czytnika takich jak <see cref="T:System.IO.StringReader" />, która jest pochodną klasy abstrakcyjnej <see cref="T:System.IO.TextReader" /> klasy.</param>
        <summary>Obciążenia zserializowane dane do formantu z obiektu czytnika, która pochodzi od klasy <see cref="T:System.IO.TextReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli.  
  
 W przypadku operacji ładowania domyślnie można serializować właściwości są najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe, jeśli zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Ustawiając <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości określony zbiór właściwości, które mogą zostać załadowane.  
  
 Jeśli używasz tej definicji, należy pamiętać, że format, który jest ustawiony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości musi być kodem XML.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.Chart> umożliwia utrwalanie stanu kontrolki, ta metoda może służyć do załadowania serializowane dane przekazywane przez klienta z powrotem do <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka pliku używana do przechowywania danych serializacji. Jeśli ścieżka względna jest określony, ścieżka będzie względem bieżącego katalogu.</param>
        <summary>Ładunki serializowane dane zapisane na dysku do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> kontroli.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli.  
  
 W przypadku operacji ładowania można serializować właściwości domyślnie najpierw zresetować do wartości domyślnych przed ich są ustawione na wartości trwałe, jeśli zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Aby załadować konkretne właściwości serializacji, należy ustawić <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości przed załadowaniem danych.  
  
 Należy pamiętać, że gdy dane są zapisywane przy użyciu `Save` metody, tylko te właściwości, które mają wartości inne niż domyślne faktycznie są serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Obiekt, z którego można odczytać danych. Obiekt jest tworzony na podstawie <see cref="T:System.Xml.XmlReader" /> klasy i może być obiekt .NET Framework lub obiekt zdefiniowany przez użytkownika.</param>
        <summary>Ładunki serializacji danych do kontrolki z obiektem pochodzącym z <see cref="T:System.Xml.XmlReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli.  
  
 W przypadku operacji ładowania domyślnie serializacji właściwości są najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe, jeśli zapisane. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości określony zbiór właściwości, które mogą zostać załadowane.  
  
 Gdy używasz tej definicji, musi mieć format XML; mogą być zmieniane z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Podczas pracy z plików tekstowych formatu XML, do użytku uproszczenia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, do których nie można serializować.</summary>
        <value>Oddzielone przecinkami <see langword="string" /> wyrażenia, który reprezentuje właściwości wykresu, do których nie można serializować. Składnia jest "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu będzie serializowana, kiedy `Save` i `Load` metody są wywoływane. Możesz użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć właściwości wykresu, można serializować, wraz z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 Ta właściwość określa, które cechy wykresu nie można serializować. Można użyć symboli wieloznacznych w wyrażenia ciągu w taki sam sposób jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Na przykład, aby wykluczyć wszystkie wykresu `BackColor` właściwości z serializacji, ustaw tę właściwość na "*. Kolor tła".  
  
 Czasami właściwość można ustawić zarówno serializacji i nie jest serializowana, co jest typowe podczas korzystania z symboli wieloznacznych. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Wyrażenie ma niższy priorytet w porównaniu do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wyrażenia. Należy jednak zauważyć, że mniejsza waga znajduje się do wyrażenia ciągu, używających symboli wieloznacznych. Na przykład jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość jest ustawiona na "*. Kolor tła"i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, wszystkie B`ackColor` właściwości, z wyjątkiem <xref:System.Web.UI.DataVisualization.Charting.ChartArea> obiekty, które będą wykonywane szeregowo.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość została ustawiona, priorytet zależy od tego, ile symbole wieloznaczne są używane w <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> wyrażenia. Na przykład ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> spowoduje <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> zawierającą właściwość "*. Ponownie\*"wyrażenie. Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na "\*. Ponownie\*", wszystkie `Back*` wykresu właściwości, takie jak `BackColor`, `BackGradient`, i tak dalej, nadal będą wykonywane szeregowo. Jest to spowodowane <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wartość właściwości ma wyższy priorytet względem <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Ma wpływ ta właściwość wszystkie zapisać, ładować i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie właściwości wykresu, oznaczony do serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda powoduje zresetowanie wszystkich właściwości wykresu do wartości domyślnych.  
  
 Aby ograniczyć właściwości wykresu, które są resetowane do wartości domyślnych, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Należy pamiętać, że ta metoda jest również nazywany automatycznie po `Load` metoda jest używana i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwość jest ustawiona na `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje właściwości wykresu, które mają wartości inne niż domyślne. Wszystkie właściwości wykresu, może być serializowany; obejmuje to dane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodzi od <see cref="T:System.IO.Stream" /> klasy, takie jak <see cref="T:System.IO.MemoryStream" />, która jest używany do zapisywania właściwości wykresu.</param>
        <summary>Zapisuje wykres danych i właściwości z innych niż domyślne wartości do obiektu, który pochodzi od klasy <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu za pomocą wartości innych niż domyślne, które zawiera punktów danych, będzie go serializować, gdy ta metoda jest wywoływana. Aby kontrolować właściwości wykresu, można serializować, należy użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Jeśli ta metoda służy do zapisywania właściwości wyglądu jako szablon, upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> obiekt najpierw jest ustawiony na `true` przed wywołaniem tej metody.  
  
 Serializacja wykresu jako szablon inaczej występuje z serializacji nieszablonowe; Serializacja szablonu koncentruje się na właściwości wyglądu.  
  
 Gdy szablon jest serializowana, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> metoda można załadować szablonu, aby zapewnić właściwości wyglądu wykresu.  
  
 Szablony może służyć do symulacji palety niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodzi od <see cref="T:System.IO.TextWriter" /> klasy, na przykład <see cref="T:System.IO.StringWriter" />, która jest używany do zapisywania właściwości wykresu.</param>
        <summary>Zapisuje wykres danych i właściwości z danego obiektu, który jest tworzony na podstawie wartości innych niż domyślne <see cref="T:System.IO.TextWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu za pomocą wartości innych niż domyślne, które zawiera punktów danych, będzie go serializować, gdy ta metoda jest wywoływana. Do kontroli tych właściwości wykresu są serializowane, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Gdy używasz tej definicji, musi mieć format XML; format, można ustawić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.Chart> umożliwia utrwalanie stanu kontrolki, Metoda ta może służyć do zapisać serializowane dane obiektu pochodzącego z <xref:System.IO.TextWriter>, który jest następnie używany do zapisywania danych do <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka pliku używana do przechowywania danych serializacji. Należy pamiętać, że jeśli ścieżka względna jest określony, ścieżka będzie względem bieżącego katalogu.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartości innych niż domyślne do danego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu za pomocą wartości innych niż domyślne, które zawiera punktów danych, będzie go serializować, gdy ta metoda jest wywoływana. Właściwości wykresu, można kontrolować serializacji użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Domyślnie dane są zapisywane w formacie XML. Aby zapisać dane w formacie binarnym, należy użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Należy pamiętać, że uprawnienia do zapisu musi być włączona dla katalogu, w którym jest przechowywany plik. Domyślnie jest to folder Bin aplikacji.  
  
 Jeśli ta metoda jest używana do zapisania jako szablonu, właściwości wyglądu, upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> najpierw ustawiono właściwość `true` przed wywołaniem tej metody.  
  
 Serializacja wykresu jako szablon, zależy od tego, z serializacji nieszablonowe przede wszystkim, ponieważ szablon serializacji koncentruje się na właściwości wyglądu.  
  
 Gdy szablon jest serializowana, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> metoda można załadować szablonu, aby zapewnić właściwości wyglądu wykresu.  
  
 Szablony może służyć do symulacji palety niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodzi od <see cref="T:System.Xml.XmlWriter" /> użytą do zapisania <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> właściwości.</param>
        <summary>Zapisuje wykres danych i właściwości z danego obiektu, który jest tworzony na podstawie wartości innych niż domyślne <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu za pomocą wartości innych niż domyślne, które zawiera punktów danych, będzie go serializować, gdy ta metoda jest wywoływana. Do kontroli tych właściwości wykresu są serializowane, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Gdy używasz tej definicji, musi mieć format XML; format mogą być zmieniane z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Podczas pracy z plików tekstowych formatu XML, do użytku uproszczenia <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, które może być serializowany.</summary>
        <value>Oddzielone przecinkami <see langword="string" /> wyrażenia, który reprezentuje właściwości wykresu być serializowana. Składnia jest "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu będzie serializowana, kiedy `Save` i `Load` metody są wywoływane. Możesz użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć właściwości wykresu, można serializować, wraz z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Właściwość określa, które właściwości wykresu, który będzie serializowany. Można użyć symboli wieloznacznych w wyrażenia ciągu w taki sam sposób jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości. Na przykład do wykonywania serializacji wszystkie wykresu `BackColor` właściwości, ustaw tę właściwość na "*. Kolor tła".  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i/lub <xref:System.Web.UI.DataVisualization.Charting.Series> podrzędne zostały określone właściwości, następnie nazwy wszystkich <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiektów należy także określić umożliwiające utrwalonych danych mają być stosowane do istniejącej <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiekty; oznacza to należy określić wyrażeń "Series.Name" i "ChartArea.Name". Zobacz przykładowy kod poniżej przedstawiono przykład tej procedury. Podobnie, jeśli używanych jest wiele obszarów wykresu, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> właściwości wszystkich wykreślić <xref:System.Web.UI.DataVisualization.Charting.Series> również musi zostać zapisany.  
  
 Czasami właściwość można ustawić zarówno serializacji i nie jest serializowana, co jest typowe podczas korzystania z symboli wieloznacznych. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Wyrażenie ma niższy priorytet w porównaniu do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wyrażenia. Należy jednak zauważyć, że mniejsza waga znajduje się do wyrażenia ciągu, używających symboli wieloznacznych. Na przykład jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość jest ustawiona na "*. Kolor tła"i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, wszystkie B`ackColor` właściwości, z wyjątkiem <xref:System.Web.UI.DataVisualization.Charting.ChartArea> obiekty, które będą wykonywane szeregowo.  
  
 Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wewnętrznie będzie można ustawić właściwości. Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość jest już ustawiona, lecz inna właściwość musi być serializowane, upewnij się, że łączenie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości podczas określania dodatkowych właściwości. Zobacz przykładowy kod poniżej przedstawiono przykład tej procedury.  
  
 Ma wpływ ta właściwość wszystkie zapisać, ładować i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>