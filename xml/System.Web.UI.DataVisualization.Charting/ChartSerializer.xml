<Type Name="ChartSerializer" FullName="System.Web.UI.DataVisualization.Charting.ChartSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aa4a09c29d3e9e5efddfc3d46305a8ca73f68de5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36593266" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class ChartSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChartSerializer" />
  <TypeSignature Language="F#" Value="type ChartSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Włącza serializacji <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> formantu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa jest ujawniona jako <xref:System.Web.UI.DataVisualization.Charting.Chart.Serializer%2A> właściwości katalogu głównego <xref:System.Web.UI.DataVisualization.Charting.Chart> klasy.  
  
 Serializacja zapisuje stan wykresu i udostępnia opcję, aby załadować dane serializowane do wykresu. Wszystkie właściwości wykresu mógł być trwały, włącznie z danymi wykresu. Ponadto można zresetować wszystkie właściwości wykresu, oznaczony do serializacji.  
  
 Opcjonalnie można użyć tej klasy, związane z zarządzaniem stan widoku zdefiniowane przez użytkownika. Jeden z jego `Load` metod można użyć do załadowania stan widoku, a jeden z `Save` metody mogą być używane podczas ustawiania stanu widoku.  
  
 Formacie binarnym lub XML może służyć do przechowywania serializacji danych. XML jest używany domyślnie, ale można zmienić format z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Wykres właściwości są zapisywane i ładowane przy użyciu `Save` i `Load` metod, odpowiednio. Należy pamiętać, zostanie zapisany tylko właściwości z wartości innych niż domyślne. Dane mogą zostać zapisane i/lub ładowane przy użyciu pliku, strumienia <xref:System.IO.TextWriter>, <xref:System.IO.TextReader>, <xref:System.Xml.XmlWriter> i <xref:System.Xml.XmlReader> obiektów. Podczas zapisywania i/lub ładowania danych przy użyciu obiektu pochodną <xref:System.IO.TextReader>, <xref:System.IO.TextWriter>, <xref:System.Xml.XmlReader> lub <xref:System.Xml.XmlWriter> klas, format danych musi być XML.  
  
 Na poniższej liście opisano trzy technik, z podstawowego zaawansowanych, używany do definiowania danych serializacji. Należy pamiętać, że istnieje również możliwość zdefiniowania danych nie można serializować. Ta metoda została opisana w następnej akapitu.  
  
-   Serializować <xref:System.Web.UI.DataVisualization.Charting.Chart> przy użyciu `Save` i `Load` metody bez określania żadnych właściwości do serializacji. Wszystkie właściwości wykresu o wartościach innych niż domyślne, takich jak dane wykresu, będzie można serializować.  
  
-   Serializować właściwości wykresu, określony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwości grupy właściwości wykresu, aby można było serializować na kategorie, takie jak dane, wygląd i tak dalej. Należy pamiętać, że nazwy <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiekty są automatycznie serializowane; dane serializowane jest następnie stosowany do istniejących obszarów wykresu i serii po załadowaniu.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> Właściwość jest implementowana wewnętrznie przez <xref:System.Web.UI.DataVisualization.Charting.Chart> kontrolować jako <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości  
  
-   Serializacja właściwości wykresu, określony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Jest to rozdzielana przecinkami lista wszystkich właściwości wykresu, które są do serializacji. Po ustawieniu na wartość tej właściwości jest odpowiedzialny za developer, aby określić wszystkie właściwości można zapisać. Innymi słowy, w odróżnieniu od <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, nazwy obszarów wykresu i serii nie zostaną automatycznie utrwalone. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości mogą być również używane w połączeniu. Jednak należy się upewnić, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> połączonych ze sobą, gdy jest ustawiona, w przeciwnym razie wartość właściwości wykresu, określony przez <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość zostanie zastąpiona.  
  
 Do niektórych właściwości zabrania serializowana, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości. Gdy jedna właściwość jest ustawiona jako możliwy do serializacji i nie można serializować, co jest typowe w przypadku używania symboli wieloznacznych <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość ma pierwszeństwo. Jednak pierwszeństwo także od tego, jak wiele symboli wieloznacznych zostały użyte podczas określono właściwość.  
  
 Domyślnie można serializować właściwości są resetowane do wartości domyślnych, przed załadowaniem. To zachowanie można zmienić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset%2A> Metody można również jawnie zresetować właściwości wykresu do wartości domyślnych.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As SerializationContents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationContents Content { System::Web::UI::DataVisualization::Charting::SerializationContents get(); void set(System::Web::UI::DataVisualization::Charting::SerializationContents value); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Web.UI.DataVisualization.Charting.SerializationContents with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia typ zawartości wykresu, aby można było serializować.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationContents" /> wartości wyliczenia, który reprezentuje zawartość wykresu, który będzie serializowany podczas ładowania, Zapisz lub zresetować operacji. Domyślnie wszystkie właściwości wykres z systemem innym niż domyślny, w tym danych są zachowywane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu, będą wykonywane szeregowo przy `Save` i `Load` metody są wywoływane. Aby zapewnić większą kontrolę nad tym, co jest serializowany, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości. Należy pamiętać, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości mogą być również używane wraz z programem <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 **Ważne** <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość określa typy właściwości wykresu, takie jak "wygląd", aby można było serializować i faktycznie jest zaimplementowany wewnętrznie jako <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Oznacza to, że ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, a następnie ustawić <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> spowoduje właściwości <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> wartość właściwości została zastąpiona, chyba że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> jest połączonych. Zobacz poniższy kod przykładowy, na przykład w tej procedurze.  
  
 Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości, wszystkie <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> nazwy obiektów zostaną automatycznie zserializowane; oznacza to, że dane serializowane, które dotyczą obszarów wykresu i serii zostanie zastosowana do istniejących obiektów podczas ładowania.  
  
 Ustawienie ma wpływ ta właściwość wszystkie obciążenia, Zapisz i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberSignature Language="VB.NET" Value="Public Property Format As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::DataVisualization::Charting::SerializationFormat Format { System::Web::UI::DataVisualization::Charting::SerializationFormat get(); void set(System::Web::UI::DataVisualization::Charting::SerializationFormat value); };" />
      <MemberSignature Language="F#" Value="member this.Format : System.Web.UI.DataVisualization.Charting.SerializationFormat with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia format używany podczas serializacji jest wykres.</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.SerializationFormat" /> wartość wyliczenia, która reprezentuje format serializacji danych. Wartość domyślna to XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane można serializować w XML lub format binarny. Format binarny jest compact i zajmuje mniej miejsca niż XML. Kod XML, jest jednak formatu tekstowego, który jest zrozumiałą dla użytkownika.  
  
 Podczas zapisywania lub załadować danych serializacji. format musi być XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Web.UI.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.GetContentString(System.Web.UI.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetContentString (content As SerializationContents, serializable As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetContentString(System::Web::UI::DataVisualization::Charting::SerializationContents content, bool serializable);" />
      <MemberSignature Language="F#" Value="member this.GetContentString : System.Web.UI.DataVisualization.Charting.SerializationContents * bool -&gt; string" Usage="chartSerializer.GetContentString (content, serializable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Web.UI.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">Możliwą do serializacji zawartość.</param>
        <param name="serializable">
          <see langword="True" /> Aby uzyskać ciąg do serializacji. <see langword="false" /> można pobrać ciągu z systemem innym niż serializaable.</param>
        <summary>Zwraca klasę do serializacji lub nie można serializować i/lub nazwy właściwości, w zależności od wartości określonej flagi.</summary>
        <returns>A <see langword="string" /> wartość, która reprezentuje do serializacji lub nie można serializować nazwy klasy i/lub właściwości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberSignature Language="VB.NET" Value="Public Property IsResetWhenLoading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsResetWhenLoading { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsResetWhenLoading : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy właściwości obiektu są resetowane do wartości domyślnych przed załadowaniem.</summary>
        <value>
          <see langword="True" /> Jeśli właściwości obiektu są resetowane do wartości domyślnych przed załadowaniem; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemplateMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTemplateMode : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy serializator wykresu działa w trybie tworzenia szablonu.</summary>
        <value>
          <see langword="True" /> Serializator wykresu jest pracy w trybie tworzenia szablonu; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUnknownAttributeIgnored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknownAttributeIgnored { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUnknownAttributeIgnored : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy nieznane właściwości XML i elementy będą ignorowane bez generowania wyjątku.</summary>
        <value>
          <see langword="True" /> Jeśli nieznane właściwości XML i elementy są ignorowane bez generowania wyjątku; w przeciwnym razie <see langword="False" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dane do serializacji obciążeń <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> formantu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.Stream -&gt; unit" Usage="chartSerializer.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodną <see cref="T:System.IO.Stream" /> klasy, na przykład <see cref="T:System.IO.MemoryStream" /> obiektu.</param>
        <summary>Ładunki serializacji danych w formancie z obiektem pochodzącym z <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 W przypadku operacji ładowania do serializacji właściwości są domyślnie najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe po zapisaniu. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Aby załadować właściwości specyficzne dla serializacji, ustaw <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości przed załadowaniem danych.  
  
 Należy pamiętać, że przy zapisywaniu danych przy użyciu `Save` metody, tylko te właściwości, które mają przypisane wartości domyślne nie są faktycznie serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">A czytnika takich jak <see cref="T:System.IO.StringReader" />, która jest pochodną klasy abstrakcyjnej <see cref="T:System.IO.TextReader" /> klasy.</param>
        <summary>Ładunki serializacji danych w formancie z obiektu odczytującego, która jest pochodną <see cref="T:System.IO.TextReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 Podczas operacji ładowania domyślnie można serializować właściwości są najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe po zapisaniu. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Przez ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, określony zbiór właściwości, które mogą być ładowane.  
  
 Jeśli używasz tej definicji, należy pamiętać, że format, co jest ustawieniem <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwość, musi być XML.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli jest użytą do utrwalenia stanu, ta metoda może służyć do załadowania zserializowana danych, które jest zapisane przez klienta z powrotem do <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="chartSerializer.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka plików używana do przechowywania danych serializacji. Jeśli zostanie określona ścieżka względna, ścieżka będzie względem bieżącego katalogu.</param>
        <summary>Ładunki serializowane dane zapisane na dysku do <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> formantu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 W przypadku operacji ładowania do serializacji właściwości są domyślnie najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe po zapisaniu. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Aby załadować właściwości specyficzne dla serializacji, ustaw <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> , <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości przed załadowaniem danych.  
  
 Należy pamiętać, że przy zapisywaniu danych przy użyciu `Save` metody, tylko te właściwości, które mają przypisane wartości domyślne nie są faktycznie serializowane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="chartSerializer.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">Obiekt, z którego można odczytać danych. Obiekt jest pochodną <see cref="T:System.Xml.XmlReader" /> klasy, a może mieć obiektu .NET Framework lub zdefiniowanej przez użytkownika.</param>
        <summary>Ładunki serializacji danych w formancie z obiektem pochodzącym z <see cref="T:System.Xml.XmlReader" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołaj tę metodę, aby załadować dane serializowane <xref:System.Web.UI.DataVisualization.Charting.Chart> formantu.  
  
 W przypadku operacji ładowania domyślnie serializacji właściwości są najpierw resetowane do wartości domyślnych przed ich są ustawione na wartości trwałe po zapisaniu. Aby zmienić to zachowanie, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwości.  
  
 Domyślnie zostaną załadowane wszystkie właściwości wykresu serializacji. Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> lub <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, określony zbiór właściwości, które mogą być ładowane.  
  
 Korzystając z tej definicji, musi mieć format XML; można go zmienić z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Podczas pracy z plikami tekstu formatu XML, dla uproszczenia użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Load%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property NonSerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NonSerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonSerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, których nie można serializować.</summary>
        <value>Rozdzielone przecinkami <see langword="string" /> wyrażenia, który reprezentuje właściwości wykresu, których nie można serializować. Składnia jest "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu zostaną podczas serializacji `Save` i `Load` metody są wywoływane. Można użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć liczbę cech wykresu serializacji, wraz z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 Ta właściwość określa właściwości wykresu, które nie będzie można serializować. Może zawierać symbole wieloznaczne wyrażenia ciągu w taki sam sposób jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości. Na przykład, aby wykluczyć wszystkie wykresu `BackColor` właściwości z serializacji, ta właściwość jest ustawiona na "*. Kolor tła".  
  
 Czasami właściwości można ustawić zarówno serializacji i nie jest serializowana, co jest typowe stosowania symboli wieloznacznych. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Wyrażenie ma o niższym priorytecie w porównaniu do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wyrażenia. Pamiętaj jednak, otrzyma mniej wagi wyrażeń ciąg symboli wieloznacznych. Na przykład jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wartość właściwości jest równa "*. BackColor"i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, wszystkie B`ackColor` właściwości z wyjątkiem <xref:System.Web.UI.DataVisualization.Charting.ChartArea> będzie można serializować obiektów.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość została ustawiona, priorytet zależy od tego, ile symbole wieloznaczne są używane w <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> wyrażenia. Na przykład ustawienie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości <xref:System.Web.UI.DataVisualization.Charting.SerializationContents.Appearance> spowoduje <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości zawierająca "*. Ponownie\*"wyrażenie. Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na "\*. Ponownie\*", wszystkie `Back*` wykresu właściwości, takie jak `BackColor`, `BackGradient`, itd., nadal można serializować. Jest to spowodowane <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wartość właściwości ma wyższy priorytet w porównaniu do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Ta właściwość ma wpływ wszystkie zapisać, obciążenia i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="chartSerializer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetuje wszystkie właściwości wykresu, oznaczony do serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda powoduje zresetowanie wszystkich właściwości wykresu do wartości domyślnych.  
  
 Aby ograniczyć właściwości wykresu, które są resetowane do wartości domyślnych, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Należy pamiętać, że ta metoda jest również wywoływana automatycznie po `Load` używana jest metoda i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> właściwość jest ustawiona na `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje wykres właściwości, które mają przypisane wartości innych niż domyślne. Wszystkie właściwości wykresu, może być Zserializowany; dotyczy to danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.Stream -&gt; unit" Usage="chartSerializer.Save stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Obiekt pochodną <see cref="T:System.IO.Stream" /> klas, takich jak <see cref="T:System.IO.MemoryStream" />, która jest używany do zapisywania właściwości wykresu.</param>
        <summary>Zapisuje wykres danych i właściwości z innych niż domyślne wartości do obiektu, która jest pochodną <see cref="T:System.IO.Stream" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu o wartościach innych niż domyślne, co obejmuje punktów danych, będzie można serializować, gdy ta metoda jest wywoływana. Aby kontrolować właściwości wykresu, aby można było serializować, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Jeśli ta metoda służy do zapisywania wyglądem właściwości jako szablon, upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer> najpierw ustawiono obiektu `true` przed wywołaniem tej metody.  
  
 Serializacja wykresu jako szablon inaczej występuje z serializacji-template; Szablon serializacji koncentruje się na właściwości wyglądu.  
  
 Jeśli szablon jest serializowana, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> metody można użyć do załadowania szablonu w celu zapewnienia właściwości wyglądu wykresu.  
  
 Szablony może służyć do symulowania palety niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodzi od <see cref="T:System.IO.TextWriter" /> klasy, na przykład <see cref="T:System.IO.StringWriter" />, która jest używana do zapisania właściwości wykresu.</param>
        <summary>Zapisuje wykres danych i właściwości o wartości innej niż domyślna do danego obiektu, który jest pochodną <see cref="T:System.IO.TextWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu o wartościach innych niż domyślne, co obejmuje punktów danych, będzie można serializować, gdy ta metoda jest wywoływana. Do kontroli właściwości wykresu, które są serializowane, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Korzystając z tej definicji, musi mieć format XML; format można ustawić za pomocą <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.Chart> kontroli jest użytą do utrwalenia stanu, ta metoda może być używany można zapisać dane serializowane obiekt pochodzący od <xref:System.IO.TextWriter>, który jest następnie używany do zapisywania danych do <xref:System.Web.UI.DataVisualization.Charting.Chart.ViewStateData%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="chartSerializer.Save fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Względna lub bezwzględna ścieżka plików używana do przechowywania danych serializacji. Należy pamiętać, że jeśli zostanie określona ścieżka względna, ścieżka będzie względem bieżącego katalogu.</param>
        <summary>Zapisuje dane wykresu i właściwości z wartości innych niż domyślne do danego pliku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu o wartościach innych niż domyślne, co obejmuje punktów danych, będzie można serializować, gdy ta metoda jest wywoływana. Właściwości wykresu, można kontrolować serializacji użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Domyślnie dane są zapisywane w formacie XML. Aby zapisać dane w formacie binarnym, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Należy pamiętać, wymaga włączenia uprawnienia do zapisu dla katalogu, w którym przechowywany jest plik. Domyślnie jest to folder Bin aplikacji.  
  
 Jeśli ta metoda jest używana do zapisywania wyglądem właściwości jako szablon, upewnij się, że <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> najpierw ustaw właściwość `true` przed wywołaniem tej metody.  
  
 Serializacji wykresu jako szablon przebieg zależy od serializacji-template głównie, ponieważ szablon serializacji koncentruje się na właściwości wyglądu.  
  
 Jeśli szablon jest serializowana, <xref:System.Web.UI.DataVisualization.Charting.Chart.LoadTemplate%2A> metody można użyć do załadowania szablonu w celu zapewnienia właściwości wyglądu wykresu.  
  
 Szablony może służyć do symulowania palety niestandardowej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Xml.XmlWriter -&gt; unit" Usage="chartSerializer.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Obiekt pochodną <see cref="T:System.Xml.XmlWriter" /> używany do zapisywania <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> właściwości.</param>
        <summary>Zapisuje wykres danych i właściwości o wartości innej niż domyślna do danego obiektu, który jest pochodną <see cref="T:System.Xml.XmlWriter" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu o wartościach innych niż domyślne, co obejmuje punktów danych, będzie można serializować, gdy ta metoda jest wywoływana. Do kontroli właściwości wykresu, które są serializowane, użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A>, <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości.  
  
 Korzystając z tej definicji, musi mieć format XML; format można zmienić z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Format%2A> właściwości.  
  
 Podczas pracy z plikami tekstu formatu XML, dla uproszczenia użyj <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Save%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializableContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializableContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializableContent : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwości wykresu, które można serializować.</summary>
        <value>Rozdzielone przecinkami <see langword="string" /> wyrażenia, który reprezentuje właściwości wykresu, aby można było serializować. Składnia jest "Class.Property[,Class.Property]".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie wszystkie właściwości wykresu zostaną podczas serializacji `Save` i `Load` metody są wywoływane. Można użyć <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości, aby ograniczyć liczbę cech wykresu serializacji, wraz z <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwości.  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> Właściwość określa, które właściwości wykresu, który będzie serializowany. Może zawierać symbole wieloznaczne wyrażenia ciągu w taki sam sposób jak <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwości. Na przykład do serializacji wszystkie wykresu `BackColor` właściwości, ta właściwość jest ustawiona na "*. Kolor tła".  
  
 Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i/lub <xref:System.Web.UI.DataVisualization.Charting.Series> podrzędne są określone właściwości, następnie nazwy wszystkich <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> musi również określać umożliwiające utrwalonych danych ma zostać zastosowany do istniejących <xref:System.Web.UI.DataVisualization.Charting.ChartArea> i <xref:System.Web.UI.DataVisualization.Charting.Series> obiekty; oznacza to należy określić wyrażenia "Series.Name" i "ChartArea.Name". Zobacz poniższy kod przykładowy, na przykład w tej procedurze. Podobnie, jeśli są używane wiele obszarów wykresu, <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> właściwości wszystkich wykreślić <xref:System.Web.UI.DataVisualization.Charting.Series> również musi zostać zapisany.  
  
 Czasami właściwości można ustawić zarówno serializacji i nie jest serializowana, co jest typowe stosowania symboli wieloznacznych. <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> Wyrażenie ma o niższym priorytecie w porównaniu do <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wyrażenia. Pamiętaj jednak, otrzyma mniej wagi wyrażeń ciąg symboli wieloznacznych. Na przykład jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> wartość właściwości jest równa "*. BackColor"i <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> właściwość jest ustawiona na <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A>, wszystkie B`ackColor` właściwości z wyjątkiem <xref:System.Web.UI.DataVisualization.Charting.ChartArea> będzie można serializować obiektów.  
  
 Jeśli ustawisz <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwość zostanie ustawiona wewnętrznie. Jeśli <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.Content%2A> ustawiono już właściwość, lecz inna właściwość musi być serializowany, upewnij się, że łączenie <xref:System.Web.UI.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> właściwości podczas określania dodatkowych właściwości. Zobacz poniższy kod przykładowy, na przykład w tej procedurze.  
  
 Ta właściwość ma wpływ wszystkie zapisać, obciążenia i operacje resetowania.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>