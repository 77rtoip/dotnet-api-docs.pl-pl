<Type Name="StatisticFormula" FullName="System.Web.UI.DataVisualization.Charting.StatisticFormula">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="92d4b2167ff6f21d5cdcc51f71a0fa69fdcc3dbe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30585673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatisticFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StatisticFormula extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.StatisticFormula" />
  <TypeSignature Language="VB.NET" Value="Public Class StatisticFormula" />
  <TypeSignature Language="C++ CLI" Value="public ref class StatisticFormula" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc788-101">Oblicza formuł statystycznych.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc788-101">Calculates statistical formulas.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-102">Formuły można słabo podzielić na następujące kategorie: dystrybucji, w tym odwrotny dystrybucji; testy; i podstawowe statystyczne formuły.</span><span class="sxs-lookup"><span data-stu-id="dc788-102">Formulas can be loosely grouped into the following categories: distributions, including inverse distributions; tests; and basic statistical formulas.</span></span> <span data-ttu-id="dc788-103">Każda grupa ma wspólne cechy względem ich wejściowych i zwracanych wartości.</span><span class="sxs-lookup"><span data-stu-id="dc788-103">Each group has common characteristics with respect to their input and return values.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anova">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AnovaResult Anova (double probability, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.AnovaResult Anova(float64 probability, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Anova(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Anova (probability As Double, inputSeriesNames As String) As AnovaResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::AnovaResult ^ Anova(double probability, System::String ^ inputSeriesNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AnovaResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="dc788-104">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-104">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-105">Dopuszczalny zakres wejściowy jest od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-105">The acceptable input range is between 0 and 1.</span>
          </span>
        </param>
        <param name="inputSeriesNames">
          <span data-ttu-id="dc788-106">Nazwy serii wejściowych dwóch lub więcej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-106">Names of two or more input series.</span>
          </span>
          <span data-ttu-id="dc788-107">Każda seria musi istnieje w kolekcji serii w momencie wywołania metody i mieć taką samą liczbę punktów danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-107">Each series must exist in the series collection at the time of the method call, and have the same number of data points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-108">Formuła Anova określa istnienia lub braku statystycznie znacząca różnica między średnie wartości co najmniej dwie grupy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-108">The Anova formula determines the existence or absence of a statistically significant difference between the mean values of two or more groups of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-109">
            <see cref="T:System.Web.UI.DataVisualization.Charting.AnovaResult" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-109">An <see cref="T:System.Web.UI.DataVisualization.Charting.AnovaResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-110">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-110">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As AnovaResult = Chart1.DataManipulator.Statistics.Anova(.05, "Series1,Series2,Series3")  
```  
  
```csharp  
AnovaResult result = Chart1.DataManipulator.Statistics.Anova(.05, "Series1,Series2,Series3");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BetaFunction">
      <MemberSignature Language="C#" Value="public double BetaFunction (double m, double n);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 BetaFunction(float64 m, float64 n) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.BetaFunction(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function BetaFunction (m As Double, n As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double BetaFunction(double m, double n);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Double" />
        <Parameter Name="n" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="dc788-111">Pierwsza wartość dla funkcji w wersji beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-111">First value for the beta function.</span>
          </span>
        </param>
        <param name="n">
          <span data-ttu-id="dc788-112">Druga wartość dla funkcji w wersji beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-112">Second value for the beta function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-113">Funkcja w wersji beta oblicza wartość funkcja w wersji beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-113">The beta function calculates the beta function value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-114">Wartość wersji beta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-114">Beta value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-115">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-115">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.BetaFunction(2.3, 6.2);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Correlation">
      <MemberSignature Language="C#" Value="public double Correlation (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Correlation(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Correlation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Correlation (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Correlation(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-116">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-116">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-117">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-117">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-118">Formuła korelacji pokazuje siły relacji między dwie zmienne losowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-118">The correlation formula shows the strength of the relationship that exists between two random variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-119">Wartość korelacji między dwiema grupami danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-119">Correlation value between the two groups of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-120">Metoda zgłasza wyjątek, jeśli seria wejściowa nie mają taką samą liczbę punktów danych.</span><span class="sxs-lookup"><span data-stu-id="dc788-120">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc788-121">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-121">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Correlation("Series1", "Series2")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Correlation("Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Covariance">
      <MemberSignature Language="C#" Value="public double Covariance (string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Covariance(string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Covariance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Covariance (firstInputSeriesName As String, secondInputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Covariance(System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-122">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-122">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-123">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-123">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-124">Formuła Kowariancja mierzy stopień zależności, które mogą istnieć między dwie zmienne losowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-124">The covariance formula measures the degree of dependence that may exist between two random variables.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-125">Kowariancja wartość między dwiema grupami danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-125">Covariance value between the two groups of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-126">Metoda zgłasza wyjątek, jeśli seria wejściowa nie mają taką samą liczbę punktów danych.</span><span class="sxs-lookup"><span data-stu-id="dc788-126">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc788-127">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-127">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.Covariance("Series1", "Series2")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Covariance("Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FDistribution">
      <MemberSignature Language="C#" Value="public double FDistribution (double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 FDistribution(float64 value, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.FDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FDistribution (value As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double FDistribution(double value, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dc788-128">Wartość F, dla której ma zostać dystrybucji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-128">The F value for which you want the distribution.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="dc788-129">Pierwszy stopień swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-129">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="dc788-130">Drugi stopień swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-130">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-131">Wzór rozkładu F oblicza prawdopodobieństwo rozkładu F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-131">The F distribution formula calculates the probability for the F-distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-132">Prawdopodobieństwo rozkładu F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-132">Probability for the F distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-133">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-133">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.FDistribution(6.31, 15, 7);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.FTestResult FTest (double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.FTestResult FTest(float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.FTest(System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FTest (probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As FTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::FTestResult ^ FTest(double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.FTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="dc788-134">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-134">The alpha value.</span>
          </span>
          <span data-ttu-id="dc788-135">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-135">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-136">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-136">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-137">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-137">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-138">Formuła F test wykonuje test F dwie próby przy użyciu rozkładu F i służy do wyświetlania, jeśli próbki mają różne wariancje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-138">The F-test formula performs a two-sample F-test using F distribution, and is used to see if the samples have different variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-139">
            <see cref="T:System.Web.UI.DataVisualization.Charting.FTestResult" /> Obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-139">An <see cref="T:System.Web.UI.DataVisualization.Charting.FTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-140">Metoda zgłasza wyjątek, jeśli seria wejściowa nie mają taką samą liczbę punktów danych.</span><span class="sxs-lookup"><span data-stu-id="dc788-140">The method throws an exception if the input series do not have the same number of data points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc788-141">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-141">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As FTestResult = Chart1.DataManipulator.Statistics.FTest(0.05, "Series1", "Series2")  
```  
  
```csharp  
FTestResult result = Chart1.DataManipulator.Statistics.FTest(0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GammaFunction">
      <MemberSignature Language="C#" Value="public double GammaFunction (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GammaFunction(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.GammaFunction(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function GammaFunction (value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GammaFunction(double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dc788-142">Wartość, dla których wartość gamma jest wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-142">Value for which the gamma value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-143">Funkcja gamma oblicza wartość gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-143">The gamma function calculates the gamma value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-144">Wartość gamma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-144">Gamma value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-145">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-145">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.GammaFunction(6.2)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.GammaFunction(6.2);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseFDistribution">
      <MemberSignature Language="C#" Value="public double InverseFDistribution (double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseFDistribution(float64 probability, int32 firstDegreeOfFreedom, int32 secondDegreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseFDistribution(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseFDistribution (probability As Double, firstDegreeOfFreedom As Integer, secondDegreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseFDistribution(double probability, int firstDegreeOfFreedom, int secondDegreeOfFreedom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstDegreeOfFreedom" Type="System.Int32" />
        <Parameter Name="secondDegreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="dc788-146">Prawdopodobieństwo rozkładu F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-146">Probability for the F distribution.</span>
          </span>
          <span data-ttu-id="dc788-147">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-147">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstDegreeOfFreedom">
          <span data-ttu-id="dc788-148">Pierwszy stopień swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-148">First degree of freedom.</span>
          </span>
        </param>
        <param name="secondDegreeOfFreedom">
          <span data-ttu-id="dc788-149">Drugi stopień swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-149">Second degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-150">Wzór rozkładu F odwrotność Oblicza odwrotność rozkładu skumulowanego F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-150">The inverse F distribution formula calculates the inverse of the F cumulative distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-151">Wartość F dystrybucji F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-151">F value for the F distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-152">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-152">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseFDistribution(.05, 15, 30);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseNormalDistribution">
      <MemberSignature Language="C#" Value="public double InverseNormalDistribution (double probability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseNormalDistribution(float64 probability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseNormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseNormalDistribution (probability As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseNormalDistribution(double probability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="dc788-153">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-153">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-154">Dopuszczalny zakres wejściowy jest od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-154">The acceptable input range is between 0 and 1.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-155">Wzór rozkładu normalnego odwrotny Oblicza odwrotność standardowego skumulowanego rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-155">The inverse normal distribution formula calculates the inverse of the standard normal cumulative distribution.</span>
          </span>
          <span data-ttu-id="dc788-156">Rozkład ma średnią 0 i odchylenie standardowe jednego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-156">The distribution has a mean of 0 and a standard deviation of one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-157">Odwrotność funkcji rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-157">Inverse of the normal distribution function.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-158">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-158">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As double = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseNormalDistribution(.05);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InverseTDistribution">
      <MemberSignature Language="C#" Value="public double InverseTDistribution (double probability, int degreeOfFreedom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 InverseTDistribution(float64 probability, int32 degreeOfFreedom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.InverseTDistribution(System.Double,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function InverseTDistribution (probability As Double, degreeOfFreedom As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double InverseTDistribution(double probability, int degreeOfFreedom);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="probability">
          <span data-ttu-id="dc788-159">Prawdopodobieństwo rozkładu F.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-159">Probability for the F distribution.</span>
          </span>
          <span data-ttu-id="dc788-160">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-160">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="dc788-161">Stopień swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-161">Degree of freedom.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-162">Odwrotność *t*— oblicza wzór rozkładu *t*— wartość studenta *t*-dystrybucji jako funkcję prawdopodobieństwa i stopni swobody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-162">The inverse *t*-distribution formula calculates the *t*-value of the Student's *t*-distribution as a function of probability and degrees of freedom.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-163">Odwrotny z *t*-dystrybucji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-163">Inverse of the *t*-distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-164">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-164">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
double result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.InverseTDistribution(.05, 15);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mean">
      <MemberSignature Language="C#" Value="public double Mean (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Mean(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Mean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Mean (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Mean(System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="dc788-165">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiekt, który przechowuje dane, dla których średnia wartość jest wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-165">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the mean value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-166">Wzór średniej oblicza średnią lub średniej danych przechowywanych w serii danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-166">The mean formula calculates the average, or mean, of data stored in a data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-167">Średnia wartość wszystkich punktów danych w danej serii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-167">Mean value of all the data points in the given series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-168">Jeśli seria wejściowa nie istnieje w <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> podczas wywołania metody, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dc788-168">If named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc788-169">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-169">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Mean("Series1")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Mean("Series1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Median">
      <MemberSignature Language="C#" Value="public double Median (string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Median(string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Median(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Median (inputSeriesName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Median(System::String ^ inputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="dc788-170">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane, dla których jest wymagana wartość mediany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-170">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the median value is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-171">Wzór średniej oblicza medianę danych przechowywanych w serii danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-171">The median formula calculates the median of the data stored in a data series.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-172">Medianę wszystkich punktów danych w danej serii.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-172">Median of all the data points in the given series.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc788-173">Jeśli nazwany seria wejściowa nie istnieje w <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> podczas wywołania metody, jest zgłaszany wyjątek.</span><span class="sxs-lookup"><span data-stu-id="dc788-173">If the named input series does not exist in the <xref:System.Web.UI.DataVisualization.Charting.SeriesCollection> at the time of the method call, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc788-174">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-174">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Median("Series1")  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.Median("Series1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalDistribution">
      <MemberSignature Language="C#" Value="public double NormalDistribution (double zValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 NormalDistribution(float64 zValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.NormalDistribution(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function NormalDistribution (zValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double NormalDistribution(double zValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="zValue">
          <span data-ttu-id="dc788-175">Wartość, dla których konieczne jest rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-175">Value for which the normal distribution is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-176">Wzór rozkładu normalnego oblicza wartość standardowego skumulowanego rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-176">The normal distribution formula calculates the value of the standard normal cumulative distribution.</span>
          </span>
          <span data-ttu-id="dc788-177">Rozkład ma średnią 0 i odchylenie standardowe 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-177">The distribution has a mean of 0 and a standard deviation of 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-178">Wartość standardowego skumulowanego rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-178">Value of the standard normal cumulative distribution.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-179">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-179">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.NormalDistribution(1.96)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.NormalDistribution(1.96);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TDistribution">
      <MemberSignature Language="C#" Value="public double TDistribution (double value, int degreeOfFreedom, bool oneTail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 TDistribution(float64 value, int32 degreeOfFreedom, bool oneTail) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TDistribution(System.Double,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TDistribution (value As Double, degreeOfFreedom As Integer, oneTail As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double TDistribution(double value, int degreeOfFreedom, bool oneTail);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="degreeOfFreedom" Type="System.Int32" />
        <Parameter Name="oneTail" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="dc788-180">
            <c>t</c>-wartość, dla której ma zostać dystrybucji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-180">
              <c>t</c>-value for which you want the distribution.</span>
          </span>
        </param>
        <param name="degreeOfFreedom">
          <span data-ttu-id="dc788-181">Stopień swobody</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-181">Degree of freedom</span>
          </span>
        </param>
        <param name="oneTail">
          <span data-ttu-id="dc788-182">Jeśli ustawiono <see langword="true" />, jednostronny dystrybucji jest używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-182">If set to <see langword="true" />, one-tailed distribution is used.</span>
          </span>
          <span data-ttu-id="dc788-183">W przeciwnym razie dwustronny dystrybucji jest używany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-183">Otherwise, two-tailed distribution is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-184">*t*-wzór rozkładu oblicza prawdopodobieństwo dla studenta *t*-dystrybucji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-184">The *t*-distribution formula calculates the probability for the Student's *t*-distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-185">*t*-rozkładu prawdopodobieństwa funkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-185">*t*-distribution function probability.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-186">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-186">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true)  
```  
  
```csharp  
double result = Chart1.DataManipulator.Statistics.TDistribution(1.96, 30, true);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestEqualVariances">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestEqualVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestEqualVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestEqualVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestEqualVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="dc788-187">Wg hipotezy różnią grup danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-187">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="dc788-188">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-188">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-189">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-189">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-190">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-190">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-191">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-191">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-192">*t*— przeprowadza test formułą równych wariancji *t*— testowanie przy użyciu studenta *t*— rozkład równych wariancji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-192">The *t*-test with equal variances formula performs a *t*-test using Student's *t*-distribution with equal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-193">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-193">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-194">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-194">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestPaired">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestPaired(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestPaired(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestPaired (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestPaired(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="dc788-195">Wg hipotezy różnią grup danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-195">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="dc788-196">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-196">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-197">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-197">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-198">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-198">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-199">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-199">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-200">*t*-test sparowany formuła wykonuje *t*— testowanie przy użyciu studenta *t*— rozkład próbkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-200">The *t*-test paired formula performs a *t*-test using Student's *t*-distribution with paired samples.</span>
          </span>
          <span data-ttu-id="dc788-201">Jest to przydatne, gdy istnieje obserwowanych fizycznych parowania w próbkach (na przykład, gdy grupy przykładowe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-201">This is useful when there is an observed natural pairing in samples (for example, when a sample group is tested twice).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-202">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-202">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-203">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-203">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestPaired(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TTestUnequalVariances">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances (double hypothesizedMeanDifference, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.TTestResult TTestUnequalVariances(float64 hypothesizedMeanDifference, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.TTestUnequalVariances(System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function TTestUnequalVariances (hypothesizedMeanDifference As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As TTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::TTestResult ^ TTestUnequalVariances(double hypothesizedMeanDifference, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.TTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="dc788-204">Wg hipotezy różnią grup danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-204">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="dc788-205">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-205">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-206">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-206">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-207">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-207">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-208">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-208">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-209">*t*— przeprowadza test formułą nierówne wariancje *t*— testowanie przy użyciu studenta *t*— rozkład nierówne wariancje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-209">The *t*-test with unequal variances formula performs a *t*-test using Student's *t*-distribution with unequal variances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-210">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-210">A <see cref="T:System.Web.UI.DataVisualization.Charting.TTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-211">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-211">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As TTestResult = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, "Series1", "Series2")  
```  
  
```csharp  
TTestResult result = Chart1.DataManipulator.Statistics.TTestUnEqualVariances(0.2, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Variance">
      <MemberSignature Language="C#" Value="public double Variance (string inputSeriesName, bool sampleVariance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 Variance(string inputSeriesName, bool sampleVariance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.Variance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Variance (inputSeriesName As String, sampleVariance As Boolean) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double Variance(System::String ^ inputSeriesName, bool sampleVariance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="sampleVariance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inputSeriesName">
          <span data-ttu-id="dc788-212">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiekt, który przechowuje dane, dla których średnia wartość jest wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-212">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the data for which the mean value is required.</span>
          </span>
        </param>
        <param name="sampleVariance">
          <span data-ttu-id="dc788-213">Określ <see langword="true" /> Jeśli dane są próbce populacji; i <see langword="false" /> Jeśli dane są całej populacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-213">Specify <see langword="true" /> if the data is a sample of a population; and <see langword="false" /> if the data is the entire population.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-214">Wzór odchylenia oblicza wariancję w obrębie grupy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-214">The variance formula calculates the variance within a group of data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-215">Wariancje w obrębie grupy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-215">Variance within the group of data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-216">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-216">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As Double = Chart1.DataManipulator.Statistics.Variance("Series1", false)  
```  
  
```csharp  
TTestResult result = double result = Chart1.DataManipulator.Statistics.Variance("Series1", false);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZTest">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ZTestResult ZTest (double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, string firstInputSeriesName, string secondInputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.ZTestResult ZTest(float64 hypothesizedMeanDifference, float64 varianceFirstGroup, float64 varianceSecondGroup, float64 probability, string firstInputSeriesName, string secondInputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.StatisticFormula.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ZTest (hypothesizedMeanDifference As Double, varianceFirstGroup As Double, varianceSecondGroup As Double, probability As Double, firstInputSeriesName As String, secondInputSeriesName As String) As ZTestResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::ZTestResult ^ ZTest(double hypothesizedMeanDifference, double varianceFirstGroup, double varianceSecondGroup, double probability, System::String ^ firstInputSeriesName, System::String ^ secondInputSeriesName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ZTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hypothesizedMeanDifference" Type="System.Double" />
        <Parameter Name="varianceFirstGroup" Type="System.Double" />
        <Parameter Name="varianceSecondGroup" Type="System.Double" />
        <Parameter Name="probability" Type="System.Double" />
        <Parameter Name="firstInputSeriesName" Type="System.String" />
        <Parameter Name="secondInputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hypothesizedMeanDifference">
          <span data-ttu-id="dc788-217">Wg hipotezy różnią grup danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-217">Hypothesized difference between the means of the data groups.</span>
          </span>
        </param>
        <param name="varianceFirstGroup">
          <span data-ttu-id="dc788-218">Wariancja pierwszej grupy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-218">Variance within the first group of data.</span>
          </span>
        </param>
        <param name="varianceSecondGroup">
          <span data-ttu-id="dc788-219">Wariancja drugiej grupy danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-219">Variance within the second group of data.</span>
          </span>
        </param>
        <param name="probability">
          <span data-ttu-id="dc788-220">Wartości alfa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-220">Alpha value.</span>
          </span>
          <span data-ttu-id="dc788-221">Dozwolony zakres to od 0 do 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-221">The acceptable range is between 0 and 1.</span>
          </span>
        </param>
        <param name="firstInputSeriesName">
          <span data-ttu-id="dc788-222">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane pierwszą grupę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-222">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the first group's data.</span>
          </span>
        </param>
        <param name="secondInputSeriesName">
          <span data-ttu-id="dc788-223">Nazwa <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> obiektu, która przechowuje dane drugiej grupy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-223">Name of the <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.Series" /> object that stores the second group's data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc788-224">Formuła testu Z wykonuje testu przy użyciu rozkładu normalnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-224">The Z-test formula performs a Z-test using normal distribution.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dc788-225">A <see cref="T:System.Web.UI.DataVisualization.Charting.ZTestResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc788-225">A <see cref="T:System.Web.UI.DataVisualization.Charting.ZTestResult" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dc788-226">Poniższy kod przedstawia sposób użycia tej formule.</span><span class="sxs-lookup"><span data-stu-id="dc788-226">The following code demonstrates how to use this formula.</span></span>  
  
```vb  
Dim result As ZTestResult = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, "Series1", "Series2")  
```  
  
```csharp  
ZTestResult result = Chart1.DataManipulator.Statistics.ZTest(0.2, 2.5, 4.5, 0.05, "Series1", "Series2");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>