<Type Name="DataPointCollection" FullName="System.Web.UI.DataVisualization.Charting.DataPointCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6017ee9aac9de6555631ca514aa46133e171ddd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36393934" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataPointCollection : System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPointCollection extends System.Web.UI.DataVisualization.Charting.ChartElementCollection`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPointCollection&#xA;Inherits ChartElementCollection(Of DataPoint)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPointCollection : System::Web::UI::DataVisualization::Charting::ChartElementCollection&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt;" />
  <TypeSignature Language="F#" Value="type DataPointCollection = class&#xA;    inherit ChartElementCollection&lt;DataPoint&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartElementCollection&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="T">System.Web.UI.DataVisualization.Charting.DataPoint</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje kolekcję <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektów.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> Klasy reprezentuje kolekcję <xref:System.Web.UI.DataVisualization.Charting.DataPoint> obiektów, które z kolei zawierają punkty danych, które są częścią <xref:System.Web.UI.DataVisualization.Charting.Series> obiektu.  
  
 Ta klasa kolekcji jest zaimplementowany jako <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.Series> obiektu.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> obiekty mogą być dołączane lub wstawione do kolekcji z wartości X i Y-wartości już określony jako parametry. Należy pamiętać, że są one również dodawane automatycznie podczas serii jest powiązany ze źródłem danych przy użyciu <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> lub <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> metody.  
  
 Punkty danych są kreślone w kolejności występowania w tej kolekcji tylko wtedy, gdy serii, która należy do kolekcji jego <xref:System.Web.UI.DataVisualization.Charting.Series.IsXValueIndexed%2A> ustawioną właściwość `true` (wartość domyślna to `false`), czy wszystkie wartości X dla wszystkich punktów danych są zero. W przeciwnym razie punkty danych są kreślone, przy użyciu wartości X.  
  
 Punkty danych można znajduje się i manipulować, na podstawie maksimum, minimalną lub określony X lub wartości Y, za pomocą przeciążenia `FindMaxValue`, `FindMinValue` lub `FindValue` metod, odpowiednio.  
  
 [DataPointCollection.Count](<xref:System.Collections.ObjectModel.Collection%601.Count%2A>) właściwość wskazuje całkowitą liczbę elementów w kolekcji i zwykle jest używana do znajdowania górna granica kolekcji.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Add (params double[] y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Add(float64[] y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.Add(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (ParamArray y As Double()) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Add(... cli::array &lt;double&gt; ^ y);" />
      <MemberSignature Language="F#" Value="override this.Add : double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.Add y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="y">Wartości Y.</param>
        <summary>Dodaje nowy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu do kolekcji i ustawia wartość Y.</summary>
        <returns>Nowe <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt na koniec kolekcji z określonym wartości X i Y-wartości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Double, yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : double * double -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValue">Wartość Y punktu danych.</param>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt na koniec kolekcji z określonym wartości X i wartości Y.</summary>
        <returns>
          <see langword="integer" /> Reprezentujący liczony od zera indeks, w którym element została umieszczona w kolekcji punktu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda dodaje <xref:System.Web.UI.DataVisualization.Charting.DataPoint> do obiektu <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; zawsze dodać obiektu do końca kolekcji.  
  
 Użyj <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY%2A> przeciążenie metody, jeśli punkty wymagają więcej niż jedną wartość Y.  
  
 Punkty danych nie ma potrzeby wartość X — to znaczy, jeśli tworzysz Wykresy punktowy z systemem innym niż — użyj <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddXY">
      <MemberSignature Language="C#" Value="public int AddXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddXY (xValue As Object, ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddXY : obj * obj[] -&gt; int" Usage="dataPointCollection.AddXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValue">Co najmniej jeden przecinkami wartości, które reprezentują Y-wartości punktu danych.</param>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt na koniec kolekcji z określonym wartości X i Y-wartości.</summary>
        <returns>
          <see langword="integer" /> Wartość, która reprezentuje liczony od zera indeks, w którym element został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda doda <xref:System.Web.UI.DataVisualization.Charting.DataPoint> do obiektu <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; punktu danych jest zawsze dodawane na końcu kolekcji.  
  
 Należy podać co najmniej jednego (1) wartości Y, w przeciwnym razie zwracany wyjątek. Ta metoda sprawdza również <xref:System.Web.UI.DataVisualization.Charting.Series.YValueType%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection> obiekt należy dla tych danych; jeśli określonych jest zbyt wiele wartości Y, zostanie wygenerowany wyjątek.  
  
 Aby <xref:System.DateTime> formatowania mają wpływ, wartość musi być <xref:System.DateTime> obiektu.  
  
 Punkty danych nie ma potrzeby wartość X — to znaczy, jeśli tworzysz Wykresy punktowy z systemem innym niż — użyj <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY%2A> metody zamiast tego  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu do końca kolekcji z określonym Y-wartości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (yValue As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(double yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : double -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="yValue">Wartość Y punktu danych.</param>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu do końca kolekcji z określonej wartości Y.</summary>
        <returns>
          <see langword="integer" /> Reprezentujący liczony od zera indeks, w którym element została umieszczona w kolekcji punktu danych.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda doda <xref:System.Web.UI.DataVisualization.Charting.DataPoint> do obiektu <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; punktu danych jest zawsze dodawane na końcu kolekcji.  
  
 Użyj definicji metody, która pozwala na tablicę wartości Y, jeśli punkty wymagają więcej niż jedną wartość Y.  
  
 Jeśli punkty muszą wartość X — to znaczy, jeśli tworzysz Wykresy punktowy — użyj jednej z `AddXY` metody zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddY">
      <MemberSignature Language="C#" Value="public int AddY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.AddY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddY (ParamArray yValue As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.AddY : obj[] -&gt; int" Usage="dataPointCollection.AddY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Rozdzielana przecinkami lista Y-wartości <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt dodany do kolekcji.</param>
        <summary>Dodaje <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu do końca kolekcji z określonym Y-wartości.</summary>
        <returns>
          <see langword="integer" /> Reprezentujący lokalizacji w liczony od zera indeks, w którym element został wstawiony do kolekcji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda doda <xref:System.Web.UI.DataVisualization.Charting.DataPoint> do obiektu <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>; punktu danych jest zawsze dodawane na końcu kolekcji.  
  
 Należy podać co najmniej jednego (1) wartości Y, w przeciwnym razie zwracany wyjątek. Ta metoda sprawdza również <xref:System.Web.UI.DataVisualization.Charting.Series.ChartType%2A> właściwość <xref:System.Web.UI.DataVisualization.Charting.DataPoint> tych danych należy do obiektu; Jeśli określonych jest zbyt wiele wartości Y, zostanie wygenerowany wyjątek.  
  
 Wartość X będzie zawsze można ustawić na zero (0), co Wykresy punktowy z systemem innym niż. Jeśli chcesz używać wartości X punktów danych, wywoływanie jednego z `AddXY` metody zamiast tego.  
  
 Aby <xref:System.DateTime> formatowania mają wpływ, wartość musi być <xref:System.DateTime> obiektu.  
  
 Można skorzystać z następujących Pełna lista prawidłowe typy .NET Framework, które mogą być używane dla parametrów typu obiektu:  
  
||||  
|-|-|-|  
|String|DataGodzina|Double|  
|Wartość dziesiętna|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind (System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind(class System.Collections.IEnumerable dataSource, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBind (dataSource As IEnumerable, xField As String, yFields As String, otherFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBind(System::Collections::IEnumerable ^ dataSource, System::String ^ xField, System::String ^ yFields, System::String ^ otherFields);" />
      <MemberSignature Language="F#" Value="member this.DataBind : System.Collections.IEnumerable * string * string * string -&gt; unit" Usage="dataPointCollection.DataBind (dataSource, xField, yFields, otherFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">Źródło danych.</param>
        <param name="xField">Nazwa pola wartości X.</param>
        <param name="yFields">Przecinkami nazw pól wartości Y.</param>
        <param name="otherFields">Inne właściwości z powiązaniem reguł, w formacie punktów danych: PointProperty = pola [{Format}] [, PointProperty = pola [{Format}]].  Na przykład: "etykietka narzędzia = cena {C1}, adres Url = podaną".</param>
        <summary>Dane wiąże — wartości X, Y-wartości i wartości właściwości punktów danych, np. etykietka narzędzia lub LabelStyle, ze źródłem danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Źródło danych może być DataReader Ole (SQL), element DataView, zestaw danych, DataTable lub DataRow.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindXY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dane wiąże wartości X i wartości Y punktu danych kolekcji na pierwszej kolumny z określonego źródła danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, params System.Collections.IEnumerable[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, class System.Collections.IEnumerable[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, ParamArray yValues As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, ... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, yValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yValues" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Źródło danych, które będzie dostarczać wartości X punktów danych.</param>
        <param name="yValues">Rozdzielana przecinkami lista Y-wartości <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt dodany do kolekcji.</param>
        <summary>Dane wiąże wartości X i wartości Y punktu danych kolekcji na pierwszej kolumny z określonego źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wiąże wszystkie <xref:System.Web.UI.DataVisualization.Charting.DataPoint> obiekty w <xref:System.Web.UI.DataVisualization.Charting.Series>, i używa oddzielnych źródeł danych X i Y-wartości.  
  
 Pamiętaj, że będzie użyć pierwszej kolumny dostępne w źródle danych, jeśli powiązanie danych do tabeli. Aby powiązać z kolumn innych niż pierwsza kolumna, użyj <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY%2A> metody.  
  
 Można powiązać wiele wartości Y, zapewniając rozdzielana przecinkami lista <xref:System.Collections.Generic.IEnumerable%601> obiektów na `yValues` parametru.  
  
 Jeśli wartości Y nie są dostarczane przez źródło danych lub podano błędną liczbę wartości, zostanie wygenerowany wyjątek.  
  
 Jeśli nie chcesz wyświetlić Wykresy punktowy typu, w których są używane zarówno X i Y, użyj jednej z `DataBindY` metody zamiast tego.  
  
 Oto lista obiektów, których można użyć jako parametru źródła danych:  
  
-   DataView  
  
-   Czytniki danych (SQL, OLE DB)  
  
-   Tablice  
  
-   Listy  
  
-   Wszystkie inne obiekty używające <xref:System.Collections.Generic.IEnumerable%601> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindXY">
      <MemberSignature Language="C#" Value="public void DataBindXY (System.Collections.IEnumerable xValue, string xField, System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindXY(class System.Collections.IEnumerable xValue, string xField, class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindXY (xValue As IEnumerable, xField As String, yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindXY(System::Collections::IEnumerable ^ xValue, System::String ^ xField, System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindXY : System.Collections.IEnumerable * string * System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindXY (xValue, xField, yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Źródło danych, które będzie dostarczać wartości X punktów danych.</param>
        <param name="xField">Nazwa kolumny, które będzie dostarczać wartości X punktów danych.</param>
        <param name="yValue">Rozdzielana przecinkami lista Y-wartości <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiekt dodany do kolekcji.</param>
        <param name="yFields">Rozdzielana przecinkami lista nazw kolumn, które będzie dostarczać wartości Y dla punktów danych. Uwaga przecinka można ją osadzić w nazwie kolumny, za pomocą przecinka dwa razy.</param>
        <summary>Dane wiązania wartości X i Y punktu danych w kolekcji źródeł danych z określonego na określone kolumny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dane wiązania wartości X i Y punktu danych w kolekcji do pierwszej kolumny źródła określone dane.  
  
 Można powiązać z kilku wartości Y, ustawiając `yFields` parametru wiele nazw kolumn. Nazwy kolumn należy oddzielić przecinkami.  
  
 Jeśli wartości Y nie są dostarczane przez źródło danych lub podano błędną liczbę wartości, zostanie wygenerowany wyjątek.  
  
 Jeśli nie chcesz wyświetlić Wykresy punktowy typu, w których są używane zarówno X i Y, użyj jednej z `DataBindY` metody zamiast tego.  
  
 Oto lista obiektów, których można użyć jako parametru źródła danych:  
  
-   DataView  
  
-   Czytniki danych (SQL, OLE DB)  
  
-   Tablice  
  
-   Listy  
  
-   Wszystkie inne obiekty używające <xref:System.Collections.Generic.IEnumerable%601> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataBindY">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dane wiąże Y-wartości kolekcji danych wskazuje pierwszą kolumnę źródła określone dane.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (params System.Collections.IEnumerable[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (ParamArray yValue As IEnumerable())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(... cli::array &lt;System::Collections::IEnumerable ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable[] -&gt; unit" Usage="dataPointCollection.DataBindY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Co najmniej jeden przecinkami <see cref="T:System.Collections.Generic.IEnumerable`1" /> źródeł danych.</param>
        <summary>Dane wiąże Y-wartości kolekcji danych wskazuje pierwszą kolumnę źródła określone dane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wiąże Y-wartości punktów danych w kolekcji do pierwszej kolumny źródła określone dane.  
  
 Aby powiązać wartości Y nie jest pierwsza kolumna dostępne kolumny źródła danych, należy użyć <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> metody.  
  
 Można powiązać wiele wartości Y, określając wiele źródeł danych, przy użyciu `yValue` parametru. Należy pamiętać, że pierwsza kolumna dostępne w poszczególnych źródeł danych będzie służyć do kolejnych wartości Y punktu danych. Na przykład pierwszą kolumnę pierwszego <xref:System.Collections.Generic.IEnumerable%601> źródła danych zostanie powiązany pierwszej wartości Y punktów danych, w pierwszej kolumnie drugiego <xref:System.Collections.Generic.IEnumerable%601> źródło danych będzie powiązać drugiej wartości Y punktu danych i tak dalej.  
  
 Jeśli wartości Y nie są dostarczane przez źródło danych lub podano błędną liczbę wartości, zostanie wygenerowany wyjątek.  
  
 Oto lista obiektów, których można użyć jako parametru źródła danych:  
  
 Poniżej przedstawiono listę obiektów, których można użyć jako źródła danych:  
  
-   DataView  
  
-   Czytniki danych (SQL, OLE DB)  
  
-   Tablice  
  
-   Listy  
  
-   Wszystkie inne obiekty używające <xref:System.Collections.Generic.IEnumerable%601> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindY">
      <MemberSignature Language="C#" Value="public void DataBindY (System.Collections.IEnumerable yValue, string yFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindY(class System.Collections.IEnumerable yValue, string yFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DataBindY (yValue As IEnumerable, yFields As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DataBindY(System::Collections::IEnumerable ^ yValue, System::String ^ yFields);" />
      <MemberSignature Language="F#" Value="member this.DataBindY : System.Collections.IEnumerable * string -&gt; unit" Usage="dataPointCollection.DataBindY (yValue, yFields)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="yFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="yValue">
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> Obiektu źródła danych, która zapewnia Y-wartości.</param>
        <param name="yFields">Źródła danych, pola, do którego należy powiązać punktów danych. Uwaga przecinka można ją osadzić w nazwie kolumny, za pomocą przecinka dwa razy.</param>
        <summary>Dane wiąże Y-wartości punktów danych na określone kolumny z określonego źródła danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wiąże wartości Y punktu danych w kolekcji określone pola źródła danych (s).  
  
 Aby powiązać tylko pierwsze pole w źródle danych, należy użyć <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection.DataBindY%2A> metody.  
  
 Można powiązać wiele pól, ustawiając `yFields` parametr wiele nazw pól, które są rozdzielone przecinkami. Należy pamiętać, że pierwsze pole zostanie nadana wartość Y pierwszego punktu danych drugie pole o nazwie będzie służyć do drugiej wartości Y punktu danych i tak dalej.  
  
 Wartości Y nie są dostarczane przez źródło danych, czy podano błędną liczbę wartości, zostanie zgłoszony wyjątek.  
  
 Poniżej przedstawiono listę obiektów, których można użyć jako źródła danych:  
  
-   DataView  
  
-   Czytniki danych (SQL, OLE DB)  
  
-   Tablice  
  
-   Listy  
  
-   Wszystkie inne obiekty używające <xref:System.Collections.Generic.IEnumerable%601> interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajdź wszystkie punkty danych, które jest równa określonej wartości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllByValue (valueToFind As Double) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <summary>Znajdź wszystkie punkty danych, które jest równa określonej wartości.</summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> Interfejs, który reprezentuje modułu wyliczającego pasującego punktów danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <summary>Znajduje wszystkie punkty danych, które jest równa określonej wartości.</summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> Interfejs, który reprezentuje modułu wyliczającego pasującego punktów danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAllByValue">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; FindAllByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindAllByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function FindAllByValue (valueToFind As Double, useValue As String, startIndex As Integer) As IEnumerable(Of DataPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::DataVisualization::Charting::DataPoint ^&gt; ^ FindAllByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindAllByValue : double * string * int -&gt; seq&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" Usage="dataPointCollection.FindAllByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.DataVisualization.Charting.DataPointCollection/&lt;FindAllByValue&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <param name="startIndex">Lokalizacja indeks punktu danych, aby rozpocząć wyszukiwanie od.</param>
        <summary>Znajduje wszystkie punkty danych, które jest równa określonej wartości, zaczynając od określonej lokalizacji indeksu.</summary>
        <returns>
          <see cref="T:System.Collections.Generic.IEnumerable`1" /> Interfejs, który reprezentuje modułu wyliczającego pasującego punktów danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje pierwszy punkt danych jest równa określonej wartości.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue valueToFind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <summary>Znajduje pierwszy punkt danych jest równa określonej wartości.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Odpowiadającego określona wartość lub <see langword="null" /> w przypadku braku dopasowania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <summary>Znajduje pierwszy punkt danych jest równa określonej wartości.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Odpowiadającego określona wartość lub <see langword="null" /> w przypadku braku dopasowania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindByValue (double valueToFind, string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindByValue(float64 valueToFind, string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindByValue(System.Double,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindByValue (valueToFind As Double, useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindByValue(double valueToFind, System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindByValue : double * string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindByValue (valueToFind, useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToFind" Type="System.Double" />
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="valueToFind">Wartość, aby znaleźć punktu danych.</param>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <param name="startIndex">Lokalizacja indeks punktu danych, aby rozpocząć wyszukiwanie od.</param>
        <summary>Znajduje pierwszy punkt danych, która jest równa określonej wartości, zaczynając od określonej lokalizacji indeksu.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Odpowiadającego określona wartość lub <see langword="null" /> w przypadku braku dopasowania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMaxByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Umożliwia znalezienie z maksymalną wartość punktu danych.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Umożliwia znalezienie z maksymalną wartość punktu danych.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Obiektu o maksymalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <summary>Wyszukuje wartość punktu danych z maksymalną wartość.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Obiektu o maksymalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMaxByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMaxByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMaxByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMaxByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMaxByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMaxByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMaxByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <param name="startIndex">Lokalizacja indeks punktu danych, aby rozpocząć wyszukiwanie od.</param>
        <summary>Znajduje punkt danych o maksymalnej wartości, zaczynając od określonej lokalizacji indeksu.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Obiektu o maksymalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindMinByValue">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Znajduje punkt danych, wartość minimalna.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue();" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Znajduje punkt danych, wartość minimalna.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Obiektu o minimalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue useValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <summary>Znajduje punkt danych, wartość minimalna.</summary>
        <returns>A <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu o minimalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMinByValue">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue (string useValue, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint FindMinByValue(string useValue, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.FindMinByValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindMinByValue (useValue As String, startIndex As Integer) As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ FindMinByValue(System::String ^ useValue, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.FindMinByValue : string * int -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPointCollection.FindMinByValue (useValue, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="useValue">Wartość do użycia (X, Y1, Y2...) punktu danych.</param>
        <param name="startIndex">Lokalizacja indeks punktu danych, aby rozpocząć wyszukiwanie od.</param>
        <summary>Znajduje punkt danych o minimalnej wartości, zaczynając od określonej lokalizacji indeksu.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> Obiektu o minimalnej wartości.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertXY">
      <MemberSignature Language="C#" Value="public void InsertXY (int index, object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertXY(int32 index, object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertXY (index As Integer, xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertXY(int index, System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertXY : int * obj * obj[] -&gt; unit" Usage="dataPointCollection.InsertXY (index, xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">Indeks, po upływie którego będzie można wstawić punktu danych.</param>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValue">Rozdzielana przecinkami lista wartości Y punktu danych.</param>
        <summary>Wstawia punkt danych, z określoną wartość X i co najmniej jeden określone wartości Y.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertY">
      <MemberSignature Language="C#" Value="public void InsertY (int index, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertY(int32 index, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPointCollection.InsertY(System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertY (index As Integer, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertY(int index, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.InsertY : int * obj[] -&gt; unit" Usage="dataPointCollection.InsertY (index, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">Indeks, po upływie którego będzie można wstawić punktu danych.</param>
        <param name="yValue">Rozdzielana przecinkami lista wartości Y punktu danych.</param>
        <summary>Wstawia z jednego lub więcej określonych wartości Y punktu danych.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>