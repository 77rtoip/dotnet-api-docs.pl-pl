<Type Name="DataPoint" FullName="System.Web.UI.DataVisualization.Charting.DataPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28e079ddafa78879446be931e4a577801a0db00d" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53474050" /></Metadata><TypeSignature Language="C#" Value="public class DataPoint : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPoint extends System.Web.UI.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class DataPoint&#xA;Inherits DataPointCustomProperties" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataPoint : System::Web::UI::DataVisualization::Charting::DataPointCustomProperties" />
  <TypeSignature Language="F#" Value="type DataPoint = class&#xA;    inherit DataPointCustomProperties" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("YValues")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.DataPointConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje punkt danych, która jest przechowywana w <see cref="T:System.Web.UI.DataVisualization.Charting.DataPointCollection" /> klasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint> Właściwości magazyny klasy skojarzone z danych, a także dane wartości. Na przykład punkt danych ma wartość, ale również ma właściwość color, właściwość obrazu tła, właściwość gradientu tła i tak dalej. Aby uzyskać więcej informacji na temat danych punktu właściwości, zobacz <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties> temat klasy.  
  
 Każdy punkt danych składa się z wartości X i co najmniej jedną wartość Y. Wartość X może być równa zero, lub możesz ustawić jawnie.  
  
 Tylko jedną wartość Y na punkt jest wymagana dla wszystkich typów wykresów, z wyjątkiem wykresów bąbelkowych, Świecowy i zasobów. Te typy wykresów wymagają więcej niż jedną wartość Y, ponieważ jeden punkt danych składa się z wielu wartości. Na przykład, do wykreślenia jedną kolumnę wykres giełdowy cztery wartości są wymagane: wysoki, niski, otwierających i zamykających wartości.  
  
 Dane mogą być dodane w dowolnym czasie projektowania lub wykonawczego; Umożliwia także powiązanie danych w czasie wykonywania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor może służyć do tworzenia i inicjuje nowe wystąpienie klasy <xref:System.Web.UI.DataVisualization.Charting.DataPoint> klasy.  
  
 Jednak zdecydowanie zaleca się zamiast tego dodać punkty danych wykonywania użycie <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(System::Web::UI::DataVisualization::Charting::Series ^ series);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : System.Web.UI.DataVisualization.Charting.Series -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint series" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series"><see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> Obiekt, który należy punktu danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy i zestawy <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> , której należy punkt danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor może służyć do tworzenia i inicjuje nowe wystąpienie klasy <xref:System.Web.UI.DataVisualization.Charting.DataPoint> klasy.  
  
 Jednak zdecydowanie zaleca się zamiast tego dodać punkty danych wykonywania użycie <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64 yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValue As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, double yValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValue">Wartość Y punktu danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy z określonym X i Y-wartość.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor może służyć do tworzenia i inicjuje nowe wystąpienie klasy <xref:System.Web.UI.DataVisualization.Charting.DataPoint> klasy.  
  
 Jednak zdecydowanie zaleca się zamiast tego dodać punkty danych wykonywania użycie <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, double[] yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, float64[] yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, cli::array &lt;double&gt; ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * double[] -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X.</param>
        <param name="yValues">Tablica wartości Y.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy o określonej wartości X i tablicę wartości Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor może służyć do tworzenia i inicjuje nowe wystąpienie klasy <xref:System.Web.UI.DataVisualization.Charting.DataPoint> klasy.  
  
 Jednak zdecydowanie zaleca się zamiast tego dodać punkty danych wykonywania użycie <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPoint (double xValue, string yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 xValue, string yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xValue As Double, yValues As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataPoint(double xValue, System::String ^ yValues);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataVisualization.Charting.DataPoint : double * string -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="new System.Web.UI.DataVisualization.Charting.DataPoint (xValue, yValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xValue" Type="System.Double" />
        <Parameter Name="yValues" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValues">A <see langword="string" /> wartości Y rozdzielonych przecinkami.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> klasy o określonej wartości X i Y.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor może służyć do tworzenia i inicjuje nowe wystąpienie klasy <xref:System.Web.UI.DataVisualization.Charting.DataPoint> klasy.  
  
 Jednak zdecydowanie zaleca się zamiast tego dodać punkty danych wykonywania użycie <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> właściwości kolekcji.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.DataPoint Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.DataVisualization.Charting.DataPoint Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DataPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataVisualization::Charting::DataPoint ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Web.UI.DataVisualization.Charting.DataPoint" Usage="dataPoint.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.DataPoint</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca dokładną kopię punktu danych.</summary>
        <returns>Sklonowany <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.DataVisualization.Charting.DataPoint.Clone%2A> metodę, aby uzyskać dokładną kopię punktu danych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueByName">
      <MemberSignature Language="C#" Value="public double GetValueByName (string valueName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetValueByName(string valueName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValueByName (valueName As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetValueByName(System::String ^ valueName);" />
      <MemberSignature Language="F#" Value="member this.GetValueByName : string -&gt; double" Usage="dataPoint.GetValueByName valueName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valueName">Punkt nazwy wartości. X, Y, Y2...</param>
        <summary>Zwraca punkt danych, który jest określony przez jego nazwę. To jest funkcja pomocnika.</summary>
        <returns>A <see langword="string" /> wartość, która reprezentuje punkt danych.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia flagę wskazującą, czy punkt danych jest oznaczony jako pusta.</summary>
        <value><see langword="true" /> Jeśli punkt jest oznaczony jako pusty punkt; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustaw tę właściwość na `true` do oznaczenia punktu danych, jak pusty punkt.  
  
 Można również jedną z `InsertEmptyPoints` metody <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> klasy może służyć do oznaczania brakujące dane jako puste punkty.  
  
 <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> Właściwość określa, jak pusty punkty są wyświetlane.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę punktu danych.</summary>
        <value>A <see langword="string" /> wartość, która reprezentuje nazwę punktu danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueXY">
      <MemberSignature Language="C#" Value="public void SetValueXY (object xValue, params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueXY(object xValue, object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueXY (xValue As Object, ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueXY(System::Object ^ xValue, ... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueXY : obj * obj[] -&gt; unit" Usage="dataPoint.SetValueXY (xValue, yValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xValue" Type="System.Object" />
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="xValue">Wartość X punktu danych.</param>
        <param name="yValue">Lista wartości Y punktu danych.</param>
        <summary>Ustawia wartość X i jeden lub więcej wartości Y punktu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY%2A> metodę, aby ustawić wartości punktu danych w czasie wykonywania.  
  
 Należy pamiętać, że jeśli wartość X jest ustawiona na wartość inną niż zero (0), wykres punktowy zostanie wygenerowany. Aby uzyskać więcej informacji, zobacz sekcję Uwagi <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> właściwości.  
  
 Zapoznaj się z poniższą tabelą, aby uzyskać pełną listę prawidłowe typy .NET Framework, które mogą być używane dla parametru typu obiektu.  
  
||||  
|-|-|-|  
|String|DataGodzina|Double|  
|Wartość dziesiętna|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueY">
      <MemberSignature Language="C#" Value="public void SetValueY (params object[] yValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueY(object[] yValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValueY (ParamArray yValue As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueY(... cli::array &lt;System::Object ^&gt; ^ yValue);" />
      <MemberSignature Language="F#" Value="member this.SetValueY : obj[] -&gt; unit" Usage="dataPoint.SetValueY yValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="yValue" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="yValue">Y-wartości <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> obiektu w kolekcji. Sformatowane jako jedną lub więcej wartości oddzielonych przecinkami.</param>
        <summary>Ustawia Y-wartości pojedynczego punktu danych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY%2A> Właściwość jest używana do ustawiania Y-wartości danych punktu w czasie wykonywania.  
  
 Tylko jedną wartość Y na punkt jest wymagana dla wszystkich typów wykresów bąbelkowych, Świecowy i podstawowe wykresy. Te typy wykresów wymagają więcej niż jedną wartość Y, ponieważ jeden punkt danych składa się z wielu wartości. Na przykład, do wykreślenia jedną kolumnę wykres giełdowy cztery wartości są wymagane: wysoki, niski, otwierających i zamykających wartości.  
  
 Ta właściwość zwraca tablicę `double` wartości, gdy służy do pobierania wielu wartości Y.  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> Właściwość określa maksymalną liczbę wartości Y, które wskazuje wszystkie dane, w <xref:System.Web.UI.DataVisualization.Charting.Series> może mieć. Jeśli określisz więcej niż dopuszczalna liczba wartości Y, zostanie wygenerowany wyjątek.  
>   
>  Można znaleźć w poniższej tabeli, aby uzyskać pełną listę prawidłowe typy .NET Framework, które mogą być używane dla parametru typu obiektu:  
  
||||  
|-|-|-|  
|String|DataGodzina|Double|  
|Wartość dziesiętna|Single|Int32|  
|UInt32|Int64|UInt64|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValue">
      <MemberSignature Language="C#" Value="public double XValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 XValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberSignature Language="VB.NET" Value="Public Property XValue As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double XValue { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.XValue : double with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.XValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Double), "0.0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DataPointValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość X punktu danych.</summary>
        <value>A <see langword="double" /> reprezentujący wartość X punktu danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wszystkie typy wykresów mogą być wyświetlane jako wykresy punktowe, albo lub wykresy punktowe innych, ponieważ można ustawić zarówno wartości X i Y. Ustawienie wartości X spowoduje wykres punktowy, a nie ustawienie tej właściwości — która jest równoważna z ustawieniem dla niego od zera. - spowoduje punktowym —. Na przykład aby narysować punktu typ wykresu, należy dodać punktów danych, które mają wartości X o wartości zero. Aby wyświetlić wykres punktowy tradycyjnych, Dodaj punkty danych, które mają wartości X różną od zera.  
  
 Wartości X punktów danych nie są wymagane do skonfigurowania. Jeśli nie są ustawione, punkty danych są oznaczane na wykresach sekwencyjnie, używając ich wartości indeksu z <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValues">
      <MemberSignature Language="C#" Value="public double[] YValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64[] YValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberSignature Language="VB.NET" Value="Public Property YValues As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;double&gt; ^ YValues { cli::array &lt;double&gt; ^ get(); void set(cli::array &lt;double&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.YValues : double[] with get, set" Usage="System.Web.UI.DataVisualization.Charting.DataPoint.YValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor(typeof(System.Drawing.Design.UITypeEditor), typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.DoubleArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Y-wartości punktu danych.</summary>
        <value>Tablica <see langword="double" /> wartości, które reprezentują Y-wartości punktu danych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> Właściwość jest używana do ustawiania wartości Y punktu danych.  
  
 Tylko jedną wartość Y na punkt jest wymagana dla wszystkich typów wykresów, z wyjątkiem wykresów bąbelkowych, Świecowy i zasobów. Te typy wykresów wymagają więcej niż jedną wartość Y, ponieważ jeden punkt danych składa się z wielu wartości. Na przykład, do wykreślenia jedną kolumnę wykres giełdowy cztery wartości są wymagane: wysoki, niski, otwierających i zamykających wartości.  
  
 <xref:System.Web.UI.DataVisualization.Charting.DataPoint.YValues%2A> Właściwość zwraca tablicę `double` wartości, gdy służy do pobierania wartości Y.  
  
 > [!IMPORTANT]
 > <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> Właściwość określa maksymalną liczbę wartości Y, które wskazuje wszystkie dane, w <xref:System.Web.UI.DataVisualization.Charting.Series> może mieć. Jeśli określisz więcej niż dopuszczalna liczba wartości Y, zostanie wygenerowany wyjątek.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>