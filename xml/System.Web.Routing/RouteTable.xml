<Type Name="RouteTable" FullName="System.Web.Routing.RouteTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15cb4c22d889ccf0de855db101580c880abf76b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30581935" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteTable" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteTable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Przechowuje tras adresów URL dla aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trasy są wzorców adresów URL, które są używane do przetwarzania żądań i można dynamicznie utworzyć adresów URL. <xref:System.Web.Routing.RouteTable.Routes%2A> Właściwość jest `static` właściwości (`Shared` w języku Visual Basic) zawierający wszystkie trasy w aplikacji, które są używane do określania, jak żądanie adresu URL jest dopasowywany do klasy, która obsługuje żądania. Aby określić trasy, należy dodać definicję trasy do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości. Zwykle, możesz dodać trasy do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości z obsługi zdarzeń dla `Application_Start` zdarzenia w pliku Global.asax.  
  
 Gdy aplikacja ASP.NET obsługuje żądania, aplikacja iteruje po kolekcji tras w <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości można znaleźć trasy, która odpowiada format adresu URL żądania. Kolejność trasy, które dodajesz do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości jest ważna, ponieważ aplikacja używa pierwszego trasy, która znajduje się on w kolekcji, który odpowiada adresowi URL.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób dodawania <xref:System.Web.Routing.Route> do obiektu <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.RouteTable" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Routes">
      <MemberSignature Language="C#" Value="public static System.Web.Routing.RouteCollection Routes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Routing.RouteCollection Routes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteTable.Routes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Routes As RouteCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Routing::RouteCollection ^ Routes { System::Web::Routing::RouteCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję obiektów pochodzących od <see cref="T:System.Web.Routing.RouteBase" /> klasy.</summary>
        <value>Obiekt, który zawiera wszystkie trasy w kolekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Trasy są wzorców adresów URL, które są używane do przetwarzania żądań i można dynamicznie utworzyć adresów URL. <xref:System.Web.Routing.RouteTable.Routes%2A> Właściwość jest `static` właściwości (`Shared` w języku Visual Basic) reprezentujący wszystkie obiekty, które są używane do określania, jak żądanie adresu URL jest dopasowywany do klasy, która obsługuje żądania. Aby określić trasy, należy dodać definicję trasy do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości. Zwykle, możesz dodać trasy do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości z obsługi zdarzeń dla `Application_Start` zdarzenia w pliku Global.asax.  
  
 Gdy aplikacja ASP.NET obsługuje żądania, aplikacja iteruje po kolekcji tras w <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości można znaleźć trasy, która odpowiada format adresu URL żądania. Kolejność trasy, które dodajesz do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości jest ważna, ponieważ aplikacja używa pierwszego trasy w kolekcji, który odpowiada adresowi URL.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób dodawania <xref:System.Web.Routing.Route> do obiektu <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>