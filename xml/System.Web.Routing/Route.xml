<Type Name="Route" FullName="System.Web.Routing.Route">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="51c3b15480a9033d4f7a3a7e0c806e2b85ec96c4" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597680" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Route : System.Web.Routing.RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Route extends System.Web.Routing.RouteBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.Route" />
  <TypeSignature Language="VB.NET" Value="Public Class Route&#xA;Inherits RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Route : System::Web::Routing::RouteBase" />
  <TypeSignature Language="F#" Value="type Route = class&#xA;    inherit RouteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.RouteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia właściwości i metod do definiowania trasy i uzyskiwania informacji na temat trasy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route> Klasy można określić sposób przetwarzania routingu w aplikacji ASP.NET. Możesz utworzyć <xref:System.Web.Routing.Route> obiekt dla każdego wzorca adresu URL, który ma być mapowany do klasy, która może obsłużyć żądań odpowiada tego wzorca. Następnie dodaj trasy do <xref:System.Web.Routing.RouteTable.Routes%2A> kolekcji. Gdy aplikacja odbiera żądanie, iteruje proces routingu platformy ASP.NET trasy w <xref:System.Web.Routing.RouteTable.Routes%2A> kolekcji można znaleźć pierwszego trasy, która odpowiada wzorcowi URL.  
  
 Ustaw <xref:System.Web.Routing.Route.Url%2A> właściwości do wzorca adresu URL. Wzorzec URL składa się z segmentów, które pochodzą od nazwy aplikacji w żądaniu HTTP. Na przykład w adresie URL `http://www.contoso.com/products/show/beverages`, wzorzec dotyczy `products/show/beverages`. Wzorzec z trzema segmenty, takich jak `{controller}/{action}/{id}`, zgodny z adresem URL `http://www.contoso.com/products/show/beverages`. Każdy z segmentów rozdzielana wyłącznie `/` znaków. Jeśli segment jest ujęta w nawiasy klamrowe (`{` i `}`), segmentu jest określany jako parametr adresu URL. Proces routingu platformy ASP.NET pobiera wartość z żądania i przypisuje go do parametru adresu URL. W poprzednim przykładzie parametr adresu URL `action` jest przypisywana wartość `show`. Jeśli segmentu nie jest ujęta w nawiasy klamrowe, wartość jest traktowane jak wartość literału.  
  
 Ustaw <xref:System.Web.Routing.Route.Defaults%2A> właściwości <xref:System.Web.Routing.RouteValueDictionary> obiekt, który zawiera wartości, które są używane, jeśli brak parametru z adresu URL lub można ustawić dodatkowe wartości, które nie mają zdefiniowane w adresie URL. Ustaw <xref:System.Web.Routing.Route.Constraints%2A> właściwości <xref:System.Web.Routing.RouteValueDictionary> obiekt, który zawiera wartości, które są albo wyrażenia regularne lub <xref:System.Web.Routing.IRouteConstraint> obiektów. Te wartości są używane do ustalenia, czy wartość parametru jest nieprawidłowa.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.Routing.Route> obiektu i dodać go do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.Route" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec URL trasy.</param>
        <param name="routeHandler">Obiekt, który przetwarza żądania dla trasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.Route" /> klasy przy użyciu określonej klasy wzorca i obsługi adresu URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.Routing.Route> obiektu i dodać go do <xref:System.Web.Routing.RouteTable.Routes%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec URL trasy.</param>
        <param name="defaults">Wartości, które mają być używane dla wszystkich parametrów, których nie ma w adresie URL.</param>
        <param name="routeHandler">Obiekt, który przetwarza żądania dla trasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.Route" /> klasy przy użyciu określonego wzorca adresu URL, wartości domyślne parametrów i klasa obsługi.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, constraints, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec URL trasy.</param>
        <param name="defaults">Wartości, które mają być używane, jeśli adres URL nie zawiera wszystkich parametrów.</param>
        <param name="constraints">Wyrażenie regularne określające prawidłowe wartości parametru URL.</param>
        <param name="routeHandler">Obiekt, który przetwarza żądania dla trasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.Route" /> klasy przy użyciu określonego wzorca adresu URL, domyślne wartości parametrów, ograniczenia i klasa obsługi.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, constraints, dataTokens, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Wzorzec URL trasy.</param>
        <param name="defaults">Wartości, które mają być używane, jeśli adres URL nie zawiera wszystkich parametrów.</param>
        <param name="constraints">Wyrażenie regularne określające prawidłowe wartości parametru URL.</param>
        <param name="dataTokens">Wartości niestandardowe przekazywane do programu obsługi trasy, ale które nie są używane do określania, czy trasa odpowiada określonemu wzorcowi URL. Te wartości są przekazywane do programu obsługi trasy, gdzie są używane do przetwarzania żądania.</param>
        <param name="routeHandler">Obiekt, który przetwarza żądania dla trasy.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.Routing.Route" /> klasy przy użyciu określonego wzorca adresu URL, domyślne wartości parametrów, ograniczenia, niestandardowe wartości i klasa obsługi.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.DataTokens" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Constraints { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia Słownik wyrażeń określających prawidłowe wartości parametru URL.</summary>
        <value>Obiekt, który zawiera nazwy parametrów i wyrażenia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Constraints%2A> Właściwości umożliwia ograniczenie dopuszczalne wartości dla parametru adresu URL, który jest przetwarzany przez trasę. Należy przypisać <xref:System.Web.Routing.RouteValueDictionary> do obiektu <xref:System.Web.Routing.Route.Constraints%2A> właściwości. Każdy element <xref:System.Web.Routing.RouteValueDictionary> obiektu zawiera nazwę parametru i jedną z następujących czynności:  
  
-   Ciąg, który definiuje wyrażenie regularne. Wyrażenie regularne jest rozróżniana wielkość liter.  
  
-   Obiekt, który implementuje <xref:System.Web.Routing.IRouteConstraint> interfejsu i który zawiera <xref:System.Web.Routing.IRouteConstraint.Match%2A> metody.  
  
 <xref:System.Web.Routing.HttpMethodConstraint> Klasa implementuje <xref:System.Web.Routing.IRouteConstraint> interfejsu. Może zawierać wystąpienia <xref:System.Web.Routing.HttpMethodConstraint> klasy jako ograniczenie, aby określić poleceń HTTP, które są dozwolone dla danej trasy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.Routing.Route> obiektu i ustawić <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, i <xref:System.Web.Routing.Route.Defaults%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Web.Routing.Route> którego <xref:System.Web.Routing.Route.Constraints%2A> właściwość zawiera parametr o nazwie `httpMethod` z wystąpieniem <xref:System.Web.Routing.HttpMethodConstraint> klasy wartości.  
  
 [!code-csharp[System.Web.Routing.Route.Constraints#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Constraints#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTokens">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary DataTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary DataTokens" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.DataTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTokens As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ DataTokens { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTokens : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.DataTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartości niestandardowe przekazywane do programu obsługi trasy, ale które nie są używane do określania, czy trasa odpowiada wzorcowi URL.</summary>
        <value>Obiekt zawierający wartości niestandardowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Web.Routing.RouteData.DataTokens%2A> właściwości do pobrania lub przypisania wartości skojarzone z trasą, które nie są używane do określania, czy trasa odpowiada wzorcowi URL. Te wartości są przekazywane do programu obsługi trasy, gdzie są używane do przetwarzania żądania.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.Routing.Route> obiektu i ustawić <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, i <xref:System.Web.Routing.Route.Defaults%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Defaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Defaults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public Property Defaults As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Defaults { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartości do użycia, jeśli adres URL nie zawiera wszystkich parametrów.</summary>
        <value>Obiekt, który zawiera nazwy parametrów i wartości domyślnych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Defaults%2A> Właściwość umożliwia ustaw wartość parametru adresu URL, jeśli adres URL nie zawiera segment tego parametru. Należy przypisać <xref:System.Web.Routing.RouteValueDictionary> do obiektu <xref:System.Web.Routing.Route.Defaults%2A> właściwości. Każdy element <xref:System.Web.Routing.RouteValueDictionary> obiektu zawiera nazwę parametru i wartości do użycia, jeśli brakuje parametru.  
  
 Może zawierać wartości domyślnej dla parametru, który nie jest zdefiniowany w <xref:System.Web.Routing.Route.Url%2A> właściwość jako segment. Gdy proces routingu platformy ASP.NET obsługuje żądania, to wartość domyślna zawsze są przekazywane do programu obsługi trasy. Podczas konstruowania adresu URL i zawierać wartość domyślnego parametru, który nie jest zdefiniowany jako segment, trasy tylko uznaje dopasowania, jeśli podane wartości jest zgodna z wartością domyślną dla trasy.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób tworzenia <xref:System.Web.Routing.Route> obiektu i ustawić <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, i <xref:System.Web.Routing.Route.Defaults%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Web.Routing.Route> którego <xref:System.Web.Routing.Route.Defaults%2A> właściwość zawiera parametr, który nie jest częścią wzorca w <xref:System.Web.Routing.Route.Url%2A> właściwości.  
  
 [!code-csharp[System.Web.Routing.Route.Defaults#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Defaults#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="override this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="route.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Obiekt hermetyzujący informacje o żądaniu HTTP.</param>
        <summary>Zwraca informacje o trasie.</summary>
        <returns>Obiekt zawierający wartości z definicji trasy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="route.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Obiekt, który hermetyzuje informacje o trasie.</param>
        <param name="values">Obiekt zawierający parametry trasy.</param>
        <summary>Zwraca informacje o adresie URL skojarzonym z trasą.</summary>
        <returns>Obiekt, który zawiera informacje o adresie URL skojarzonym z trasą.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessConstraint">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessConstraint (System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessConstraint(class System.Web.HttpContextBase httpContext, object constraint, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessConstraint(System::Web::HttpContextBase ^ httpContext, System::Object ^ constraint, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member ProcessConstraint : System.Web.HttpContextBase * obj * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool&#xA;override this.ProcessConstraint : System.Web.HttpContextBase * obj * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="route.ProcessConstraint (httpContext, constraint, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="constraint" Type="System.Object" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">Obiekt hermetyzujący informacje o żądaniu HTTP.</param>
        <param name="constraint">Wyrażenie regularne lub obiekt, aby używać do testowania <c>parameterName</c>.</param>
        <param name="parameterName">Nazwa parametru do testowania.</param>
        <param name="values">Wartości do testowania.</param>
        <param name="routeDirection">Wartość, która określa, czy adres URL routingu jest przetwarzania przychodzącego żądania lub konstruuje adres URL.</param>
        <summary>Określa, czy wartość parametru odpowiada ograniczenia dla tego parametru.</summary>
        <returns>
          <see langword="true" /> Jeśli wartość parametru pasuje do ograniczenia; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="constraint" /> nie jest ciągiem, który zawiera wyrażenie regularne.</exception>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.Routing.IRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.IRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As IRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::IRouteHandler ^ RouteHandler { System::Web::Routing::IRouteHandler ^ get(); void set(System::Web::Routing::IRouteHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteHandler : System.Web.Routing.IRouteHandler with get, set" Usage="System.Web.Routing.Route.RouteHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.IRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt, który przetwarza żądania dla trasy.</summary>
        <value>Obiekt przetwarzający żądanie.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Routing.Route.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wzorzec URL trasy.</summary>
        <value>Wzorzec do dopasowania trasy do adresu URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po przypisaniu wartość <xref:System.Web.Routing.Route.Url%2A> właściwość `/` znak jest interpretowany jako ogranicznik podczas analizowania adresu URL. Użyj nawiasów klamrowych (`{}`) do zdefiniowania zmiennej, która jest określana jako *parametr adresu URL*. Wartość z pasujących segment w adresie URL jest przypisany do parametru adresu URL. Wartości w <xref:System.Web.Routing.Route.Url%2A> właściwości, które nie są ujęte w nawiasy klamrowe są traktowane jako stałe literałów.  
  
 `?` Znak nie jest dozwolona w <xref:System.Web.Routing.Route.Url%2A> właściwości. Każdy z segmentów adresu URL muszą być oddzielone ogranicznik lub literałem stałej. Można użyć `{{` lub `}}` jako Usuń znaki znak nawiasu klamrowego.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób ustawiania <xref:System.Web.Routing.Route.Url%2A> właściwości w konstruktorze klasy. Wzorzec zawiera wartość literału "Kategorii" pierwszy segment i parametrów następne dwa segmenty adresu URL.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Jedną z następujących czynności:-rozpoczyna się od wartości <c> ~ </c> lub <c> / </c>.  -Wartość zawiera <c>?</c> znak.  — Parametr wychwytywania nie jest ostatni.</exception>
        <exception cref="T:System.Exception">Segmenty adresu URL nie są rozdzielone ogranicznik lub literałem stałej.</exception>
      </Docs>
    </Member>
  </Members>
</Type>