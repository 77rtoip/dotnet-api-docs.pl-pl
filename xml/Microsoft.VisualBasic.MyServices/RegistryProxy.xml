<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9a78587e6289c8eb39f60075f4ef8cb5c0cceb40" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30434757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Udostępnia właściwości i metody w rejestrze.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby korzystać z tych właściwości, musi mieć uprawnienia odczytu i zapisu z <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. Każdy kod uruchomiona z pełnym zaufaniem (w obszarze domyślnych zasad zabezpieczeń jest dowolny kod zainstalowana na lokalnym dysku twardym użytkownika) ma niezbędne uprawnienia dostępu do rejestru. Aby uzyskać więcej informacji, zobacz <xref:System.Security.Permissions.RegistryPermission> klasy.  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczyt danych z rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Ten przykład odczytuje wartość `Name` z `HKEY_CURRENT_USER\Software\MyApp` i wyświetla je w oknie komunikatu.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` przede wszystkim jest używany do przechowywania informacji na temat skojarzeń plików w systemie Windows.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy udzielić tylko uprawnień trzeba wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera nazw podkluczy dla `ClassesRoot` klucza rejestru i dodaje je do `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 W tym przykładzie wymaga `ListBox` o nazwie `ListBox1` w projekcie.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` przede wszystkim jest używany do przechowywania ustawień dla urządzeń na komputerze.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy udzielić tylko uprawnień trzeba wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie tworzy podklucz `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_CURRENT_USER" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` przede wszystkim jest używany do przechowywania ustawień użytkownika, takich jak kolorów i czcionek, w systemie Windows. Klucz różnią się w zależności od użytkownika.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy przyznać najmniejsze uprawnienia niezbędne do wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie usuwa podklucz `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_DYNDATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` Służy do przechowywania danych rejestru dynamicznych, takie jak używany przez sterowniki urządzeń wirtualnych i jest obsługiwany tylko w systemach Windows 95/98. W systemach z systemem innym niż — Windows 95/98 wywoływania żadnych metod klucza zwróconego przez `Registry.DynData`, takich jak `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`, itd., zgłosi <xref:System.IO.IOException>.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy przyznać najmniejsze uprawnienia niezbędne do wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie usuwa drzewa podklucza `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Klucz, w którym ma być pobrana wartość. Wymagany.</param>
        <param name="valueName">
          <see langword="String" />. Wartość do pobrania. Wymagany.</param>
        <param name="defaultValue">
          <see langword="Object" />. Wartość domyślna ma być dostarczona, jeśli wartość nie istnieje. Wymagany.</param>
        <summary>Pobiera wartość z klucza rejestru.</summary>
        <returns>Pobiera wartość z klucza rejestru.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` nie jest rozróżniana wielkość liter.  
  
 Klucz rejestru może zawierać jedną wartość, która nie jest skojarzona z żadną nazwą. Gdy ta nienazwana wartość jest wyświetlana w Edytorze rejestru, zamiast nazwy pojawia się ciąg „(Domyślna)”. Aby pobrać to nienazwane wartość, określ wartość null lub pustego ciągu ("") dla `valueName`.  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `GetValue` metody.  
  
|Do|Zobacz|  
|--------|---------|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Ten przykład odczytuje wartość `Name` z `HKEY_CURRENT_USER\Software\MyApp` i wyświetla je w `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie posiada uprawnień niezbędnych do czytania treści klucza rejestru.</exception>
        <exception cref="T:System.IO.IOException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Zawierający określona wartość został oznaczony do usunięcia.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> nie zaczyna się od katalogu głównego rejestru prawidłową.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Odczytywanie zawartości rejestru. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">można odczytać klucza rejestru typu REG_EXPAND_SZ. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` zwykle jest używana do przechowywania ustawień, które nie różni się od użytkownika w systemie Windows. Wszyscy użytkownicy komputera Udostępnij ten klucz. Jego podkluczach pięć (`Hardware`, `SAM`, `Security`, `Software`, i `System`) przechowywania danych konfiguracyjnych z komputera lokalnego.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy przyznać najmniejsze uprawnienia niezbędne do wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie otwiera podklucz `Software\MyCompany\Preferences` i ustawia wartość `FontColor` do `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` Umożliwia dostęp do informacji o wydajności dla składników oprogramowania. Poszczególnych składników oprogramowania tworzy klucze jego obiektów i liczników, jeśli jest zainstalowana i zapisuje dane liczników podczas wykonywania. Te dane nie znajduje się w rejestrze, mimo że rejestru służy do niego dostęp. Zamiast tego podczas wywoływania funkcji rejestru za pomocą `HKEY_PERFORMANCE_DATA` powoduje, że system do zbierania danych z odpowiednim systemem menedżerowie obiektów.  
  
 Ten klucz nie istnieje w systemach Windows 98; Próba użycia go innym niż wywołania `Name` metoda zgłosi <xref:System.IO.IOException>.  
  
 Ten klucz nie można zapisać normalnie. próby utworzenia podklucz na nim zgłosi <xref:System.IO.IOException>.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy przyznać najmniejsze uprawnienia niezbędne do wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Opis|  
|-----------|-----------------|  
|AllAccess|Tworzenia, odczytu i zapisu dostępu do zmiennych rejestru.|  
|Create|Tworzenie dostępu do zmiennych rejestru.|  
|NoAccess|Brak dostępu do zmiennych rejestru.|  
|Odczyt|Dostęp do odczytu do zmiennych rejestru.|  
|Write|Dostępu do zapisu do zmiennych rejestru.|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|Do|Zobacz|  
|--------|---------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie pobiera wartość `ThisSoftware` z `MyCompany` podkluczu.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zapisuje wartość klucza rejestru.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Nazwa klucza do zapisania. Wymagany.</param>
        <param name="valueName">
          <see langword="String" />. Nazwa wartości do zapisania. Wymagany.</param>
        <param name="value">
          <see langword="Object" />. Wartość do zapisania. Wymagany.</param>
        <summary>Zapisuje wartość klucza rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz lub wartość nie istnieje, jest tworzony.  
  
 Oto przykład obejmującego zadań `My.Computer.Registry.SetValue` metody.  
  
|Do|Zobacz|  
|--------|---------|  
|Ustaw wartość w kluczu rejestru|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 W tym przykładzie wartość `FontColor` do "red" w kluczu `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> nie zaczyna się od katalogu głównego rejestru prawidłową.  
  
 —lub—  
  
 <paramref name="valueName" /> jest większa niż długość maksymalna dozwolona (255 znaków).</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest tylko do odczytu i dlatego nie można zapisać do, na przykład jest węzłem głównym poziomie lub nie został otwarty z prawem do zapisu.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do tworzenia lub modyfikowania kluczy rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby zmodyfikować określony klucz rejestru, jeśli istnieje, lub można utworzyć klucza rejestru, jeśli jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Nazwa klucza do zapisania. Wymagany.</param>
        <param name="valueName">
          <see langword="String" />. Nazwa wartości do zapisania. Wymagany.</param>
        <param name="value">
          <see langword="Object" />. Wartość do zapisania. Wymagany.</param>
        <param name="valueKind">
          <see cref="T:Microsoft.Win32.RegistryValueKind" />. Wymagany.</param>
        <summary>Zapisuje wartość klucza rejestru.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli określony klucz lub wartość nie istnieje, jest tworzony.  
  
 Oto przykład obejmującego zadań `My.Computer.Registry.SetValue` metody.  
  
|Do|Zobacz|  
|--------|---------|  
|Ustaw wartość w kluczu rejestru|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 W tym przykładzie wartość `FontColor` do "red" w kluczu `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> nie zaczyna się od katalogu głównego rejestru prawidłową.  
  
 —lub—  
  
 <paramref name="keyName" /> jest większa niż długość maksymalna dozwolona (255 znaków).  
  
 —lub—  
  
 Typ <paramref name="value" /> nie jest zgodny z typem danych rejestru, określony przez <paramref name="valueKind" />, dlatego dane nie można poprawnie przekonwertować.</exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <see cref="T:Microsoft.Win32.RegistryKey" /> Jest tylko do odczytu i dlatego nie można zapisać do, na przykład jest węzłem głównym poziomie lub nie został otwarty z prawem do zapisu.</exception>
        <exception cref="T:System.Security.SecurityException">Użytkownik nie ma wymaganych uprawnień do tworzenia lub modyfikowania kluczy rejestru.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Aby zmodyfikować określony klucz rejestru, jeśli istnieje, lub można utworzyć klucza rejestru, jeśli jeszcze nie istnieje. Skojarzone wyliczenia: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Zwraca <see cref="T:Microsoft.Win32.RegistryKey" /> typu, która zapewnia dostęp do <see langword="HKEY_USERS" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` przede wszystkim jest używany do przechowywania domyślne ustawienia dla użytkowników.  
  
 <xref:System.Security.Permissions.RegistryPermission> Klasy, która znajduje się w <xref:System.Security.Permissions> przestrzeni nazw, kontroluje dostęp do zmiennych rejestru. Zmienne rejestru nie powinny być przechowywane w lokalizacji pamięci gdzie kodu bez <xref:System.Security.Permissions.RegistryPermission> mogą uzyskiwać do nich dostęp. Podobnie podczas udzielania uprawnień, należy przyznać najmniejsze uprawnienia niezbędne do wykonać zadanie.  
  
 Uprawnienia dostępu do wartości są definiowane przez <xref:System.Security.Permissions.RegistryPermissionAccess> wyliczenia. W poniższej tabeli przedstawiono jej elementów członkowskich.  
  
|Wartość|Dostęp do zmiennych rejestru|  
|-----------|----------------------------------|  
|AllAccess|Tworzenia, odczytu i zapisu|  
|Create|Create|  
|NoAccess|Brak dostępu.|  
|Odczyt|Odczyt|  
|Write|Write|  
  
 W poniższej tabeli przedstawiono przykłady dotyczące zadań `My.Computer.Registry` obiektu.  
  
|**Aby**|**Zobacz**|  
|------------|-------------|  
|Utwórz klucz rejestru i określanie jego wartości|[Instrukcje: tworzenie klucza rejestru i określanie jego wartości](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Usuwanie klucza rejestru|[Instrukcje: usuwanie klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Odczytywanie wartości z klucza rejestru|[Instrukcje: odczytywanie wartości z klucza rejestru](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 W tym przykładzie zlicza i wyświetla liczbę wartości w kluczu rejestru.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
      </Docs>
    </Member>
  </Members>
</Type>