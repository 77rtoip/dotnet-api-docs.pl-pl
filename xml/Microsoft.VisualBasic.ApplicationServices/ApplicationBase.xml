<Type Name="ApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acfcb98445c129e1d6cbdfb3ecf17165e9561161" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303068" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ApplicationBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationBase" />
  <TypeSignature Language="F#" Value="type ApplicationBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera właściwości, metody i zdarzenia związane z bieżącą aplikacją.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości uwidocznione przez `My.Application` obiekt zwracają dane, które są skojarzone tylko z bieżącą aplikacją lub biblioteką DLL. Informacje na poziomie systemu nie mogą być zmieniane `My.Application`za pomocą programu.  
  
 `My.Application` Obiekt składa się z następujących klas:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase>zapewnia składowe, które są dostępne we wszystkich projektach.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase>udostępnia elementy członkowskie, które są dostępne w aplikacjach Windows Forms.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase>udostępnia elementy członkowskie, które są dostępne w aplikacjach konsolowych.  
  
   
  
## Examples  
 W tym przykładzie zastosowano `My.Application.GetEnvironmentVariable` metodę, aby pobrać i wyświetlić wartość zmiennej środowiskowej PATH, jeśli ta wartość jest dostępna. W przeciwnym razie wyświetla komunikat informujący o tym, że zmienna środowiskowa PATH nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeCulture">
      <MemberSignature Language="C#" Value="public void ChangeCulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeCulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeCulture : string -&gt; unit" Usage="applicationBase.ChangeCulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />. Nazwa kultury jako ciąg. Listę możliwych nazw można znaleźć w temacie <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kulturę używaną przez bieżący wątek do manipulowania ciągami i formatowania ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zmienia <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość bieżącego wątku. `My.Application.ChangeCulture` <xref:System.Threading.Thread.CurrentCulture%2A>Określa domyślne formaty dat, godzin, walut, liczb, kolejności sortowania tekstu, porównywania ciągów i wielkości liter dla wszystkich obliczeń w tym wątku.  
  
 Aby pobrać bieżącą kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture%2A> właściwości <xref:System.Threading.Thread.CurrentCulture%2A> lub właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera tylko dane dotyczące ustawień standardowych dla regionu geograficznego. W związku z <xref:System.Threading.Thread.CurrentCulture%2A> tym właściwość może zostać ustawiona tylko na określoną kulturę lub <xref:System.Globalization.CultureInfo.InvariantCulture%2A>do.  
  
 `My.Application.ChangeUICulture` Użyj metody, aby zmienić kulturę używaną przez bieżący wątek do pobierania zasobów specyficznych dla kultury.  
  
> [!IMPORTANT]
>  Metoda wymaga elementu <xref:System.Security.Permissions.SecurityPermission> z<xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread>zestawem. `My.Application.ChangeCulture` Manipulowanie wątkami jest niebezpieczne ze względu na stan zabezpieczeń skojarzony z wątkami. W związku z tym to uprawnienie powinno być określone tylko w razie potrzeby do wiarygodnego kodu. Nie można zmienić kultury wątku w kodzie częściowo zaufanym.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak zmiana kultury zmienia ciąg reprezentujący daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" />jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />nie jest prawidłową nazwą kultury.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICulture">
      <MemberSignature Language="C#" Value="public void ChangeUICulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeUICulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeUICulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeUICulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeUICulture : string -&gt; unit" Usage="applicationBase.ChangeUICulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />. Nazwa kultury jako ciąg. Listę możliwych nazw można znaleźć w temacie <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kulturę używaną przez bieżący wątek do pobierania zasobów specyficznych dla kultury.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zmienia <xref:System.Threading.Thread.CurrentUICulture%2A> Właściwość bieżącego wątku. `My.Application.ChangeUICulture` Właściwość określa kulturę używaną przez Menedżer zasobów `My.Resources` i obiekt; używa tych informacji do wyszukiwania zasobów specyficznych dla kultury w czasie wykonywania. <xref:System.Threading.Thread.CurrentUICulture%2A>  
  
 Aby pobrać bieżącą kulturę interfejsu użytkownika, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture%2A> właściwości <xref:System.Threading.Thread.CurrentUICulture%2A> lub właściwości.  
  
 `My.Application.ChangeCulture` Użyj metody, aby zmienić kulturę używaną przez bieżący wątek do manipulowania ciągami i formatowania ciągu.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie zastosowano `My.Application.ChangeUICulture` metodę, aby ustawić kulturę `My.Resources` używaną przez obiekt do pobierania zasobów.  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 Aby ten przykład działał, aplikacja musi mieć ciąg o nazwie `Message` w pliku zasobów aplikacji, a aplikacja powinna mieć wersję kultury języka francuskiego tego `Resources.fr-FR.resx`pliku zasobów. Aby uzyskać więcej informacji, zobacz [jak: Dodawanie lub usuwanie zasobów](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma wersji języka francuskiego tego pliku zasobów, `My.Resources` obiekt pobiera zasób z pliku zasobów kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" />jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" />nie jest prawidłową nazwą kultury.</exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kulturę używaną przez bieżący wątek do manipulowania ciągami i formatowania ciągu.</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> Obiekt, który reprezentuje kulturę używaną przez bieżący wątek do manipulowania ciągami i formatowania ciągu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentCulture` Właściwość<xref:System.Globalization.CultureInfo> pobiera obiekt, którego bieżący wątek używa do manipulowania ciągami i formatowania ciągu. Ten obiekt jest identyczny z zwróconą przez <xref:System.Threading.Thread.CurrentCulture%2A> właściwość, która kontroluje wiele obliczeń związanych z ciągiem w tym wątku. <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość określa domyślne formaty dat, godzin, waluty i liczb. Określa również sposób sortowania, porównywania i wielkich liter.  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture%2A> metody lub przypisać do <xref:System.Threading.Thread.CurrentCulture%2A> właściwości inny <xref:System.Globalization.CultureInfo> obiekt.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera tylko dane dotyczące ustawień standardowych dla regionu geograficznego.  
  
 `My.Application.CurrentUICulture` Użyj właściwości, aby uzyskać kulturę używaną przez bieżący wątek do pobierania zasobów specyficznych dla kultury.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak kultura ma wpływ na ciąg reprezentujący daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public string GetEnvironmentVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetEnvironmentVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvironmentVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEnvironmentVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEnvironmentVariable : string -&gt; string" Usage="applicationBase.GetEnvironmentVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A <see langword="String" /> zawiera nazwę zmiennej środowiskowej.</param>
        <summary>Zwraca wartość określonej zmiennej środowiskowej.</summary>
        <returns>A <see langword="String" /> zawierająca wartość zmiennej środowiskowej o nazwie <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda zwraca zmienną środowiskową o nazwie `name`. `My.Application.GetEnvironmentVariable` Ta metoda jest podobna do <xref:System.Environment.GetEnvironmentVariable%28System.String%29?displayProperty=nameWithType>, z tą różnicą, że ta metoda zgłasza wyjątek, jeśli zmienna `name` środowiskowa określona przez nie istnieje.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W `My.Application.GetEnvironmentVariable` tym przykładzie zastosowano metodę, aby pobrać i wyświetlić wartość zmiennej środowiskowej PATH (jeśli jest dostępna). W przeciwnym razie wyświetla komunikat informujący o tym, że zmienna środowiskowa PATH nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" />jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">Zmienna środowiskowa określona przez <paramref name="name" /> nie istnieje.</exception>
        <exception cref="T:System.Security.SecurityException">Kod wywołujący nie ma <see cref="T:System.Security.Permissions.EnvironmentPermission" /> <see langword="Read" /> dostępu.</exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As AssemblyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ Info { Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.AssemblyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który dostarcza właściwości do uzyskiwania informacji o zestawie aplikacji, takich jak numer wersji, opis itd.</summary>
        <value><see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> Obiekt dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W tym przykładzie użyta zostanie `My.Application.Info.Version` właściwość w celu wyświetlenia wersji aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.Log Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.Log Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As Log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::Log ^ Log { Microsoft::VisualBasic::Logging::Log ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Log : Microsoft.VisualBasic.Logging.Log" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.Log</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który dostarcza właściwości i metod zapisywania informacji o zdarzeniu i wyjątku w detektorach dzienników aplikacji.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.Log" /> Obiekt dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład pokazuje, `My.Application.Log.WriteEntry` jak używać metody do rejestrowania informacji o śledzeniu. Aby uzyskać więcej informacji, zobacz [jak: Zapisuj komunikaty](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)dziennika.  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kulturę używaną przez bieżący wątek do pobierania zasobów specyficznych dla kultury.</summary>
        <value><see cref="T:System.Globalization.CultureInfo" /> Obiekt, który reprezentuje kulturę używaną przez bieżący wątek do pobierania zasobów specyficznych dla kultury.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentUICulture` Właściwość<xref:System.Globalization.CultureInfo> pobiera obiekt, którego bieżący wątek używa do pobierania zasobów specyficznych dla kultury. Ten obiekt jest identyczny z tym, który został <xref:System.Threading.Thread.CurrentUICulture%2A> zwrócony przez właściwość. Właściwość określa kulturę używaną przez Menedżer zasobów `My.Resources` i obiekt, informacje potrzebne do wyszukania zasobów specyficznych dla kultury w czasie wykonywania. <xref:System.Threading.Thread.CurrentUICulture%2A>  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A> metody lub przypisać do <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości inny <xref:System.Globalization.CultureInfo> obiekt.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera tylko dane dotyczące ustawień standardowych dla regionu geograficznego.  
  
 `My.Application.CurrentCulture` Użyj właściwości, aby uzyskać kulturę używaną przez bieżący wątek do manipulowania ciągami i formatowania ciągu.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.CurrentCulture` właściwości, aby buforować bieżącą kulturę przed zmianą <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>przy użyciu. Metoda ustawia kulturę `My.Resources` używaną przez obiekt do pobierania zasobów. `My.Application.ChangeUICulture`  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 Aby ten przykład działał, aplikacja musi mieć ciąg o nazwie `Message` w pliku zasobów aplikacji, a aplikacja powinna mieć wersję kultury języka francuskiego tego `Resources.fr-FR.resx`pliku zasobów. Aby uzyskać więcej informacji, zobacz [jak: Dodawanie lub usuwanie zasobów](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma wersji języka francuskiego tego pliku zasobów, `My.Resources` obiekt pobiera zasób z pliku zasobów kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/my-resources-object.md">My. Resources — Obiekt (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>
