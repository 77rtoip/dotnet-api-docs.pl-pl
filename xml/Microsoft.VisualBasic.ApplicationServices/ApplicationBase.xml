<Type Name="ApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59207f70cdb1fe00f9e1fee43318c7f7556e3bb3" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67238512" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ApplicationBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationBase" />
  <TypeSignature Language="F#" Value="type ApplicationBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości, metody i zdarzenia związane z bieżącej aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości udostępniane przez `My.Application` obiekt o zwracanej dane, które są skojarzone tylko z bieżącej aplikacji lub biblioteki DLL. Brak informacji o poziomie systemu, może się zmienić z `My.Application`.  
  
 `My.Application` Obiekt składa się z następujących klas:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> zawiera elementy członkowskie, które są dostępne we wszystkich projektach.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacjach Windows Forms.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacji konsoli.  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.GetEnvironmentVariable` metodę, aby pobrać i wyświetlić wartość zmiennej środowiskowej PATH, jeśli ta wartość jest dostępna. W przeciwnym razie wyświetla komunikat informujący o tym, że zmiennej środowiskowej PATH nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeCulture">
      <MemberSignature Language="C#" Value="public void ChangeCulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeCulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeCulture : string -&gt; unit" Usage="applicationBase.ChangeCulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />. Nazwa kultury jako ciąg. Aby uzyskać listę możliwych nazw, zobacz <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kultury, używane przez bieżącego wątku dla manipulowanie ciągami, jak i dla ciągu formatowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeCulture` Metoda zmienia bieżący wątek <xref:System.Threading.Thread.CurrentCulture%2A> właściwości. <xref:System.Threading.Thread.CurrentCulture%2A> Określa domyślny format daty, godziny, waluty, numerów sortowania kolejności tekstu, porównywania ciągów i wielkości liter dla wszystkich obliczeń na tym wątku.  
  
 Aby pobrać bieżącą kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture%2A> właściwości lub <xref:System.Threading.Thread.CurrentCulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera ona tylko dane dotyczące standardowych ustawień regionu geograficznego. W związku z tym <xref:System.Threading.Thread.CurrentCulture%2A> właściwość można ustawić tylko określoną kulturę lub do <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
 Użyj `My.Application.ChangeUICulture` metodę, aby zmienić kulturę, której używa pobieranie zasobów dla kultury bieżącego wątku.  
  
> [!IMPORTANT]
>  `My.Application.ChangeCulture` Metoda wymaga <xref:System.Security.Permissions.SecurityPermission> z <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> zestawu. Manipulowanie wątków jest niebezpieczne ze względu na stan zabezpieczeń skojarzone z wątków. W związku z tym to uprawnienie należy podać tylko wtedy gdy jest to konieczne do zaufanego kodu. Nie można zmienić kultury wątku w kodzie częściowo zaufanym.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W przykładzie pokazano, jak zmiana kulturę zmienia reprezentację daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> nie jest nazwą prawidłową kultury.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ChangeUICulture">
      <MemberSignature Language="C#" Value="public void ChangeUICulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeUICulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeUICulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeUICulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeUICulture : string -&gt; unit" Usage="applicationBase.ChangeUICulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName"><see langword="String" />. Nazwa kultury jako ciąg. Aby uzyskać listę możliwych nazw, zobacz <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kulturę, której używa pobieranie zasobów dla kultury bieżącego wątku.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeUICulture` Metoda zmienia bieżący wątek <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości. <xref:System.Threading.Thread.CurrentUICulture%2A> Właściwość określa kultury, używane przez Menedżera zasobów i `My.Resources` obiektu; używa tych informacji w celu wyszukania specyficznych dla kultury zasobów w czasie wykonywania.  
  
 Aby pobrać bieżącej kultury interfejsu użytkownika, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture%2A> właściwości lub <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości.  
  
 Użyj `My.Application.ChangeCulture` metodę, aby zmienić kulturę, której używa bieżącego wątku, manipulowanie ciągami i formatowanie ciągów.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.ChangeUICulture` metodę, aby ustawienie kultury `My.Resources` obiektu używa do pobierania zasobów.  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 W tym przykładzie do pracy, aplikacja musi mieć ciągu o nazwie `Message` w zasobie aplikacji plików i aplikacji powinny mieć kultury francuski wersję tego pliku zasobów `Resources.fr-FR.resx`. Aby uzyskać więcej informacji, zobacz [jak: Dodawanie lub usuwanie zasobów](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma kultury francuski wersję tego pliku zasobów `My.Resources` obiektu pobiera zasób z pliku zasobów kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cultureName" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="cultureName" /> nie jest nazwą prawidłową kultury.</exception>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kulturę, której używa bieżącego wątku, manipulowanie ciągami i formatowanie ciągów.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> manipulowanie ciągami i formatowanie ciągów korzysta z obiektu, który reprezentuje kulturę bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentCulture` Pobiera właściwość <xref:System.Globalization.CultureInfo> obiektu, który używa bieżącego wątku, manipulowanie ciągami i formatowanie ciągów. Ten obiekt jest taka sama jak ten, który został zwrócony przez <xref:System.Threading.Thread.CurrentCulture%2A> właściwość, która kontroluje liczbę powiązanych z ciągami obliczeń, w tym wątku. <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość określa domyślny format dla daty, godziny, waluty i liczb. Program ten określa również sposób sortowania, porównywania i wykorzystywanie ciągów.  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture%2A> metody lub Przypisz innej <xref:System.Globalization.CultureInfo> obiekt <xref:System.Threading.Thread.CurrentCulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera ona tylko dane dotyczące standardowych ustawień regionu geograficznego.  
  
 Użyj `My.Application.CurrentUICulture` właściwości do pobrania kulturę, której używa pobieranie zasobów dla kultury bieżącego wątku.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W przykładzie pokazano, jak kultura wpływa na reprezentację daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public string GetEnvironmentVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetEnvironmentVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvironmentVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEnvironmentVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEnvironmentVariable : string -&gt; string" Usage="applicationBase.GetEnvironmentVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Element <see langword="String" /> zawierający nazwę zmiennej środowiskowej.</param>
        <summary>Zwraca wartość określonej zmiennej środowiskowej.</summary>
        <returns>A <see langword="String" /> zawierającą wartość zmiennej środowiskowej o nazwie <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.GetEnvironmentVariable` Metoda zwróci wartość zmiennej środowiskowej o nazwie `name`. Ta metoda jest podobna do <xref:System.Environment.GetEnvironmentVariable%28System.String%29?displayProperty=nameWithType>, z tą różnicą, że ta metoda zgłasza wyjątek, jeśli zmienna środowiskowa określony przez `name` nie istnieje.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.GetEnvironmentVariable` metodę, aby pobrać i wyświetlić wartość zmiennej środowiskowej PATH, jeśli jest dostępny. W przeciwnym razie wyświetla komunikat informujący, że zmiennej środowiskowej PATH nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">Określone przez zmienną środowiskową <paramref name="name" /> nie istnieje.</exception>
        <exception cref="T:System.Security.SecurityException">Kod wywołujący nie ma <see cref="T:System.Security.Permissions.EnvironmentPermission" /> z <see langword="Read" /> dostępu.</exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As AssemblyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ Info { Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.AssemblyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który udostępnia właściwości w celu uzyskania informacji na temat zestawu aplikacji, na przykład numer wersji, opis i tak dalej.</summary>
        <value><see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> Obiektu dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W tym przykładzie użyto `My.Application.Info.Version` właściwość, aby wyświetlić wersję aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.Log Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.Log Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As Log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::Log ^ Log { Microsoft::VisualBasic::Logging::Log ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Log : Microsoft.VisualBasic.Logging.Log" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.Log</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który udostępnia właściwości i metody do zapisywania zdarzeń i wyjątków informacje odbiorniki logu aplikacji.</summary>
        <value><see cref="T:Microsoft.VisualBasic.Logging.Log" /> Obiektu dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W tym przykładzie pokazano, jak używać `My.Application.Log.WriteEntry` metody do rejestrowania informacji śledzenia. Aby uzyskać więcej informacji, zobacz [jak: Zapisywanie wiadomości rejestru](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kulturę, której używa podczas pobierania zasobów dla kultury bieżącego wątku.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje kulturę, której używa pobieranie zasobów dla kultury bieżącego wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentUICulture` Pobiera właściwość <xref:System.Globalization.CultureInfo> obiektu, że bieżący wątek używa do pobierania zasobów dla kultury. Ten obiekt jest taka sama jak ten, który został zwrócony przez <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości. <xref:System.Threading.Thread.CurrentUICulture%2A> Właściwość określa kultury, używane przez Menedżera zasobów i `My.Resources` object, informacji potrzebnych do wyszukiwania w czasie wykonywania zasoby specyficzne dla kultury.  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A> metody lub Przypisz innej <xref:System.Globalization.CultureInfo> obiekt <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera ona tylko dane dotyczące standardowych ustawień regionu geograficznego.  
  
 Użyj `My.Application.CurrentCulture` właściwości do pobrania kulturę, której używa bieżącego wątku, manipulowanie ciągami i formatowanie ciągów.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów interfejsu Windows Forms|**Tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.CurrentCulture` właściwości bieżącej kultury w pamięci podręcznej przed zmianą przy użyciu <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>. `My.Application.ChangeUICulture` Metody ustawia kulturę `My.Resources` obiektu używa do pobierania zasobów.  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 W tym przykładzie do pracy, aplikacja musi mieć ciągu o nazwie `Message` w zasobie aplikacji plików i aplikacji powinny mieć kultury francuski wersję tego pliku zasobów `Resources.fr-FR.resx`. Aby uzyskać więcej informacji, zobacz [jak: Dodawanie lub usuwanie zasobów](https://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma kultury francuski wersję tego pliku zasobów `My.Resources` obiektu pobiera zasób z pliku zasobów kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/my-resources-object.md">My.resources — obiekt (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>