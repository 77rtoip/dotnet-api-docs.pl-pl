<Type Name="ApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.ApplicationBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55884720d3b7799efefdd39219c90718bddd44db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36729708" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ApplicationBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationBase" />
  <TypeSignature Language="F#" Value="type ApplicationBase = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości, metody i zdarzenia związane z bieżącej aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości udostępniane przez `My.Application` obiektu zwracanego dane, które są skojarzone tylko z bieżącej aplikacji lub DLL. Żadne informacje poziom systemu można zmienić z `My.Application`.  
  
 `My.Application` Obiekt składa się z następujących klas:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> zawiera elementy członkowskie, które są dostępne we wszystkich projektach.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacjach formularzy systemu Windows.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacji konsoli.  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.GetEnvironmentVariable` metody w celu pobrania i wyświetlenia wartości zmiennej środowiskowej PATH, jeśli ta wartość jest dostępna. W przeciwnym razie wyświetla komunikat informujący o tym, że zmiennej środowiskowej ŚCIEŻKA nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeCulture">
      <MemberSignature Language="C#" Value="public void ChangeCulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeCulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeCulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeCulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeCulture : string -&gt; unit" Usage="applicationBase.ChangeCulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">
          <see langword="String" />. Nazwa kultury jako ciąg. Aby uzyskać listę możliwych nazw, zobacz <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kulturę używaną przez bieżący wątek manipulowanie ciągami i dla ciągu formatowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeCulture` Metoda zmienia bieżący wątek <xref:System.Threading.Thread.CurrentCulture%2A> właściwości. <xref:System.Threading.Thread.CurrentCulture%2A> Określa domyślny format daty, godziny, waluty, numerów sortowania tekstu, porównywania ciągów i wielkości liter dla wszystkich obliczeń na tym wątku.  
  
 Aby uzyskać dostęp do bieżącej kultury, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture%2A> właściwości lub <xref:System.Threading.Thread.CurrentCulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera on tylko danych dotyczących standardowych ustawień dla regionu geograficznego. W związku z tym <xref:System.Threading.Thread.CurrentCulture%2A> właściwości można ustawić tylko określoną kulturę lub do <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.  
  
 Użyj `My.Application.ChangeUICulture` metodę, aby zmienić kultura, która używa bieżącego wątku dla pobieranie specyficzne dla kultury zasobów.  
  
> [!IMPORTANT]
>  `My.Application.ChangeCulture` Metoda wymaga <xref:System.Security.Permissions.SecurityPermission> z <xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread> ustawiony. Manipulowanie wątków jest niebezpieczne z powodu stanu zabezpieczeń skojarzone z wątków. W związku z tym to uprawnienie należy podać tylko niezbędne do zaufanego kodu. Nie można zmienić kultury wątku w kodzie częściowo zaufanym.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**tak**|  
|Biblioteka klas|**tak**|  
|Aplikacja konsoli|**tak**|  
|Biblioteka formantów interfejsu Windows Forms|**tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak kultura zmiana reprezentację ciągu daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> nie jest prawidłową nazwą kultury.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="ChangeUICulture">
      <MemberSignature Language="C#" Value="public void ChangeUICulture (string cultureName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void ChangeUICulture(string cultureName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeUICulture (cultureName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeUICulture(System::String ^ cultureName);" />
      <MemberSignature Language="F#" Value="member this.ChangeUICulture : string -&gt; unit" Usage="applicationBase.ChangeUICulture cultureName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cultureName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cultureName">
          <see langword="String" />. Nazwa kultury jako ciąg. Aby uzyskać listę możliwych nazw, zobacz <see cref="T:System.Globalization.CultureInfo" />.</param>
        <summary>Zmienia kultura, która używa bieżącego wątku dla pobieranie specyficzne dla kultury zasobów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.ChangeUICulture` Metoda zmienia bieżący wątek <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości. <xref:System.Threading.Thread.CurrentUICulture%2A> Właściwość określa kulturę używaną przez Menedżera zasobów i `My.Resources` obiekt; używa tych informacji do wyszukiwania zasobów określonej kultury w czasie wykonywania.  
  
 Aby uzyskać dostęp do bieżącej kultury interfejsu użytkownika, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture%2A> właściwości lub <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości.  
  
 Użyj `My.Application.ChangeCulture` metodę, aby zmienić kultura, która używa bieżącego wątku manipulowanie ciągami i ciągu formatowania.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**tak**|  
|Biblioteka klas|**tak**|  
|Aplikacja konsoli|**tak**|  
|Biblioteka formantów interfejsu Windows Forms|**tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.ChangeUICulture` metodę, aby ustawić kultura, która `My.Resources` obiektu używa do pobierania zasobów.  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 W tym przykładzie działała, aplikacja musi mieć ciągu o nazwie `Message` w zasobie aplikacji plików i aplikacji powinny mieć wersję kultury francuski tego pliku zasobu `Resources.fr-FR.resx`. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie lub usuwanie zasobów](http://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma wersji kultury francuski tego pliku zasobu `My.Resources` obiektu pobiera zasobu z pliku zasobu kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cultureName" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="cultureName" /> nie jest prawidłową nazwą kultury.</exception>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kultura, która używa bieżącego wątku manipulowanie ciągami i ciągu formatowania.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje kultury bieżącej wątku używa manipulowanie ciągami i ciągu formatowania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentCulture` Pobiera właściwość <xref:System.Globalization.CultureInfo> obiekt, który używa bieżącego wątku manipulowanie ciągami i ciągu formatowania. Ten obiekt jest taki sam jak ten, który został zwrócony przez <xref:System.Threading.Thread.CurrentCulture%2A> właściwość, która steruje wielu powiązanych z ciągami obliczeń na tym wątku. <xref:System.Threading.Thread.CurrentCulture%2A> Właściwość określa domyślny format daty, godziny, waluty i liczby. Określają one również sposób sortowania, porównywania i wielką ciągów.  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeCulture%2A> metody lub przypisać inną <xref:System.Globalization.CultureInfo> do obiektu <xref:System.Threading.Thread.CurrentCulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera on tylko danych dotyczących standardowych ustawień dla regionu geograficznego.  
  
 Użyj `My.Application.CurrentUICulture` właściwości do pobrania kultura, która używa bieżącego wątku dla pobieranie specyficzne dla kultury zasobów.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**tak**|  
|Biblioteka klas|**tak**|  
|Aplikacja konsoli|**tak**|  
|Biblioteka formantów interfejsu Windows Forms|**tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W przykładzie pokazano, jak kultura wpływa na reprezentację ciągu daty.  
  
 [!code-vb[VbVbalrMyApplication#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="GetEnvironmentVariable">
      <MemberSignature Language="C#" Value="public string GetEnvironmentVariable (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string GetEnvironmentVariable(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.GetEnvironmentVariable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnvironmentVariable (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEnvironmentVariable(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetEnvironmentVariable : string -&gt; string" Usage="applicationBase.GetEnvironmentVariable name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">A <see langword="String" /> zawierającą nazwę zmiennej środowiskowej.</param>
        <summary>Zwraca wartość zmiennej określonego środowiska.</summary>
        <returns>A <see langword="String" /> zawierającą wartość zmiennej środowiskowej o nazwie <paramref name="name" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.GetEnvironmentVariable` Metoda zwróci wartość zmiennej środowiskowej o nazwie `name`. Ta metoda jest podobna do <xref:System.Environment.GetEnvironmentVariable%28System.String%29?displayProperty=nameWithType>, ale ta metoda zgłasza wyjątek, jeśli zmienna środowiskowa określony przez `name` nie istnieje.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**tak**|  
|Biblioteka klas|**tak**|  
|Aplikacja konsoli|**tak**|  
|Biblioteka formantów interfejsu Windows Forms|**tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.GetEnvironmentVariable` metody do pobrania i wyświetlenia wartości zmiennej środowiskowej PATH, jeśli jest dostępna. W przeciwnym razie wyświetla komunikat informujący o zmiennej środowiskowej ŚCIEŻKA nie istnieje.  
  
 [!code-vb[VbVbalrMyApplication#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> jest <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">Zmienna środowiskowa określona przez <paramref name="name" /> nie istnieje.</exception>
        <exception cref="T:System.Security.SecurityException">Kod wywołujący nie ma <see cref="T:System.Security.Permissions.EnvironmentPermission" /> z <see langword="Read" /> dostępu.</exception>
        <altmember cref="M:System.Environment.GetEnvironmentVariable(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.ApplicationServices.AssemblyInfo Info" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Info As AssemblyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ Info { Microsoft::VisualBasic::ApplicationServices::AssemblyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Info : Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.AssemblyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który udostępnia właściwości do pobierania informacji o zestawie aplikacji, takich jak numer wersji, opis i tak dalej.</summary>
        <value>
          <see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" /> Obiektu dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W tym przykładzie użyto `My.Application.Info.Version` właściwość, aby wyświetlić wersję aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.Log Log { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.Log Log" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Log As Log" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::Log ^ Log { Microsoft::VisualBasic::Logging::Log ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Log : Microsoft.VisualBasic.Logging.Log" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Log" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.Log</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który udostępnia właściwości i metody dla zapisywania informacji o zdarzeń i wyjątków na odbiorniki dzienników aplikacji.</summary>
        <value>
          <see cref="T:Microsoft.VisualBasic.Logging.Log" /> Obiektu dla bieżącej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ten przykład przedstawia sposób użycia `My.Application.Log.WriteEntry` metody do rejestrowania informacji śledzenia. Aby uzyskać więcej informacji, zobacz [porady: pisanie wiadomości dziennika](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo UICulture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UICulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ UICulture { System::Globalization::CultureInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : System.Globalization.CultureInfo" Usage="Microsoft.VisualBasic.ApplicationServices.ApplicationBase.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kultura, która używa bieżącego wątku dla pobierania specyficzne dla kultury zasobów.</summary>
        <value>A <see cref="T:System.Globalization.CultureInfo" /> obiekt, który reprezentuje kultura, która używa bieżącego wątku dla pobieranie specyficzne dla kultury zasobów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.CurrentUICulture` Pobiera właściwość <xref:System.Globalization.CultureInfo> obiekt, czy bieżący wątek używa do pobierania specyficzne dla kultury zasobów. Ten obiekt jest taki sam jak ten, który został zwrócony przez <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości. <xref:System.Threading.Thread.CurrentUICulture%2A> Właściwość określa kulturę używaną przez Menedżera zasobów i `My.Resources` obiektu, informacje konieczne do wyszukiwania zasobów określonej kultury w czasie wykonywania.  
  
 Aby zmienić kulturę, można użyć <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A> metody lub przypisać inną <xref:System.Globalization.CultureInfo> do obiektu <xref:System.Threading.Thread.CurrentUICulture%2A> właściwości.  
  
 <xref:System.Threading.Thread.CurrentCulture%2A> Ustawienie różni się od ustawień języka. Zawiera on tylko danych dotyczących standardowych ustawień dla regionu geograficznego.  
  
 Użyj `My.Application.CurrentCulture` właściwości do pobrania kultura, która używa bieżącego wątku manipulowanie ciągami i ciągu formatowania.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**tak**|  
|Biblioteka klas|**tak**|  
|Aplikacja konsoli|**tak**|  
|Biblioteka formantów interfejsu Windows Forms|**tak**|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|**tak**|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.CurrentCulture` właściwości do buforowania przed zmianą przy użyciu bieżącej kultury <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.ChangeUICulture%2A>. `My.Application.ChangeUICulture` Metody ustawia kulturę `My.Resources` obiektu używa do pobierania zasobów.  
  
 [!code-vb[VbVbalrMyResources#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyResources/VB/Form1.vb#10)]  
  
 W tym przykładzie działała, aplikacja musi mieć ciągu o nazwie `Message` w zasobie aplikacji plików i aplikacji powinny mieć wersję kultury francuski tego pliku zasobu `Resources.fr-FR.resx`. Aby uzyskać więcej informacji, zobacz [porady: Dodawanie lub usuwanie zasobów](http://msdn.microsoft.com/library/7b77bc06-3952-4799-b029-def3f8f7f88d).  
  
 Jeśli aplikacja nie ma wersji kultury francuski tego pliku zasobu `My.Resources` obiektu pobiera zasobu z pliku zasobu kultury domyślnej.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Threading.Thread.CurrentUICulture" />
      </Docs>
    </Member>
  </Members>
</Type>