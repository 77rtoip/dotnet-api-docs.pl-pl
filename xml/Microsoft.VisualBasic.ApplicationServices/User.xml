<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccffeaa23554e17d37e6fd83ef5ed13f8c9ba233" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30431775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp do informacji dotyczących bieżącego użytkownika.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości i metody ujawnione przez `My.User` obiektu zapewniają dostęp do informacji dotyczących bieżącego użytkownika. Znaczenie "bieżącego użytkownika" różni się między aplikacjami systemu Windows i sieci Web. W aplikacji Windows bieżący użytkownik jest użytkownik, który uruchamia aplikację. W aplikacji sieci Web bieżącego użytkownika jest użytkownik, który uzyskuje dostęp do aplikacji.  
  
 `My.User` Właściwości umożliwia również dostęp do <xref:System.Security.Principal.IPrincipal> dla bieżącego użytkownika. Obiekt główny reprezentuje kontekst zabezpieczeń użytkownika, takich jak tożsamość użytkownika i żadnych ról, do których należy użytkownik.  
  
 Dla aplikacji systemu Windows, ta właściwość zapewnia te same funkcje co <xref:System.Threading.Thread.CurrentPrincipal%2A> właściwości. W przypadku aplikacji sieci Web, ta właściwość zapewnia te same funkcje co <xref:System.Web.HttpContext.User%2A> właściwości obiektu zwróconego przez <xref:System.Web.HttpContext.Current%2A> właściwości.  
  
> [!NOTE]
>  Dla aplikacji systemu Windows tylko projekty w oparciu **aplikacji systemu Windows** zainicjować szablonu `My.User` obiektu domyślnie. W przypadku wszystkich innych typów systemu Windows projektu, należy zainicjować `My.User` obiektu przez wywołanie metody <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> metoda jawnie ani przez przypisanie wartości do <xref:System.Threading.Thread.CurrentPrincipal%2A>.  
  
> [!NOTE]
>  `My.User` Obiektu nie można utworzyć raportu informacji na temat uruchamiania w systemie Windows 95 i Windows 98, ponieważ te systemy operacyjne nie obsługują pojęcie zalogowanego użytkownika bieżącego użytkownika systemu Windows. Musi implementować niestandardowe uwierzytelniania `My.User` obiektu w tych systemach operacyjnych.  
  
   
  
## Examples  
 Sprawdza w tym przykładzie, jeśli aplikacja używa systemu Windows lub uwierzytelniania niestandardowego i używa tych informacji, można przeanalizować `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości i metody ujawnione przez `My.User` obiektu zapewniają dostęp do informacji dotyczących bieżącego użytkownika.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bieżący podmiot zabezpieczeń (dla opartej na rolach zabezpieczeń).</summary>
        <value>A <see cref="T:System.Security.Principal.IPrincipal" /> wartość reprezentującą kontekst zabezpieczeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można ustawić `My.User.CurrentPrincipal` właściwości do obiektu, który implementuje <xref:System.Security.Principal.IPrincipal> interfejsu, aby włączyć uwierzytelnianie niestandardowe.  
  
 W większości typów projektów ta właściwość pobiera i ustawia podmiot zabezpieczeń bieżącego wątku. W aplikacji ASP.NET ta właściwość pobiera i ustawia informacje dotyczące zabezpieczeń dla tożsamości użytkownika bieżącego żądania HTTP.  
  
 Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 Sprawdza w tym przykładzie, jeśli aplikacja używa systemu Windows lub uwierzytelniania niestandardowego i używa tych informacji, można przeanalizować `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień wymaganych, aby ustawić podmiot zabezpieczeń.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia bieżący podmiot zabezpieczeń wątku użytkownika systemu Windows, który uruchomił aplikację.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `My.User.InitializeWithWindowsUser` metodę, aby ustawić podmiot zabezpieczeń bieżącego wątku dla użytkownika systemu Windows, który uruchomił aplikację. Model aplikacji Visual Basic w aplikacji Windows wywołuje tę metodę przy uruchamianiu domyślnie. W innych typów projektów, należy ustawić bieżący podmiot zabezpieczeń wątku przez wywołanie tej metody jawnie lub przypisywanie wartości do <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
 W projektach systemu Windows `My.User` obiektu opiera się na bieżący podmiot zabezpieczeń wątku; w związku z tym tej metody można zmienić informacje `My.User` zwraca. W aplikacji ASP.NET `My.User` obiektu jest oparta na tożsamości użytkownika bieżącego żądania HTTP i jest niezależna od tej metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym jest uruchomiona aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> Przegląd klasy.  
  
 Jest to zaawansowane elementu członkowskiego; niewidoczne w IntelliSense dopóki nie klikniesz **wszystkie** kartę.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt główny reprezentujący bieżącego użytkownika.</summary>
        <value>
          <see cref="T:System.Security.Principal.IPrincipal" /> Obiekt reprezentujący bieżącego użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:Microsoft.VisualBasic.ApplicationServices.User> obiektu, ta właściwość jest zawijana <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości. Zastępuje tę metodę w klasie pochodnej w celu zapewnienia inaczej. Na przykład <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> ta właściwość zastępuje właściwość.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użytkownik został uwierzytelniony.</summary>
        <value>
          <see langword="True" /> Jeśli użytkownik został uwierzytelniony; w przeciwnym razie <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsAuthenticated` Właściwość umożliwia swój kod, aby określić, czy bieżący użytkownik został uwierzytelniony.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym jest uruchomiona aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> Przegląd klasy.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik został uwierzytelniony przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">Wbudowana Rola systemu Windows do których chcesz sprawdzić członkostwa.</param>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
        <returns>
          <see langword="True" /> Jeśli bieżący użytkownik jest członkiem określonej roli; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` Metoda pozwala swój kod, aby określić, czy bieżący użytkownik jest członkiem określonej roli.  
  
 Przeciążenia `My.User.IsInRole` metody pobierającej ciąg zapewnia łatwy dostęp do <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody bieżący podmiot zabezpieczeń.  
  
 Przeciążenia `My.User.IsInRole` metody pobierającej `BuiltInRole` wyliczenie zachowuje się inaczej, w zależności od bieżącego podmiotu zabezpieczeń. Jeśli podmiot zabezpieczeń użytkownika systemu Windows (<xref:System.Security.Principal.WindowsPrincipal>), ta funkcja konwertuje `role` do odpowiednika <xref:System.Security.Principal.WindowsBuiltInRole> wyliczenie i zwraca wynik wywołania metody <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Bieżący podmiot zabezpieczeń w przypadku innych podmiot zabezpieczeń, ta funkcja przekazuje nazwę wartości wyliczenia `role` do podmiotu zabezpieczeń <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym jest uruchomiona aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> Przegląd klasy.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik jest administratorem przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Nazwa roli, do których chcesz sprawdzić członkostwa.</param>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
        <returns>
          <see langword="True" /> Jeśli bieżący użytkownik jest członkiem określonej roli; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` Metoda pozwala swój kod, aby określić, czy bieżący użytkownik jest członkiem określonej roli.  
  
 Przeciążenia `My.User.IsInRole` metody pobierającej ciąg zapewnia łatwy dostęp do <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody bieżący podmiot zabezpieczeń.  
  
 Przeciążenia `My.User.IsInRole` metody pobierającej `BuiltInRole` wyliczenie zachowuje się inaczej, w zależności od bieżącego podmiotu zabezpieczeń. Jeśli podmiot zabezpieczeń użytkownika systemu Windows (<xref:System.Security.Principal.WindowsPrincipal>), ta funkcja konwertuje `role` do odpowiednika <xref:System.Security.Principal.WindowsBuiltInRole> wyliczenie i zwraca wynik wywołania metody <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Bieżący podmiot zabezpieczeń w przypadku innych podmiot zabezpieczeń, ta funkcja przekazuje nazwę wartości wyliczenia `role` do podmiotu zabezpieczeń <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym jest uruchomiona aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> Przegląd klasy.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik jest administratorem przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącego użytkownika.</summary>
        <value>
          <see langword="String" />. Nazwa bieżącego użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można użyć `My.User` obiekt, aby uzyskać informacje na temat bieżącego użytkownika.  
  
 Podmiot zabezpieczeń, który uwierzytelnia użytkownika kontroluje również format nazwy użytkownika. Domyślnie aplikacja używa uwierzytelniania systemu Windows, a nazwa użytkownika ma format domena azwa_użytkownika. Implementacja niestandardowa podmiotu zabezpieczeń nie musi używać tego samego formatu.  
  
> [!NOTE]
>  `My.User.Name` Właściwość zwraca pusty ciąg uruchamiania w systemie Windows 95 i Windows 98, ponieważ te systemy operacyjne nie można rozpoznać nazwy użytkownika.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym jest uruchomiona aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> Przegląd klasy.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja systemu Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów systemu Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 Sprawdza w tym przykładzie, jeśli aplikacja używa systemu Windows lub uwierzytelniania niestandardowego i używa tych informacji, można przeanalizować `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń zastosowane do kodu. Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
      </Docs>
    </Member>
  </Members>
</Type>