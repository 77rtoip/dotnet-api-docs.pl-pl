<Type Name="User" FullName="Microsoft.VisualBasic.ApplicationServices.User">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95474a7c5c874e8d1c4cc67a27e891e00c3f23af" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48640677" /></Metadata><TypeSignature Language="C#" Value="public class User" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi User extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.User" />
  <TypeSignature Language="VB.NET" Value="Public Class User" />
  <TypeSignature Language="C++ CLI" Value="public ref class User" />
  <TypeSignature Language="F#" Value="type User = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zapewnia dostęp do informacji o bieżącym użytkowniku.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości i metod udostępnianych przez `My.User` obiektu zapewniają dostęp do informacji o bieżącym użytkowniku. Znaczenie "bieżącego użytkownika" różni się nieco od Windows i aplikacji sieci Web. W aplikacji Windows bieżący użytkownik jest użytkownik, który uruchamia aplikację. W aplikacji sieci Web bieżącego użytkownika jest użytkownik, który uzyskuje dostęp do aplikacji.  
  
 `My.User` Właściwość umożliwia również dostęp do <xref:System.Security.Principal.IPrincipal> dla bieżącego użytkownika. Obiekt podmiotu zabezpieczeń reprezentuje użytkownika kontekstu zabezpieczeń, w tym tej tożsamości użytkownika i wszystkie role, do których należy użytkownik.  
  
 Dla aplikacji Windows, ta właściwość zapewnia taką samą funkcjonalność jak <xref:System.Threading.Thread.CurrentPrincipal%2A> właściwości. W przypadku aplikacji sieci Web, ta właściwość zapewnia taką samą funkcjonalność jak <xref:System.Web.HttpContext.User%2A> własności obiektu zwróconego przez <xref:System.Web.HttpContext.Current%2A> właściwości.  
  
> [!NOTE]
>  W przypadku aplikacji Windows tylko projekty kompilowane **aplikacji Windows** zainicjować szablonu `My.User` obiektu domyślnie. W przypadku wszystkich innych Windows typów projektów, należy zainicjować `My.User` obiektu przez wywołanie metody <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A> metoda jawnie lub przez przypisywanie wartości do <xref:System.Threading.Thread.CurrentPrincipal%2A>.  
  
> [!NOTE]
>  `My.User` Obiektu nie można zgłosić informacje o bieżącym użytkowniku Windows uruchamiania w obszarze Windows 95 i Windows 98, ponieważ te systemy operacyjne nie obsługują koncepcję zalogowanego użytkownika. Należy zaimplementować uwierzytelnianie niestandardowe, aby użyć `My.User` obiektu w tych systemach operacyjnych.  
  
   
  
## Examples  
 Ten przykład umożliwia sprawdzenie, jeśli aplikacja używa Windows lub uwierzytelniania niestandardowego i używa tych informacji w celu przeanalizowania `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="P:System.Web.HttpContext.User" />
    <altmember cref="P:System.Web.HttpContext.Current" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public User ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; User();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.User" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości i metod udostępnianych przez `My.User` obiektu zapewniają dostęp do informacji o bieżącym użytkowniku.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">Uzyskiwanie dostępu do danych użytkownika (Visual Studio)</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPrincipal">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal CurrentPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberSignature Language="VB.NET" Value="Public Property CurrentPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ CurrentPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia bieżący podmiot zabezpieczeń (w przypadku opartej na rolach zabezpieczeń).</summary>
        <value>A <see cref="T:System.Security.Principal.IPrincipal" /> reprezentującą kontekst zabezpieczeń.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz ustawić `My.User.CurrentPrincipal` właściwości do obiektu, który implementuje <xref:System.Security.Principal.IPrincipal> interfejsu, aby włączyć uwierzytelnianie niestandardowe.  
  
 W większości typów projektów ta właściwość pobiera i ustawia bieżący podmiot zabezpieczeń dla wątku. W aplikacji ASP.NET ta właściwość pobiera i ustawia informacje o zabezpieczeniach dla tożsamości użytkownika bieżącego żądania HTTP.  
  
 To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 Ten przykład umożliwia sprawdzenie, jeśli aplikacja używa Windows lub uwierzytelniania niestandardowego i używa tych informacji w celu przeanalizowania `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Obiekt wywołujący nie ma uprawnień, aby ustawić podmiot zabezpieczeń.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithWindowsUser">
      <MemberSignature Language="C#" Value="public void InitializeWithWindowsUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void InitializeWithWindowsUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeWithWindowsUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeWithWindowsUser();" />
      <MemberSignature Language="F#" Value="member this.InitializeWithWindowsUser : unit -&gt; unit" Usage="user.InitializeWithWindowsUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ustawia bieżący podmiot zabezpieczeń dla wątku użytkownika Windows, który uruchomił aplikację.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć `My.User.InitializeWithWindowsUser` metodę, aby ustawić bieżący podmiot zabezpieczeń dla wątku użytkownika Windows, który uruchomił aplikację. Model aplikacji Visual Basic w aplikacji Windows wywołuje tę metodę podczas uruchamiania, domyślnie. W innych typów projektów, należy ustawić bieżący podmiot zabezpieczeń dla wątku, przez wywołanie tej metody w sposób jawny lub przypisywanie wartości do <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
 W projektach Windows `My.User` obiektu opiera się na bieżący podmiot zabezpieczeń dla wątku; w związku z tym, tej metody można zmienić informacje `My.User` zwraca. W aplikacji ASP.NET `My.User` obiekt jest oparta na tożsamości użytkownika bieżącego żądania HTTP i nie mają wpływu tej metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym działa aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> klasa — Przegląd.  
  
 To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="InternalPrincipal">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal InternalPrincipal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property InternalPrincipal As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::Principal::IPrincipal ^ InternalPrincipal { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InternalPrincipal : System.Security.Principal.IPrincipal with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia jednostki obiekt reprezentujący bieżącego użytkownika.</summary>
        <value><see cref="T:System.Security.Principal.IPrincipal" /> Obiekt reprezentujący bieżącego użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W <xref:Microsoft.VisualBasic.ApplicationServices.User> obiekt i ta właściwość jest zawijany <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> właściwości. Należy przesłonić tę metodę w klasie pochodnej, aby zapewnić różne zachowanie. Na przykład <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=nameWithType> właściwość zastępuje tej właściwości.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy użytkownik został uwierzytelniony.</summary>
        <value><see langword="True" /> Jeśli użytkownik został uwierzytelniony; w przeciwnym razie <see langword="False" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsAuthenticated` Właściwość umożliwia swój kod definiujący, jeśli bieżący użytkownik został uwierzytelniony.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym działa aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> klasa — Przegląd.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik został uwierzytelniony przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsInRole">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(valuetype Microsoft.VisualBasic.ApplicationServices.BuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As BuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(Microsoft::VisualBasic::ApplicationServices::BuiltInRole role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : Microsoft.VisualBasic.ApplicationServices.BuiltInRole -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
      </Parameters>
      <Docs>
        <param name="role">Wbudowana rola Windows, dla którego ma zostać Sprawdź członkostwo w.</param>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
        <returns><see langword="True" /> Jeśli bieżący użytkownik jest członkiem określonej roli; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` Metoda umożliwia swój kod, aby określić, czy bieżący użytkownik jest członkiem określonej roli.  
  
 Przeciążenia `My.User.IsInRole` metody, która przyjmuje ciąg zapewnia łatwy dostęp do <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metoda bieżący podmiot zabezpieczeń.  
  
 Przeciążenia `My.User.IsInRole` metody, która przyjmuje `BuiltInRole` wyliczenie zachowuje się inaczej, w zależności od tego, bieżący podmiot zabezpieczeń. Jeśli główna użytkownika Windows (<xref:System.Security.Principal.WindowsPrincipal>), ta funkcja konwertuje `role` do równowartości <xref:System.Security.Principal.WindowsBuiltInRole> wyliczenie i zwraca wynik wywołania metody <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Jeśli bieżący podmiot zabezpieczeń jest inne jednostki, ta funkcja przekazuje nazwę wartości wyliczenia w `role` do podmiotu zabezpieczeń <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym działa aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> klasa — Przegląd.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik jest administratorem przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsInRole : string -&gt; bool" Usage="user.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Nazwa roli, do których chcesz sprawdzić członkostwa.</param>
        <summary>Określa, czy bieżący użytkownik należy do określonej roli.</summary>
        <returns><see langword="True" /> Jeśli bieżący użytkownik jest członkiem określonej roli; w przeciwnym razie <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.User.IsInRole` Metoda umożliwia swój kod, aby określić, czy bieżący użytkownik jest członkiem określonej roli.  
  
 Przeciążenia `My.User.IsInRole` metody, która przyjmuje ciąg zapewnia łatwy dostęp do <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metoda bieżący podmiot zabezpieczeń.  
  
 Przeciążenia `My.User.IsInRole` metody, która przyjmuje `BuiltInRole` wyliczenie zachowuje się inaczej, w zależności od tego, bieżący podmiot zabezpieczeń. Jeśli główna użytkownika Windows (<xref:System.Security.Principal.WindowsPrincipal>), ta funkcja konwertuje `role` do równowartości <xref:System.Security.Principal.WindowsBuiltInRole> wyliczenie i zwraca wynik wywołania metody <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>. Jeśli bieżący podmiot zabezpieczeń jest inne jednostki, ta funkcja przekazuje nazwę wartości wyliczenia w `role` do podmiotu zabezpieczeń <xref:System.Security.Principal.IPrincipal.IsInRole%2A> metody.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym działa aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> klasa — Przegląd.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 W tym przykładzie sprawdza, czy użytkownik jest administratorem przed uzyskaniem dostępu do zasobu.  
  
 [!code-vb[VbVbalrMyUser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.BuiltInRole" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.VisualBasic.ApplicationServices.User.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę bieżącego użytkownika.</summary>
        <value><see langword="String" />. Nazwa bieżącego użytkownika.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć `My.User` obiektu, aby uzyskać informacje o bieżącym użytkowniku.  
  
 Podmiot zabezpieczeń, który uwierzytelnia użytkownika kontroluje również format nazwy użytkownika. Domyślnie aplikacja korzysta z uwierzytelniania Windows, a nazwa użytkownika ma formatu domena\nazwa_użytkownika. Implementację niestandardową podmiotu zabezpieczeń nie zawsze używa tego samego formatu.  
  
> [!NOTE]
>  `My.User.Name` Właściwość zwraca pusty ciąg uruchamiania w obszarze Windows 95 i Windows 98, ponieważ te systemy operacyjne nie rozpoznają nazw użytkowników.  
  
> [!NOTE]
>  Dokładne zachowanie `My.User` obiektu zależy od typu aplikacji i systemu operacyjnego, na którym działa aplikacja. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.User> klasa — Przegląd.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja Windows|**Tak**|  
|Biblioteka klas|**Tak**|  
|Aplikacja konsoli|**Tak**|  
|Biblioteka formantów Windows|**Tak**|  
|Biblioteka formantów sieci Web|**Tak**|  
|Usługa systemu Windows|**Tak**|  
|Witryna sieci Web|**Tak**|  
  
   
  
## Examples  
 Ten przykład umożliwia sprawdzenie, jeśli aplikacja używa Windows lub uwierzytelniania niestandardowego i używa tych informacji w celu przeanalizowania `My.User.Name` właściwości.  
  
 [!code-vb[VbVbalrMyUser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyUser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">W tym artykule opisano zestaw uprawnień zabezpieczeń stosowane do kodu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/accessing-user-data.md">Uzyskiwanie dostępu do danych użytkownika (Visual Studio)</related>
      </Docs>
    </Member>
  </Members>
</Type>