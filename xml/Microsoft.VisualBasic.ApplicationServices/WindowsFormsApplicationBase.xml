<Type Name="WindowsFormsApplicationBase" FullName="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74408820a132a8d9dda638f039d3800a4d08307e" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53524282" /></Metadata><TypeSignature Language="C#" Value="public class WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WindowsFormsApplicationBase extends Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsFormsApplicationBase&#xA;Inherits ConsoleApplicationBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsFormsApplicationBase : Microsoft::VisualBasic::ApplicationServices::ConsoleApplicationBase" />
  <TypeSignature Language="F#" Value="type WindowsFormsApplicationBase = class&#xA;    inherit ConsoleApplicationBase" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia właściwości, metody i zdarzenia związane z bieżącej aplikacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości udostępniane przez `My.Application` obiekt o zwracanej dane, które są skojarzone tylko z bieżącej aplikacji lub biblioteki DLL. Brak informacji o poziomie systemu, może się zmienić z `My.Application`.  
  
 `My.Application` Obiekt składa się z następujących klas:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ApplicationBase> zawiera elementy członkowskie, które są dostępne we wszystkich projektach.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacjach Windows Forms.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase> zawiera elementy członkowskie, które są dostępne w aplikacji konsoli.  
  
   
  
## Examples  
 W tym przykładzie używa pętli do iterowania po formularzy otwartych w aplikacji, wybiera formularzy, które mogą być udostępniane bezpośrednio przez bieżący wątek i wyświetla tytuły w <xref:System.Windows.Forms.ListBox> kontroli. Aby dowiedzieć się, jak uzyskać dostęp do formularzy otwartych, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms%2A>.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 W tym przykładzie wymaga, aby aplikacja Windows Forms miały formularz o nazwie `Form1` zawierający pole listy o nazwie `ListBox1`.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase" />
    <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ApplicationBase" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> klasy.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsFormsApplicationBase (Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(valuetype Microsoft.VisualBasic.ApplicationServices.AuthenticationMode authenticationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.#ctor(Microsoft.VisualBasic.ApplicationServices.AuthenticationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsFormsApplicationBase(Microsoft::VisualBasic::ApplicationServices::AuthenticationMode authenticationMode);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase : Microsoft.VisualBasic.ApplicationServices.AuthenticationMode -&gt; Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" Usage="new Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase authenticationMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="authenticationMode" Type="Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />
      </Parameters>
      <Docs>
        <param name="authenticationMode"><see cref="T:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode" />. Określa tryb uwierzytelniania aplikacji.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" /> klasy za pomocą określonego trybu uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli `authenticationMode` parametr jest <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.Windows> wartości wyliczenia, a następnie ten konstruktor próbuje ustawić bieżącego wątku <xref:System.Threading.Thread.CurrentPrincipal%2A> właściwość <xref:System.Security.Principal.WindowsPrincipal> dla bieżącego użytkownika.  
  
 Jeśli `authenticationMode` parametr jest <xref:Microsoft.VisualBasic.ApplicationServices.AuthenticationMode.ApplicationDefined> wartości wyliczenia, a następnie ten konstruktor pozostawia bieżącego wątku <xref:System.Threading.Thread.CurrentPrincipal%2A> właściwości bez zmian.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationContext">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ApplicationContext ApplicationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ApplicationContext ApplicationContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationContext As ApplicationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ApplicationContext ^ ApplicationContext { System::Windows::Forms::ApplicationContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationContext : System.Windows.Forms.ApplicationContext" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ApplicationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ApplicationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.Forms.ApplicationContext" /> obiektu dla bieżącego wątku aplikacji Windows Forms.</summary>
        <value>Ta właściwość zwraca <see cref="T:System.Windows.Forms.ApplicationContext" /> obiektu dla bieżącego wątku. Ten obiekt zawiera informacje kontekstowe o wątku.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest Zaawansowany element członkowski; go nie są wyświetlane w IntelliSense dopóki nie zostanie kliknięta **wszystkich** kartę.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ApplicationContext" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="DoEvents">
      <MemberSignature Language="C#" Value="public void DoEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DoEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoEvents();" />
      <MemberSignature Language="F#" Value="member this.DoEvents : unit -&gt; unit" Usage="windowsFormsApplicationBase.DoEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Przetwarza wszystkie komunikaty Windows obecnie w kolejce komunikatów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.DoEvents` Metoda umożliwia aplikacji obsługiwanie inne zdarzenia, które może zostać wywołane, gdy kod działa. `My.Application.DoEvents` Metoda ma takie samo zachowanie jako <xref:System.Windows.Forms.Application.DoEvents%2A> metody.  
  
 Po uruchomieniu aplikacji Windows Forms, tworzy nowy formularz następnie czeka na zatwierdzenie zdarzenia, które mają być obsługiwane. Każdym formularzu obsługuje zdarzenia, takie jak kliknięcie przycisku, przetwarza cały kod skojarzony z tym zdarzeniem. Inne zdarzenia oczekiwać w kolejce. Gdy kod obsługuje wydarzenie, aplikacja nie odpowiada. Na przykład jeśli inne okno zostanie przeciągnięty u góry okna repaint nie.  
  
 Jeśli wywołasz `My.Application.DoEvents` w kodzie, aplikacja może obsłużyć inne zdarzenia. Na przykład, jeśli kod dodaje dane do <xref:System.Windows.Forms.ListBox> w pętli, a po każdym kroku pętli wywoływanych przez nią `My.Application.DoEvents`, odświeża formularza, gdy inne okno jest przeciągany nad nim. Jeśli usuniesz `My.Application.DoEvents` z Twojego kodu formularza nie spowoduje odświeżenia dopiero po zakończeniu program obsługi zdarzeń kliknięcie przycisku wykonywania.  
  
 Zwykle Użyj tej metody w pętli do przetwarzania komunikatów.  
  
> [!NOTE]
>  `My.Application.DoEvents` Metody nie przetwarza zdarzeń w taki sam sposób jak formularz. Użyj wielowątkowości, aby formularz był bezpośrednio obsługują zdarzenia. Aby uzyskać więcej informacji, zobacz [aplikacji wielowątkowych](https://msdn.microsoft.com/library/a06a1a56-dd16-44e8-bc01-2c2255511bc6).  
  
> [!CAUTION]
>  Jeśli wywołuje metodę, która obsługuje zdarzenie interfejsu użytkownika `My.Application.DoEvents` metody, Metoda ta może być ponowne wprowadzenie, przed zakończeniem. Taka sytuacja może wystąpić, ponieważ `My.Application.DoEvents` metoda przetwarza wiadomości Windows i Windows wiadomości może wywoływać zdarzenia.  
  
 W poniższej tabeli przedstawiono przykład zadań, obejmujących `My.Application.DoEvents` metody.  
  
|Zadanie|Zobacz|  
|-|-|  
|Zezwalaj na formularz, aby odpowiedzieć na dane wejściowe podczas zajęty interfejsu użytkownika|[Przewodnik: Obsługa zdarzeń](~/docs/visual-basic/programming-guide/language-features/events/walkthrough-handling-events.md)|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.DoEvents` metodę umożliwiającą w interfejsie użytkownika dla `TextBox1` do zaktualizowania.  
  
 [!code-vb[VbVbalrMyApplication#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#6)]  
  
 Ten kod powinien być w postaci, która ma `TextBox1` składnika za pomocą `Text` właściwości.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="M:System.Windows.Forms.Application.DoEvents" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableVisualStyles">
      <MemberSignature Language="C#" Value="protected bool EnableVisualStyles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableVisualStyles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Property EnableVisualStyles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool EnableVisualStyles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableVisualStyles : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy ta aplikacja będzie używać style Windows XP dla systemu windows, formantów i tak dalej.</summary>
        <value>A <see cref="T:System.Boolean" /> wartość, która wskazuje, czy ta aplikacja będzie używać style Windows XP dla systemu windows, formantów i tak dalej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> Metoda używa tej właściwości, aby określić, czy wywołać <xref:System.Windows.Forms.Application.EnableVisualStyles%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:System.Windows.Forms.Application.EnableVisualStyles" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="HideSplashScreen">
      <MemberSignature Language="C#" Value="protected void HideSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void HideSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HideSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HideSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.HideSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.HideSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ukrywa ekranu powitalnego aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> Klasy tworzy ekran powitalny w oddzielnym wątku. Ta metoda kieruje wywołania poprawny wątek.  
  
 Ta metoda jest wywoływana po zakończeniu formularza głównego ładowania.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="IsSingleInstance">
      <MemberSignature Language="C#" Value="protected bool IsSingleInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Property IsSingleInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSingleInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleInstance : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy ta aplikacja jest aplikacją pojedynczego wystąpienia.</summary>
        <value>A <see cref="T:System.Boolean" /> wartość, która wskazuje, czy ta aplikacja jest aplikacją pojedynczego wystąpienia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run%2A> Metoda używa tej właściwości, aby ustalić, czy ta aplikacja jest aplikacją pojedynczego wystąpienia.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia formularza głównego dla tej aplikacji.</summary>
        <value>Pobiera lub ustawia formularza głównego dla tej aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj `MainForm` właściwości do pobierania lub ustawiania <xref:System.Windows.Forms.Form> obiekt, który korzysta z modelu aplikacji Visual Basic uruchamianie/zamykanie jako formularza głównego aplikacji.  
  
 Ta właściwość obsługuje model aplikacji Visual Basic uruchamianie/zamykanie. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić trwale formularza głównego, należy zmienić to ustawienie w **projektanta projektu**.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="MinimumSplashScreenDisplayTime">
      <MemberSignature Language="C#" Value="public int MinimumSplashScreenDisplayTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumSplashScreenDisplayTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumSplashScreenDisplayTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSplashScreenDisplayTime : int with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa minimalną długość czasu w milisekundach, dla których jest wyświetlany na ekranie powitalnym.</summary>
        <value><see langword="Integer" />. Minimalna długość czasu w milisekundach, dla których jest wyświetlany na ekranie powitalnym.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.MinimumSplashScreenDisplayTime` Właściwości można określić minimalną długość czasu, które chcesz, aby ekran powitalny aplikacji mają być wyświetlane. Jeśli formularz główny zakończeniu inicjowania w krótszym czasie niż został określony przez tę właściwość na ekranie powitalnym pozostaje do żądanej ilości upływu czasu, co jest wyświetlany w formularzu głównym. Jeśli aplikacja ma już, na ekranie powitalnym jest zamknięty, po uaktywnieniu formularza głównego.  
  
 Po dodaniu ekran powitalny do aplikacji za pomocą projektanta projektu, ustawia `My.Application.MinimumSplashScreenDisplayTime` właściwości do 2000, dzięki czemu czas minimalny wyświetlania dwóch sekund.  
  
 Ta właściwość obsługuje model aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Należy ustawić `My.Application.MinimumSplashScreenDisplayTime` właściwość w metodę, która zastępuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> lub <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> metody. Kod, który zastępuje metody <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> klasy powinny być wprowadzane w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zastępowanie elementów członkowskich|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br />Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak ustawić `My.Application.MinimumSplashScreenDisplayTime` właściwości przez zastąpienie <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> właściwości.  
  
 [!code-vb[VbVbalrMyApplication#51](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#51)]  
  
 W tym przykładzie wymaga, że projekt ma ekran powitalny.  
  
 Ten kod należy wprowadzić w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie dostępności sieci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja wywołuje `NetworkAvailabilityChanged` zdarzeń każdym razem, który zmienia dostępności sieci. Możesz użyć <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> właściwość `e` parametru, aby pobrać nowy stan połączenia sieciowego. Aby uzyskać bieżący stan połączenia sieciowego, użyj <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwości.  
  
 To zdarzenie jest wywoływane w wątku głównym aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu program obsługi zdarzeń na bezpośredni dostęp interfejsu użytkownika aplikacji. Jednakże, jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest wywoływane, to zdarzenie nie można przetworzyć aż zakończy się lub wywołuje zdarzenie obsługi <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> metody.  
  
 <xref:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged> Zdarzeń zapewnia taką samą funkcjonalność, ale to zdarzenie jest dostępna dla wszystkich typów aplikacji.  
  
 Kod `NetworkAvailabilityChanged` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zdarzeń dotyczących aplikacji|  
|1.  Projekt wybrany w **Eksploratora rozwiązań.** Kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br />Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
> [!NOTE]
>  Wiele centrów sieci zapewni połączenie sieciowe, nawet jeśli koncentrator jest odłączony od większej sieci. W związku z tym dla połączeń przewodowych to zdarzenie oznacza zmianę w ramach połączenia między komputerem a koncentratora.  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Zdarzeń nie jest inicjowane przez aplikacje, gdy są uruchamiane w systemie Windows 95 i Windows 98 lub w przypadku, gdy są uruchamiane przez użytkowników niebędących administratorami w systemie operacyjnym Windows 2000. Jeśli Twoja aplikacja może działać w tych systemach operacyjnych, należy użyć <xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> właściwość do sprawdzenia dostępności sieci.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 Ten przykład wywołuje `SetConnectionStatus` metoda domyślnych `Form1` klasy po zmianie dostępności sieci.  
  
 Możesz wprowadzić kod w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać dostęp do tego okna, postępuj zgodnie z instrukcjami z sekcji uwag w tym temacie.  
  
 Projekt powinien mieć formularz o nazwie `Form1`. Powinien on metodę o nazwie `SetConnectionStatus` przyjmującej `Boolean` parametru.  
  
 [!code-vb[VbVbalrMyApplication#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateMainForm">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateMainForm ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateMainForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateMainForm ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateMainForm();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateMainForm : unit -&gt; unit&#xA;override this.OnCreateMainForm : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateMainForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta emitować Kod, który konfiguruje ekran powitalny i formularza głównego.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda nie działa. Jednak po wybraniu formularza głównego dla aplikacji w języku Visual Basic **projektanta projektu**, Projektant zastępuje tę metodę z metodą, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> właściwości do nowego wystąpienia formularza głównego.  
  
 Ta metoda jest wywoływana <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun%2A> metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnCreateSplashScreen">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnCreateSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateSplashScreen();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateSplashScreen : unit -&gt; unit&#xA;override this.OnCreateSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnCreateSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia projektanta emitować Kod, który inicjuje ekran powitalny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda nie działa. Wybranie ekran powitalny dla aplikacji w języku Visual Basic **projektanta projektu**, Projektant zastępuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> metodę z metodą, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen%2A> właściwość nowe wystąpienie formularza ekran powitalny .  
  
 Ta metoda jest wywoływana <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> metody.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnInitialize">
      <MemberSignature Language="C#" Value="protected virtual bool OnInitialize (System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; commandLineArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnInitialize(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; commandLineArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInitialize (commandLineArgs As ReadOnlyCollection(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnInitialize(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ commandLineArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool&#xA;override this.OnInitialize : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; -&gt; bool" Usage="windowsFormsApplicationBase.OnInitialize commandLineArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.STAThread</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLineArgs" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="commandLineArgs">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> z <see langword="String" />, zawierająca argumenty wiersza polecenia jako ciągi dla bieżącej aplikacji.</param>
        <summary>Ustawia stylów wizualnych, style wyświetlania tekstu i bieżący podmiot zabezpieczeń dla wątku głównego aplikacji (Jeśli aplikacja używa uwierzytelniania Windows) i inicjuje ekran powitalny, jeśli została zdefiniowana.</summary>
        <returns>A <see cref="T:System.Boolean" /> wskazujący, jeśli uruchomieniu aplikacji powinno być kontynuowane.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda ustawia stylów wizualnych, style wyświetlania tekstu i bieżący podmiot zabezpieczeń dla wątku głównego aplikacji (Jeśli aplikacja używa uwierzytelniania Windows) i wywołuje `ShowSplashScreen` Jeśli żadna `/nosplash` ani `-nosplash` służy jako argument wiersza polecenia.  
  
 Ta metoda wywołuje następujących metod:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A>.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A>.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None." />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.EnableVisualStyles" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnRun">
      <MemberSignature Language="C#" Value="protected virtual void OnRun ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnRun() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRun ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRun();" />
      <MemberSignature Language="F#" Value="abstract member OnRun : unit -&gt; unit&#xA;override this.OnRun : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnRun " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zapewnia punkt początkowy podczas aplikacji głównej jest gotowy do uruchomienia, uruchomione po zakończeniu inicjowania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie przed uśpieniem pętli komunikatów Windows Forms, ta metoda wywołuje `OnCreateMainForm` (w celu utworzenia aplikacji formularza głównego) i `HideSplashScreen` (tak, aby zamknąć ekran powitalny) metody:  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A>. Zapewnia sposób projektanta emitować Kod, który inicjuje formularza głównego.  
  
     Domyślnie ta metoda nie działa. Jednak po wybraniu formularza głównego dla aplikacji w języku Visual Basic **projektanta projektu**, Projektant zastępuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateMainForm%2A> metodę z metodą, która ustawia <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm%2A> właściwości do nowego wystąpienia formularza głównego.  
  
-   <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.HideSplashScreen%2A>. Jeśli aplikacja ma ekran powitalny zdefiniowany i jest otwarty, ta metoda zamyka ekran powitalny.  
  
     Domyślnie ta metoda zamyka ekran powitalny.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="windowsFormsApplicationBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia podczas zamykania aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda nie działa, jeśli wystąpi nieobsługiwany wyjątek w głównej aplikacji.  
  
 Domyślnie ta metoda wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown> zdarzeń.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStartup">
      <MemberSignature Language="C#" Value="protected virtual bool OnStartup (Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnStartup(class Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStartup (eventArgs As StartupEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStartup(Microsoft::VisualBasic::ApplicationServices::StartupEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool&#xA;override this.OnStartup : Microsoft.VisualBasic.ApplicationServices.StartupEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnStartup eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs"><see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />. Zawiera argumenty wiersza polecenia aplikacji i wskazuje, czy uruchamianie aplikacji powinna zostać anulowana.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia uruchomienie kodu po uruchomieniu aplikacji.</summary>
        <returns>A <see cref="T:System.Boolean" /> oznacza to, jeśli aplikacja powinna nadal uruchamiany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> zdarzeń. Program obsługi zdarzeń można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwości argumentu zdarzenia. Jeśli <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> jest `True`, Metoda ta zwraca `False` do anulowania uruchomienia aplikacji. W przeciwnym razie metoda ta zwraca `True`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="OnStartupNextInstance">
      <MemberSignature Language="C#" Value="protected virtual void OnStartupNextInstance (Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void OnStartupNextInstance(class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnStartupNextInstance(Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStartupNextInstance (eventArgs As StartupNextInstanceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStartupNextInstance(Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit&#xA;override this.OnStartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs -&gt; unit" Usage="windowsFormsApplicationBase.OnStartupNextInstance eventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventArgs"><see cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />. Zawiera argumenty wiersza polecenia wystąpienia kolejnych aplikacji i wskazuje, czy pierwsze wystąpienie aplikacji powinny być przesunięte na pierwszy plan podczas zamykania programu obsługi wyjątków.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia po uruchomieniu kolejne wystąpienie aplikacja o pojedynczym wystąpieniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> zdarzeń. Program obsługi zdarzeń można ustawić <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> właściwości argumentu zdarzenia. Jeśli <xref:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs.BringToForeground%2A> jest `True`, metoda aktywuje formularza głównego. W przeciwnym razie formularz główny pozostanie w jego bieżącym stanie.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.IsSingleInstance" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="protected virtual bool OnUnhandledException (Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance bool OnUnhandledException(class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnUnhandledException(Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnhandledException (e As UnhandledExceptionEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnUnhandledException(Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool&#xA;override this.OnUnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs -&gt; bool" Usage="windowsFormsApplicationBase.OnUnhandledException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej, umożliwia kod wymagany do uruchomienia po wystąpieniu nieobsługiwanego wyjątku w aplikacji.</summary>
        <returns>A <see cref="T:System.Boolean" /> oznacza to, czy <see cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" /> zdarzenia zostało podniesione.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda wywołuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException> tak długo, jak nie jest dołączony debuger i użytkownik jest obsługa zdarzeń `UnhandledException` zdarzeń. Program obsługi zdarzeń można ustawić <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> właściwości. Jeśli <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> jest `False`, lub jeśli zdarzenie nie jest obsługiwane, aplikacja kończy działanie po powrocie z obsługi wyjątków. W przeciwnym razie kontrolka aplikacji jest zwracana do pętli komunikatów Windows Forms.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="OpenForms">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FormCollection OpenForms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FormCollection OpenForms" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenForms As FormCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FormCollection ^ OpenForms { System::Windows::Forms::FormCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OpenForms : System.Windows.Forms.FormCollection" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OpenForms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FormCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wszystkich aplikacji, otwartych formularzy.</summary>
        <value>A <see cref="T:System.Windows.Forms.FormCollection" /> obiekt, który zawiera wszystkie formularze otwartych w aplikacji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.OpenForms` Właściwości pobiera kolekcję wszystkich aplikacji, otwartych formularzy. To zachowanie jest taka sama jak <xref:System.Windows.Forms.Application.OpenForms%2A?displayProperty=nameWithType> właściwości.  
  
> [!NOTE]
>  `My.Application.OpenForms` Właściwość zwraca wszystkie otwarte formularze, niezależnie od tego, który wątek otworzyć je. Należy sprawdzić <xref:System.Windows.Forms.Control.InvokeRequired%2A> właściwości każdego formularza przed uzyskaniem dostępu do niego; w przeciwnym razie może zgłosić <xref:System.InvalidOperationException> wyjątku.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie pętli formularzy otwartych w aplikacji, wybiera te, które są dostępne bezpośrednio przez bieżący wątek i wyświetla tytuły w <xref:System.Windows.Forms.ListBox> kontroli. W tym przykładzie wymaga, aby aplikacja Windows Forms miały formularz o nazwie `Form1` zawierający pole listy o nazwie `ListBox1`.  
  
 [!code-vb[VbVbalrMyApplication#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#10)]  
  
 W tym przykładzie pętli formularzy otwartych aplikacji i wyświetla tytuły w <xref:System.Windows.Forms.ListBox> kontroli.  
  
 [!code-vb[VbVbalrMyApplication#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia, które odnoszą się do interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <altmember cref="T:System.Windows.Forms.FormCollection" />
        <altmember cref="P:System.Windows.Forms.Application.OpenForms" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (string[] commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Run(string[] commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (commandLine As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(cli::array &lt;System::String ^&gt; ^ commandLine);" />
      <MemberSignature Language="F#" Value="member this.Run : string[] -&gt; unit" Usage="windowsFormsApplicationBase.Run commandLine" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="commandLine">Tablica typu <see langword="String" />. Wiersz polecenia z <see langword="Sub Main" />.</param>
        <summary>Konfiguruje i uruchamia model aplikacji Visual Basic.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.Run` Metoda zapewnia obsługę modelu aplikacji Visual Basic. Tę metodę należy wywoływać tylko z aplikacji `Sub Main`. Domyślnie `Sub Main` formularzy Windows aplikacja wywołuje tę metodę. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Kontroluje możliwość dostępu do wszystkich zmiennych środowiskowych. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Kontroluje możliwość dostępu do plików i folderów. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Kontroluje możliwość dostępu do zmiennych rejestru. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">Określa uprawnienia związane z interfejsów użytkownika i Schowka. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</permission>
        <permission cref="T:System.Net.WebPermission">Określa prawa dostępu do zasobów HTTP w Internecie. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Net.SocketPermission">Formanty prawa lub akceptowania połączeń na adres transportu. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Służy do sterowania dostępem do składnika licznika wydajności systemu Windows NT. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Omówienie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="SaveMySettingsOnExit">
      <MemberSignature Language="C#" Value="public bool SaveMySettingsOnExit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveMySettingsOnExit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveMySettingsOnExit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveMySettingsOnExit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveMySettingsOnExit : bool with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SaveMySettingsOnExit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, czy aplikacja zapisuje ustawień użytkownika na wyjściu.</summary>
        <value><see langword="Boolean" />. <see langword="True" /> Wskazuje, że aplikacja zapisuje ustawień użytkownika na wyjściu. W przeciwnym razie ustawienia nie są domyślnie zapisywane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `SaveMySettingsOnExit` Właściwość zezwala użytkownikowi na zmianę, w jaki sposób aplikacja zapisuje ustawienia, w czasie wykonywania. Możesz jawnie zapisać zmiany ustawień za pomocą <xref:System.Configuration.ApplicationSettingsBase.Save%2A> metody `My.Settings` obiektu. Aby uzyskać więcej informacji na temat zmiany i zapisywania ustawień, zobacz [właściwości aplikacji](https://msdn.microsoft.com/library/0ad4926f-636e-41f8-a5b1-faf9d9b0a254).  
  
 Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić `SaveMySettingsOnExit` właściwość stałe, należy zmienić to ustawienie w **projektanta projektu**:  
  
| |  
|-|  
|Aby zmienić ustawienia w Projektancie projektu|  
|1.  Projekt wybrany w **Eksploratora rozwiązań**. Kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Wybierz **Zapisz My.Settings podczas zamykania**.|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie ma dwie części.  
  
-   `InitializeSaveMySettingsOnExit` Procedurę, która inicjuje stan zaznaczenia <xref:System.Windows.Forms.CheckBox> kontrolki bieżącą wartość `SaveMySettingsOnExit` właściwości.  
  
-   `SaveMySettingsOnExit_CheckedChanged` Procedurę, która obsługuje zmiany <xref:System.Windows.Forms.CheckBox> formantu, aby zaktualizować `My.Application.SaveMySettingsOnExit` właściwości.  
  
 [!code-vb[VbVbalrMyApplication#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#12)]  
  
 W tym przykładzie do pracy, aplikacja musi mieć <xref:System.Windows.Forms.CheckBox> formantu o nazwie `SaveMySettingsOnExit`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ShowSplashScreen">
      <MemberSignature Language="C#" Value="protected void ShowSplashScreen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyinstance void ShowSplashScreen() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ShowSplashScreen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ShowSplashScreen();" />
      <MemberSignature Language="F#" Value="member this.ShowSplashScreen : unit -&gt; unit" Usage="windowsFormsApplicationBase.ShowSplashScreen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy aplikacja ma ekran powitalny zdefiniowane, a jeśli tak jest, wyświetla je.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie ta metoda wywołuje `OnCreateSplashScreen` w sposób wątkowo.  
  
 <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> Metoda zawiera kod, który wyświetla powitalny ekranu do wyrażony w milisekundach czas określony przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A> właściwości. Aby korzystać z tej funkcji, należy ustawić `My.Application.MinimumSplashScreenDisplayTime` właściwość w metodę, która zastępuje <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShowSplashScreen%2A> lub <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnCreateSplashScreen%2A> metodę, lub dodać ekran powitalny do swojej aplikacji za pomocą **projektanta projektu**. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime%2A>.  
  
 Ta metoda jest wywoływana <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize%2A> metody.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnInitialize(System.Collections.ObjectModel.ReadOnlyCollection{System.String})" />
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler Shutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event Shutdown As ShutdownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::ShutdownEventHandler ^ Shutdown;" />
      <MemberSignature Language="F#" Value="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " Usage="member this.Shutdown : Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy zamyka aplikację.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja wywołuje `Shutdown` zdarzenie przed jej zakończenia. Dzięki temu można kontrolować, jak aplikacja zamyka jej zasobów. To zdarzenie jest częścią modelu aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Kod `Shutdown` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zdarzeń dotyczących aplikacji|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br />Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie powoduje rejestrowanie komunikatów podczas zamykania aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#13)]  
  
 Możesz wprowadzić kod w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać dostęp do tego okna, postępuj zgodnie z instrukcjami z sekcji uwag w tym temacie. Aby uzyskać więcej informacji, zobacz [jak: Rejestrowanie wiadomości podczas uruchamiania lub wyłączania aplikacji](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-messages-when-the-application-starts-or-shuts-down.md">Instrukcje: Komunikaty dziennika podczas uruchamiania aplikacji lub zamknięciu</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Strona aplikacji, Projektant projektu (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Omówienie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="ShutdownStyle">
      <MemberSignature Language="C#" Value="protected internal Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.ApplicationServices.ShutdownMode ShutdownStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property ShutdownStyle As ShutdownMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property Microsoft::VisualBasic::ApplicationServices::ShutdownMode ShutdownStyle { Microsoft::VisualBasic::ApplicationServices::ShutdownMode get(); void set(Microsoft::VisualBasic::ApplicationServices::ShutdownMode value); };" />
      <MemberSignature Language="F#" Value="member this.ShutdownStyle : Microsoft.VisualBasic.ApplicationServices.ShutdownMode with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.ShutdownStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.ShutdownMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa, co się stanie po zamknięciu formularza głównego aplikacji.</summary>
        <value>A <see cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" /> wartość wyliczenia wskazująca na to, co aplikacja powinna wykonać po zamknięciu tego formularza.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> Metoda sprawdza wartość tej właściwości, aby określić, jeśli aplikacja powinna zamknięcie głównego formularza jest zamknięty lub jeśli inny Otwórz formularz należy podwyższyć poziom jako nowego formularza głównego.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.ShutdownMode" />
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form SplashScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property SplashScreen As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ SplashScreen { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SplashScreen : System.Windows.Forms.Form with get, set" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.SplashScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ekran powitalny dla tej aplikacji.</summary>
        <value>Element <see cref="T:System.Windows.Forms.Form" /> obiektu, którego używa aplikacja jako ekran powitalny.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Application.SplashScreen` Właściwość pozwala pobrać lub ustawić <xref:System.Windows.Forms.Form> obiektu, którego używa aplikacja jako ekran powitalny, pierwszy postaci graficznej, który jest wyświetlany, gdy aplikacja jest uruchamiana.  
  
 Ta właściwość obsługuje model aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Zmiany w tej właściwości nie są zachowywane po zamknięciu aplikacji. Aby zmienić ekran powitalny trwale, należy zmienić ustawienie **projektanta projektu**.  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.SplashScreen` właściwości i `My.Application.Startup` zdarzenie, aby zaktualizować informacje o stanie ekran powitalny, po uruchomieniu aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 W tym przykładzie wymaga, aby projekt miał ekran powitalny, o nazwie `SplashScreen1`. Ekran powitalny musi mieć właściwość o nazwie `Status` aktualizuje się interfejs użytkownika.  
  
 Ten kod należy wprowadzić w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Tę samą wartość jest przypisany do tej właściwości i <see cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MainForm" /> właściwości.</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.MinimumSplashScreenDisplayTime" />
        <altmember cref="T:System.Windows.Forms.Form" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupEventHandler Startup" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
      <MemberSignature Language="VB.NET" Value="Public Event Startup As StartupEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupEventHandler ^ Startup;" />
      <MemberSignature Language="F#" Value="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " Usage="member this.Startup : Microsoft.VisualBasic.ApplicationServices.StartupEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje podczas uruchamiania aplikacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalne aplikacji (innych niż pojedynczego wystąpienia) zgłasza `Startup` zdarzeń w każdym uruchomieniu. Aplikacja o pojedynczym wystąpieniu zgłasza `Startup` zdarzenia podczas jego uruchamiania, tylko jeśli aplikacja nie jest już aktywny; w przeciwnym razie, zgłasza `StartupNextInstance` zdarzeń. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance>.  
  
 To zdarzenie jest częścią modelu aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Możesz użyć <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość `e` parametru, aby kontrolować ładowanie formularz początkowy aplikacji. Gdy <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość jest ustawiona na `True`, formularz początkowy nie rozpoczyna się. W takiej sytuacji kod powinien wywoływać ścieżką kod startowy alternatywne.  
  
 Możesz użyć <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> właściwość `e` parametru lub <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> właściwość dostęp do argumentów wiersza polecenia aplikacji.  
  
 Kod `Startup` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zdarzeń dotyczących aplikacji|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br /> Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.SplashScreen` właściwości i `My.Application.Startup` zdarzenie, aby zaktualizować informacje o stanie ekran powitalny, po uruchomieniu aplikacji.  
  
 [!code-vb[VbVbalrMyApplication#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#14)]  
  
 W tym przykładzie wymaga, aby projekt miał ekran powitalny, o nazwie `SplashScreen1`. Ekran powitalny musi mieć właściwość o nazwie `Status` aktualizuje się interfejs użytkownika.  
  
 Możesz wprowadzić kod w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać dostęp do tego okna, postępuj zgodnie z instrukcjami z sekcji uwag w tym temacie. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Kontroluje możliwość dodania obsługi zdarzeń dla tego zdarzenia. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</permission>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Strona aplikacji, Projektant projektu (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Omówienie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="StartupNextInstance">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler StartupNextInstance" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance" />
      <MemberSignature Language="VB.NET" Value="Public Event StartupNextInstance As StartupNextInstanceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::StartupNextInstanceEventHandler ^ StartupNextInstance;" />
      <MemberSignature Language="F#" Value="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " Usage="member this.StartupNextInstance : Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.StartupNextInstanceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy próba uruchomienia aplikacji jednego wystąpienia i jest już aktywny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja o pojedynczym wystąpieniu zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> zdarzenie, gdy użytkownik podejmie próbę ponownego uruchomienia aplikacji, gdy nie jest już aktywny. Gdy aplikacja o pojedynczym wystąpieniu rozpoczyna się po raz pierwszy, zgłasza <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup> zdarzeń. Aby uzyskać więcej informacji, zobacz <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup>.  
  
 To zdarzenie jest częścią modelu aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 To zdarzenie jest wywoływane w wątku głównym aplikacji z innymi zdarzeniami interfejsu użytkownika. Dzięki temu program obsługi zdarzeń na bezpośredni dostęp interfejsu użytkownika aplikacji. Jednakże, jeśli aplikacja jest zajęta, obsługa inne zdarzenie interfejsu użytkownika, gdy to zdarzenie jest wywoływane, to zdarzenie nie można przetworzyć aż zakończy się lub wywołuje zdarzenie obsługi <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> metody.  
  
> [!NOTE]
>  `StartupNextInstance` Zdarzenie jest wywoływane tylko w jednym wystąpieniu aplikacji. Aby włączyć zachowanie jednego wystąpienia aplikacji, należy sprawdzić **pojedynczego wystąpienia aplikacji** pole wyboru w Projektancie projektu.  
  
| |  
|-|  
|Zapewnienie pojedynczego wystąpienia aplikacji|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Wybierz **pojedynczego wystąpienia aplikacji** pole wyboru.|  
  
 Należy użyć <xref:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine%2A> właściwość `e` parametru, aby dostęp do argumentów dla kolejnych prób uruchomić aplikację jednego wystąpienia. <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A> Dostarcza argumentów użyte w celu rozpoczęcia pierwszego wystąpienia jednego wystąpienia aplikacji.  
  
 Kod <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zdarzeń dotyczących aplikacji|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br />Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
 W poniższej tabeli wymieniono przykłady zadań obejmujących `My.Application.StartupNextInstance` zdarzeń.  
  
|Zadanie|Zobacz|  
|-|-|  
|Sprawdź argumenty wiersza polecenia pierwszego wystąpienia aplikacji|<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs%2A>|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|Tak|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `e` parametru <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.StartupNextInstance> program obsługi zdarzeń, aby zbadać argumenty wiersza polecenia aplikacji. Jeśli argument zostanie znaleziony, który zaczyna się od `/input=`, pozostała część tego argumentu jest wyświetlany.  
  
 [!code-vb[VbVbalrMyApplication#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#15)]  
  
 Możesz wprowadzić kod w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać dostęp do tego okna, postępuj zgodnie z instrukcjami z sekcji uwag w tym temacie. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Startup" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.CommandLineArgs" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.StartupEventArgs.CommandLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Strona aplikacji, Projektant projektu (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Omówienie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UnhandledException">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler UnhandledException" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledException As UnhandledExceptionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::ApplicationServices::UnhandledExceptionEventHandler ^ UnhandledException;" />
      <MemberSignature Language="F#" Value="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " Usage="member this.UnhandledException : Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy aplikacja napotkał nieobsługiwany wyjątek.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aplikacja wywołuje `UnhandledException` zdarzeń po napotkaniu nieobsługiwany wyjątek. To zdarzenie jest częścią modelu aplikacji Visual Basic. Aby uzyskać więcej informacji, zobacz [omówienie modelu aplikacji Visual Basic](~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md).  
  
 Możesz użyć <xref:System.Threading.ThreadExceptionEventArgs.Exception%2A> właściwość `e` parametru, aby dostęp nieobsługiwany wyjątek, który spowodował zdarzenie to.  
  
 Możesz użyć <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> właściwość `e` parametru, aby kontrolować, czy aplikacja kończy działanie. Domyślnie <xref:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs.ExitApplication%2A> jest `True`. Aplikacja kończy działanie po ukończeniu `UnhandledException` programu obsługi zdarzeń. Wartość można ustawić, `False` w `UnhandledException` programu obsługi zdarzeń, aby aplikacja była uruchomiona i powrócić do stanu oczekiwania.  
  
 Kod `UnhandledException` program obsługi zdarzeń jest przechowywany w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zdarzeń dotyczących aplikacji|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.|  
  
 Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
> [!NOTE]
>  Kompilator Visual Basic zapobiega aplikacje zaprojektowane do debugowania z procesu zgłaszania to zdarzenie, aby włączyć debugera do obsługi nieobsługiwanych wyjątków. Oznacza to, że w przypadku testowania aplikacji przez uruchomienie jej w debugerze programu Visual Studio, zintegrowane środowisko projektowe z `UnhandledException` nie zostanie wywołana procedura obsługi zdarzeń. Aby uzyskać więcej informacji na temat tworzenia aplikacji do debugowania, zobacz [/Debug (Visual Basic)](~/docs/visual-basic/reference/command-line-compiler/debug.md).  
  
## <a name="tasks"></a>Zadania  
 W poniższej tabeli wymieniono przykłady zadań, obejmujących `My.Application.UnhandledException` zdarzeń.  
  
|Zadanie|Zobacz|  
|-|-|  
|Rejestrowania nieobsługiwanych wyjątków|[Instrukcje: Rejestruje wyjątki](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
  
## <a name="availability-by-project-type"></a>Dostępność według typu projektu  
  
|Typ projektu|Dostępne|  
|-|-|  
|Aplikacja interfejsu Windows Forms|**Tak**|  
|Biblioteka klas|Nie|  
|Aplikacja konsoli|Nie|  
|Biblioteka formantów interfejsu Windows Forms|Nie|  
|Biblioteka formantów sieci Web|Nie|  
|Usługa systemu Windows|Nie|  
|Witryna sieci Web|Nie|  
  
   
  
## Examples  
 W tym przykładzie użyto `My.Application.UnhandledException` zdarzenie, aby rejestrować dowolne nieobsługiwane wyjątki.  
  
 Możesz wprowadzić kod w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać dostęp do tego okna, wykonaj procedury w sekcji uwag w tym temacie. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 Ponieważ `UnhandledException` zdarzeń nie jest inicjowane, gdy debuger jest dołączony do aplikacji, należy uruchomić ten przykład poza programem Visual Studio zintegrowane środowisko projektowe.  
  
 [!code-vb[VbVbalrMyApplication#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/FakeMyEvents.vb#17)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Kontroluje możliwość dodania obsługi zdarzeń dla tego zdarzenia. Powiązane wyliczenie: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlAppDomain" />.</permission>
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase" />
        <altmember cref="N:Microsoft.VisualBasic.ApplicationServices" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.ApplicationServices.UnhandledExceptionEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Obiekty (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/development-with-my/overview-of-the-visual-basic-application-model.md">Omówienie modelu aplikacji Visual Basic</related>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="protected static bool UseCompatibleTextRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property bool UseCompatibleTextRendering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool" Usage="Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>W przypadku przesłonięcia w klasie pochodnej, ta właściwość umożliwia projektanta określić domyślny aparat renderowania tekstu dla aplikacji formularzy.</summary>
        <value><see langword="Boolean" />. Wartość <see langword="False" /> wskazuje, że aplikacja powinna używać domyślnego aparatu renderowania tekstu dla [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)]. Wartość <see langword="True" /> wskazuje, że aplikacja powinna używać aparatu renderowania tekstu dla języka Visual Basic .NET 2002 i Visual Basic .NET 2003.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie właściwość ta zwraca `False` z informacją, że tekst interfejsu GDI, aparat renderowania [!INCLUDE[vbprvblong](~/includes/vbprvblong-md.md)] służyć do formularzy aplikacji. Jednak możesz zastąpić tę właściwość, aby zwrócić `True` i określić, że formularzy aplikacji używać tekstu aparat renderowania GDI +, która jest używana w języku Visual Basic .NET 2002 i Visual Basic .NET 2003.  
  
 Właściwość ta jest wywoływana przez <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> konstruktora.  
  
 Kod, który zastępuje metody <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase> klasy powinny być wprowadzane w pliku ApplicationEvents.vb, który jest domyślnie ukryty.  
  
| |  
|-|  
|Aby uzyskać dostęp do okna edytora kodu dla zastępowanie elementów członkowskich|  
|1.  Za pomocą projektu wybranego w **Eksploratora rozwiązań**, kliknij przycisk **właściwości** na **projektu** menu.<br />2.  Kliknij przycisk **aplikacji** kartę.<br />3.  Kliknij przycisk **Wyświetl zdarzenia aplikacji** przycisk, aby otworzyć Edytor kodu.<br /><br />Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).|  
  
   
  
## Examples  
 W tym przykładzie pokazano, jak ustawić tekst aparat renderowania GDI + jako aparat renderowania domyślnej aplikacji przez zastąpienie <xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering%2A> właściwości.  
  
```vb  
Protected Overloads Shared ReadOnly Property UseCompatibleTextRendering() As Boolean  
    Get  
        ' Use the GDI+ text rendering engine.  
        Return True  
    End Get  
End Property  
```  
  
 Ten kod należy wprowadzić w oknie edytora kodu dla zdarzeń dotyczących aplikacji. Aby uzyskać więcej informacji, zobacz [strona aplikacji, Projektant projektu (Visual Basic)](https://docs.microsoft.com/visualstudio/ide/reference/application-page-project-designer-visual-basic).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/developing-apps/customizing-extending-my/extending-the-visual-basic-application-model.md">Rozszerzanie modelu aplikacji Visual Basic</related>
        <related type="Article" href="/visualstudio/ide/reference/application-page-project-designer-visual-basic">Strona aplikacji, Projektant projektu (Visual Basic)</related>
      </Docs>
    </Member>
  </Members>
</Type>