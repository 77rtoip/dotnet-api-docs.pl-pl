<Type Name="WorkflowMarkupSerializer" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e681882d7a852ea6fff8ac82da2888b01aec4919" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69442056" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowMarkupSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializer" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationProvider))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zapewnia usługi serializacji języka Extensible Application Markup Language (XAML) do przepływów pracy w czasie projektowania.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>zapewnia metody serializacji przepływu pracy i <xref:System.Workflow.ComponentModel.Activity> klas do formatu XAML i deserializacji zawartości XAML do obiektów przepływu pracy i klasy działania. Te usługi są używane głównie przez projektantów przepływu pracy do utrwalania klas na powierzchni projektowej przepływu pracy.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>jest klasą bazową dla wszystkich serializatorów znaczników zawartych w <xref:System.Workflow.ComponentModel.Serialization> przestrzeni nazw.  
  
 Aby uzyskać więcej informacji, zobacz [serializacji](https://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>nie obsługuje serializacji zagnieżdżonych typów.  
  
 Funkcja <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> jest zależna od funkcjonalności innych typów poza Windows Workflow Foundation. Na podstawie ograniczeń tych innych typów nie można serializować wszystkich typów danych za pośrednictwem <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>. Poniżej znajduje się Lista przykładów niektórych nieobsługiwanych typów.  
  
> [!NOTE]
>  Nie jest to pełna i kompletna lista nieobsługiwanych typów.  
  
 Tablice (obsługiwane tylko wtedy, gdy właściwość nie jest `DesignerSerializationVisibility.Content` dekoracyjna z wartością atrybutu)  
  
 Typy bez nieparametrycznych konstruktorów  
  
 Tablice wielowymiarowe  
  
 Typy ogólne ( `List` rodzajowe `Dictionary` i typy obsługiwane tylko wtedy, gdy właściwość `DesignerSerializationVisibility.Content` jest dekoracyjna z wartością atrybutu)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 Tablice wyliczeniowe  
  
 Wyliczenia z FlagsAttribute  
  
 Oprócz tej listy wszystkie właściwości `ContentPropertyAttribute` `DesignerSerializationVisibilityAttribute` , które nie mogą być serializowane przez `WorkflowMarkupSerializer`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład kodu pokazuje, jak utworzyć nowe wystąpienie <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> klasy.  Ten przykład kodu jest częścią przykładu zestawu SDK OutlookWorkflowWizard z pliku Loader.cs. Aby uzyskać więcej informacji, zobacz [Kreator przepływu pracy w programie Outlook](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).  
  
 [!code-csharp[WF_Samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[WF_Samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected internal virtual void AddChild (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void AddChild(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object parentObject, object childObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub AddChild (serializationManager As WorkflowMarkupSerializationManager, parentObject As Object, childObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void AddChild(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ parentObject, System::Object ^ childObj);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit&#xA;override this.AddChild : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj * obj -&gt; unit" Usage="workflowMarkupSerializer.AddChild (serializationManager, parentObject, childObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="parentObject" Type="System.Object" />
        <Parameter Name="childObj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Do użycia w tej operacji.</param>
        <param name="parentObject">, <see cref="T:System.Object" /> Do którego ma zostać dodany obiekt podrzędny.</param>
        <param name="childObj"><see cref="T:System.Object" /> Do dodania.</param>
        <summary>Dodaje obiekt podrzędny do określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz zachowania <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.AddChild%2A> wyjątku nie jest to zachowanie domyślne. Należy przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> , aby zapewnić logikę dla tej metody w dziedzicznym serializatorze.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parentObject" />lub <paramref name="childObj" /> zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="CanSerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual bool CanSerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool CanSerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CanSerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CanSerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool CanSerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.CanSerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.CanSerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Używane do serializacji tego obiektu.</param>
        <param name="value">Określony <see cref="T:System.Object" />.</param>
        <summary>Zwraca wartość logiczną wskazującą, czy określony obiekt może być serializowany do ciągu.</summary>
        <returns><see langword="true" />Jeśli określony obiekt może być serializowany do ciągu; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="value" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearChildren">
      <MemberSignature Language="C#" Value="protected internal virtual void ClearChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ClearChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ClearChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ClearChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.ClearChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.ClearChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Obsługa tej operacji.</param>
        <param name="obj"><see cref="T:System.Object" /> Z którego mają zostać usunięte wszystkie obiekty podrzędne.</param>
        <summary>Usuwa wszystkie obiekty podrzędne z określonego obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oprócz zachowania <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClearChildren%2A> wyjątku nie jest to zachowanie domyślne. Należy przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> , aby zapewnić logikę dla tej metody w dziedzicznym serializatorze.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="obj" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <Member MemberName="ClrNamespacesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty ClrNamespacesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClrNamespacesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ ClrNamespacesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClrNamespacesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ClrNamespacesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje dołączony <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> , który jest używany do definiowania zestawów, które mają być odwołujące się do działań niestandardowych.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat tej właściwości zależności, zobacz [Using Workflow Markup](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual object CreateInstance (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateInstance(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateInstance(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj&#xA;override this.CreateInstance : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type -&gt; obj" Usage="workflowMarkupSerializer.CreateInstance (serializationManager, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Obsługa tej operacji.</param>
        <param name="type">Określony<see cref="T:System.Type" /></param>
        <summary>Tworzy wystąpienie określone <see cref="T:System.Type" /> przy użyciu określonego <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />elementu.</summary>
        <returns>Wystąpienie określonego <see cref="T:System.Type" />elementu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.CreateInstance%2A>używa konstruktora typów, który najlepiej pasuje do określonego parametru.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="type" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deserializacja serializowanego języka Extensible Application Markup Language (XAML) zawartego w określonym <see cref="T:System.IO.TextReader" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> Zawierający definicję przepływu pracy.</param>
        <summary>Deserializacji znacznika przepływu pracy do <see cref="T:System.Object" />.</summary>
        <returns><see cref="T:System.Object" /> Zawiera definicję przepływu pracy zdefiniowanego w pliku znaczników przepływu pracy lub w strumieniu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat znaczników przepływu pracy, zobacz [Using Workflow Markup](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationManager As IDesignerSerializationManager, reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlReader -&gt; obj" Usage="workflowMarkupSerializer.Deserialize (serializationManager, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Obiekt implementujący <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejs, taki jak <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
        <param name="reader"><see cref="T:System.Xml.XmlReader" /> Zawierający definicję przepływu pracy.</param>
        <summary>Deserializacji znaczników przepływu pracy do <see cref="T:System.Object" /> przy użyciu określonego menedżera serializacji.</summary>
        <returns><see cref="T:System.Object" /> Zawiera definicję przepływu pracy zdefiniowanego w pliku znaczników przepływu pracy lub w strumieniu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat znaczników przepływu pracy, zobacz [Using Workflow Markup](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="reader" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeFromString">
      <MemberSignature Language="C#" Value="protected internal virtual object DeserializeFromString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, Type propertyType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object DeserializeFromString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, class System.Type propertyType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.DeserializeFromString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeserializeFromString (serializationManager As WorkflowMarkupSerializationManager, propertyType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ DeserializeFromString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, Type ^ propertyType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj&#xA;override this.DeserializeFromString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * Type * string -&gt; obj" Usage="workflowMarkupSerializer.DeserializeFromString (serializationManager, propertyType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem deserializacji.</param>
        <param name="propertyType"><see cref="T:System.Type" /> Skojarzona z właściwością do deserializacji.</param>
        <param name="value">Ciąg zawierający kod XAML do deserializacji.</param>
        <summary>Deserializacji zawartość języka Extensible Application Markup Language (XAML) z określonego ciągu zgodnie z podanym typem właściwości do deserializacji.</summary>
        <returns>Deserializowany <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value`musi spełniać jedno z następujących kryteriów:  
  
-   jest to typ pierwotny, ciąg, Wyliczenie lub <xref:System.TimeSpan>.  
  
-   może być przypisany z <xref:System.IConvertible> interfejsu lub <xref:System.Delegate> z klas lub <xref:System.Type> .  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />, <paramref name="propertyType" />, lub <paramref name="value" />, zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="EventsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty EventsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty EventsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EventsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ EventsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EventsProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje dołączony <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> , który definiuje nazwy właściwości programu obsługi zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana tylko w czasie projektowania, podczas gdy programowo emituje wystąpienie przepływu pracy przy użyciu modelu obiektów. Reprezentuje kod XAML odwołujący się do programu obsługi zdarzeń, który nie został jeszcze skompilowany. Ta właściwość zawiera `Hashtable`nazwę zdarzenia i pary nazwa-wartość programu obsługi zdarzeń. Po kompilacji właściwość zdarzenia jest bezpośrednio skojarzona z programem obsługi.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak ustawić wartość <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.EventsProperty> właściwości zależności.  
  
```csharp  
CodeActivity code1 = new CodeActivity();  
Hashtable eventsHashtable = new Hashtable();  
eventsHashtable.Add("ExecuteCode", "methodName1");  
code1.SetValue(WorkflowMarkupSerializer.EventsProperty, eventsHashtable);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IList GetChildren (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IList GetChildren(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetChildren (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As IList" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::IList ^ GetChildren(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList&#xA;override this.GetChildren : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Collections.IList" Usage="workflowMarkupSerializer.GetChildren (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który obsługuje tę operację.</param>
        <param name="obj"><see cref="T:System.Object" /> Z którego mają zostać pobrane obiekty podrzędne.</param>
        <summary>Pobiera listę obiektów podrzędnych dla określonego obiektu</summary>
        <returns>Obiekt, który zawiera obiekty podrzędne <paramref name="obj" />. <see cref="T:System.Collections.IList" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chyba że zostanie zastąpiony w klasie, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetChildren%2A> która dziedziczy `null` z`Nothing`zawsze zwraca ().  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="obj" />lub <paramref name="serializationManager" /> zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.EventInfo[] GetEvents (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.EventInfo[] GetEvents(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetEvents(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetEvents (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As EventInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::EventInfo ^&gt; ^ GetEvents(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]&#xA;override this.GetEvents : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.EventInfo[]" Usage="workflowMarkupSerializer.GetEvents (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem deserializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> Do wyszukiwania obiektów zdarzeń.</param>
        <summary>Pobiera informacje o wszystkich zdarzeniach skojarzonych z określonym <see cref="T:System.Object" />.</summary>
        <returns>Tablica zawierająca informacje o zdarzeniach skojarzonych z <paramref name="obj" />. <see cref="T:System.Reflection.EventInfo" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />lub <paramref name="obj" /> zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="protected internal virtual System.Reflection.PropertyInfo[] GetProperties (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Reflection.PropertyInfo[] GetProperties(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetProperties (serializationManager As WorkflowMarkupSerializationManager, obj As Object) As PropertyInfo()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ GetProperties(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]&#xA;override this.GetProperties : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; System.Reflection.PropertyInfo[]" Usage="workflowMarkupSerializer.GetProperties (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> Aby wyszukać właściwości.</param>
        <summary>Pobiera informacje o wszystkich właściwościach skojarzonych z określonym obiektem.</summary>
        <returns>Tablica zawierająca informacje o właściwościach skojarzonych z <paramref name="obj" />. <see cref="T:System.Reflection.PropertyInfo" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />lub <paramref name="obj" /> zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAfterDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> To została deserializowana.</param>
        <summary>Zastąpione. <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> Powiadamia, że obiekt został właśnie deserializowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A>jest wywoływana natychmiast po <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> uruchomieniu metody. Można przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterDeserialize%2A> w klasie, która <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> dziedziczy do `obj` wykonania dowolnego wymaganego przetwarzania po wykonaniu serializacji do Extensible Application Markup Language (XAML).  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>nie zapewnia zachowania domyślnego. Aby dodać logikę przetwarzania, należy zastąpić ją w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAfterSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnAfterSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAfterSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAfterSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAfterSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnAfterSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnAfterSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> To została zserializowana.</param>
        <summary><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> Powiadamia, że obiekt został właśnie Zserializowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>jest wywoływana natychmiast po <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> uruchomieniu metody. Można przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A> w klasie, która <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> dziedziczy do `obj` wykonania dowolnego wymaganego przetwarzania po wykonaniu serializacji do Extensible Application Markup Language (XAML).  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnAfterSerialize%2A>nie zapewnia zachowania domyślnego. Aby dodać logikę przetwarzania, należy zastąpić ją w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeDeserialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeDeserialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeDeserialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeDeserialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeDeserialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeDeserialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeDeserialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> , Która zarządza procesem deserializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> To została deserializowana.</param>
        <summary>Zastąpione. <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> Powiadamia, że obiekt zostanie odszeregowany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A>jest wywoływana bezpośrednio przed <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Deserialize%2A> uruchomieniem metody. Można przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> w klasie, która <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> dziedziczy, `obj` aby wykonać wymagane przetwarzanie przed Serializacja do rozszerzalnego języka Application Markup Language (XAML).  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeDeserialize%2A>nie zapewnia zachowania domyślnego. Aby dodać logikę przetwarzania, należy zastąpić ją w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeforeSerialize">
      <MemberSignature Language="C#" Value="protected virtual void OnBeforeSerialize (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeforeSerialize(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeforeSerialize (serializationManager As WorkflowMarkupSerializationManager, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeforeSerialize(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit&#xA;override this.OnBeforeSerialize : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; unit" Usage="workflowMarkupSerializer.OnBeforeSerialize (serializationManager, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="obj"><see cref="T:System.Object" /> Do serializacji.</param>
        <summary>Powiadamia, że <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" /> zostanie on uruchomiony. <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>jest wywoływana bezpośrednio przed <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> uruchomieniem metody. Można przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A> w klasie, która <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> dziedziczy, `obj` aby wykonać wymagane <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize%2A> przetwarzanie przed rozpoczęciem kroku w procesie serializacji.  
  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.OnBeforeSerialize%2A>nie zapewnia zachowania domyślnego. Aby dodać logikę przetwarzania, należy zastąpić ją w klasie pochodnej.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Object" /> Serializacji do formatu Extensible Application Markup Language (XAML).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Funkcja <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> jest zależna od funkcjonalności innych typów poza Windows Workflow Foundation. Na podstawie ograniczeń tych innych typów nie można serializować wszystkich typów danych za pośrednictwem <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer>. Poniżej znajduje się lista niektórych nieobsługiwanych typów.  
  
> [!NOTE]
>  Nie jest to pełna i kompletna lista nieobsługiwanych typów.  
  
 Tablice (obsługiwane tylko wtedy, gdy właściwość jest `DesignerSerializationVisibility.Content` dekoracyjna z wartością atrybutu)  
  
 Konstruktory bez parametrów  
  
 Tablice wielowymiarowe  
  
 Typy ogólne ( `List` rodzajowe `Dictionary` i typy obsługiwane tylko wtedy, gdy właściwość `DesignerSerializationVisibility.Content` jest dekoracyjna z wartością atrybutu)  
  
 `Hashtable`  
  
 `Queue`  
  
 `Stack`  
  
 `XmlDocument`  
  
 `MailMessage`  
  
 `Bitmap`  
  
 Tablice wyliczeniowe  
  
 Oprócz tej listy wszystkie właściwości `ContentPropertyAttribute` `DesignerSerializationVisibilityAttribute` , które nie mogą być serializowane przez `WorkflowMarkupSerializer`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Xml.XmlWriter" /> Zawiera strumień lub plik używany podczas serializowania.</param>
        <param name="obj">Obiekt do serializacji.</param>
        <summary>Serializować określony <see cref="T:System.Object" /> w pliku znaczników przepływu pracy lub w strumieniu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy serializować nowe wystąpienie typu przepływu pracy lub głównego działania w przepływie pracy utworzonym programowo w celu utworzenia znaczników przepływu pracy, których można użyć w programie w <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> celu <xref:System.Workflow.Runtime.WorkflowInstance>utworzenia.  
  
 Aby uzyskać więcej informacji na temat znaczników przepływu pracy, zobacz [Using Workflow Markup](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="obj" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, System.Xml.XmlWriter writer, object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager, class System.Xml.XmlWriter writer, object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationManager As IDesignerSerializationManager, writer As XmlWriter, obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager, System::Xml::XmlWriter ^ writer, System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.ComponentModel.Design.Serialization.IDesignerSerializationManager * System.Xml.XmlWriter * obj -&gt; unit" Usage="workflowMarkupSerializer.Serialize (serializationManager, writer, obj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager">Obiekt implementujący <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interfejs, taki jak <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" />.</param>
        <param name="writer"><see cref="T:System.Xml.XmlWriter" /> Zawiera strumień lub plik używany podczas serializowania.</param>
        <param name="obj">Obiekt do serializacji.</param>
        <summary>Serializacji określonego <see cref="T:System.Object" /> do pliku znaczników przepływu pracy lub strumienia przy użyciu określonego menedżera serializacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy serializować nowe wystąpienie typu przepływu pracy lub głównego działania w przepływie pracy utworzonym programowo w celu utworzenia znaczników przepływu pracy, których można użyć w programie w <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> celu <xref:System.Workflow.Runtime.WorkflowInstance>utworzenia.  
  
 Aby uzyskać więcej informacji na temat znaczników przepływu pracy, zobacz [Using Workflow Markup](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).
—lub—

<paramref name="writer" />jest odwołaniem o wartości<see langword="Nothing" /> null (w Visual Basic).

—lub—

<paramref name="obj" />jest odwołaniem o wartości<see langword="Nothing" />null ().</exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToString">
      <MemberSignature Language="C#" Value="protected internal virtual string SerializeToString (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string SerializeToString(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SerializeToString (serializationManager As WorkflowMarkupSerializationManager, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ SerializeToString(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string&#xA;override this.SerializeToString : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; string" Usage="workflowMarkupSerializer.SerializeToString (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="value"><see cref="T:System.Object" /> Do serializacji do ciągu.</param>
        <summary>Serializować określony <see cref="T:System.Object" /> element do ciągu.</summary>
        <returns>Ciąg, który zawiera serializacji <see cref="T:System.Object" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wystąpienie można przypisać z `value`, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> zapisuje nazwę metody skojarzoną z `value` do ciągu. <xref:System.Delegate> Jeśli wystąpienie można przypisać z `value`, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> zapisuje w pełni kwalifikowaną nazwę typu skojarzonego z `value` do ciągu. <xref:System.Type> Jeśli żaden z tych warunków nie istnieje <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.SerializeToString%2A> , `value` konwertuje na ciąg i zapisuje wynik.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />lub <paramref name="value" /> zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeValue (System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeValue(class System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager serializationManager, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeValue (serializationManager As WorkflowMarkupSerializationManager, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeValue(System::Workflow::ComponentModel::Serialization::WorkflowMarkupSerializationManager ^ serializationManager, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool&#xA;override this.ShouldSerializeValue : System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager * obj -&gt; bool" Usage="workflowMarkupSerializer.ShouldSerializeValue (serializationManager, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationManager"><see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> Który zarządza procesem serializacji.</param>
        <param name="value"><see cref="T:System.Object" /> Aby sprawdzić.</param>
        <summary>Zwraca wartość wskazującą, czy <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer" /> należy serializować określonego <see cref="T:System.Object" />elementu.</summary>
        <returns><see langword="true" />Aby wskazać <paramref name="value" /> , należy serializować; w przeciwnym <see langword="false" />razie,.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A>jest wywoływana przez <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> przed serializacji określonego obiektu. Metoda zwraca wartość `false` , `value` jeśli zawiera odwołanie o wartości`Nothing`null () `value` lub jeśli <xref:System.ComponentModel.DefaultValueAttribute> i bieżący kontekst serializacji jest równe.  
  
 Można przesłonić <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.ShouldSerializeValue%2A> w klasie, która dziedziczy <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer> po, aby dostosować sposób ustalania, czy określony obiekt powinien być serializowany.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializationManager" />zawiera odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="XClassProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XClassProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XClassProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XClassProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XClassProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XClassProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XClassProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje dołączony <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> , który definiuje nazwę typu, który zostanie utworzony podczas kompilacji.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość odpowiada `x:Class` atrybutowi w kodzie XAML. Aby uzyskać więcej informacji, zobacz [Używanie znaczników przepływu pracy](https://msdn.microsoft.com/library/e2693a12-640b-4ccb-8fb0-db3075e94aa4).  
  
 Ta właściwość jest używana tylko w czasie projektowania. Po kompilacji będzie ona nazwą skompilowanego typu.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XCodeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty XCodeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty XCodeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XCodeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ XCodeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XCodeProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer.XCodeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Reprezentuje przykład kodu osadzony w elemencie XAML <see langword="x:Code" /> .</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana tylko w czasie projektowania, podczas gdy programowo emituje przepływ pracy przy użyciu modelu obiektów. Właściwość zawiera `CodeTypeMemberCollection` kolekcję `CodeSnippetTypeMember` wypełnioną elementami. Po kompilacji kod jest kompilowany jako część wygenerowanego typu.  
  
 [!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]  
  
   
  
## Examples  
 Poniższy przykład to kod XAML, który zawiera przykład kodu, który zostałby skompilowany podczas kompilacji przepływu pracy.  
  
```  
<CodeActivity x:Name="codeActivity1" ExecuteCode="methodName1">  
  <x:Code><![CDATA[  
      void methodName1(object sender, EventArgs e)   
      {  
      }  
  ]]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
