<Type Name="WorkflowMarkupSerializationManager" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="330205b501fdf3f9955b04567270e80b12ebdac8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36449057" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowMarkupSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="82cf3-101">Zarządza czasu projektowania serializacji do i z extensible Application Markup Language (XAML) dla przepływów pracy.</span>
      <span class="sxs-lookup">
        <span data-stu-id="82cf3-101">Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="82cf3-102">Projektant przepływu pracy lub działania można użyć <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> dostęp do usług przydatne do zarządzania procesami serializacji czasu projektowania.</span><span class="sxs-lookup"><span data-stu-id="82cf3-102">A workflow or activity designer can use <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="82cf3-103">Na przykład <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> może służyć do tworzenia obiektów, wyszukiwania typów zidentyfikować obiekty i dostosowanie serializacji poszczególnych typów.</span><span class="sxs-lookup"><span data-stu-id="82cf3-103">For example, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializationManager (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializationManager(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" Usage="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager manager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager">
          <span data-ttu-id="82cf3-104">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Umożliwiające zainicjować <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-104">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> przy użyciu określonego <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-105">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> class by using the specified <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="82cf3-106">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> Do dodania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-107">Dodaje dostawcę serializacji określonego do tego menedżera serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-107">Adds the specified serialization provider to the serialization manager.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> Dodaje dostawcę niestandardowej serializacji tego menedżera serializacji.</span><span class="sxs-lookup"><span data-stu-id="82cf3-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="82cf3-109">Serializacja dostawców zapewniają serializatorów niestandardowe dla określonego typu obiektu lub zestaw obiektów.</span><span class="sxs-lookup"><span data-stu-id="82cf3-109">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="82cf3-110">Podczas serializacji każdy dostawca serializacji niestandardowej jest poddawany kwerendzie do zwrócenia serializator dla typu danych określonego, jeśli ma ona co.</span><span class="sxs-lookup"><span data-stu-id="82cf3-110">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="82cf3-111">Tego menedżera serializacji używa niestandardowego programu szeregującego udostępniane przez tę metodę. przed użyciem domyślnego elementu serializującego dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="82cf3-111">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82cf3-112">Pobiera obszar magazynu opartego na stosie, zdefiniowane przez użytkownika, który jest przydatne w przypadku komunikacji między serializatorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-112">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82cf3-113">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> zawierający informacje dotyczące bieżącego obiektu poddawanego serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-113">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that contains information about the current object being serialized.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-114">Niektóre serializatorów wymagają informacje o kontekście obiektu poprawnie utrwalić stanu.</span><span class="sxs-lookup"><span data-stu-id="82cf3-114">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="82cf3-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> Włącza serializator ustawić danych o kontekście obiektu, który wykonuje serializację do <xref:System.ComponentModel.Design.Serialization.ContextStack> gdzie innego serializatora do niego dostęp.</span><span class="sxs-lookup"><span data-stu-id="82cf3-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> enables a serializer to set data about the context of an object that it is serializing to a <xref:System.ComponentModel.Design.Serialization.ContextStack> where another serializer can access it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj&#xA;override this.GetSerializer : Type * Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">
          <span data-ttu-id="82cf3-116">
            <see cref="T:System.Type" /> Dla którego można pobrać serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-116">The <see cref="T:System.Type" /> for which to retrieve the serializer.</span>
          </span>
        </param>
        <param name="serializerType">
          <span data-ttu-id="82cf3-117">
            <see cref="T:System.Type" /> Programu szeregującego do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-117">The <see cref="T:System.Type" /> of the serializer to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-118">Zwraca element serializujący określonego typu obiektu określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-118">Returns a serializer of the specified type for an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-119">Żądany serializator lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli nie odpowiedni serializator może znajdować się.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-119">The requested serializer, or a null reference (<see langword="Nothing" /> in Visual Basic) if no appropriate serializer can be located.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="82cf3-120">
            <see cref="T:System.Type" /> Obiektu usługi do zwrócenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-120">The <see cref="T:System.Type" /> of service object to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-121">Zwraca obiekt usługi określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-121">Returns a service object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-122">Obiekt usługi typu <paramref name="serviceType" />, lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli nie ma żadnego obiektu usługi typu <paramref name="serviceType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-122">A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="82cf3-123">Zwraca <see cref="T:System.Type" /> skojarzone z określoną nazwą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-123">Returns the <see cref="T:System.Type" /> associated with the specified name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="workflowMarkupSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="82cf3-124">Pełna nazwa <see cref="T:System.Type" /> do załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-124">The fully-qualified name of the <see cref="T:System.Type" /> to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-125">Zwraca typ o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-125">Returns a type of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-126">
            <see cref="T:System.Type" /> Skojarzone z <paramref name="typeName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-126">The <see cref="T:System.Type" /> associated with <paramref name="typeName" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (System.Xml.XmlQualifiedName xmlQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(class System.Xml.XmlQualifiedName xmlQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::Xml::XmlQualifiedName ^ xmlQualifiedName);" />
      <MemberSignature Language="F#" Value="override this.GetType : System.Xml.XmlQualifiedName -&gt; Type" Usage="workflowMarkupSerializationManager.GetType xmlQualifiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlQualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="xmlQualifiedName">
          <span data-ttu-id="82cf3-127">
            <see cref="T:System.Xml.XmlQualifiedName" /> Typu do załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-127">The <see cref="T:System.Xml.XmlQualifiedName" /> of the type to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-128">Zwraca, dla których typ skojarzony z określonym nazwy kwalifikowanej XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-128">Returns that type associated with the specified XML qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-129">
            <see cref="T:System.Type" /> Skojarzone z <paramref name="xmlQualifiedName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-129">The <see cref="T:System.Type" /> associated with <paramref name="xmlQualifiedName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-130">Nazwy kwalifikowanej XML jest kwalifikowana przestrzeni nazw nazwę lokalną, w formacie namespace:localname.</span><span class="sxs-lookup"><span data-stu-id="82cf3-130">An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</span></span>  
  
 <span data-ttu-id="82cf3-131">Ponieważ prefiksy są tylko wymagana, gdy trwała lub odczytu XML, są one znaczenia dla <xref:System.Xml.XmlQualifiedName> obiektów.</span><span class="sxs-lookup"><span data-stu-id="82cf3-131">Because prefixes are only required when XML is persisted or read, they are irrelevant for <xref:System.Xml.XmlQualifiedName> objects.</span></span> <span data-ttu-id="82cf3-132">Odpowiedzialność użytkownika, aby upewnić się, nie zawiera nazwę lokalną ":"</span><span class="sxs-lookup"><span data-stu-id="82cf3-132">It is the responsibility of the user to ensure the local name does not contain a ":"</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="82cf3-133">
            <paramref name="xmlQualifiedName" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-133">
              <paramref name="xmlQualifiedName" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlQualifiedName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlQualifiedName GetXmlQualifiedName (Type type, out string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlQualifiedName GetXmlQualifiedName(class System.Type type, [out] string&amp; prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlQualifiedName ^ GetXmlQualifiedName(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlQualifiedName : Type *  -&gt; System.Xml.XmlQualifiedName&#xA;override this.GetXmlQualifiedName : Type *  -&gt; System.Xml.XmlQualifiedName" Usage="workflowMarkupSerializationManager.GetXmlQualifiedName (type, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="82cf3-134">
            <see cref="T:System.Type" /> Której nazwy kwalifikowanej XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-134">The <see cref="T:System.Type" /> for which to return the XML-qualified name.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="82cf3-135">Gdy metoda zwróci wartość, zawiera prefiks XML dla nazwy kwalifikowanej lub pusty ciąg, jeśli prefiks nie jest zdefiniowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-135">When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</span>
          </span>
          <span data-ttu-id="82cf3-136">Ten parametr jest przekazywany niezainicjowany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-137">Zwraca nazwę kwalifikowaną XML skojarzony z określonym typem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-137">Returns the XML-qualified name associated with the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-138">
            <see cref="T:System.Xml.XmlQualifiedName" /> Skojarzone z <paramref name="type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-138">The <see cref="T:System.Xml.XmlQualifiedName" /> associated with <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="82cf3-139">
            <paramref name="type" /> zawiera odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-139">
              <paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82cf3-140">Pobiera lub ustawia zestaw, który jest skojarzony z bieżącym serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-140">Gets or sets the assembly that is associated with the current serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82cf3-141">
            <see cref="T:System.Reflection.Assembly" /> Skojarzona z bieżącym serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-141">The <see cref="T:System.Reflection.Assembly" /> that is associated with the current serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="82cf3-142">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> Do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-142">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span>
          </span>
          <span data-ttu-id="82cf3-143">Ten dostawca można dodać za pomocą <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-143">This provider must be added using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-144">Usuwa dostawcę niestandardowej serializacji z <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-144">Removes a custom serialization provider from the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit&#xA;override this.ReportError : obj -&gt; unit" Usage="workflowMarkupSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation">
          <span data-ttu-id="82cf3-145">Błąd do raportu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-145">The error to report.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-146">Zgłasza błąd w serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-146">Reports an error in serialization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-147">`errorInformation` mogą być dowolnego typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="82cf3-147">`errorInformation` can be of any object type.</span></span> <span data-ttu-id="82cf3-148">Jeśli jest to wyjątek, komunikat wyjątku jest wyodrębnione i podać użytkownikowi.</span><span class="sxs-lookup"><span data-stu-id="82cf3-148">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="82cf3-149">Jeśli jest innego typu <xref:System.Object.ToString%2A> jest wywoływana w celu wyświetlenia informacji do użytkownika.</span><span class="sxs-lookup"><span data-stu-id="82cf3-149">If it is any other type, <xref:System.Object.ToString%2A> is called to display the information to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationManager">
      <MemberSignature Language="C#" Value="protected internal System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property SerializationManager As IDesignerSerializationManager" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ SerializationManager { System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ get(); void set(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82cf3-150">Pobiera lub ustawia menedżera serializacji do użycia z bieżącym serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-150">Gets or sets the serialization manager to use with the current serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82cf3-151">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> Do użycia z bieżącym serializatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-151">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use with the current serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="82cf3-152">
            <see cref="T:System.Type" /> Do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-152">The <see cref="T:System.Type" /> to create.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="82cf3-153">
            <see cref="T:System.Collections.ICollection" /> Zawiera argumenty <c>typu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-153">An <see cref="T:System.Collections.ICollection" /> that contains the arguments for <c>type</c>.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="82cf3-154">Nazwa obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-154">The name of the object.</span>
          </span>
          <span data-ttu-id="82cf3-155">Ta nazwa może być używana do dostępu do obiektu później za pomocą <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-155">This name can be used to access the object later using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />.</span>
          </span>
          <span data-ttu-id="82cf3-156">Jeśli odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) jest przekazywane, obiekt jest nadal tworzona ale nazwa nie może uzyskać dostępu do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-156">If a null reference (<see langword="Nothing" /> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</span>
          </span>
        </param>
        <param name="addToContainer">
          <span data-ttu-id="82cf3-157">
            <see langword="true" /> Aby dodać obiekt do kontenera projektu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-157">
              <see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-158">Tworzy wystąpienie określonego typu i dodaje go do kolekcji nazwanych wystąpień.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-158">Creates an instance of the specified type and adds it to a collection of named instances.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-159">Nowo utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-159">The newly created object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-160">Jeśli `addToContainer` ustawiono `true`, obiekt musi implementować <xref:System.ComponentModel.IComponent> w tym celu ma żadnego efektu.</span><span class="sxs-lookup"><span data-stu-id="82cf3-160">If `addToContainer` is set to `true`, the object must implement <xref:System.ComponentModel.IComponent> for this to have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="82cf3-161">Nazwa obiektu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-161">The name of the object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-162">Zwraca wystąpienie klasy utworzonego obiektu o określonej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-162">Returns an instance of a created object of the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-163">Wystąpienie obiektu o podanej nazwie, lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) w przypadku nieodnalezienia nie obiektu o takiej nazwie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-163">An instance of the object with the given name, or a null reference (<see langword="Nothing" /> in Visual Basic) if no object by that name can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-164">`name` musi być ustawiona przez poprzednie wywołanie <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82cf3-164">`name` must be set through a prior call to <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="82cf3-165">
            <see cref="T:System.Object" /> Do których chcesz pobrać nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-165">The <see cref="T:System.Object" /> for which to retrieve the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-166">Zwraca nazwę określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-166">Returns the name of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="82cf3-167">Nazwa obiektu lub odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic), jeśli obiekt jest bez nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-167">The name of the object, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object is unnamed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="82cf3-168">Pobiera zbiór właściwości, które można serializować z dostępnych serializatorów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-168">Gets a collection of properties that can be serialized with available serializers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="82cf3-169">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> zawierający właściwości do serializacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-169">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties to serialize.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-170">Ta właściwość może zawierać pustej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="82cf3-170">This property can contain an empty collection.</span></span> <span data-ttu-id="82cf3-171">Element serializujący powinien nigdy nie założyć, czy istnieją jakiekolwiek właściwości.</span><span class="sxs-lookup"><span data-stu-id="82cf3-171">A serializer should never assume that any properties exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="82cf3-172">Obiekt do nazwy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-172">The object to name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="82cf3-173">Nazwę można przypisać do obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-173">The name to assign to the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="82cf3-174">Ustawia nazwę określonego istniejącego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="82cf3-174">Sets the name of the specified existing object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82cf3-175"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> jest przydatne, gdy trzeba utworzyć, a następnie nazwą wystąpienia obiektu bez korzystania z <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="82cf3-175"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> is useful when you need to create and then name an instance of an object without using <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>