<Type Name="XamlReader" FullName="System.Windows.Markup.XamlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="35c41088e2d1020cd99f7570565c144f44b3e76c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166705" /></Metadata><TypeSignature Language="C#" Value="public class XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader" />
  <TypeSignature Language="F#" Value="type XamlReader = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6aa47-101">Odczytuje dane wejściowe XAML i tworzy Graf obiektów przy użyciu domyślnego czytnika XAML WPF i skojarzonego z nim składnika zapisywania obiektów XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-101">Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-102">Metody synchroniczne <xref:System.Windows.Markup.XamlReader.Load%2A> są statyczne, ale metody asynchroniczne <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> nie są statyczne i <xref:System.Windows.Markup.XamlReader> wymagają wystąpienia klasy do użycia.</span><span class="sxs-lookup"><span data-stu-id="6aa47-102">The synchronous <xref:System.Windows.Markup.XamlReader.Load%2A> methods are static, but the asynchronous <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> methods are not static and require an instance of the <xref:System.Windows.Markup.XamlReader> class to use.</span></span>  
  
 <span data-ttu-id="6aa47-103">Dane wyjściowe `Load` metod są pojedynczym obiektem, który reprezentuje obiekt główny utworzonego drzewa obiektów lub Graf obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-103">The output of the `Load` methods is a single object, which represents the root object of a created object tree or object graph.</span></span> <span data-ttu-id="6aa47-104">Wykresy obiektów tworzone przez <xref:System.Windows.Markup.XamlReader> są zwykle dodawane do istniejącego drzewa obiektów aplikacji WPF w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-104">Object graphs that are created by <xref:System.Windows.Markup.XamlReader> are typically added to the existing object tree of a WPF application at run time.</span></span> <span data-ttu-id="6aa47-105">W przeciwnym razie nowy Graf obiektu jest traktowany jako odłączony do celów modelu aplikacji WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-105">Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</span></span> <span data-ttu-id="6aa47-106">Oznacza to, że nie jest on renderowany i nie można uzyskać do niego dostępu przy użyciu żadnych technik drzewa obiektów, które są stosowane do głównego drzewa obiektów aplikacji WPF (na przykład interfejsów <xref:System.Windows.FrameworkElement.FindName%2A>API <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>,).</span><span class="sxs-lookup"><span data-stu-id="6aa47-106">This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span></span> <span data-ttu-id="6aa47-107">Aby uzyskać więcej informacji na temat pojęć dotyczących drzewa obiektów, zobacz [drzewa w WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="6aa47-107">For more information on object tree concepts, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="6aa47-108"><xref:System.Windows.Markup.XamlReader>Program obsługuje następujące podstawowe scenariusze:</span><span class="sxs-lookup"><span data-stu-id="6aa47-108"><xref:System.Windows.Markup.XamlReader> supports the following primary scenarios:</span></span>  
  
-   <span data-ttu-id="6aa47-109">**Klonowanie/fabryka obiektów**: Bez dodatkowych mechanizmów nie można uwzględnić typu referencyjnego w więcej niż jednej pozycji w drzewie obiektów WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-109">**Cloning/object factory**: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</span></span> <span data-ttu-id="6aa47-110">(Przykłady dodatkowych mechanizmów, które oferują pomoc techniczną do udostępniania lub ponownego użycia w WPF, obejmują obiekty, które <xref:System.Windows.Freezable>są oparte na lub obsługują często obiekty możliwe do współdzielenia, takie jak <xref:System.Windows.Media.Brush> te, do <xref:System.Windows.ResourceDictionary>których odwołuje się element z.) Jednym ze sposobów klonowania obiektu, który znajduje się już w drzewie obiektów, jest serializacja obiektu za <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>pomocą.</span><span class="sxs-lookup"><span data-stu-id="6aa47-110">(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on <xref:System.Windows.Freezable>, or support for commonly shareable objects such as <xref:System.Windows.Media.Brush> that are referenced as an item from a <xref:System.Windows.ResourceDictionary>.) One way to clone an object that is already in the object tree is to serialize the object using <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6aa47-111">Następnie można użyć serializowanego ciągu jako danych wejściowych dla wywołania do <xref:System.Windows.Markup.XamlReader.Load%2A>, ze strumieniem lub <xref:System.Xml.XmlReader> jako pośrednikiem.</span><span class="sxs-lookup"><span data-stu-id="6aa47-111">You then use the serialized string as input for a call to <xref:System.Windows.Markup.XamlReader.Load%2A>, with a stream or <xref:System.Xml.XmlReader> as an intermediary.</span></span>  
  
-   <span data-ttu-id="6aa47-112">**Konstruowanie obiektów na podstawie informacji just in Time**: Często istnieją inne sposoby uzyskania późnego wiązania lub wprowadzania danych przez użytkownika zmiana stanu istniejących obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-112">**Constructing objects based on just-in-time information**: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</span></span> <span data-ttu-id="6aa47-113">Na przykład możesz użyć tej samej wartości, aby ustawić więcej niż jedną właściwość lub użyć powiązania danych.</span><span class="sxs-lookup"><span data-stu-id="6aa47-113">For example you could use the same value to set more than one property, or use data binding.</span></span> <span data-ttu-id="6aa47-114">Ale jeśli masz scenariusz, gdzie nawet typ obiektu do utworzenia jest tylko możliwy do ustalenia w czasie wykonywania lub z interakcją użytkownika, tworzenie takiego obiektu przez utworzenie ciągu do <xref:System.Windows.Markup.XamlReader.Load%2A> danych wejściowych jest często przydatną techniką.</span><span class="sxs-lookup"><span data-stu-id="6aa47-114">But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for <xref:System.Windows.Markup.XamlReader.Load%2A> input is often a useful technique.</span></span>  
  
-   <span data-ttu-id="6aa47-115">**Korzystanie z istniejących technik zasobów**: <xref:System.IO.Stream> Typ jest często używany w innych strukturach lub technologiach służących do przesyłania danych lub obiektów między granicami aplikacji lub w podobny sposób.</span><span class="sxs-lookup"><span data-stu-id="6aa47-115">**Using existing resource techniques**: The <xref:System.IO.Stream> type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</span></span> <span data-ttu-id="6aa47-116">Następnie można użyć <xref:System.IO.Stream> technik do przechowywania lub uzyskiwania danych w formacie XAML, które są używane do tworzenia obiektów w ramach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="6aa47-116">You can then use the <xref:System.IO.Stream> techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</span></span>  
  
-   <span data-ttu-id="6aa47-117">**Naprawione dokumenty:** Aplikacja może ładować lokalne lub pobrane Dokumenty XPS do uwzględnienia w drzewie obiektów aplikacji WPF i interfejsie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-117">**Fixed documents:** Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6aa47-118">Ta dokumentacja czasami opisuje Graf obiektu, a nie drzewo obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-118">This documentation sometimes describes an object graph, as opposed to an object tree.</span></span> <span data-ttu-id="6aa47-119">Ścisła relacja nadrzędny-podrzędny nie zawsze istnieje w relacjach obiektów czasu wykonywania aplikacji WPF w czasie wykonywania, dlatego wykres obiektów jest bardziej szeroko stosowanym terminologią.</span><span class="sxs-lookup"><span data-stu-id="6aa47-119">A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</span></span> <span data-ttu-id="6aa47-120">Jednak ponieważ WPF obejmuje również dwa różne interfejsy API conceptualization drzewa (<xref:System.Windows.LogicalTreeHelper>) <xref:System.Windows.Media.VisualTreeHelper>, drzewo metaphor nadal stosuje się odpowiednio do większości rzeczywistych przypadków w WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-120">However, because WPF also includes two different tree conceptualization APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) the tree metaphor still applies adequately to most real-world cases in WPF.</span></span> <span data-ttu-id="6aa47-121">Z perspektywy języka XAML jest jednak często najlepszym sposobem, aby myśleć o sposobie tworzenia obiektów w języku XAML, ponieważ język XAML nie musi określać metodologii klasy pomocnika, które zwiększają relacje do ponownie strukturę drzewa.</span><span class="sxs-lookup"><span data-stu-id="6aa47-121">From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</span></span>  
  
## <a name="code-access-security-loose-xaml-and-xamlreader"></a><span data-ttu-id="6aa47-122">Zabezpieczenia dostępu kodu, luźne XAML i XamlReader</span><span class="sxs-lookup"><span data-stu-id="6aa47-122">Code Access Security, Loose XAML, and XamlReader</span></span>  
 <span data-ttu-id="6aa47-123">XAML jest językiem znaczników, który bezpośrednio reprezentuje Tworzenie wystąpienia obiektu i wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="6aa47-123">XAML is a markup language that directly represents object instantiation and execution.</span></span> <span data-ttu-id="6aa47-124">W związku z tym elementy utworzone w języku XAML mają tę samą możliwość współdziałania z zasobami systemowymi (dostęp do sieci, system plików we/wy) jako równoważny wygenerowany kod.</span><span class="sxs-lookup"><span data-stu-id="6aa47-124">Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="6aa47-125">obsługuje strukturę [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)]zabezpieczeń.</span><span class="sxs-lookup"><span data-stu-id="6aa47-125">supports the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] security framework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span></span> <span data-ttu-id="6aa47-126">Oznacza to, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] że zawartość działająca w strefie Internet ma ograniczone uprawnienia wykonywania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-126">This means that [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content running in the internet zone has reduced execution permissions.</span></span> <span data-ttu-id="6aa47-127">"Luźne XAML" (strony nieskompilowanych kodów XAML w czasie ładowania przez przeglądarkę XAML) i [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] są zwykle uruchamiane w tej strefie internetowej i używają tego samego zestawu uprawnień.</span><span class="sxs-lookup"><span data-stu-id="6aa47-127">"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] are usually run in this internet zone and use the same permission set.</span></span>  <span data-ttu-id="6aa47-128">Jednak kod XAML załadowany w w pełni zaufanej aplikacji ma taki sam dostęp do zasobów systemowych, jak aplikacja hostingu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-128">However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</span></span> <span data-ttu-id="6aa47-129">Aby uzyskać więcej informacji, zobacz temat informacje o [zabezpieczeniach częściowej relacji zaufania WPF](~/docs/framework/wpf/wpf-partial-trust-security.md).</span><span class="sxs-lookup"><span data-stu-id="6aa47-129">For more information, see [WPF Partial Trust Security](~/docs/framework/wpf/wpf-partial-trust-security.md).</span></span>  
  
 <span data-ttu-id="6aa47-130">Implikacje tych instrukcji dla programu <xref:System.Windows.Markup.XamlReader> polega na tym, że projekt aplikacji musi podejmować decyzje dotyczące zaufania dotyczące języka XAML, który użytkownik chce załadować.</span><span class="sxs-lookup"><span data-stu-id="6aa47-130">The implications of these statements for <xref:System.Windows.Markup.XamlReader> is that your application design must make trust decisions about the XAML you decide to load.</span></span> <span data-ttu-id="6aa47-131">Jeśli ładujesz kod XAML, który nie jest zaufany, rozważ zaimplementowanie własnej metody piaskownicy w celu załadowania grafu obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-131">If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</span></span>  
  
 <span data-ttu-id="6aa47-132"><xref:System.Windows.Markup.XamlReader>może być również wywoływana przez częściowy kod zaufania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-132"><xref:System.Windows.Markup.XamlReader> can also be called by partial trust code.</span></span> <span data-ttu-id="6aa47-133">W takim przypadku do zabezpieczenia dostępu kodu jest stosowana Strefa zabezpieczeń Internet.</span><span class="sxs-lookup"><span data-stu-id="6aa47-133">In this case, Internet security zone is applied for code access security.</span></span> <span data-ttu-id="6aa47-134">Jeśli wszystkie elementy w załadowanym języku XAML są nieprawidłowe w strefie zabezpieczeń sieci Internet, zostanie zgłoszony wyjątek analizy XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-134">If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</span></span> <span data-ttu-id="6aa47-135">W obszarze XBAP i inne przypadki, które są częściowym zaufaniem na poziomie <xref:System.Windows.Markup.XamlReader> platformy, gdzie jest częścią wykonywania, uzyskuje się takie samo zachowanie wyjątku jak w przypadku jawnych wywołań częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-135">Under XBAP and other cases that are partial trust at the platform level, where <xref:System.Windows.Markup.XamlReader> is part of the execution, you get the same exception behavior as with explicit partial trust calls.</span></span>  
  
## <a name="wpf-xaml-xaml-readerswriters-and-xaml-language-versioning"></a><span data-ttu-id="6aa47-136">WPF XAML, czytelnicy XAML/autorzy i przechowywanie wersji języka XAML</span><span class="sxs-lookup"><span data-stu-id="6aa47-136">WPF XAML, XAML Readers/Writers, and XAML Language Versioning</span></span>  
 <span data-ttu-id="6aa47-137">XAML2009 obejmuje funkcje językowe, takie jak [x:Reference —](~/docs/framework/xaml-services/x-reference-markup-extension.md) i [x:FactoryMethod](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span><span class="sxs-lookup"><span data-stu-id="6aa47-137">XAML2009 includes language features such as [x:Reference](~/docs/framework/xaml-services/x-reference-markup-extension.md) and [x:FactoryMethod](~/docs/framework/xaml-services/x-factorymethod-directive.md).</span></span> <span data-ttu-id="6aa47-138">Możesz użyć podpisów `Load` lub `Parse` do ładowania XAML, który używa tych funkcji.</span><span class="sxs-lookup"><span data-stu-id="6aa47-138">You can use signatures of `Load` or `Parse` to load XAML that uses these features.</span></span> <span data-ttu-id="6aa47-139">Jednak te funkcje języka nie są obsługiwane w języku XAML, który musi mieć skompilowane adiustacje (na przykład XAML dla akcji tworzenia **strony** w aplikacji WPF lub dowolny kod XAML, który obejmuje zadanie kompilowania znaczników w akcjach kompilacji).</span><span class="sxs-lookup"><span data-stu-id="6aa47-139">However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the **Page** build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</span></span>  
  
 <span data-ttu-id="6aa47-140">Typy WPF i technologia WPF, ogólnie rzecz biorąc, zależą od dostępu do wewnętrznych platformy WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-140">WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</span></span> <span data-ttu-id="6aa47-141">Na przykład, w jaki sposób WPF implementuje właściwości zależności, opiera się na wewnętrznych technikach do wydajnego wyszukiwania elementów członkowskich typu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-141">For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</span></span> <span data-ttu-id="6aa47-142">Dostęp do tych wewnętrznych funkcji jest włączany przez odczytywanie i zapisywanie interfejsów API w <xref:System.Windows.Markup.XamlWriter> języku <xref:System.Windows.Markup.XamlReader> XAML, <xref:System.Windows.Markup> które znajdują się w i z przestrzeni nazw i zestawu platformie docelowej.</span><span class="sxs-lookup"><span data-stu-id="6aa47-142">Access to these internals is enabled by the XAML reading and writing APIs provided in <xref:System.Windows.Markup.XamlWriter> and <xref:System.Windows.Markup.XamlReader> from the <xref:System.Windows.Markup> namespace and PresentationFramework assembly.</span></span> <span data-ttu-id="6aa47-143">Jednak czytniki XAML niższego poziomu i autorzy XAML z zestawu System. XAML (klasy oparte na <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) nie mają dostępu do wewnętrznych platformy WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-143">However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) do not have access to the WPF internals.</span></span> <span data-ttu-id="6aa47-144">Nie istnieje zależność od system. XAML do żadnego zestawu specyficznego dla platformy WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-144">There is no dependency from System.Xaml to any WPF-specific assembly.</span></span> <span data-ttu-id="6aa47-145">Bez dostępu do wewnętrznych platformy WPF, czytniki system. XAML i autorzy nie mogą poprawnie ładować lub zapisywać wszystkich typów WPF lub typów opartych na typach WPF.</span><span class="sxs-lookup"><span data-stu-id="6aa47-145">Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</span></span> <span data-ttu-id="6aa47-146">W szczególności czytelnicy system. XAML i moduły zapisujące nie rozumieją pojęć, takich jak magazyn właściwości w ramach właściwości zależności WPF, lub wszystkie szczegóły dotyczące sposobu używania przez WPF stylów, słowników zasobów i szablonów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-146">In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</span></span> <span data-ttu-id="6aa47-147">W związku z tym masz możliwość dokonania:</span><span class="sxs-lookup"><span data-stu-id="6aa47-147">Therefore you have a choice to make:</span></span>  
  
-   <span data-ttu-id="6aa47-148">Jeśli ładujesz typy WPF i/lub używasz języka XAML w formularzu BAML w dowolny sposób, użyj czytników XAML platformie docelowej i autorów XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-148">If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</span></span>  
  
-   <span data-ttu-id="6aa47-149">Jeśli nie korzystasz z żadnych typów WPF lub form BAML języka XAML ani nie korzystasz z innej konkretnej technologii, czytnika XAML lub implementacji składnika zapisywania języka XAML, z powodów specyficznych dla tej struktury, użyj czytników XAML system. XAML i autorów XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-149">If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</span></span>  
  
## <a name="systemxaml-backing-implementation-in-net-4"></a><span data-ttu-id="6aa47-150">Implementacja tworzenia kopii zapasowej system. XAML w programie .NET 4</span><span class="sxs-lookup"><span data-stu-id="6aa47-150">System.Xaml Backing Implementation in .NET 4</span></span>  
 <span data-ttu-id="6aa47-151"><xref:System.Windows.Markup.XamlReader>to przywoływać powierzchnię interfejsu API dla analizatora XAML na poziomie platformy WPF Framework.</span><span class="sxs-lookup"><span data-stu-id="6aa47-151"><xref:System.Windows.Markup.XamlReader> is the callable API surface for the WPF framework-level XAML parser.</span></span> <span data-ttu-id="6aa47-152">Ten sam podstawowy parser XAML wykonuje również operacje ładowania i analizowania kodu XAML w czasie wykonywania dla aplikacji [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] WPF przeznaczonych dla i. [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</span><span class="sxs-lookup"><span data-stu-id="6aa47-152">The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span>  
  
 <span data-ttu-id="6aa47-153">W przypadku określania wartości [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]docelowej zewnętrzny interfejs API jest taki sam, ale części implementacji są oparte [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] na ogólnej implementacji XAML w zestawie System. XAML, co poprawia wiele aspektów technicznych i raportowania analizy języka XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-153">If you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the external API is the same, but parts of the implementation are built on the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</span></span> <span data-ttu-id="6aa47-154">Docelowa [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] konieczność obejmuje również system. XAML jako odwołanie, a szczegóły implementacji, takie jak zgłoszone wyjątki mogą pochodzić z typów zdefiniowanych przez system. XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-154">Targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</span></span>  
  
## Examples  
 <span data-ttu-id="6aa47-155">Poniższy przykład konwertuje <xref:System.Windows.Controls.Button> do ciągu <xref:System.Windows.Markup.XamlWriter> przy użyciu klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-155">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="6aa47-156">Ten ciąg jest następnie ładowany z powrotem do <xref:System.Windows.Controls.Button> metody <xref:System.Windows.Markup.XamlReader> using statycznej <xref:System.Windows.Markup.XamlReader.Load%2A> klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-156">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6aa47-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlReader" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-157">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="xamlReader.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6aa47-158">Przerywa bieżącą operację ładowania asynchronicznego, jeśli istnieje oczekująca operacja asynchronicznego ładowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-158">Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A>jest operacją asynchroniczną; w związku z tym niektóre operacje ładowania mogą wystąpić przed przerwaniem operacji.</span><span class="sxs-lookup"><span data-stu-id="6aa47-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWpfSchemaContext">
      <MemberSignature Language="C#" Value="public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.XamlSchemaContext GetWpfSchemaContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWpfSchemaContext () As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::XamlSchemaContext ^ GetWpfSchemaContext();" />
      <MemberSignature Language="F#" Value="static member GetWpfSchemaContext : unit -&gt; System.Xaml.XamlSchemaContext" Usage="System.Windows.Markup.XamlReader.GetWpfSchemaContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6aa47-160">Zwraca obiekt, który reprezentuje ustawienia kontekstu schematu WPF <see cref="T:System.Windows.Markup.XamlReader" />dla. <see cref="T:System.Xaml.XamlSchemaContext" /></span><span class="sxs-lookup"><span data-stu-id="6aa47-160">Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></summary>
        <returns><span data-ttu-id="6aa47-161">Obiekt, który reprezentuje ustawienia kontekstu schematu WPF <see cref="T:System.Windows.Markup.XamlReader" />dla. <see cref="T:System.Xaml.XamlSchemaContext" /></span><span class="sxs-lookup"><span data-stu-id="6aa47-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-162">Odczytuje dane wejściowe XAML i zwraca katalog główny odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-162">Reads XAML input and returns the root of the corresponding object tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6aa47-163">KOD XAML do załadowania w formie strumienia.</span><span class="sxs-lookup"><span data-stu-id="6aa47-163">The XAML to load, in stream form.</span></span></param>
        <summary><span data-ttu-id="6aa47-164">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca element <see cref="T:System.Object" /> , który jest katalogiem głównym odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-164">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-165">Obiekt w katalogu głównym utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-165">The object at the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6aa47-166">Poniższy przykład zapisuje <xref:System.Windows.Controls.Button> <xref:System.IO.MemoryStream> do <xref:System.Windows.Markup.XamlWriter> klasy przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-166">The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class.</span></span> <span data-ttu-id="6aa47-167">Strumień zostaje następnie załadowany z powrotem do <xref:System.Windows.Controls.Button> metody <xref:System.Windows.Markup.XamlReader> using statycznej <xref:System.Windows.Markup.XamlReader.Load%2A> klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-167">The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-168"><paramref name="stream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-168"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6aa47-169">Element <see cref="T:System.Xaml.XamlReader" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-169">A <see cref="T:System.Xaml.XamlReader" /> object.</span></span> <span data-ttu-id="6aa47-170">Oczekuje się, że zostanie ona zainicjowana przy użyciu wejściowego języka XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-170">This is expected to be initialized with input XAML.</span></span></param>
        <summary><span data-ttu-id="6aa47-171">Odczytuje dane wejściowe XAML za pomocą dostarczonego <see cref="T:System.Xaml.XamlReader" /> i zwraca obiekt, który jest katalogiem głównym odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-171">Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-172">Obiekt, który jest katalogiem głównym utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-172">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-173">Mogą to <xref:System.Xaml.XamlReader> być <xref:System.Windows.Baml2006.Baml2006Reader>dane wejściowe.</span><span class="sxs-lookup"><span data-stu-id="6aa47-173">The input <xref:System.Xaml.XamlReader> can be <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span> <span data-ttu-id="6aa47-174">Jest to sposób ładowania BAML w czasie wykonywania lub na potrzeby narzędzia lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="6aa47-174">This is how you can load BAML at run time, or for localization tool purposes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-175"><paramref name="reader" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-175"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6aa47-176"><see cref="T:System.Xml.XmlReader" /> , Który już załadował dane wejściowe XAML do załadowania w formularzu XML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-176">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</span></span></param>
        <summary><span data-ttu-id="6aa47-177">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.Xml.XmlReader" /> i zwraca obiekt, który jest elementem głównym odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-177">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-178">Obiekt, który jest katalogiem głównym utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-178">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6aa47-179">Poniższy przykład konwertuje <xref:System.Windows.Controls.Button> do ciągu <xref:System.Windows.Markup.XamlWriter> przy użyciu klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-179">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="6aa47-180">Ten ciąg jest następnie ładowany z powrotem do <xref:System.Windows.Controls.Button> metody <xref:System.Windows.Markup.XamlReader> using statycznej <xref:System.Windows.Markup.XamlReader.Load%2A> klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-180">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-181"><paramref name="reader" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-181"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Load (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6aa47-182">Strumień zawierający dane wejściowe XAML do załadowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-182">The stream that contains the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="6aa47-183">Informacje kontekstowe używane przez parser.</span><span class="sxs-lookup"><span data-stu-id="6aa47-183">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="6aa47-184">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca obiekt, który jest elementem głównym odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-184">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-185">Obiekt, który jest katalogiem głównym utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-185">The object that is the root of the created object tree.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-186"><paramref name="stream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-186"><paramref name="stream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="6aa47-187">—lub—</span><span class="sxs-lookup"><span data-stu-id="6aa47-187">-or-</span></span> 
 <span data-ttu-id="6aa47-188"><paramref name="parserContext" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-188"><paramref name="parserContext" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-189">Odczytuje znaczniki XAML i zwraca obiekt, który odnosi się do elementu głównego określonego znacznika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-189">Reads XAML markup and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream -&gt; obj" Usage="xamlReader.LoadAsync stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6aa47-190">Strumień zawierający dane wejściowe XAML do załadowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-190">The stream containing the XAML input to load.</span></span></param>
        <summary><span data-ttu-id="6aa47-191">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca katalog główny odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-191">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-192">Obiekt, który jest katalogiem głównym utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-192">The object that is the root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-193">Asynchroniczna operacja ładowania XAML najpierw zwraca obiekt, który jest całkowicie obiektem głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-193">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="6aa47-194">Asynchronicznie, analizowanie XAML następnie kontynuuje działanie, a wszystkie obiekty podrzędne są wypełniane w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-194">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="6aa47-195">Jest to w przeciwieństwie do typowego zachowania przetwarzania kodu XAML WPF i interakcji z pojęciami WPF dotyczącymi okresu istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-195">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="6aa47-196">W typowej interakcji (nieasynchronicznej) wszystkie właściwości obiektu, w tym wszystkie kolekcje podrzędne, są wypełniane przed zwróceniem elementu i zgłoszeniem go jako załadowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-196">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="6aa47-197">To zachowanie jest równe metodologii tworzenia drzewa, w którym obiektem głównym jest ostatni obiekt, który stanie się dostępny.</span><span class="sxs-lookup"><span data-stu-id="6aa47-197">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="6aa47-198">Do niektórych lokalizacji w drzewie obiektów aplikacji WPF można przypisać zwracany obiekt z informacją o tym, że zawartość może być nadal wypełniana i może powodować aktualizacje przyrostowe układu, jeśli cała zawartość jest dostępna jako część interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-198">You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="6aa47-199">Z tego powodu typowe jest izolowanie lub Wirtualizacja wszelkich asynchronicznie ładowanych obiektów z XAML i użycie logiki specyficznej dla aplikacji lub stanu aplikacji do powiadamiania, gdy <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-199">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="6aa47-200">Aby można było załadować dane wejściowe XAML asynchronicznie, element główny w danych wejściowych XAML musi zawierać atrybut i wartość `x:SynchronousMode="Async"`. <xref:System.Windows.Markup.XamlReader.LoadAsync%2A></span><span class="sxs-lookup"><span data-stu-id="6aa47-200">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="6aa47-201">Wartość jest traktowana jako uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="6aa47-201">The value is treated as case sensitive.</span></span> <span data-ttu-id="6aa47-202">Jeśli katalog główny danych wejściowych XAML nie zawiera `x:SynchronousMode="Async"`, zgłaszany jest wyjątek, a wywołanie jest przetwarzane jako ładowanie synchroniczne (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-202">If the XAML input root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span></span>  
  
 <span data-ttu-id="6aa47-203">W danej chwili można wykonać tylko jedną asynchroniczną <xref:System.Windows.Markup.XamlReader> operację ładowania na wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-203">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="6aa47-204">Jeśli zostanie podjęta próba wykonania więcej niż jednej operacji asynchronicznej w tym samym <xref:System.Windows.Markup.XamlReader> wystąpieniu <xref:System.InvalidOperationException> klasy a jest generowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-204">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-205"><paramref name="stream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-205"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6aa47-206">Wiele operacji ładowania jest oczekujących jednocześnie z tym samym <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-206">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::Xml::XmlReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.Xml.XmlReader -&gt; obj" Usage="xamlReader.LoadAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="6aa47-207">Istniejący <see cref="T:System.Xml.XmlReader" /> , który już załadował/odczytał dane wejściowe XAML.</span><span class="sxs-lookup"><span data-stu-id="6aa47-207">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</span></span></param>
        <summary><span data-ttu-id="6aa47-208">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.Xml.XmlReader" /> i zwraca katalog główny odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-208">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-209">Katalog główny utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-209">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-210">Asynchroniczna operacja ładowania XAML najpierw zwraca obiekt, który jest całkowicie obiektem głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-210">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="6aa47-211">Asynchronicznie, analizowanie XAML następnie kontynuuje działanie, a wszystkie obiekty podrzędne są wypełniane w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-211">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="6aa47-212">Jest to w przeciwieństwie do typowego zachowania przetwarzania kodu XAML WPF i interakcji z pojęciami WPF dotyczącymi okresu istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-212">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="6aa47-213">W typowej interakcji (nieasynchronicznej) wszystkie właściwości obiektu, w tym wszystkie kolekcje podrzędne, są wypełniane przed zwróceniem elementu i zgłoszeniem go jako załadowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-213">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="6aa47-214">To zachowanie jest równe metodologii tworzenia drzewa, w którym obiektem głównym jest ostatni obiekt, który stanie się dostępny.</span><span class="sxs-lookup"><span data-stu-id="6aa47-214">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="6aa47-215">Do niektórych lokalizacji w drzewie obiektów aplikacji można <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> przypisać zwracany obiekt z informacją o tym, że zawartość może być nadal wypełniana i może powodować aktualizacje przyrostowe układu, jeśli cała zawartość jest udostępniona jako część Interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-215">You typically would assign the returned object from <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="6aa47-216">Z tego powodu typowe jest izolowanie lub Wirtualizacja wszelkich asynchronicznie ładowanych obiektów z XAML i użycie logiki specyficznej dla aplikacji lub stanu aplikacji do powiadamiania, gdy <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-216">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="6aa47-217">Aby można było załadować dane wejściowe XAML asynchronicznie, element główny w znaczniku XAML musi zawierać atrybut i wartość `x:SynchronousMode="Async"`. <xref:System.Windows.Markup.XamlReader.LoadAsync%2A></span><span class="sxs-lookup"><span data-stu-id="6aa47-217">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="6aa47-218">Wartość jest traktowana jako uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="6aa47-218">The value is treated as case sensitive.</span></span> <span data-ttu-id="6aa47-219">Jeśli korzeń znacznika XAML nie zawiera `x:SynchronousMode="Async"`, zgłaszany jest żaden wyjątek, a wywołanie jest przetwarzane jako ładowanie synchroniczne (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-219">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is instead processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span></span>  
  
 <span data-ttu-id="6aa47-220">W danej chwili można wykonać tylko jedną asynchroniczną <xref:System.Windows.Markup.XamlReader> operację ładowania na wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-220">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="6aa47-221">Jeśli zostanie podjęta próba wykonania więcej niż jednej operacji asynchronicznej w tym samym <xref:System.Windows.Markup.XamlReader> wystąpieniu <xref:System.InvalidOperationException> klasy a jest generowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-221">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-222"><paramref name="reader" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-222"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6aa47-223">Wiele operacji ładowania jest wykonywanych współbieżnie <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-223">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : System.IO.Stream * System.Windows.Markup.ParserContext -&gt; obj" Usage="xamlReader.LoadAsync (stream, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="6aa47-224">Strumień zawierający dane wejściowe XAML do załadowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-224">A stream containing the XAML input to load.</span></span></param>
        <param name="parserContext"><span data-ttu-id="6aa47-225">Informacje kontekstowe używane przez parser.</span><span class="sxs-lookup"><span data-stu-id="6aa47-225">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="6aa47-226">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca katalog główny odpowiedniego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-226">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span></span></summary>
        <returns><span data-ttu-id="6aa47-227">Katalog główny utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-227">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-228">Asynchroniczna operacja ładowania XAML najpierw zwraca obiekt, który jest całkowicie obiektem głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-228">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="6aa47-229">Asynchronicznie, analizowanie XAML następnie kontynuuje działanie, a wszystkie obiekty podrzędne są wypełniane w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="6aa47-229">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="6aa47-230">Jest to w przeciwieństwie do typowego zachowania przetwarzania kodu XAML WPF i interakcji z pojęciami WPF dotyczącymi okresu istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-230">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="6aa47-231">W typowej interakcji (nieasynchronicznej) wszystkie właściwości obiektu, w tym wszystkie kolekcje podrzędne, są wypełniane przed zwróceniem elementu i zgłoszeniem go jako załadowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-231">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="6aa47-232">To zachowanie jest równe metodologii tworzenia drzewa, w którym obiektem głównym jest ostatni obiekt, który stanie się dostępny.</span><span class="sxs-lookup"><span data-stu-id="6aa47-232">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="6aa47-233">Do niektórych lokalizacji w drzewie obiektów aplikacji można przypisać zwracany obiekt z informacją o tym, że zawartość może być nadal wypełniana i może powodować aktualizacje przyrostowe układu, jeśli cała zawartość jest dostępna jako część interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-233">You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="6aa47-234">Z tego powodu typowe jest izolowanie lub Wirtualizacja wszelkich asynchronicznie ładowanych obiektów z XAML i użycie logiki specyficznej dla aplikacji lub stanu aplikacji do powiadamiania, gdy <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-234">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="6aa47-235">Aby można było załadować znaczniki asynchronicznie, element główny w znaczniku XAML musi zawierać atrybut i wartość `x:SynchronousMode="Async"`. <xref:System.Windows.Markup.XamlReader.LoadAsync%2A></span><span class="sxs-lookup"><span data-stu-id="6aa47-235">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load markup asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="6aa47-236">Wartość jest traktowana jako uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="6aa47-236">The value is treated as case sensitive.</span></span> <span data-ttu-id="6aa47-237">Jeśli korzeń znacznika XAML nie zawiera `x:SynchronousMode="Async"`, zgłaszany jest żaden wyjątek, a wywołanie jest przetwarzane jako ładowanie synchroniczne (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span><span class="sxs-lookup"><span data-stu-id="6aa47-237">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span></span>  
  
 <span data-ttu-id="6aa47-238">W danej chwili można wykonać tylko jedną asynchroniczną <xref:System.Windows.Markup.XamlReader> operację ładowania na wystąpienie klasy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-238">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="6aa47-239">Jeśli zostanie podjęta próba wykonania więcej niż jednej operacji asynchronicznej w tym samym <xref:System.Windows.Markup.XamlReader> wystąpieniu <xref:System.InvalidOperationException> klasy a jest generowany.</span><span class="sxs-lookup"><span data-stu-id="6aa47-239">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6aa47-240"><paramref name="stream" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-240"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6aa47-241">Wiele operacji ładowania jest wykonywanych współbieżnie <see cref="T:System.Windows.Markup.XamlReader" />.</span><span class="sxs-lookup"><span data-stu-id="6aa47-241">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Markup.XamlReader.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.LoadCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6aa47-242">Występuje po zakończeniu asynchronicznej operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-242">Occurs when an asynchronous load operation completes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted>jest również uruchamiany w przypadku przerwania asynchronicznej operacji ładowania.</span><span class="sxs-lookup"><span data-stu-id="6aa47-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> is also raised when an asynchronous load operation aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6aa47-244">Odczytuje adiustację w określonym ciągu tekstowym i zwraca obiekt, który odnosi się do elementu głównego określonego znacznika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-244">Reads the markup in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xamlText As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse xamlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="6aa47-245">Wejściowy kod XAML jako pojedynczy ciąg tekstowy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-245">The input XAML, as a single text string.</span></span></param>
        <summary><span data-ttu-id="6aa47-246">Odczytuje dane wejściowe XAML w określonym ciągu tekstowym i zwraca obiekt, który odnosi się do elementu głównego określonego znacznika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-246">Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="6aa47-247">Katalog główny utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-247">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-248">Implementacja jest wywoływana <xref:System.Windows.Markup.XamlReader.Load%2A> wewnętrznie po utworzeniu strumienia z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-248">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="6aa47-249">Zobacz <xref:System.Windows.Markup.XamlReader.Load%2A> , aby uzyskać dodatkowe informacje, takie jak możliwe wyjątki.</span><span class="sxs-lookup"><span data-stu-id="6aa47-249">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Windows.Markup.ParserContext -&gt; obj" Usage="System.Windows.Markup.XamlReader.Parse (xamlText, parserContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="xamlText"><span data-ttu-id="6aa47-250">Wejściowy kod XAML jako pojedynczy ciąg tekstowy.</span><span class="sxs-lookup"><span data-stu-id="6aa47-250">The input XAML, as a single text string.</span></span></param>
        <param name="parserContext"><span data-ttu-id="6aa47-251">Informacje kontekstowe używane przez parser.</span><span class="sxs-lookup"><span data-stu-id="6aa47-251">Context information used by the parser.</span></span></param>
        <summary><span data-ttu-id="6aa47-252">Odczytuje adiustację XAML w określonym ciągu tekstowym (przy użyciu określonej <see cref="T:System.Windows.Markup.ParserContext" />) i zwraca obiekt, który odnosi się do elementu głównego określonego znacznika.</span><span class="sxs-lookup"><span data-stu-id="6aa47-252">Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</span></span></summary>
        <returns><span data-ttu-id="6aa47-253">Katalog główny utworzonego drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="6aa47-253">The root of the created object tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6aa47-254">Implementacja jest wywoływana <xref:System.Windows.Markup.XamlReader.Load%2A> wewnętrznie po utworzeniu strumienia z ciągu.</span><span class="sxs-lookup"><span data-stu-id="6aa47-254">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="6aa47-255">Zobacz <xref:System.Windows.Markup.XamlReader.Load%2A> , aby uzyskać dodatkowe informacje, takie jak możliwe wyjątki.</span><span class="sxs-lookup"><span data-stu-id="6aa47-255">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
