<Type Name="XamlReader" FullName="System.Windows.Markup.XamlReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb6251512dd75740e1b01a33ceb7e3470f3a68d1" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30709724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReader" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a73cf-101">Odczytuje dane wejściowe XAML i tworzy wykres obiektu przy użyciu czytnika XAML domyślne WPF i skojarzone moduł zapisywania obiektów języka XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a73cf-101">Reads XAML input and creates an object graph, using the WPF default XAML reader and an associated XAML object writer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-102">Synchroniczne <xref:System.Windows.Markup.XamlReader.Load%2A> metody są statyczne, ale asynchroniczną <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> metod nie są statyczne i wymagają wystąpienia <xref:System.Windows.Markup.XamlReader> klasy do użycia.</span><span class="sxs-lookup"><span data-stu-id="a73cf-102">The synchronous <xref:System.Windows.Markup.XamlReader.Load%2A> methods are static, but the asynchronous <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> methods are not static and require an instance of the <xref:System.Windows.Markup.XamlReader> class to use.</span></span>  
  
 <span data-ttu-id="a73cf-103">Dane wyjściowe `Load` metody jest pojedynczy obiekt reprezentuje obiekt główny drzewa utworzony obiekt lub obiekt Wykres.</span><span class="sxs-lookup"><span data-stu-id="a73cf-103">The output of the `Load` methods is a single object, which represents the root object of a created object tree or object graph.</span></span> <span data-ttu-id="a73cf-104">Wykresy, które są tworzone przez obiekt <xref:System.Windows.Markup.XamlReader> zazwyczaj są dodawane do istniejącego drzewa obiektów w aplikacji WPF w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="a73cf-104">Object graphs that are created by <xref:System.Windows.Markup.XamlReader> are typically added to the existing object tree of a WPF application at run time.</span></span> <span data-ttu-id="a73cf-105">W przeciwnym razie nowy wykres obiektu jest traktowany jako odłączona na potrzeby modelu aplikacji WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-105">Otherwise the new object graph is considered disconnected for purposes of the WPF application model.</span></span> <span data-ttu-id="a73cf-106">To oznacza, że nie jest renderowana i nie może dotyczyć używanych użyciu dowolną z metod drzewa obiektów jako drzewa obiektów głównych aplikacji WPF (na przykład interfejsy API <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span><span class="sxs-lookup"><span data-stu-id="a73cf-106">This means that it does not render, and cannot be accessed using any of the object tree techniques as applied to the WPF application's main object tree (for example, the APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</span></span> <span data-ttu-id="a73cf-107">Aby uzyskać więcej informacji dotyczących obiektu drzewa pojęć, zobacz [drzewa WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="a73cf-107">For more information on object tree concepts, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="a73cf-108"><xref:System.Windows.Markup.XamlReader> obsługuje następujące scenariusze głównej:</span><span class="sxs-lookup"><span data-stu-id="a73cf-108"><xref:System.Windows.Markup.XamlReader> supports the following primary scenarios:</span></span>  
  
-   <span data-ttu-id="a73cf-109">**Fabryka w klonowania obiektu**: bez dodatkowych mechanizmów typu odwołania zasadniczo nie może być uwzględniany w więcej niż jedną pozycję w drzewie obiektu WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-109">**Cloning/object factory**: Without additional mechanisms, a reference type generally cannot be included in more than one position in a WPF object tree.</span></span> <span data-ttu-id="a73cf-110">(Dodatkowe mechanizmy, które oferują obsługę udostępniania lub ponownie użyj na platformie WPF przykłady obiektów, które są oparte na <xref:System.Windows.Freezable>, lub obsługę często możliwe do udostępnienia obiektów, takich jak <xref:System.Windows.Media.Brush> który jest określany jako element <xref:System.Windows.ResourceDictionary>.) Jednym ze sposobów obiekt, który znajduje się już w klonowania jest drzewa obiektów do serializacji obiektów przy użyciu <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a73cf-110">(Examples of additional mechanisms that offer support for sharing or re-use in WPF include objects that are based on <xref:System.Windows.Freezable>, or support for commonly shareable objects such as <xref:System.Windows.Media.Brush> that are referenced as an item from a <xref:System.Windows.ResourceDictionary>.) One way to clone an object that is already in the object tree is to serialize the object using <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a73cf-111">Następnie możesz użyć serializacji ciągu jako dane wejściowe do wywołania <xref:System.Windows.Markup.XamlReader.Load%2A>, za pomocą strumienia lub <xref:System.Xml.XmlReader> jako pośrednik.</span><span class="sxs-lookup"><span data-stu-id="a73cf-111">You then use the serialized string as input for a call to <xref:System.Windows.Markup.XamlReader.Load%2A>, with a stream or <xref:System.Xml.XmlReader> as an intermediary.</span></span>  
  
-   <span data-ttu-id="a73cf-112">**Konstruowanie obiektów w oparciu o informacje w czasie**: często są inne sposoby ma wejścia późne powiązania lub dostarczone przez użytkownika zmiany stanu istniejących obiektów.</span><span class="sxs-lookup"><span data-stu-id="a73cf-112">**Constructing objects based on just-in-time information**: There are often other ways to have late-binding or user-supplied input change the state of existing objects.</span></span> <span data-ttu-id="a73cf-113">Na przykład można używać tej samej wartości można ustawić więcej niż jedną właściwość lub użyj wiązania z danymi.</span><span class="sxs-lookup"><span data-stu-id="a73cf-113">For example you could use the same value to set more than one property, or use data binding.</span></span> <span data-ttu-id="a73cf-114">Ale jeśli scenariusz, w którym nawet typ obiektu do utworzenia jest tylko możliwa do ustalenia w czasie wykonywania, lub z interakcji z użytkownikiem, następnie utworzenie takiego obiektu przez utworzenie ciąg w celu <xref:System.Windows.Markup.XamlReader.Load%2A> dane wejściowe są często technika przydatne.</span><span class="sxs-lookup"><span data-stu-id="a73cf-114">But if you have a scenario where even the type of object to create is only determinable at run time or with user interaction, then creating such an object by building up a string for <xref:System.Windows.Markup.XamlReader.Load%2A> input is often a useful technique.</span></span>  
  
-   <span data-ttu-id="a73cf-115">**Przy użyciu technik, istniejącego zasobu**: <xref:System.IO.Stream> typu jest często używane w innych platform lub technologii przesyłania danych ani obiektów poza granicami aplikacji lub w sytuacjach podobne.</span><span class="sxs-lookup"><span data-stu-id="a73cf-115">**Using existing resource techniques**: The <xref:System.IO.Stream> type is used frequently in other frameworks or technologies for transferring data or objects across application boundaries or for similar situations.</span></span> <span data-ttu-id="a73cf-116">Następnie można użyć <xref:System.IO.Stream> technik w celu przechowywania lub uzyskać danych w formacie XAML, który ostatecznie zostanie użyty do utworzenia obiektu w ramach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a73cf-116">You can then use the <xref:System.IO.Stream> techniques to store or obtain XAML-formatted data that you eventually use to create an object as part of your application.</span></span>  
  
-   <span data-ttu-id="a73cf-117">**Stałe dokumentów:** aplikacja może załadować dokumenty XPS lokalnego lub pobrany do włączenia do drzewa obiektów w aplikacji WPF i interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a73cf-117">**Fixed documents:** Your application might load local or downloaded XPS documents for inclusion in a WPF application object tree and UI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a73cf-118">Czasami tej dokumentacji opisano wykres obiektu, w przeciwieństwie do drzewa obiektów.</span><span class="sxs-lookup"><span data-stu-id="a73cf-118">This documentation sometimes describes an object graph, as opposed to an object tree.</span></span> <span data-ttu-id="a73cf-119">Relacji nadrzędny podrzędny ograniczeniami nie zawsze istnieje w relacje między obiektami czas wykonywania aplikacji WPF, więc wykres obiektu jest powszechnie stosowane terminologii.</span><span class="sxs-lookup"><span data-stu-id="a73cf-119">A strict parent-child relationship does not always exist in the run time object relationships of a run time WPF application, so an object graph is a more widely applicable terminology.</span></span> <span data-ttu-id="a73cf-120">Jednak ponieważ WPF obejmuje również conceptualization innego drzewa dwóch interfejsów API (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) metaphor drzewa nadal mają zastosowanie odpowiednio najczęściej rzeczywistych na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-120">However, because WPF also includes two different tree conceptualization APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) the tree metaphor still applies adequately to most real-world cases in WPF.</span></span> <span data-ttu-id="a73cf-121">Z perspektywy języka XAML, wykres obiektu jest często najlepszym sposobem zastanowić, tworzenia obiektów poza XAML, ponieważ sam języka XAML nie musi określać metodologii klasa pomocnika, których relacje jeden do ponownie struktury drzewa.</span><span class="sxs-lookup"><span data-stu-id="a73cf-121">From the XAML language perspective however, the object graph is often the best way to think about how objects are created out of XAML, because the XAML language itself does not necessarily specify helper class methodologies that bring the relationships more into a tree structure again.</span></span>  
  
## <a name="code-access-security-loose-xaml-and-xamlreader"></a><span data-ttu-id="a73cf-122">Zabezpieczenia dostępu kodu, utracić XAML i XamlReader</span><span class="sxs-lookup"><span data-stu-id="a73cf-122">Code Access Security, Loose XAML, and XamlReader</span></span>  
 <span data-ttu-id="a73cf-123">XAML jest język bezpośrednio reprezentuje podczas tworzenia wystąpienia obiektu i wykonywanie.</span><span class="sxs-lookup"><span data-stu-id="a73cf-123">XAML is a markup language that directly represents object instantiation and execution.</span></span> <span data-ttu-id="a73cf-124">W związku z tym elementy utworzone w języku XAML ma tego samego możliwość interakcji z zasobami systemu (na przykład sieci dostępu do pliku systemu We/Wy) jako równoważne, generowany jest kod.</span><span class="sxs-lookup"><span data-stu-id="a73cf-124">Therefore, elements created in XAML have the same ability to interact with system resources (network access, file system IO, for example) as the equivalent generated code does.</span></span>  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="a73cf-125"> obsługuje [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] strukturę zabezpieczeń [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a73cf-125"> supports the [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] security framework [!INCLUDE[TLA#tla_cas](~/includes/tlasharptla-cas-md.md)].</span></span> <span data-ttu-id="a73cf-126">Oznacza to, że [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] zawartości w strefie internet ma ograniczone uprawnienia wykonywania.</span><span class="sxs-lookup"><span data-stu-id="a73cf-126">This means that [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content running in the internet zone has reduced execution permissions.</span></span> <span data-ttu-id="a73cf-127">"Luźno XAML" (strony XAML Nieskompilowane interpretowana w czasie ładowania przez Podgląd XAML) i [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] są zazwyczaj uruchamiane w tej strefie internet i ten sam zestaw uprawnień.</span><span class="sxs-lookup"><span data-stu-id="a73cf-127">"Loose XAML" (pages of noncompiled XAML interpreted at load time by a XAML viewer) and [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)] are usually run in this internet zone and use the same permission set.</span></span>  <span data-ttu-id="a73cf-128">Jednak XAML załadowany w pełni zaufany aplikacji ma takie same prawa dostępu do zasobów systemowych, jak hostingu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="a73cf-128">However, XAML loaded in to a fully trusted application has the same access to the system resources as the hosting application does.</span></span> <span data-ttu-id="a73cf-129">Aby uzyskać więcej informacji, zobacz [WPF częściowego zaufania zabezpieczeń](~/docs/framework/wpf/wpf-partial-trust-security.md).</span><span class="sxs-lookup"><span data-stu-id="a73cf-129">For more information, see [WPF Partial Trust Security](~/docs/framework/wpf/wpf-partial-trust-security.md).</span></span>  
  
 <span data-ttu-id="a73cf-130">Konsekwencje te instrukcje dla <xref:System.Windows.Markup.XamlReader> jest, że projekt musi podjęcie decyzji o zaufaniu XAML zdecydujesz się załadować.</span><span class="sxs-lookup"><span data-stu-id="a73cf-130">The implications of these statements for <xref:System.Windows.Markup.XamlReader> is that your application design must make trust decisions about the XAML you decide to load.</span></span> <span data-ttu-id="a73cf-131">Ładowania XAML, który nie jest zaufany, należy rozważyć zaimplementowanie własne technika sandboxing jak załadować wynikowego wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-131">If you are loading XAML that is not trusted, consider implementing your own sandboxing technique for how you load the resulting object graph.</span></span>  
  
 <span data-ttu-id="a73cf-132"><xref:System.Windows.Markup.XamlReader> również może być wywoływany przez kod częściowego zaufania.</span><span class="sxs-lookup"><span data-stu-id="a73cf-132"><xref:System.Windows.Markup.XamlReader> can also be called by partial trust code.</span></span> <span data-ttu-id="a73cf-133">W takim przypadku strefy zabezpieczeń Internet jest stosowane do zabezpieczenia dostępu kodu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-133">In this case, Internet security zone is applied for code access security.</span></span> <span data-ttu-id="a73cf-134">Jeśli w XAML załadować jest nieprawidłowy w strefie Internet, jest zwracany wyjątek analizy XAML.</span><span class="sxs-lookup"><span data-stu-id="a73cf-134">If anything in the loaded XAML is invalid under Internet security zone, a XAML parse exception is thrown.</span></span> <span data-ttu-id="a73cf-135">W obszarze XBAP i innych przypadków, które są częściowej relacji zaufania na poziomie platformy, gdzie <xref:System.Windows.Markup.XamlReader> jest częścią wykonywania, możesz uzyskać takie samo zachowanie wyjątek tak jak w przypadku wywołania jawne częściowej relacji zaufania.</span><span class="sxs-lookup"><span data-stu-id="a73cf-135">Under XBAP and other cases that are partial trust at the platform level, where <xref:System.Windows.Markup.XamlReader> is part of the execution, you get the same exception behavior as with explicit partial trust calls.</span></span>  
  
## <a name="wpf-xaml-xaml-readerswriters-and-xaml-language-versioning"></a><span data-ttu-id="a73cf-136">WPF XAML, XAML czytników/autorzy i przechowywanie wersji języka XAML</span><span class="sxs-lookup"><span data-stu-id="a73cf-136">WPF XAML, XAML Readers/Writers, and XAML Language Versioning</span></span>  
 [!INCLUDE[xaml2009](~/includes/xaml2009-md.md)]<span data-ttu-id="a73cf-137"> obejmuje funkcje języka, takich jak i.</span><span class="sxs-lookup"><span data-stu-id="a73cf-137"> includes language features such as  and .</span></span> <span data-ttu-id="a73cf-138">Można użyć sygnatur `Load` lub `Parse` można załadować pliku XAML, który używa tych funkcji.</span><span class="sxs-lookup"><span data-stu-id="a73cf-138">You can use signatures of `Load` or `Parse` to load XAML that uses these features.</span></span> <span data-ttu-id="a73cf-139">Jednak te funkcje językowe nie są obsługiwane dla języka XAML, który musi być kompilacji znaczników (takich jak XAML dla **strony** akcji w aplikacji WPF lub dowolnego języka XAML, która obejmuje zadania kompilacji znaczników w akcji kompilacji kompilacji).</span><span class="sxs-lookup"><span data-stu-id="a73cf-139">However, those language features are not supported for XAML that needs to be markup compiled (such as XAML for the **Page** build action in a WPF application, or any XAML that involves the markup compile task in the build actions).</span></span>  
  
 <span data-ttu-id="a73cf-140">Typy WPF i technologii WPF ogólnie obsługuje pojęcia, które opierają się na dostęp do wewnętrzne WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-140">WPF types and the WPF technology in general support concepts that rely on access to WPF internals.</span></span> <span data-ttu-id="a73cf-141">Na przykład jak WPF implementuje właściwości zależności zależy od wewnętrznego techniki wydajne członka typu wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="a73cf-141">For instance, how WPF implements dependency properties relies on internal techniques for efficient type-member lookup.</span></span> <span data-ttu-id="a73cf-142">Dostęp do tych wewnętrzne jest włączana przez XAML, odczytywanie i zapisywanie interfejsów API dostarczonych w <xref:System.Windows.Markup.XamlWriter> i <xref:System.Windows.Markup.XamlReader> z <xref:System.Windows.Markup> przestrzeni nazw i zestawu PresentationFramework.</span><span class="sxs-lookup"><span data-stu-id="a73cf-142">Access to these internals is enabled by the XAML reading and writing APIs provided in <xref:System.Windows.Markup.XamlWriter> and <xref:System.Windows.Markup.XamlReader> from the <xref:System.Windows.Markup> namespace and PresentationFramework assembly.</span></span> <span data-ttu-id="a73cf-143">Jednak niższego poziomu czytników XAML i autorzy XAML z zestawu System.Xaml (na podstawie klasy <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) nie mają dostępu do ustawienia wewnętrzne WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-143">However, the lower-level XAML readers and XAML writers from the System.Xaml assembly (classes based on <xref:System.Xaml.XamlReader?displayProperty=nameWithType>, <xref:System.Xaml.XamlWriter?displayProperty=nameWithType>) do not have access to the WPF internals.</span></span> <span data-ttu-id="a73cf-144">Nie ma żadnych zależności z System.Xaml do dowolnego zestawu specyficzne dla WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-144">There is no dependency from System.Xaml to any WPF-specific assembly.</span></span> <span data-ttu-id="a73cf-145">Bez dostępu do ustawienia wewnętrzne WPF czytników System.Xaml i autorzy poprawnie nie można załadować lub Zapisz WPF wszystkie typy lub typy oparte na typach WPF.</span><span class="sxs-lookup"><span data-stu-id="a73cf-145">Without access to the WPF internals, System.Xaml readers and writers cannot correctly load or save all WPF types, or types based on WPF types.</span></span> <span data-ttu-id="a73cf-146">W szczególności czytników System.Xaml i autorzy nie rozumie pojęcia, takie jak właściwości zależności WPF kopii Magazyn właściwości ani wszystkie szczegółowe informacje o używaniu WPF style, słownikach zasobów i szablony.</span><span class="sxs-lookup"><span data-stu-id="a73cf-146">In particular, the System.Xaml readers and writers do not understand concepts such as the WPF dependency property backing property store, or all the specifics of how WPF uses styles, resource dictionaries and templates.</span></span> <span data-ttu-id="a73cf-147">Dlatego trzeba wyboru, aby:</span><span class="sxs-lookup"><span data-stu-id="a73cf-147">Therefore you have a choice to make:</span></span>  
  
-   <span data-ttu-id="a73cf-148">Czy ładowanie typów WPF i/lub są przy użyciu kodu XAML w formie BAML w dowolny sposób, należy użyć czytników PresentationFramework XAML i zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="a73cf-148">If you are loading WPF types, and/or you are using XAML in BAML form in any way, use the PresentationFramework XAML readers and XAML writers.</span></span>  
  
-   <span data-ttu-id="a73cf-149">Nie używają żadnych typów WPF lub BAML formę XAML i nie używasz innej określonych technologii firmy czytnik XAML lub wykonania modułu zapisującego XAML przyczyn, które są specyficzne dla tej struktury, użyć czytników System.Xaml XAML i zapisywania XAML.</span><span class="sxs-lookup"><span data-stu-id="a73cf-149">If you are not relying on any WPF types or the BAML form of XAML, and are not using another specific technology's XAML reader or XAML writer implementation for reasons that are specific to that framework, use the System.Xaml XAML readers and XAML writers.</span></span>  
  
## <a name="systemxaml-backing-implementation-in-net-4"></a><span data-ttu-id="a73cf-150">System.Xaml kopii implementacja .NET 4</span><span class="sxs-lookup"><span data-stu-id="a73cf-150">System.Xaml Backing Implementation in .NET 4</span></span>  
 <span data-ttu-id="a73cf-151"><xref:System.Windows.Markup.XamlReader> jest powierzchnię interfejsu API można wywołać dla analizatora WPF XAML poziomie struktury.</span><span class="sxs-lookup"><span data-stu-id="a73cf-151"><xref:System.Windows.Markup.XamlReader> is the callable API surface for the WPF framework-level XAML parser.</span></span> <span data-ttu-id="a73cf-152">Tej samej podstawowej analizatora składni języka XAML oraz wykonuje środowiska wykonawczego języka XAML, ładowanie i analizowania aplikacji WPF przeznaczonych [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] i [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="a73cf-152">The same underlying XAML parser also performs the run-time XAML loading and parsing for WPF applications that target [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span>  
  
 <span data-ttu-id="a73cf-153">Jeśli aplikacja jest przeznaczona dla [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], zewnętrznego interfejsu API jest taki sam, ale części wdrożenia są tworzone [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] ogólne implementacji XAML w zestawie System.Xaml, co zwiększa wiele aspektów technicznych i raportowania analiza kodu XAML.</span><span class="sxs-lookup"><span data-stu-id="a73cf-153">If you are targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the external API is the same, but parts of the implementation are built on the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] general XAML implementation in the System.Xaml assembly, which improves many of the technical and reporting aspects of parsing XAML.</span></span> <span data-ttu-id="a73cf-154">Celem [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] zawsze powoduje tym System.Xaml jako odwołanie i szczegóły implementacji, takie jak wyjątki zgłoszone mogą pochodzić z System.Xaml zdefiniowanych typów.</span><span class="sxs-lookup"><span data-stu-id="a73cf-154">Targeting [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] necessarily entails including System.Xaml as a reference, and details of implementation such as the exceptions reported may come from System.Xaml defined types.</span></span>  
  
## Examples  
 <span data-ttu-id="a73cf-155">Poniższy przykład konwertuje <xref:System.Windows.Controls.Button> na ciąg za pomocą <xref:System.Windows.Markup.XamlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-155">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="a73cf-156">Ten ciąg jest następnie ładowany do <xref:System.Windows.Controls.Button> przy użyciu statycznych <xref:System.Windows.Markup.XamlReader.Load%2A> metoda <xref:System.Windows.Markup.XamlReader> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-156">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-157">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlReader" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-157">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-158">Przerywa bieżącej operacji asynchronicznych obciążenia, jeśli istnieje oczekująca operacja asynchronicznego obciążenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-158">Aborts the current asynchronous load operation, if there is an asynchronous load operation pending.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> Operacja asynchroniczna; w związku z tym niektóre ładowania może wystąpić, zanim operacja została przerwana.</span><span class="sxs-lookup"><span data-stu-id="a73cf-159"><xref:System.Windows.Markup.XamlReader.CancelAsync%2A> is an asynchronous operation; therefore, some loading may occur before the operation is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWpfSchemaContext">
      <MemberSignature Language="C#" Value="public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xaml.XamlSchemaContext GetWpfSchemaContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.GetWpfSchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWpfSchemaContext () As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xaml::XamlSchemaContext ^ GetWpfSchemaContext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-160">Zwraca <see cref="T:System.Xaml.XamlSchemaContext" /> obiekt, który reprezentuje ustawienia kontekst schematu WPF dla <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-160">Returns a <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> obiekt, który reprezentuje ustawienia kontekst schematu WPF dla <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-161">A <see cref="T:System.Xaml.XamlSchemaContext" /> object that represents the WPF schema context settings for a <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-162">Odczytuje dane wejściowe XAML i Zwraca pierwiastek drzewie odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-162">Reads XAML input and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a73cf-163">Kod XAML, aby załadować w formie strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-163">The XAML to load, in stream form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-164">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca <see cref="T:System.Object" /> oznacza to katalog główny drzewa odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-164">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an <see cref="T:System.Object" /> that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-165">Obiekt w katalogu głównym drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-165">The object at the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a73cf-166">Poniższy przykład jest zapisywany <xref:System.Windows.Controls.Button> do <xref:System.IO.MemoryStream> przy użyciu <xref:System.Windows.Markup.XamlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-166">The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class.</span></span> <span data-ttu-id="a73cf-167">Strumień jest następnie ładowany do <xref:System.Windows.Controls.Button> przy użyciu statycznych <xref:System.Windows.Markup.XamlReader.Load%2A> metoda <xref:System.Windows.Markup.XamlReader> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-167">The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-168">
            <paramref name="stream" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-168">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a73cf-169">A <see cref="T:System.Xaml.XamlReader" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-169">A <see cref="T:System.Xaml.XamlReader" /> object.</span>
          </span>
          <span data-ttu-id="a73cf-170">Oczekuje się można zainicjować przy użyciu wejściowych XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-170">This is expected to be initialized with input XAML.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-171">Odczytuje dane wejściowe XAML za pomocą podanego <see cref="T:System.Xaml.XamlReader" /> i zwraca obiekt, który jest elementem głównym drzewa odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-171">Reads the XAML input through a provided <see cref="T:System.Xaml.XamlReader" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-172">Obiekt, który jest elementem głównym drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-172">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-173">Dane wejściowe <xref:System.Xaml.XamlReader> może być <xref:System.Windows.Baml2006.Baml2006Reader>.</span><span class="sxs-lookup"><span data-stu-id="a73cf-173">The input <xref:System.Xaml.XamlReader> can be <xref:System.Windows.Baml2006.Baml2006Reader>.</span></span> <span data-ttu-id="a73cf-174">Jest to, jak załadować BAML w czasie wykonywania, lub do lokalizacji narzędzia celów.</span><span class="sxs-lookup"><span data-stu-id="a73cf-174">This is how you can load BAML at run time, or for localization tool purposes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-175">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-175">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a73cf-176">
            <see cref="T:System.Xml.XmlReader" /> Który został już załadowany XAML danych wejściowych do załadowania w postaci XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-176">The <see cref="T:System.Xml.XmlReader" /> that has already loaded the XAML input to load in XML form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-177">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.Xml.XmlReader" /> i zwraca obiekt, który jest elementem głównym drzewa odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-177">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-178">Obiekt, który jest elementem głównym drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-178">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a73cf-179">Poniższy przykład konwertuje <xref:System.Windows.Controls.Button> na ciąg za pomocą <xref:System.Windows.Markup.XamlWriter> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-179">The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.</span></span>  <span data-ttu-id="a73cf-180">Ten ciąg jest następnie ładowany do <xref:System.Windows.Controls.Button> przy użyciu statycznych <xref:System.Windows.Markup.XamlReader.Load%2A> metoda <xref:System.Windows.Markup.XamlReader> klasy.</span><span class="sxs-lookup"><span data-stu-id="a73cf-180">The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 [!code-csharp[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/csharp/VS_Snippets_Wpf/XamlReaderWriterSnippets/CSharp/Window1.xaml.cs#xamlreaderloadxmlreader)]
 [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XamlReaderWriterSnippets/visualbasic/window1.xaml.vb#xamlreaderloadxmlreader)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-181">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-181">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a73cf-182">Strumień, który zawiera XAML danych wejściowych do załadowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-182">The stream that contains the XAML input to load.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="a73cf-183">Informacje o kontekście używane przez analizator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-183">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-184">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i zwraca obiekt, który jest elementem głównym drzewa odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-184">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns an object that is the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-185">Obiekt, który jest elementem głównym drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-185">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-186">
            <paramref name="stream" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-186">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a73cf-187">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-187">-or-</span>
          </span>
          <span data-ttu-id="a73cf-188">
            <paramref name="parserContext" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-188">
              <paramref name="parserContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-189">Odczytuje znaczników XAML i zwraca obiekt, który odpowiada w katalogu głównym określonej znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-189">Reads XAML markup and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a73cf-190">Strumień XAML zawierającego dane wejściowe obciążenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-190">The stream containing the XAML input to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-191">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i Zwraca pierwiastek drzewie odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-191">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-192">Obiekt, który jest elementem głównym drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-192">The object that is the root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-193">Operacja asynchroniczna obciążenia XAML początkowo zwróci obiekt, który jest wyłącznie do obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-193">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="a73cf-194">Asynchronicznie następnie analizowanie zawartości XAML nadal i wszystkie jego obiekty podrzędne są wypełnione w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="a73cf-194">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="a73cf-195">Dzięki temu nie trzeba typowe WPF XAML przetwarzania zachowania i jego interakcji z WPF koncepcji okres istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-195">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="a73cf-196">Interakcja typowe (z systemem innym niż — async) wszystkie właściwości obiektu w tym wszystkie kolekcje podrzędne są wypełnione przed zwracanie elementu i raportowania go jako załadowane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-196">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="a73cf-197">To zachowanie jest równa metodologia dołu do góry tworzenia drzewa przypadku ostatni obiekt na udostępnienie obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-197">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="a73cf-198">Zazwyczaj miejsce w aplikacji WPF drzewa obiektów przypisywanej zwrócony obiekt, z wiedzy, które zawartości może nadal być wypełnianie i może spowodować aktualizacje przyrostowe układu, jeśli cała zawartość jest udostępniany jako część interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a73cf-198">You typically would assign the returned object to some location in your WPF application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="a73cf-199">Z tego powodu jest typowy do izolowania lub wirtualizację wszelkie obiekty asynchronicznie załadować z pliku XAML, a na potrzeby powiadomienia, kiedy stan aplikacji lub specyficzne dla aplikacji logiki <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-199">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="a73cf-200">Aby <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> załadować XAML wejściowych asynchronicznie, element główny w języku XAML, danych wejściowych musi zawierać atrybut i wartość `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="a73cf-200">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML input must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="a73cf-201">Wartość jest traktowany jako wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a73cf-201">The value is treated as case sensitive.</span></span> <span data-ttu-id="a73cf-202">Jeśli główny wejściowych XAML nie zawiera `x:SynchronousMode="Async"`, nie wyjątku i wywołanie jest przetwarzany jako synchroniczne obciążenia (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span><span class="sxs-lookup"><span data-stu-id="a73cf-202">If the XAML input root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</span></span>  
  
 <span data-ttu-id="a73cf-203">Tylko jedna operacja asynchroniczne ładowanie każdego wystąpienia <xref:System.Windows.Markup.XamlReader> klasy można wykonać w czasie.</span><span class="sxs-lookup"><span data-stu-id="a73cf-203">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="a73cf-204">Jeśli nastąpiła więcej niż jedną operację asynchroniczną, w tym samym wystąpieniu <xref:System.Windows.Markup.XamlReader> klasy <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="a73cf-204">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-205">
            <paramref name="stream" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-205">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a73cf-206">Wiele operacji obciążenia oczekujących jednocześnie takie same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-206">Multiple load operations are pending concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadAsync (reader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="a73cf-207">Istniejące <see cref="T:System.Xml.XmlReader" /> który został już załadowany odczytu danych wejściowych XAML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-207">An existing  <see cref="T:System.Xml.XmlReader" /> that has already loaded/read the XAML input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-208">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.Xml.XmlReader" /> i Zwraca pierwiastek drzewie odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-208">Reads the XAML input in the specified <see cref="T:System.Xml.XmlReader" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-209">Korzeń drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-209">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-210">Operacja asynchroniczna obciążenia XAML początkowo zwróci obiekt, który jest wyłącznie do obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-210">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="a73cf-211">Asynchronicznie następnie analizowanie zawartości XAML nadal i wszystkie jego obiekty podrzędne są wypełnione w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="a73cf-211">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="a73cf-212">Dzięki temu nie trzeba typowe WPF XAML przetwarzania zachowania i jego interakcji z WPF koncepcji okres istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-212">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="a73cf-213">Interakcja typowe (z systemem innym niż — async) wszystkie właściwości obiektu w tym wszystkie kolekcje podrzędne są wypełnione przed zwracanie elementu i raportowania go jako załadowane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-213">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="a73cf-214">To zachowanie jest równa metodologia dołu do góry tworzenia drzewa przypadku ostatni obiekt na udostępnienie obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-214">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="a73cf-215">Należy zwykle przypisać zwrócony obiekt z <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> miejsce w drzewie obiekt aplikacji, wiedzy, że zawartość może nadal być wypełnianie i może powodować aktualizacje przyrostowe układu, jeśli cała zawartość jest udostępniany jako część INTERFEJS UŻYTKOWNIKA.</span><span class="sxs-lookup"><span data-stu-id="a73cf-215">You typically would assign the returned object from <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="a73cf-216">Z tego powodu jest typowy do izolowania lub wirtualizację wszelkie obiekty asynchronicznie załadować z pliku XAML, a na potrzeby powiadomienia, kiedy stan aplikacji lub specyficzne dla aplikacji logiki <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-216">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="a73cf-217">Aby <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> załadować XAML wejściowych asynchronicznie, element główny w kodzie XAML musi zawierać atrybut i wartość `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="a73cf-217">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load XAML input asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="a73cf-218">Wartość jest traktowany jako wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a73cf-218">The value is treated as case sensitive.</span></span> <span data-ttu-id="a73cf-219">Jeśli główny znaczników XAML nie zawiera `x:SynchronousMode="Async"`, nie wyjątku i wywołanie zamiast tego jest przetwarzany jako synchroniczne obciążenia (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span><span class="sxs-lookup"><span data-stu-id="a73cf-219">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is instead processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</span></span>  
  
 <span data-ttu-id="a73cf-220">Tylko jedna operacja asynchroniczne ładowanie każdego wystąpienia <xref:System.Windows.Markup.XamlReader> klasy można wykonać w czasie.</span><span class="sxs-lookup"><span data-stu-id="a73cf-220">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="a73cf-221">Jeśli nastąpiła więcej niż jedną operację asynchroniczną, w tym samym wystąpieniu <xref:System.Windows.Markup.XamlReader> klasy <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="a73cf-221">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-222">
            <paramref name="reader" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-222">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a73cf-223">Wiele operacji obciążenia są wykonywane równocześnie takie same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-223">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object LoadAsync(class System.IO.Stream stream, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ LoadAsync(System::IO::Stream ^ stream, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="a73cf-224">Strumień XAML zawierającego dane wejściowe obciążenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-224">A stream containing the XAML input to load.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="a73cf-225">Informacje o kontekście używane przez analizator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-225">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-226">Odczytuje dane wejściowe XAML w określonym <see cref="T:System.IO.Stream" /> i Zwraca pierwiastek drzewie odpowiednich obiektów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-226">Reads the XAML input in the specified <see cref="T:System.IO.Stream" /> and returns the root of the corresponding object tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-227">Korzeń drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-227">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-228">Operacja asynchroniczna obciążenia XAML początkowo zwróci obiekt, który jest wyłącznie do obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-228">An asynchronous XAML load operation will initially return an object that is purely the root object.</span></span> <span data-ttu-id="a73cf-229">Asynchronicznie następnie analizowanie zawartości XAML nadal i wszystkie jego obiekty podrzędne są wypełnione w katalogu głównym.</span><span class="sxs-lookup"><span data-stu-id="a73cf-229">Asynchronously, XAML parsing then continues, and any child objects are filled in under the root.</span></span> <span data-ttu-id="a73cf-230">Dzięki temu nie trzeba typowe WPF XAML przetwarzania zachowania i jego interakcji z WPF koncepcji okres istnienia obiektu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-230">This is in contrast to the typical WPF XAML processing behavior and its interaction with WPF concepts of object lifetime.</span></span> <span data-ttu-id="a73cf-231">Interakcja typowe (z systemem innym niż — async) wszystkie właściwości obiektu w tym wszystkie kolekcje podrzędne są wypełnione przed zwracanie elementu i raportowania go jako załadowane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-231">In the typical (non-async) interaction, all properties of an object including all child collections are filled before returning an element and reporting it as loaded.</span></span> <span data-ttu-id="a73cf-232">To zachowanie jest równa metodologia dołu do góry tworzenia drzewa przypadku ostatni obiekt na udostępnienie obiektu głównego.</span><span class="sxs-lookup"><span data-stu-id="a73cf-232">That behavior equates to a bottom-up methodology for creating the tree where the root object is the last object to become available.</span></span>  
  
 <span data-ttu-id="a73cf-233">Zazwyczaj przypisywanej zwrócony obiekt miejsce w drzewie obiekt aplikacji, z wiedzy, które zawartości może nadal być wypełnianie i może powodować aktualizacje przyrostowe układu, jeśli cała zawartość jest udostępniany jako część interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="a73cf-233">You typically would assign the returned object to some location in your application's object tree, with the knowledge that content might still be filling in and might cause incremental layout updates if the entire content is exposed as part of the UI.</span></span> <span data-ttu-id="a73cf-234">Z tego powodu jest typowy do izolowania lub wirtualizację wszelkie obiekty asynchronicznie załadować z pliku XAML, a na potrzeby powiadomienia, kiedy stan aplikacji lub specyficzne dla aplikacji logiki <xref:System.Windows.Markup.XamlReader.LoadCompleted> jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="a73cf-234">For this reason it is typical to isolate or virtualize any asynchronously loaded objects from XAML, and to use application-specific logic or application state to notify when <xref:System.Windows.Markup.XamlReader.LoadCompleted> is handled.</span></span>  
  
 <span data-ttu-id="a73cf-235">Aby <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> załadować znaczników asynchronicznie, element główny w kodzie XAML musi zawierać atrybut i wartość `x:SynchronousMode="Async"`.</span><span class="sxs-lookup"><span data-stu-id="a73cf-235">In order for <xref:System.Windows.Markup.XamlReader.LoadAsync%2A> to load markup asynchronously, the root element in the XAML markup must contain the attribute and value `x:SynchronousMode="Async"`.</span></span> <span data-ttu-id="a73cf-236">Wartość jest traktowany jako wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a73cf-236">The value is treated as case sensitive.</span></span> <span data-ttu-id="a73cf-237">Jeśli główny znaczników XAML nie zawiera `x:SynchronousMode="Async"`, nie wyjątku i wywołanie jest przetwarzany jako synchroniczne obciążenia (zobacz <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span><span class="sxs-lookup"><span data-stu-id="a73cf-237">If the XAML markup root does not contain `x:SynchronousMode="Async"`, no exception is thrown, and the call is processed as a synchronous load (see <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</span></span>  
  
 <span data-ttu-id="a73cf-238">Tylko jedna operacja asynchroniczne ładowanie każdego wystąpienia <xref:System.Windows.Markup.XamlReader> klasy można wykonać w czasie.</span><span class="sxs-lookup"><span data-stu-id="a73cf-238">Only one asynchronous load operation per instance of the <xref:System.Windows.Markup.XamlReader> class can be performed at a time.</span></span>  <span data-ttu-id="a73cf-239">Jeśli nastąpiła więcej niż jedną operację asynchroniczną, w tym samym wystąpieniu <xref:System.Windows.Markup.XamlReader> klasy <xref:System.InvalidOperationException> jest generowany.</span><span class="sxs-lookup"><span data-stu-id="a73cf-239">If more than one asynchronous operation is attempted on the same instance of the <xref:System.Windows.Markup.XamlReader> class an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a73cf-240">
            <paramref name="stream" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-240">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a73cf-241">Wiele operacji obciążenia są wykonywane równocześnie takie same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-241">Multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Markup.XamlWriter" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Markup.XamlReader.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-242">Występuje po zakończeniu operacji asynchronicznej obciążenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-242">Occurs when an asynchronous load operation completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> jest również zgłaszane w przypadku przerwanie operacji asynchronicznych obciążenia.</span><span class="sxs-lookup"><span data-stu-id="a73cf-243"><xref:System.Windows.Markup.XamlReader.LoadCompleted> is also raised when an asynchronous load operation aborts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a73cf-244">Odczytuje kod znaczników w parametrach określony tekst i zwraca obiekt odpowiadający w katalogu głównym określonej znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-244">Reads the markup in the specified text string and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xamlText As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xamlText">
          <span data-ttu-id="a73cf-245">Dane wejściowe XAML jako jeden ciąg tekstowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-245">The input XAML, as a single text string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-246">Odczytuje dane wejściowe XAML w parametrach określony tekst i zwraca obiekt odpowiadający w katalogu głównym określonej znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-246">Reads the XAML input in the specified text string and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-247">Korzeń drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-247">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-248">Implementacja wywołuje <xref:System.Windows.Markup.XamlReader.Load%2A> wewnętrznie po tworzenia strumienia z ciągu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-248">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="a73cf-249">Zobacz <xref:System.Windows.Markup.XamlReader.Load%2A> Aby uzyskać dodatkowe informacje, takie jak możliwych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="a73cf-249">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xamlText, class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xamlText, System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlText" Type="System.String" />
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="xamlText">
          <span data-ttu-id="a73cf-250">Dane wejściowe XAML jako jeden ciąg tekstowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-250">The input XAML, as a single text string.</span>
          </span>
        </param>
        <param name="parserContext">
          <span data-ttu-id="a73cf-251">Informacje o kontekście używane przez analizator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-251">Context information used by the parser.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a73cf-252">Odczytuje kod znaczników XAML w ciągu określonego tekstu (przy użyciu określonej <see cref="T:System.Windows.Markup.ParserContext" />) i zwraca obiekt, który odpowiada w katalogu głównym określonej znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-252">Reads the XAML markup in the specified text string (using a specified <see cref="T:System.Windows.Markup.ParserContext" />) and returns an object that corresponds to the root of the specified markup.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a73cf-253">Korzeń drzewa utworzony obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a73cf-253">The root of the created object tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a73cf-254">Implementacja wywołuje <xref:System.Windows.Markup.XamlReader.Load%2A> wewnętrznie po tworzenia strumienia z ciągu.</span><span class="sxs-lookup"><span data-stu-id="a73cf-254">The implementation calls <xref:System.Windows.Markup.XamlReader.Load%2A> internally after creating a stream from the string.</span></span> <span data-ttu-id="a73cf-255">Zobacz <xref:System.Windows.Markup.XamlReader.Load%2A> Aby uzyskać dodatkowe informacje, takie jak możliwych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="a73cf-255">See <xref:System.Windows.Markup.XamlReader.Load%2A> for additional information such as possible exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>