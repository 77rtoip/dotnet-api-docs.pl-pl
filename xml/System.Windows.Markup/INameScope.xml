<Type Name="INameScope" FullName="System.Windows.Markup.INameScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="466a0a482f036cd976cfdb6c44e831e8ba1c8690" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167495" /></Metadata><TypeSignature Language="C#" Value="public interface INameScope" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INameScope" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.INameScope" />
  <TypeSignature Language="VB.NET" Value="Public Interface INameScope" />
  <TypeSignature Language="C++ CLI" Value="public interface class INameScope" />
  <TypeSignature Language="F#" Value="type INameScope = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiuje kontrakt dotyczący sposobu, w jaki nazwy elementów powinny być dostępne w określonym namescope XAML i jak wymusić unikatowość nazw w tym namescope XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest implementowany przez klasy, które mają elementy podrzędne, które mają być ponownie używane przez szablon lub Ustąp metaphor. Szablony, fabryki i podobne konstrukcje muszą mieć unikatowe Zakresy nazw WPF języka XAML, które są niezależne od grafu obiektów głównych i głównego kodu XAML. Zasada ta ma na celu brak kolizji nazw, gdy obiekty utworzone na podstawie tych elementów podrzędnych są wprowadzane do grafu obiektów aplikacji i dlatego, że operacje DOM i metody referencyjne XAML, które opierają się na identyfikatorze nazwy, mogą polegać na nazwie unikatowość w każdym namescope XAML.  
  
 W poprzednich wersjach .NET Framework ten interfejs istniał w 'Windowsbase zestaw specyficzny dla platformy WPF. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]programie <xref:System.Windows.Markup.INameScope> , znajduje się w zestawie System. XAML. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Ten interfejs jest implementowany przez klasę <xref:System.Windows.NameScope>WPF. Większość operacji namescope języka XAML [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] w działaniu <xref:System.Windows.NameScope> przy użyciu wystąpień, ale informacje są sporadycznie przekazywane wewnętrznie <xref:System.Windows.Markup.INameScope> przy użyciu odwołań.  
  
 Przykłady klas WPF wykorzystujących fabrykę lub Odłóż metaphor połączone z reprezentacją XAML <xref:System.Windows.Style> to <xref:System.Windows.FrameworkTemplate>i. Te implementacje zwykle polegają na jawnych wersjach metod interfejsu dostępnych w <xref:System.Windows.NameScope> klasie.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.NameScope" />
    <altmember cref="T:System.Windows.Markup.INameScopeDictionary" />
    <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">x:Name — atrybut</related>
  </Docs>
  <Members>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member FindName : string -&gt; obj" Usage="iNameScope.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name">Identyfikator nazwy żądanego obiektu.</param>
        <summary>Zwraca obiekt, który ma podaną nazwę identyfikującą.</summary>
        <returns>Obiekt, jeśli został znaleziony. Zwraca <see langword="null" /> wartość, jeśli nie odnaleziono obiektu o tej nazwie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Prawidłowe ciągi nazw w znacznikach XAML muszą być zgodne z wymaganiami [](~/docs/framework/xaml-services/xamlname-grammar.md)opisanymi w gramatyki XamlName.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.NameScope" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48">x:Name — atrybut</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="abstract member RegisterName : string * obj -&gt; unit" Usage="iNameScope.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="scopedElement" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do zarejestrowania.</param>
        <param name="scopedElement">Określony element, do którego odwołuje się podane <paramref name="name" /> .</param>
        <summary>Rejestruje podaną nazwę w bieżącym namescope XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zduplikowane nazwy w kodzie XAML namescope są niedozwolone.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Nie Zezwalaj na rejestrację zduplikowanych nazw. Jeśli dane wejściowe <paramref name="name" /> są już przypisane do istniejącego elementu w wewnętrznej reprezentacji kolekcji XAML namescope (nawet jeśli jest taka sama jak <paramref name="scopedElement" />), Zgłoś wyjątek.  
  
Rozważ również zgłaszanie wyjątku, jeśli podana nazwa nie jest zgodna z [gramatyką XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.INameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member UnregisterName : string -&gt; unit" Usage="iNameScope.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa do wyrejestrowania.</param>
        <summary>Wyrejestrowuje podanej nazwy z bieżącego języka XAML namescope.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Jeśli nazwa wejściowa nie istnieje, Zgłoś wyjątek.  
  
 Należy usunąć nazwę i wcześniej zarejestrowany element, do którego odwołuje się kolekcja namescope języka XAML, tak aby ta sama nazwa mogła zostać zarejestrowana w przyszłości.</para></block>
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
  </Members>
</Type>
