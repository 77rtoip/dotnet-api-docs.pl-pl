<Type Name="NameReferenceConverter" FullName="System.Windows.Markup.NameReferenceConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c60bc3bf11fbd9ec972c9375fa4c8653850baae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708902" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NameReferenceConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameReferenceConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.NameReferenceConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class NameReferenceConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameReferenceConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera typ konwersji do konwertowania nazwy ciągu na odwołanie do obiektu do obiektu o tej nazwie lub zwraca nazwę obiektu z obiektu wykresu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa udostępnia otokę konwertera typu około dwie usługi.  
  
 <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> Implementacja używa <xref:System.Xaml.IXamlNameResolver> usługi z kontekstu do rozpoznawać obiektu według nazwy w języku XAML. Jest to część odpowiednich czytnika XAML i implementacje składnika zapisywania języka XAML w usług .NET Framework XAML. Poprawne funkcjonowanie Konwerter wymaga, aby <xref:System.Xaml.IXamlNameResolver> usługa jest dostępna z kontekstu usługi.  
  
 <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> Implementacja używa <xref:System.Xaml.IXamlNameProvider> usługi z kontekstu przeprowadzać rozpoznawania nazw odwołania dla obiekt podczas zapisywania/serializacji. Jest to część odpowiednich składników zapisywania i odczytywania implementacji i ich kontekstu. Poprawne funkcjonowanie Konwerter wymaga, aby istnieć podstawowej <xref:System.Xaml.IXamlNameProvider> dostępnych usług.  
  
 Ta implementacja konwertera typu jest nietypowa dla <xref:System.ComponentModel.TypeConverter> typ podstawowy, ponieważ jest poza zakresem typu discrete konwersji. Umożliwia on potencjalnie konwertowanie dowolnego obiektu do i z odwołaniem do nazwy, dopóki ten obiekt może mieć nazwę przypisane do niego w kodzie XAML i kontekst obsługi ma niezbędne usługi, aby zwrócić wyników.  
  
 W ramach obsługi usługi ogólne, System.Xaml Podstawowa implementacja <xref:System.Xaml.XamlObjectWriter> i <xref:System.Xaml.XamlXmlWriter> podaj <xref:System.Xaml.IXamlNameProvider> i <xref:System.Xaml.IXamlNameResolver> usługi do użycia przez <xref:System.Windows.Markup.NameReferenceConverter>. Używa nazwy podstawę tych usług, albo `x:Name` lub <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> przypisanych właściwości aliasu.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameReferenceConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameReferenceConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.NameReferenceConverter" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="sourceType">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</param>
        <summary>Zwraca czy ten konwerter można przekonwertować obiektu typu jeden do innego obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja może przetwarzać tylko `sourceType` z <xref:System.String>. Inne typy zwracane `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="destinationType">Typ docelowy konwersji.</param>
        <summary>Zwraca wartość wskazującą, czy konwerter można przekonwertować obiektu na typ docelowy.</summary>
        <returns>
          <see langword="true" /> Jeśli konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A `destinationType` , która odwołuje się <xref:System.String> wpisz zwraca `true`; wszystkie inne `destinationType` wartości zwracane `false`.  
  
 Ta metoda zwraca wartość FAŁSZ, jeśli `context` jest `null`, lub jeśli <xref:System.Xaml.IXamlNameProvider> nie można uzyskać jako usługa z `context`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</param>
        <param name="value">Ciąg nazwy odwołania do konwersji.</param>
        <summary>Konwertuje podany obiekt do innego obiektu przy użyciu określonego kontekstu i kultury informacji.</summary>
        <returns>Zwrócony obiekt, który jest potencjalnie każdym obiekcie, który jest mapowany typ w zestawach odpowiednich zapasowy i stanie został zadeklarowany w języku XAML z odwołania do nazwy pliku XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko <xref:System.String> wejściowy zawiera wynik konwersji.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="value" /> jest pustym ciągiem ani ciągiem pustym.  
  
 —lub—  
  
 <see cref="T:System.Xaml.IXamlNameResolver" /> Usługa jest nieprawidłowy lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</param>
        <param name="value">Obiekt, który można pobrać nazwy odwołania.</param>
        <param name="destinationType">Typ do zwrócenia. Należy zawsze odwołania <see cref="T:System.String" /> typu.</param>
        <summary>Konwertuje obiekt określonego typu. Ta wartość jest przeznaczona do zwracania nazwy odwołań XAML dla obiektów z wykresu obiektu.</summary>
        <returns>Nazwa odwołania danych wejściowych <paramref name="value" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Xaml.IXamlNameProvider" /> Usługa jest nieprawidłowy lub niedostępny.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>