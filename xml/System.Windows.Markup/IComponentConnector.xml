<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bcc9c2ec81fc3ba9d6811339b819af61c85fafc7" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167512" /></Metadata><TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Program udostępnia kompilacje i narzędzia obsługi dla nazwanych elementów XAML oraz do dołączania do nich programów obsługi zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest używany wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>program.  
  
 Implementacje <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> programu są szeroko zauważalne w ramach infrastruktury świadczonej przez platformy lub technologie korzystające z języka XAML połączonego z modelami aplikacji i programowania. Na przykład za każdym razem, gdy Przyjrzyjmy się wygenerowanym klasom dla elementów głównych XAML na stronach i <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> aplikacjach WPF, zobaczysz w danych wyjściowych. Ta metoda istnieje również w skompilowanym zestawie i odgrywa rolę w modelu aplikacji WPF ładującej zawartość interfejsu użytkownika XAML w czasie analizy XAML. Aby uzyskać więcej informacji na temat integracji `InitializeComponent` koncepcji WPF, zobacz [Omówienie zarządzania aplikacjami](~/docs/framework/wpf/app-development/application-management-overview.md) lub powiązane z [kodem i XAML w WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 W poprzednich wersjach .NET Framework ten interfejs istniał w 'Windowsbase zestaw specyficzny dla platformy WPF. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]programie <xref:System.Windows.Markup.IComponentConnector> , znajduje się w zestawie System. XAML. . Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System. XAML](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Awaria <xref:System.Windows.Markup.IComponentConnector> podczas próby kompilacji jest często wskaźnikiem, że projekt WPF nie został poprawnie zaktualizowany. W szczególności projekt nie odwołuje się do zestawu System. XAML dla projektu, którego celem [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]jest. Spróbuj uruchomić `devenv /upgrade` opcję dla projektu lub w inny sposób Dostosuj odwołania do zestawu projektu, tak aby system. XAML znajduje się na liście referencyjnej.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="target" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="connectionId">Token identyfikatora do odróżniania wywołań.</param>
        <param name="target">Obiekt docelowy, do którego mają być połączone zdarzenia i nazwy.</param>
        <summary>Dołącza zdarzenia i nazwy do skompilowanej zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector>jest używany wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ładuje skompilowaną stronę składnika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector>jest używany wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Implementacje <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> programu są szeroko zauważalne w ramach infrastruktury świadczonej przez platformy lub technologie korzystające z języka XAML połączonego z modelami aplikacji i programowania. Na przykład za każdym razem, gdy Przyjrzyjmy się wygenerowanym klasom dla elementów głównych XAML na stronach i <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> aplikacjach WPF, zobaczysz w danych wyjściowych. Ta metoda istnieje również w skompilowanym zestawie i odgrywa rolę w modelu aplikacji WPF ładującej zawartość interfejsu użytkownika XAML w czasie analizy XAML. Aby uzyskać więcej informacji na temat integracji `InitializeComponent` koncepcji WPF, zobacz [Omówienie zarządzania aplikacjami](~/docs/framework/wpf/app-development/application-management-overview.md) lub powiązane z [kodem i XAML w WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
