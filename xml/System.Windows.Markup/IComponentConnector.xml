<Type Name="IComponentConnector" FullName="System.Windows.Markup.IComponentConnector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="111e269e9a5af3fdc48b73b79203c7542816013a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComponentConnector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComponentConnector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IComponentConnector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComponentConnector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComponentConnector" />
  <TypeSignature Language="F#" Value="type IComponentConnector = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia obsługę kompilacji znaczników i narzędzia dla nazwanych elementów XAML i dołączanie do ich obsługi zdarzeń.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten interfejs jest używana wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Implementacje <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> są powszechnie według jako część infrastrukturę platformy lub technologii, które używają XAML połączeniu z aplikacji i modele programowania. Na przykład po wyświetleniu wygenerowane klasy dla elementy główne XAML w WPF stron i aplikacji będzie można zaobserwować <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> zdefiniowane w danych wyjściowych. Ta metoda również istnieje w skompilowanym zestawie i pełni rolę w aplikacji WPF model ładowania zawartości interfejsu użytkownika XAML podczas analizy pliku XAML. Aby uzyskać więcej informacji na temat integracji WPF `InitializeComponent` koncepcji, zobacz [omówienie zarządzania aplikacji](~/docs/framework/wpf/app-development/application-management-overview.md) lub [CodeBehind i języka XAML w WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 Ten interfejs były dostępne w programie WPF określonego zestawu WindowsBase w poprzednich wersjach programu .NET Framework. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IComponentConnector> znajduje się w zestawie System.Xaml. . Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
> [!TIP]
>  Rozpoznanie <xref:System.Windows.Markup.IComponentConnector> podczas próby kompilacji jest często wskaźnik, że nie zaktualizowano projekt WPF poprawnie. W szczególności projektu nie odwołuje się do zestawu System.Xaml dla projektu, którego celem jest [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]. Spróbuj uruchomić `devenv /upgrade` opcji dla projektu lub, w przeciwnym razie dostosowywać odwołania do zestawów projektu tak, aby System.Xaml znajduje się na liście odwołania.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (int connectionId, object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(int32 connectionId, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.Connect(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (connectionId As Integer, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(int connectionId, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Connect : int * obj -&gt; unit" Usage="iComponentConnector.Connect (connectionId, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionId" Type="System.Int32" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="connectionId">Identyfikator tokenu do odróżnienia wywołania.</param>
        <param name="target">Obiekt docelowy nawiązać zdarzenia i nazwy.</param>
        <summary>Dołącza zdarzeń i nazwy skompilowane zawartości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> jest używana wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeComponent">
      <MemberSignature Language="C#" Value="public void InitializeComponent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeComponent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IComponentConnector.InitializeComponent" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeComponent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeComponent();" />
      <MemberSignature Language="F#" Value="abstract member InitializeComponent : unit -&gt; unit" Usage="iComponentConnector.InitializeComponent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ładuje kompilowanej stronie składnika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IComponentConnector> jest używana wewnętrznie przez <xref:System.Windows.Baml2006.Baml2006Reader>.  
  
 Implementacje <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> są powszechnie według jako część infrastrukturę platformy lub technologii, które używają XAML połączeniu z aplikacji i modele programowania. Na przykład po wyświetleniu wygenerowane klasy dla elementy główne XAML w WPF stron i aplikacji będzie można zaobserwować <xref:System.Windows.Markup.IComponentConnector.InitializeComponent%2A> zdefiniowane w danych wyjściowych. Ta metoda również istnieje w skompilowanym zestawie i pełni rolę w aplikacji WPF model ładowania zawartości interfejsu użytkownika XAML podczas analizy pliku XAML. Aby uzyskać więcej informacji na temat integracji WPF `InitializeComponent` koncepcji, zobacz [omówienie zarządzania aplikacji](~/docs/framework/wpf/app-development/application-management-overview.md) lub [CodeBehind i języka XAML w WPF](~/docs/framework/wpf/advanced/code-behind-and-xaml-in-wpf.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>