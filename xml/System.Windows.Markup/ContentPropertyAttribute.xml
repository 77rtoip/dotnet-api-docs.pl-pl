<Type Name="ContentPropertyAttribute" FullName="System.Windows.Markup.ContentPropertyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="043483c215e0e87aed3c98d4d50d9405d9b81c6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503095" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContentPropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContentPropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ContentPropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContentPropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentPropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ContentPropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wskazuje, która właściwość tego typu jest właściwością zawartości XAML. Procesor XAML używa tych informacji podczas przetwarzania elementy podrzędne reprezentacje XAML oparte na atrybutach typu XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli właściwości skojarzonej z <xref:System.Windows.Markup.ContentPropertyAttribute> nie jest typu `string` lub `object`, procesor XAML próbuje określić technika konwersji wartości. Pierwszy wyboru jest typu macierzystego w przypadku konwersji elementów podstawowych języka XAML lub określonych konwersje natywnego włączane przez tej konkretnej implementacji zapisywania XAML. Następny krok polega na wyszukiwaniu dla konwertera typu. W implementacji .NET konwertera typów jest identyfikowany na podstawie <xref:System.ComponentModel.TypeConverterAttribute> w jednej definicji elementu członkowskiego poziomu lub typ poziomu stosowanym. W razie znalezienia brak konwersji wartości Edytor obiektu XAML zwykle zgłasza wyjątek.  
  
 Aby zaakceptować więcej niż element pojedynczy obiekt jako zawartość, typ właściwości zawartości XAML musi być projektowaniu jako typ kolekcji.  
  
 Z powodu `Inherited=true` deklaracji atrybutu wartość <xref:System.Windows.Markup.ContentPropertyAttribute> zwykle dotyczy oznaczenie zawartości właściwości oraz wszystkich klas pochodnych. Stosowanie pustą <xref:System.Windows.Markup.ContentPropertyAttribute> umożliwia klasy pochodnej, aby usunąć deklaracji atrybutu właściwości zawartości przez klasę podstawową (i należy pamiętać, że klasa nie ma zawartości właściwości). Stosowanie o innej nazwie <xref:System.Windows.Markup.ContentPropertyAttribute> zastępuje dziedziczonego <xref:System.Windows.Markup.ContentPropertyAttribute> nowym.  
  
 W poprzednich wersjach programu .NET Framework ta klasa istniał w zestawie specyficzne dla WPF WindowsBase i było również równoległego wykonania w systemie Windows Communication Foundation (WCF). Począwszy od programu .NET Framework 4.0 <xref:System.Windows.Markup.ContentPropertyAttribute> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Przykład klasy w systemie Windows Presentation Foundation (WPF), który używa <xref:System.Windows.Markup.ContentPropertyAttribute> jest <xref:System.Windows.Controls.ContentControl>, który <xref:System.Windows.Controls.Button> klasa dziedziczy.  <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> Właściwość jest ustawiona przez właściwość content <xref:System.Windows.Markup.ContentPropertyAttribute>.  Jeśli <xref:System.Windows.Controls.Button> zostanie uruchomiony w języku XAML, <xref:System.Windows.Controls.ContentControl.Content%2A> z <xref:System.Windows.Controls.Button> zostanie ustawiona na element, który jest między tagami przycisk rozpoczęcia i zakończenia.  
    
## Examples  
 Poniższy przykład tworzy klasę o nazwie `Film` mający <xref:System.Windows.Markup.ContentPropertyAttribute> zastosowane.  Właściwość o nazwie `Title` jest oznaczony jako właściwość content.  
  
 [!code-csharp[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml.cs#markupcontentpropertyattribute)]
 [!code-vb[MarkupSnippets#MarkupContentPropertyAttribute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MarkupSnippets/visualbasic/window1.xaml.vb#markupcontentpropertyattribute)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Z powodu `Inherited=true` deklaracji atrybutu wartość <xref:System.Windows.Markup.ContentPropertyAttribute> zwykle dotyczy oznaczenie zawartości właściwości oraz wszystkich klas pochodnych. Za pomocą tego podpisu lub stosowania pustą <xref:System.Windows.Markup.ContentPropertyAttribute>, umożliwia klasy pochodnej w celu usunięcia deklaracji atrybutu właściwości zawartości przez klasę podstawową (i należy pamiętać, że klasa nie ma zawartości właściwości).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentPropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.ContentPropertyAttribute : string -&gt; System.Windows.Markup.ContentPropertyAttribute" Usage="new System.Windows.Markup.ContentPropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nazwa właściwości dla właściwości, która jest właściwość content.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> klasy przy użyciu określonej nazwy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przyjmuje zapasowy CLR, dostępnego `name` powinna być zgodna <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=nameWithType> odpowiednie właściwości w środowisku CLR typu systemu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę właściwości, która jest właściwość content.</summary>
        <value>Nazwa właściwości, która jest właściwość content.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>