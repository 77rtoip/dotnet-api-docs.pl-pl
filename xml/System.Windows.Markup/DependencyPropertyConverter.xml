<Type Name="DependencyPropertyConverter" FullName="System.Windows.Markup.DependencyPropertyConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ddf207aeb455fdd2c6dd74db6bee4f3ea4651e8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69167855" /></Metadata><TypeSignature Language="C#" Value="public sealed class DependencyPropertyConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.DependencyPropertyConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DependencyPropertyConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b23a6-101">Konwertuje z ciągu na <see cref="T:System.Windows.DependencyProperty" /> obiekt.</span><span class="sxs-lookup"><span data-stu-id="b23a6-101">Converts from a string to a <see cref="T:System.Windows.DependencyProperty" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b23a6-102">Klasa konwertuje tylko <xref:System.String> z do wystąpienia <xref:System.Windows.DependencyProperty>. <xref:System.Windows.Markup.DependencyPropertyConverter></span><span class="sxs-lookup"><span data-stu-id="b23a6-102">The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts from a <xref:System.String> into an instance of <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="b23a6-103">Inne próby podczas konwersji generują wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b23a6-103">Other attempts at conversion throw an exception.</span></span>  
  
 <span data-ttu-id="b23a6-104">\*\* \*\*`.`Konwertuje przy<xref:System.String> użyciu następującego formatu danych wejściowych: TypeName PropertyName. <xref:System.Windows.Markup.DependencyPropertyConverter></span><span class="sxs-lookup"><span data-stu-id="b23a6-104">The <xref:System.Windows.Markup.DependencyPropertyConverter> converts from a <xref:System.String> using the following input format: *typeName*`.`*propertyName*.</span></span> <span data-ttu-id="b23a6-105">Format *namespacePrefix*:*TypeName*`.`*PropertyName* jest również akceptowany ze względu na starsze przyczyny, ale składnik *namespacePrefix*: jest ignorowany.</span><span class="sxs-lookup"><span data-stu-id="b23a6-105">A format of *namespacePrefix*:*typeName*`.`*propertyName* is also accepted for legacy reasons but the *namespacePrefix*: component is ignored.</span></span> <span data-ttu-id="b23a6-106">Format *PropertyName* jest również akceptowany w niektórych przypadkach; Ten format opiera się na możliwości oszacowania właściwości otoczenia i wywnioskowania typu <xref:System.Xaml.IAmbientProvider> *TypeName*przez implementację usługi w kontekście.</span><span class="sxs-lookup"><span data-stu-id="b23a6-106">A format of *propertyName* is also accepted in certain cases; this format relies on the ability to evaluate ambient properties and deduce the *typeName*, by service implementation of <xref:System.Xaml.IAmbientProvider> in the context.</span></span>  
  
 <span data-ttu-id="b23a6-107">Ze względu na starsze przyczyny Ta klasa obsługuje również konwersję z rekordów BAML, ale jest to szczegóły implementacji i nie należy ich używać.</span><span class="sxs-lookup"><span data-stu-id="b23a6-107">For legacy reasons, this class also supports conversion from BAML records, but this is an implementation detail and should not be relied upon.</span></span>  
  
 <span data-ttu-id="b23a6-108">Zachowanie tego konwertera jest ukierunkowane na jeden scenariusz WPF dla przetwarzania XAML: Odczytywanie wartości <xref:System.Windows.Setter.Property%2A> atrybutu i <xref:System.Windows.DependencyProperty> generowanie wartości.</span><span class="sxs-lookup"><span data-stu-id="b23a6-108">The behavior of this converter is specifically oriented around a single WPF scenario for XAML processing: reading the attribute value of <xref:System.Windows.Setter.Property%2A> and generating a <xref:System.Windows.DependencyProperty> value.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependencyPropertyConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b23a6-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="b23a6-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.DependencyPropertyConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dependencyPropertyConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b23a6-110">Kontekst formatu, który zawiera informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="b23a6-110">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="b23a6-111">Typ obliczany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="b23a6-111">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="b23a6-112">Określa, czy obiekt określonego typu może zostać skonwertowany do wystąpienia <see cref="T:System.Windows.DependencyProperty" />.</span><span class="sxs-lookup"><span data-stu-id="b23a6-112">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.DependencyProperty" />.</span></span></summary>
        <returns><span data-ttu-id="b23a6-113"><see langword="true" />Jeśli ten konwerter może wykonać operację; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b23a6-113"><see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b23a6-114">Klasa konwertuje tylko ciąg na <xref:System.Windows.DependencyProperty>wystąpienie. <xref:System.Windows.Markup.DependencyPropertyConverter></span><span class="sxs-lookup"><span data-stu-id="b23a6-114">The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="b23a6-115">W związku z `sourceType` tym <xref:System.String> tylko `true`do zwracanych wartości.</span><span class="sxs-lookup"><span data-stu-id="b23a6-115">Therefore only a `sourceType` of <xref:System.String> returns `true`.</span></span>  
  
 <span data-ttu-id="b23a6-116">`context`nie jest używana w tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="b23a6-116">`context` is not used by this implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dependencyPropertyConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b23a6-117">Kontekst formatu, który zawiera informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="b23a6-117">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="b23a6-118">Typ obliczany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="b23a6-118">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="b23a6-119">Określa, czy wystąpienie <see cref="T:System.Windows.DependencyProperty" /> można przekonwertować na określony typ.</span><span class="sxs-lookup"><span data-stu-id="b23a6-119">Determines whether an instance of <see cref="T:System.Windows.DependencyProperty" /> can be converted to the specified type.</span></span></summary>
        <returns><span data-ttu-id="b23a6-120"><see langword="true" />Jeśli ten konwerter może wykonać operację; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="b23a6-120"><see langword="true" /> if this converter can perform the operation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b23a6-121">Ta implementacja zawsze zwraca `false`wartość.</span><span class="sxs-lookup"><span data-stu-id="b23a6-121">This implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dependencyPropertyConverter.ConvertFrom (context, culture, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b23a6-122">Kontekst formatu, który zawiera informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="b23a6-122">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="b23a6-123">Informacje specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="b23a6-123">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="b23a6-124">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="b23a6-124">The object to convert.</span></span></param>
        <summary><span data-ttu-id="b23a6-125">Próbuje skonwertować określony obiekt na <see cref="T:System.Windows.DependencyProperty" />, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="b23a6-125">Attempts to convert the specified object to a <see cref="T:System.Windows.DependencyProperty" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="b23a6-126">Przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="b23a6-126">The converted object.</span></span> <span data-ttu-id="b23a6-127">Jeśli konwersja zakończyła się pomyślnie, jest <see cref="T:System.Windows.DependencyProperty" />to.</span><span class="sxs-lookup"><span data-stu-id="b23a6-127">If the conversion is successful, this is a <see cref="T:System.Windows.DependencyProperty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b23a6-128">Klasa konwertuje tylko ciąg na <xref:System.Windows.DependencyProperty>wystąpienie. <xref:System.Windows.Markup.DependencyPropertyConverter></span><span class="sxs-lookup"><span data-stu-id="b23a6-128">The <xref:System.Windows.Markup.DependencyPropertyConverter> class only converts a string to an instance of <xref:System.Windows.DependencyProperty>.</span></span>  
  
 <span data-ttu-id="b23a6-129">`culture`nie jest używana w tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="b23a6-129">`culture` is not used by this implementation.</span></span>  
  
 <span data-ttu-id="b23a6-130">`context` Zapewniona jest usługa, która jest wymagana do zapewnienia właściwej oceny.</span><span class="sxs-lookup"><span data-stu-id="b23a6-130">The `context` provided is expected to provide services that are required for proper evaluation.</span></span> <span data-ttu-id="b23a6-131">Należą <xref:System.Xaml.IAmbientProvider>do nich <xref:System.Windows.Markup.IXamlTypeResolver>, i <xref:System.Xaml.IXamlSchemaContextProvider>.</span><span class="sxs-lookup"><span data-stu-id="b23a6-131">These include <xref:System.Xaml.IAmbientProvider>, <xref:System.Windows.Markup.IXamlTypeResolver>, and <xref:System.Xaml.IXamlSchemaContextProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b23a6-132"><paramref name="source" />nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="b23a6-132"><paramref name="source" /> cannot be converted.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b23a6-133"><paramref name="context" />lub <paramref name="source" /> są <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b23a6-133"><paramref name="context" /> or <paramref name="source" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="dependencyPropertyConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="b23a6-134">Kontekst formatu, który zawiera informacje o środowisku, z którego ten konwerter jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="b23a6-134">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="b23a6-135">Informacje specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="b23a6-135">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="b23a6-136">Obiekt do przekonwertowania.</span><span class="sxs-lookup"><span data-stu-id="b23a6-136">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="b23a6-137">Typ, do którego ma zostać przekonwertowany obiekt.</span><span class="sxs-lookup"><span data-stu-id="b23a6-137">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="b23a6-138">Podejmuje próbę <see cref="T:System.Windows.DependencyProperty" /> przekonwertowania do określonego typu przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="b23a6-138">Attempts to convert a <see cref="T:System.Windows.DependencyProperty" /> to the specified type, using the specified context.</span></span> <span data-ttu-id="b23a6-139">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b23a6-139">Always throws an exception.</span></span></summary>
        <returns><span data-ttu-id="b23a6-140">Zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b23a6-140">Always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b23a6-141">Ta implementacja zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="b23a6-141">This implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b23a6-142">We wszystkich przypadkach.</span><span class="sxs-lookup"><span data-stu-id="b23a6-142">In all cases.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
