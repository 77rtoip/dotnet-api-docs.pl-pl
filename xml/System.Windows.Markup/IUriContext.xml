<Type Name="IUriContext" FullName="System.Windows.Markup.IUriContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2af19935a30a4b6986111d8eb3b451d5cc92310c" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39819835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IUriContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public interface class IUriContext" />
  <TypeSignature Language="F#" Value="type IUriContext = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje usługę, w którego kontekście aplikacji rozwiązania podany względny identyfikator URI na bezwzględny identyfikator URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IUriContext> zaimplementowane jako usługi umożliwia konwerterów typów używać kontekstu specyficzne dla aplikacji, które mogą być w stanie zakończyć właściwości Typ identyfikatora URI.  
  
 Typy konwerterów i rozszerzeń znaczników można wyszukiwać <xref:System.Windows.Markup.IUriContext> jako usługi w kontekście usługi, dostarczone przez Edytor XAML obiektu, gdy moduł zapisywania obiektów XAML wywołuje zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 <xref:System.Windows.Markup.IUriContext> nie jest po prostu konwersja wartości i kontekst usługi. Klasa logiki dla elementów interfejsu użytkownika lub innych klas, które obsługują zawierania może także implementować <xref:System.Windows.Markup.IUriContext> usługi jako wzorzec rozpoznane elementy podrzędne można wywołać dla podstawowej informację identyfikatora URI lub przechowywać podstawowa informacje identyfikatora URI, które są uzyskiwane z XAML analizy element główny.  
  
 W poprzednich wersjach programu .NET Framework ten interfejs istniały w zestawie charakterystyczne dla WPF PresentationCore. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IUriContext> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użytkowania WPF  
 Przykładowe scenariusze dotyczące <xref:System.Windows.Markup.IUriContext> istnieje na platformie WPF.  
  
 Konwerter wartości, na przykład <xref:System.Windows.Media.FontFamilyConverter> klasy mogą używać względny identyfikator URI, który jest udostępniany dla właściwości, takie jak <xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType>, jeśli <xref:System.Windows.Markup.IUriContext> jest dostępna jako usługa na <xref:System.ComponentModel.ITypeDescriptorContext> danych wejściowych.  
  
 Na przykład tak element <xref:System.Windows.Documents.Hyperlink> implementuje <xref:System.Windows.Markup.IUriContext> tak, aby go mogą przekazywać wartości identyfikatora URI podstawowe podczas analizy, który następnie modyfikuje <xref:System.Windows.Documents.Hyperlink.NavigateUri%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia podstawowy identyfikator URI bieżącego kontekstu aplikacji.</summary>
        <value>Podstawowy identyfikator URI kontekst aplikacji.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>