<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f503716af7027995f4b99ecf18555121d08bc16" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39820300" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="04776-101">Udostępnia klasę bazową dla implementacji rozszerzenia znaczników XAML, które mogą być obsługiwane przez .NET Framework XAML Services i innych czytników XAML i moduły zapisujące XAML.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04776-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04776-102">Rozszerzenia znaczników zwracać obiekty do wywoływania w oparciu o dane wejściowe ciąg wartości atrybutów lub elementów znaczników w XAML.</span><span class="sxs-lookup"><span data-stu-id="04776-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="04776-103">Rozszerzenia znaczników zwracać obiekty w sposób bardziej zaawansowane niż można osiągnąć jedynie konwertery typu.</span><span class="sxs-lookup"><span data-stu-id="04776-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="04776-104">Edytor XAML obiektu wywołuje konwertera typów, ponieważ typ lub element członkowski ma implementacja konwertera typu skojarzone z nią.</span><span class="sxs-lookup"><span data-stu-id="04776-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="04776-105">Z CLR układem odniesienia, oznacza to, że dany typ lub członek jest <xref:System.ComponentModel.TypeConverterAttribute> opartego na atrybutach.</span><span class="sxs-lookup"><span data-stu-id="04776-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="04776-106">Z punktu widzenia systemie typu XAML, oznacza to, że typu XAML lub elementu członkowskiego XAML ma wartość jego `TypeConverter` właściwości.</span><span class="sxs-lookup"><span data-stu-id="04776-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="04776-107">Wywołanie konwertera typów jest powiązany z definicji typu lub właściwości i zawsze jest wywoływany przez XAML przetwarzania dla tych przypadków.</span><span class="sxs-lookup"><span data-stu-id="04776-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="04776-108">Z kolei rozszerzenie znaczników jest kontrolowana przez kod użytkownika i znaczników utworzone przez użytkownika i mogą być stosowane zawsze, gdy scenariusz aplikacji to uzasadnione.</span><span class="sxs-lookup"><span data-stu-id="04776-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="04776-109">Rozszerzenie znaczników mogą być wywoływane i mogą służyć do ustawiania wartości różnych składowej typu, tak długo, jak można przypisać do tej wartości jest zwracany typ rozszerzenia znaczników.</span><span class="sxs-lookup"><span data-stu-id="04776-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="04776-110">Informacje na temat tworzenia rozszerzenia znaczników niestandardowych, zobacz <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="04776-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="04776-111">Aby uzyskać więcej informacji na temat rozszerzenia znaczników w ogóle, zobacz [rozszerzenia znaczników dla przeglądu XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="04776-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span> <span data-ttu-id="04776-112">Jeśli tworzysz w WPF i przy użyciu lub Tworzenie rozszerzenia znaczników dla XAML, inne istotne informacje można znaleźć w temacie [rozszerzenia znacznikowania i WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="04776-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="04776-113"><xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> Metoda każda implementacja rozszerzenia znaczników można użyć <xref:System.IServiceProvider> w czasie wykonywania, która może zapewnić kontekstu.</span><span class="sxs-lookup"><span data-stu-id="04776-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="04776-114">To <xref:System.IServiceProvider> następnie zostaje przesłane zapytanie do określonych usług, które przekazują informacje, takie jak <xref:System.Windows.Markup.IProvideValueTarget> lub <xref:System.Windows.Markup.IXamlTypeResolver>.</span><span class="sxs-lookup"><span data-stu-id="04776-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="04776-115">Aby uzyskać więcej informacji na temat konteksty usług dla rozszerzenia znaczników, zobacz [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span><span class="sxs-lookup"><span data-stu-id="04776-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="04776-116">Klasy pochodne, powinny mieć atrybut <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> informowanie konsumentów specyficzny typ zwracany dostępne z poziomu rozszerzenia znaczników <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="04776-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04776-117">Inicjuje nowe wystąpienie klasy pochodzącej od <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-117">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04776-118"><xref:System.Windows.Markup.MarkupExtension> Klasa abstrakcyjna nie przechowuje wartości prywatne, które wymagają inicjalizacji.</span><span class="sxs-lookup"><span data-stu-id="04776-118">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="04776-119">
            <para>Rozszerzenia znaczników funkcjonalności należy zdefiniować własne publicznego konstruktora domyślnego. Ponadto rozszerzenie znaczników należy zaimplementować konstruktory, które są odpowiednie dla rozszerzenia możliwości zamierzone i użycie znaczników. Aby uzyskać więcej informacji, zobacz [rozszerzenia znaczników dla przeglądu XAML](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-119">
              <para>A functional markup extension should define its own public default constructor. Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage. For more information, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="04776-120">Pomocnik dostawcy usługi zapewniające usługi rozszerzenia znaczników.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-120">A service provider helper that can provide services for the markup extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04776-121">Po zaimplementowaniu w klasie pochodnej zwraca obiekt, który jest udostępniany jako wartość właściwości docelowej dla tego rozszerzenia znacznika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-121">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04776-122">Wartość obiektu, który można ustawić właściwości, w której stosowana jest rozszerzenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-122">The object value to set on the property where the extension is applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04776-123">Gdy procesor XAML przetwarza typu węzła i elementów członkowskich wartość, która jest rozszerzeniem znacznika, wywołuje ono <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> metody rozszerzenia znaczników i zapisuje wynik w strumieniu wykres lub serializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="04776-123">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="04776-124">Moduł zapisywania obiektów XAML przekazuje kontekst usługi do każdego takiego wdrożenia za pośrednictwem `serviceProvider` parametru.</span><span class="sxs-lookup"><span data-stu-id="04776-124">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="04776-125">Zobacz sekcję "Uwagi dotyczące implementacji", aby uzyskać więcej informacji na temat sposobu implementacji <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> w rozszerzeniu niestandardowych znaczników.</span><span class="sxs-lookup"><span data-stu-id="04776-125">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="04776-126">Uwagi dotyczące użytkowania WPF</span><span class="sxs-lookup"><span data-stu-id="04776-126">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="04776-127">Klas WPF, które mają specyficznych interakcji z operacje na zestawie znaczników nie należy polegać na <xref:System.Windows.Markup.IReceiveMarkupExtension> dla [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementacji.</span><span class="sxs-lookup"><span data-stu-id="04776-127">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="04776-128">Użyj <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>— zamiast tego przypisane wywołań zwrotnych.</span><span class="sxs-lookup"><span data-stu-id="04776-128">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="04776-129">
            <para>Wspólne usługi zwrócony przez domyślnego dostawcę usługi, który zazwyczaj jest dostępna dla niestandardowej lub istniejących <see cref="T:System.Windows.Markup.MarkupExtension" /> wdrożenia wraz z następującymi usługami podstawowego.  - <see cref="T:System.Windows.Markup.IProvideValueTarget" /> raporty odwołanie do obiektu i identyfikator właściwości z kontekstu, w którym jest używane rozszerzenie znaczników — <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> udostępnia to usługa, która równoleżnikami obiekt XAML ogólny pisania zachowanie, która może zapewnić <see cref="T:System.Type" /> oparte na XAML Nazwa typu. Nazwę można opcjonalnie dołączyć prefiks dla mapowanego przestrzeni nazw XAML.  - <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> bezpośrednio udostępnia active kontekst schematu XAML. Z zgłoszonych <see cref="T:System.Xaml.XamlSchemaContext" />, można uzyskać XAML kontekście informacji o schemacie takich jak zestawy są mapowane do pomocy technicznej typu, preferowany prefiks w zestawach, zawiera listę poszczególnych <see cref="T:System.Xaml.XamlType" /> zestawu i tak dalej.  -Innych usług dostępnych dla bardziej wyspecjalizowane scenariuszy rozszerzenia znaczników obejmują:- <see cref="T:System.Windows.Markup.IUriContext" />   
  
    -    <see cref="T:System.Xaml.IAmbientProvider" />   
  
    -    <see cref="T:System.Xaml.IDestinationTypeProvider" />   
  
    -    <see cref="T:System.Xaml.IRootObjectProvider" />   
  
    -    <see cref="T:System.Xaml.IXamlNameResolver" />   
  
    -    <see cref="T:System.Xaml.IXamlNamespaceResolver" /> Potencjalnie, implementacje <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> zignorować <paramref name="serviceProvider" /> parametru. Jest to możliwe w przypadku niektórych podstawowych scenariuszy, których brak kontekstu na wszystkich jest wymagany do zwracania wartości.  Typowego użycia usług .NET Framework XAML oraz XAML zaimplementowany obiekt moduły zapisujące zapewni usługodawcy do wszystkich metod konwerter wartości, które są wywoływane podczas XAML przetwarzania. Jednakże dla niezawodności, należy podać ścieżek kodu dla wartości null zarówno dla dostawcy usług, sam, jak i dla każdej żądanej usługi. Wartości null może wystąpić, jeśli rozszerzenia znaczników jest stosowana w sytuacji, gdy obsługa typowe usługi, dostarczone przez infrastrukturę procesora XAML nie są dostępne.  Aby uzyskać więcej informacji na temat dostępnych usług z kontekstu dostawcy usług XAML i sposobu ich używania, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Implementacje, które wymagają pewnych usługa była dostępna w celu utworzenia przydatne <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> wyników przewidywań zgłaszają wyjątki, jeśli usługi nie jest dostępna. Zalecane wyjątkiem throw jest <see cref="T:System.InvalidOperationException" />.  Wykonania może także zgłaszać wyjątki, jeśli jeden z argumentów, których potrzebuje rozszerzenie niestandardowych znaczników, aby zapewnić, że wartość jest równa null, jest nieprawidłowa dla typu danych lub nie zawiera wartości, że rozszerzenie znaczników jest w stanie przetwarzania. Zalecane wyjątkiem throw jest <see cref="T:System.InvalidOperationException" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="04776-129">
              <para>Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.  -   <see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used  -   <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name. The name can optionally include a prefix for a mapped XAML namespace.  -   <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly. From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.  -   Other services available for more specialized markup extension scenarios include:  -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" />  Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter. This is viable for some basic scenarios, where no context at all is required for returning a value.  In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing. However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service. Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.  For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available. The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.  The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing. The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
  </Members>
</Type>