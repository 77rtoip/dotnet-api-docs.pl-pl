<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004481" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje usługę, któremu podlega sytuacyjnej właściwości obiektu relacji do oceny rozszerzenia znaczników.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> reprezentuje usługę, któremu podlega informacje dotyczące struktury właściwości obiektu otaczającego przywołane konwertera wartości.  
  
 Typy konwerterów i rozszerzeń znaczników można wyszukiwać <xref:System.Windows.Markup.IProvideValueTarget> jako usługi w kontekście usługi, dostarczone przez Edytor XAML obiektu, gdy moduł zapisywania obiektów XAML wywołuje zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Dla rozszerzenia znaczników w szczególności w przypadku scenariusza gdzie <xref:System.Windows.Markup.IProvideValueTarget> przydaje się to do sprawdzania poprawności sytuacyjnej użycia rozszerzenia znaczników. Na przykład rozszerzenie znaczników może zaimplementować mechanizm wartość opóźnienia, ale przy użyciu tego mechanizmu może składać się wyłącznie odpowiednie, jeśli obiekt docelowy jest w stanie przy użyciu innych składników usługi mechanizm opóźnienia w czasie wykonywania. Można sprawdzić właściwości systemu typu Obiekt zwrócony jako <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> i upewnij się, ten obiekt obsługuje swoje techniki opóźnienia. Jeśli tak, rozszerzenie znaczników zwraca wartość, a jeśli nie, rozszerzenie znaczników zgłasza wyjątek, który zostanie pobrana jako wewnętrzny wyjątek przez Edytor XAML obiektu. Podobny scenariusz jest zapewnienie, że określoną właściwość obsługuje możliwości, sprawdzając typ właściwości systemu <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Chociaż nazwa interfejsu API <xref:System.Windows.Markup.IProvideValueTarget> może oznaczać skojarzenie z <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, informacje zgłoszone przez <xref:System.Windows.Markup.IProvideValueTarget> mogą być przydatne <xref:System.ComponentModel.TypeConverter> lub <xref:System.Windows.Markup.ValueSerializer>. A <xref:System.ComponentModel.TypeConverter> lub <xref:System.Windows.Markup.ValueSerializer> zazwyczaj mają dodatkowy kontekst niż rozszerzenie znaczników, ponieważ są one przeznaczone dla typu określonego celu lub właściwość docelowa, a zatem sytuacyjnej ważności jest zwykle przewidywalne, w systemie typów. Jednak istnieją inne scenariusze. Oto lista kilka scenariuszy, które mogą zostać zaimplementowane przez konwertera typów lub rozszerzenie znaczników:  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> wystąpienia wartości innych właściwości dla tego obiektu. Należy pamiętać, że tutaj obsługę może wystąpić konieczność niezawodna w przypadku nie ustawiono wartości, ponieważ kolejność przetwarzania elementów członkowskich XAML w obiekcie docelowym może być określana deterministycznie.  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> można odczytać metadanych na poziomie typu lub sprawdzić, czy wymagane interfejsy są implementowane przez typ.  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> można odczytać metadanych właściwości modelu.  
  
 Jeden scenariusz polega na użyciu <xref:System.Windows.Markup.IProvideValueTarget> informacji do właściwości lub obiektów, które są dozwolone w ustalonym przez rozszerzenie znaczników limitu.  
  
 Przed rozpoczęciem korzystania z usługi, upewnij się, że sama usługa nie jest `null` po zwróceniu przez parametr dostawcy danych usług używasz dla kontekstu.  
  
> [!IMPORTANT]
>  Podczas korzystania z usługi, jest szczególnie ważne, nie należy modyfikować zawiera odwołanie do obiektu <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> właściwości lub innych obiektów, odwołuje się ten obiekt. W szczególności dla WPF tych zmian może spowodować nieoczekiwane zmiany, które spowoduje unieważnienie system właściwości WPF.  
  
> [!NOTE]
>  Nie należy używać typu <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> określić dokładny typu rozszerzenia lub typ konwerter znaczników powinna zwrócić. To nie jest najlepszym rozwiązaniem. Twoje zwracany typ powinny być zgodne z przypisywanie (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> dla rozszerzenia znaczników) lub wzorce (Nazwa klasy konwertera typów).  
  
 W poprzednich wersjach programu .NET Framework ten interfejs istniały w zestawie charakterystyczne dla WPF WindowsBase. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użytkowania WPF  
 Ta usługa obsługuje framework funkcje, takie jak powiązania dla właściwości zależności.  
  
 W środowisku WPF usługi reprezentowany przez <xref:System.Windows.Markup.IProvideValueTarget> może zwrócić obiektami i właściwościami w sytuacjach, gdzie wartość zwracana z konwerter znaczników rozszerzenia lub typ zależy od kontekstu.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> jest używany tylko w wewnętrznej implementacji <xref:System.Windows.Data.BindingBase>, klasa, która implementuje mechanizm wiązania dla właściwości zależności na platformie WPF.  
  
 Dla WPF implementuje domyślnego dostawcę usługi wewnętrznej <xref:System.Windows.Markup.IProvideValueTarget> do użycia przez konwerter znaczników niestandardowe rozszerzenie lub typu. Obiekt i właściwości zgłaszane przez <xref:System.Windows.Markup.IProvideValueTarget> można ustawić tylko przez usługę wewnętrzne WPF. Wykraczając poza tym Definicja sposobu <xref:System.Windows.Markup.IProvideValueTarget> działa będzie wymagało zdefiniowania własnego dostawcy usług dla użycia konwertera rozszerzenia i typów znaczników, który implementuje co najmniej <xref:System.Windows.Markup.IProvideValueTarget> i <xref:System.Windows.Markup.IXamlTypeResolver> usług i oznacza to zaawansowane Scenariusz, który nie został opisany w tym miejscu.  
  
 Wartość null dla <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> lub <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> nie musi oznaczać, że konwerter znaczników rozszerzenia lub typ nie może działać, ale która zależy od implementacji. Przykład zamierzone, gdzie wartości z <xref:System.Windows.Markup.IProvideValueTarget> mają wartość null, nawet jeśli usługa jest dostępna jest, jeśli rozszerzenie znaczników jest zagnieżdżony w kolejnym rozszerzeniem znacznika, takich jak <xref:System.Windows.Data.Binding>. Implementacja, która opiera się na <xref:System.Windows.Markup.IProvideValueTarget> należy zawsze sprawdzić dla wartości null, jeśli tylko na potrzeby zgłaszania określony wyjątek, jeśli to jest Twoja zamierzonego projektu.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt docelowy zgłaszane.</summary>
        <value>Obiekt docelowy zgłaszane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez obiekt <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> rzeczywistego odwołania, nie jest typ identyfikatora systemowego lub inny identyfikator. Wartość może być też `null`; zobacz <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Podczas korzystania z usługi, jest szczególnie ważne, nie należy modyfikować zawiera odwołanie do obiektu <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> obsługi właściwości lub innych obiektów, odwołuje się ten obiekt jako wówczas właściwości, które nie są specjalnie konwersja wartości. WPF w szczególności zmiany obiektu docelowego może powodować nieoczekiwane zmiany, które spowoduje unieważnienie system właściwości WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typy konwerterów i rozszerzenia znaczników dla XAML</related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator zgłaszane właściwości docelowej.</summary>
        <value>Identyfikator właściwość target zgłaszane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość może być też `null`; zobacz <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użytkowania WPF  
 Dla właściwości zależności mogą zwracać domyślnej usługi WPF <xref:System.Windows.DependencyProperty>, w taki sposób, że rozszerzenie lub typ konwerter znaczników za pomocą metadanych. W przeciwnym razie może być zwracany obiekt <xref:System.Reflection.PropertyInfo> dla właściwości CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typy konwerterów i rozszerzenia znaczników dla XAML</related>
      </Docs>
    </Member>
  </Members>
</Type>