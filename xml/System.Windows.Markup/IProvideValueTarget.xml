<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe449848bcdce05ca59b27ae4a3b23e50137f9b6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708929" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje usługę, która raportuje relacje oparty na analizie sytuacji właściwości obiektu do oceny rozszerzenia znaczników.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> reprezentuje usługę, która raportuje informacje dotyczące struktury właściwości obiektu otaczającego przywołane konwertera wartości.  
  
 Typy konwerterów i rozszerzeń znaczników mogą wykonywać kwerendę o <xref:System.Windows.Markup.IProvideValueTarget> jako usługa w kontekście usługi zapewnianej przez moduł zapisujący obiektu XAML, gdy moduł zapisywania obiektów XAML wywoła zachowanie konwersji wartości. Aby uzyskać więcej informacji, zobacz [typy konwerterów i rozszerzenia znaczników dla XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) i [usługi kontekstów dostępne dla typów konwerterów i rozszerzeń znaczników](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Dla rozszerzenia znaczników w szczególności scenariusza gdzie <xref:System.Windows.Markup.IProvideValueTarget> przydaje się ma na celu określenie ważności użycia oparty na analizie sytuacji rozszerzenia znaczników. Na przykład rozszerzenia znaczników mogą zaimplementować mechanizm odroczenia wartość, ale przy użyciu mechanizmu może być tylko odpowiednie, jeśli obiekt docelowy jest w stanie przy użyciu innych składników z mechanizmu opóźnienia w czasie wykonywania. Można sprawdzić właściwości typu obiektu zwracane jako <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> i upewnij się, że Twoje technika odroczenia obsługuje ten obiekt. Jeśli tak, rozszerzenia znaczników zwraca wartość, a jeśli nie, rozszerzenia znaczników zgłasza wyjątek, który zostanie pobrana w wewnętrznym wyjątku przez Edytor obiektu języka XAML. Podobny scenariusz jest zapewnienie, że określoną właściwość obsługuje możliwości, sprawdzając typ właściwości systemu <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Mimo że ta nazwa interfejsu API <xref:System.Windows.Markup.IProvideValueTarget> może oznaczać skojarzenie z <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, informacje zgłoszone przez <xref:System.Windows.Markup.IProvideValueTarget> może także służyć do <xref:System.ComponentModel.TypeConverter> lub <xref:System.Windows.Markup.ValueSerializer>. A <xref:System.ComponentModel.TypeConverter> lub <xref:System.Windows.Markup.ValueSerializer> zazwyczaj mają więcej kontekst niż rozszerzenie znaczników, ponieważ są one przeznaczone wyłącznie do określonego elementu docelowego typu lub właściwość target, a w związku z tym ważność oparty na analizie sytuacji jest przewidywalne zwykle w systemie typów. Jednak inne scenariusze istnieje. Poniżej przedstawiono listę niektórych scenariuszy, które mogą zostać zaimplementowane przez konwerter typów lub rozszerzenie znaczników:  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> odczytać wystąpienia wartości innych właściwości tego obiektu. Należy zauważyć, że tutaj obsługę może być niezawodne nie ustawiono wartości, ponieważ kolejność przetwarzania elementów członkowskich XAML w obiekcie docelowym może być niedeterministyczne.  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> odczytać metadanych poziomu typu lub sprawdź, czy wymaganych interfejsów implementowanych przez typ.  
  
-   Pobierz <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> odczytać metadanych właściwości.  
  
 Scenariusz jest użycie <xref:System.Windows.Markup.IProvideValueTarget> informacji do właściwości lub obiektów, które są dozwolone w określonych przez użytkownika — rozszerzenie znaczników limitu.  
  
 Przed rozpoczęciem korzystania z usługi, upewnij się, że sama usługa nie jest `null` zwracane przez parametr dostawcy danych usług używasz dla kontekstu.  
  
> [!IMPORTANT]
>  Podczas korzystania z usługi, jest szczególnie ważne, nie można zmodyfikować obiektu odwołuje się <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> właściwości lub inne obiekty, które odwołuje się ten obiekt. W szczególności dla WPF tych zmian może spowodować nieoczekiwane zmiany, które spowoduje unieważnienie systemu właściwość WPF.  
  
> [!NOTE]
>  Nie należy używać typu <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> ustalenie dokładne typu konwertera rozszerzenia lub typ znacznika powinna zwrócić. To nie jest najlepszym rozwiązaniem. Twoje zwracany typ powinny być zgodne z przypisywanie (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> dla rozszerzenia znaczników) lub wzorce (Nazwa klasy konwertera typu).  
  
 Ten interfejs były dostępne w programie WPF określonego zestawu WindowsBase w poprzednich wersjach programu .NET Framework. W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> znajduje się w zestawie System.Xaml. Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Ta usługa obsługuje framework funkcje, takie jak powiązania dla właściwości zależności.  
  
 Na platformie WPF, usługa reprezentowany przez <xref:System.Windows.Markup.IProvideValueTarget> może zwrócić obiektów i właściwości w sytuacji, gdy wartość zwracana z konwertera rozszerzenia lub typ znaczników zależy od kontekstu.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> jest intensywnie wykorzystywana w wewnętrznej implementacji <xref:System.Windows.Data.BindingBase>, klasy, która implementuje mechanizm powiązania dla właściwości zależności na platformie WPF.  
  
 Wewnętrzny usługi domyślnego dostawcę dla implementuje WPF <xref:System.Windows.Markup.IProvideValueTarget> do użycia przez konwerter rozszerzenia lub typ znacznika niestandardowego. Obiekt, a właściwość zgłoszone przez <xref:System.Windows.Markup.IProvideValueTarget> może zostać ustawiona tylko przez usługę wewnętrzna WPF. Wykraczające poza to definicja sposobu <xref:System.Windows.Markup.IProvideValueTarget> działa będzie wymagać zdefiniowania własnego dostawcy usług dla użycia konwertera rozszerzenie i typ znaczników, implementujący co najmniej <xref:System.Windows.Markup.IProvideValueTarget> i <xref:System.Windows.Markup.IXamlTypeResolver> usług i który jest zaawansowane Scenariusz, który nie został opisany w tym miejscu.  
  
 Wartość null dla <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> lub <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> nie musi oznaczać, że konwertera rozszerzenia lub typ znacznika nie może działać, chociaż to zależy od implementacji. Przykład przypadek gdzie wartości z <xref:System.Windows.Markup.IProvideValueTarget> mają wartość null, nawet jeśli usługa jest dostępna jest, jeśli rozszerzenie znaczników jest zagnieżdżony w innym — rozszerzenie znaczników, takich jak <xref:System.Windows.Data.Binding>. Implementacja polega na <xref:System.Windows.Markup.IProvideValueTarget> należy zawsze sprawdzić dla wartości null, jeśli tylko na potrzeby generowania określony wyjątek, jeśli jest zamierzone projektu.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt docelowy zgłaszane.</summary>
        <value>Obiekt docelowy zgłaszane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość zwrócona przez <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> rzeczywistego odwołania, nie jest typu identyfikatora systemowego lub inny identyfikator. Wartość może być również `null`; zobacz <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  Podczas korzystania z usługi, jest szczególnie ważne, nie można zmodyfikować obiektu odwołuje się <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> właściwości lub inne obiekty, które odwołuje się ten obiekt jako sytuacja właściwości, które nie są specjalnie konwersja wartości są obsługi. WPF w szczególności zmiany obiektu docelowego może powodować nieoczekiwane zmiany, które spowoduje unieważnienie systemu właściwość WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera identyfikator dla docelowej właściwości zgłaszane.</summary>
        <value>Identyfikator właściwości target zgłaszane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość może być również `null`; zobacz <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użycia WPF  
 Dla właściwości zależności, może zwrócić domyślna usługa WPF <xref:System.Windows.DependencyProperty>, że konwerter rozszerzenia lub typ znaczników można użyć metadanych. W przeciwnym razie może być zwracany obiekt <xref:System.Reflection.PropertyInfo> właściwość CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>