<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeExtension.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac561ac1224d62662355e58bc4a47a46fdf9e214201.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61ac1224d62662355e58bc4a47a46fdf9e214201</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.TypeExtension">
          <source>Implements a markup extension that returns a <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> based on a string input.</source>
          <target state="translated">Implementuje rozszerzenie znaczników, który zwraca <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> na podstawie ciągu danych wejściowych.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage information, see <bpt id="p1">[</bpt>x:Type Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept>.</source>
          <target state="translated">Aby uzyskać <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> użycie informacji, zobacz <bpt id="p1">[</bpt>x: Type — rozszerzenie znaczników<ept id="p1">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>The <ph id="ph1">`{x:Type}`</ph> functionality is generally for user code invocation from markup.</source>
          <target state="translated"><ph id="ph1">`{x:Type}`</ph> Funkcje są zazwyczaj do wywoływania kodu użytkownika z poziomu znacznika.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>For code that is implementing XAML support, type resolution services come from <ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> and are related to the implementation of the acting XAML schema context.</source>
          <target state="translated">Kod, który implementuje obsługę języka XAML, usługi rozpoznawania typów pochodzą z <ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> i są związane z implementacją stanowiącej kontekst schematu XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>Do not attempt to reference <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> as a substitute for a <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> service provider; the context you pass in might not be valid for a type resolution, and attempts to call without valid services will fail.</source>
          <target state="translated">Nie należy próbować odwołania <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> zamiast <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> usługodawcy; przekazywane w kontekście nie jest prawidłowe rozpoznanie typu, a próby wywołania bez prawidłowe usługi zakończy się niepowodzeniem.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>WPF Usage Notes</source>
          <target state="translated">Uwagi dotyczące użycia WPF</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.TypeExtension">
          <source>Type references are commonly used for style, template, and databinding feature areas in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, when these features are referenced by XAML.</source>
          <target state="translated">Odwołania do typu są często używane do stylu, szablon i wiązania z danymi obszarów funkcji <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, gdy te funkcje są określone przez XAML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.TypeExtension">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>A string that identifies the type to make a reference to.</source>
          <target state="translated">Ciąg, który określa typ do utworzenia odwołania do.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>This string uses the format <bpt id="p1">&lt;c&gt;</bpt>prefix:className<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Ten ciąg w formacie <bpt id="p1">&lt;c&gt;</bpt>prefiksu: className<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source><bpt id="p1">&lt;c&gt;</bpt>prefix<ept id="p1">&lt;/c&gt;</ept> is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>prefiks<ept id="p1">&lt;/c&gt;</ept> jest prefiksem mapowania do przestrzeni nazw XAML i jest wymagana tylko do typów, które nie są przypisane do domyślnej przestrzeni nazw XAML odwołania.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class, initializing the <ph id="ph2">&lt;see cref="P:System.Windows.Markup.TypeExtension.TypeName" /&gt;</ph> value based on the provided <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> string.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> klasy inicjowanie <ph id="ph2">&lt;see cref="P:System.Windows.Markup.TypeExtension.TypeName" /&gt;</ph> wartości na podstawie udostępnionych <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> ciągu.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>This value is not evaluated when you set it in the constructor.</source>
          <target state="translated">Ta wartość nie jest oceniany, ustawiając w konstruktorze.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>If the value is not <ph id="ph1">`null`</ph>, the value will be initially accepted.</source>
          <target state="translated">Jeśli wartość nie jest <ph id="ph1">`null`</ph>, będą początkowo akceptowane wartości.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>The actual parsing and evaluation of the value is deferred until <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called on this extension, when XAML is parsed and with available service contexts active.</source>
          <target state="translated">Rzeczywiste analizowania i obliczanie wartości została odroczona do <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> jest wywoływana na to rozszerzenie podczas analizowania XAML i konteksty usług dostępne aktywne.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>At this time the <ph id="ph1">`typeName`</ph> is expected to be resolvable as a type within a XAML schema context, and that type is returned.</source>
          <target state="translated">W tej chwili <ph id="ph1">`typeName`</ph> powinien być rozpoznawany jako zwracany jest typ w kontekst schematu XAML i tego typu.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
          <source>Attempted to specify <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Podjęto próbę określenia <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> jako <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>The type to be represented by this <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph>.</source>
          <target state="translated">Typ może być reprezentowana przez to <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> class, declaring the type directly.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> klasy, z typem deklarującym bezpośrednio.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source>This is a helper method for run time code usages of <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> and is not part of the normal implementation pattern for a markup extension.</source>
          <target state="translated">Jest to metoda pomocnika do wykonywania kodu użycia <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> i nie jest częścią wzorca normalnego wdrożenia dla rozszerzenia znacznika.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Object that can provide services for the markup extension.</source>
          <target state="translated">Obiekt, który może zapewnić usługi rozszerzenia znaczników.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The provider is expected to provide a service for <ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph>.</source>
          <target state="translated">Dostawca powinien zapewniać usługę <ph id="ph1">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Returns an object that should be set on the property where this extension is applied.</source>
          <target state="translated">Zwraca obiekt, który powinien być ustawiony na właściwość których stosowane jest to rozszerzenie.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>For <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> , this is the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> value as evaluated for the requested type name.</source>
          <target state="translated">Aby uzyskać <ph id="ph1">&lt;see cref="T:System.Windows.Markup.TypeExtension" /&gt;</ph> , to <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> wartość jak dla nazwa żądanego typu.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to set on the property where the extension is applied.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> Można ustawić dla właściwości, których stosowane jest rozszerzeniem.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>You can pass <ph id="ph1">`null`</ph> for <ph id="ph2">`serviceProvider`</ph>, but only if this <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> instance was established with an initial true type in the constructor rather than a <ph id="ph4">`typeName`</ph>.</source>
          <target state="translated">Można przekazać <ph id="ph1">`null`</ph> dla <ph id="ph2">`serviceProvider`</ph>, ale tylko wtedy, gdy ten <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> wystąpienie zostało ustanowione początkowej typu wartość true w Konstruktorze zamiast <ph id="ph4">`typeName`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Otherwise, this markup extension implementation relies on services based on the passed <ph id="ph1">`serviceProvider`</ph>.</source>
          <target state="translated">W przeciwnym razie ta implementacja rozszerzenia znaczników zależy od usługi na podstawie przekazanej <ph id="ph1">`serviceProvider`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>It must not be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Nie może być <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>The <ph id="ph1">`serviceProvider`</ph> is expected to provide a service for <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`serviceProvider`</ph> Powinien zapewniać usługę <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="member" /&gt;</ph> value for the extension is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="member" /&gt;</ph> wartość dla rozszerzenia jest <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>Some part of the <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> string did not parse properly.</source>
          <target state="translated">Część <ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> ciąg nie prawidłowo przeanalizować.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> did not provide a service for <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> nie dostarczył usługi dla <ph id="ph2">&lt;see cref="T:System.Windows.Markup.IXamlTypeResolver" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source>-or-</source>
          <target state="translated">—lub—</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> value did not resolve to a type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="typeName" /&gt;</ph> wartość nie zostało rozwiązane do typu.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
          <source><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceProvider" /&gt;</ph> jest <ph id="ph2">&lt;see langword="null" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Gets or sets the type information for this extension.</source>
          <target state="translated">Pobiera lub ustawia informacje o typie dla tego rozszerzenia.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>The established type.</source>
          <target state="translated">Typ ustalonych.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>For runtime purposes, this may be <ph id="ph1">&lt;see langword="null" /&gt;</ph> for get access, but cannot be set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Do celów środowiska uruchomieniowego, może to być <ph id="ph1">&lt;see langword="null" /&gt;</ph> do uzyskania dostępu, ale nie można ustawić <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Unless this instance was deliberately instantiated with the <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29&gt;</ph> signature constructor, this value will be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Jeśli to wystąpienie celowo utworzono wystąpienie <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29&gt;</ph> podpisu konstruktora, wartość ta będzie <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>This property will not be reset when <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called.</source>
          <target state="translated">Ta właściwość nie będzie można zresetować podczas <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> jest wywoływana.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>If you want the true type represented you should always call <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> rather than check this property.</source>
          <target state="translated">Jeśli ma wartość true, typ reprezentowany zawsze należy wywołać <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> zamiast Sprawdź tej właściwości.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>This property is settable per usual rules regarding markup extension usage.</source>
          <target state="translated">Ta właściwość jest można ustawić na zwykle zasady dotyczące użycia rozszerzenia znaczników.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>However, if you are setting with a <ph id="ph1">&lt;xref:System.Type&gt;</ph>, then the purpose of this markup extension is irrelevant, because the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> is returned from a <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> call.</source>
          <target state="translated">Jednak po ustawieniu z <ph id="ph1">&lt;xref:System.Type&gt;</ph>, następnie celem tego rozszerzenia znacznika nie ma znaczenia, ponieważ taki sam <ph id="ph2">&lt;xref:System.Type&gt;</ph> jest zwracana z <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> wywołania.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.Type">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Próbowano ustawić <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>Gets or sets the type name represented by this markup extension.</source>
          <target state="translated">Pobiera lub ustawia nazwę typu reprezentowanego przez tego rozszerzenia znacznika.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>A string that identifies the type.</source>
          <target state="translated">Ciąg określający typ.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>This string uses the format <bpt id="p1">*</bpt>prefix<ept id="p1">*</ept><bpt id="p2">&lt;c&gt;</bpt>:<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">*</bpt>className<ept id="p3">*</ept>.</source>
          <target state="translated">Ten ciąg w formacie <bpt id="p1">*</bpt>prefiks<ept id="p1">*</ept><bpt id="p2">&lt;c&gt;</bpt>:<ept id="p2">&lt;/c&gt;</ept><bpt id="p3">*</bpt>className<ept id="p3">*</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>(<bpt id="p1">*</bpt>prefix<ept id="p1">*</ept> is the mapping prefix for an XML namespace, and is only required to reference types that are not mapped to the default XML namespace for WPF (<ph id="ph1">[!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]</ph>).</source>
          <target state="translated">(<bpt id="p1">*</bpt>prefiks<ept id="p1">*</ept> jest prefiks mapowania do przestrzeni nazw XML i jest wymagana tylko do typów, które nie są przypisane do domyślnej przestrzeni nazw XML dla WPF odwołania (<ph id="ph1">[!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]</ph>).</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.TypeExtension.TypeName">
          <source>Attempted to set to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Próbowano ustawić <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>