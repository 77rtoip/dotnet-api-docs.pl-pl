<Type Name="TypeExtension" FullName="System.Windows.Markup.TypeExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a46121bfdddb6a8cdf34506ee157fd116be9469" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004394" /></Metadata><TypeSignature Language="C#" Value="public class TypeExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.TypeExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeExtension : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type TypeExtension = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.TypeExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Type))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje rozszerzenie znaczników, które zwraca <see cref="T:System.Type" /> na podstawie parametrów wejściowych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacje o użyciu, zobacz [x: Type Markup Extension](~/docs/framework/xaml-services/x-type-markup-extension.md).  
  
> [!NOTE]
>  `{x:Type}` Funkcja jest zwykle dla wywołania kodu użytkownika z kodu znaczników. Kod, który implementuje obsługę XAML, usługi rozpoznawania typu pochodzą <xref:System.Windows.Markup.IXamlTypeResolver> i są związane z implementacją stanowiącej kontekst schematu XAML. Nie należy próbować odwołania <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> zamiast <xref:System.Windows.Markup.IXamlTypeResolver> dostawcy usług; kontekst można przekazać może nie być odpowiedni do rozpoznawania typu i próby wywołania bez usług prawidłowe zakończy się niepowodzeniem.  
  
## <a name="wpf-usage-notes"></a>Uwagi dotyczące użytkowania WPF  
 Typ odwołania są często używane do stylów, szablon i wiązania danych obszarów funkcji [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], gdy te funkcje są przywoływane przez XAML.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0e0ce6f-e873-49c7-8ad7-8b840eb353ec">x:Type — Rozszerzenie znaczników</related>
    <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326">Typy konwerterów i rozszerzenia znaczników dla XAML</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.TypeExtension" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.TypeExtension" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : string -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeName">Ciąg, który identyfikuje typ do utworzenia odwołania do. Ten ciąg w formacie <c>prefiks: className</c>. <c>prefiks</c> jest prefiksem mapowania dla przestrzeni nazw XAML i musi się odwoływać się do typów, które nie są zamapowane na domyślnej przestrzeni nazw XAML.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.TypeExtension" /> klasy, inicjowanie <see cref="P:System.Windows.Markup.TypeExtension.TypeName" /> wartości na podstawie udostępnionych <paramref name="typeName" /> ciągu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość nie jest oceniany, gdy jest on ustawiany w konstruktorze. Jeśli wartość nie jest `null`, będą początkowo akceptowane wartości. Rzeczywiste analizowania i obliczanie wartości jest odroczone do czasu <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> jest wywoływana w to rozszerzenie, gdy zostanie przeanalizowany XAML i konteksty usług dostępne aktywne. W tej chwili `typeName` powinien być rozpoznawany jako typ w ramach kontekst schematu XAML i ten typ jest zwracana.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Podjęto próbę określenia <paramref name="typeName" /> jako <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeExtension (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeExtension(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.TypeExtension : Type -&gt; System.Windows.Markup.TypeExtension" Usage="new System.Windows.Markup.TypeExtension type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type">Typ może być reprezentowana przez to <see cref="T:System.Windows.Markup.TypeExtension" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.TypeExtension" /> klasy bezpośrednio deklarowania typu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to metodę pomocnika na potrzeby wykonywania kodu użycia <xref:System.Windows.Markup.TypeExtension> i nie jest częścią normalnego wdrożenia wzorzec rozszerzenie znaczników.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> jest <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="typeExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który może zapewnić usługi rozszerzenia znaczników. Dostawca powinien zapewniać usługę <see cref="T:System.Windows.Markup.IXamlTypeResolver" />.</param>
        <summary>Zwraca obiekt, który powinien być ustawiony na właściwość której stosowana jest to rozszerzenie. Aby uzyskać <see cref="T:System.Windows.Markup.TypeExtension" /> , to <see cref="T:System.Type" /> wartość oceniane pod kątem nazwa żądanego typu.</summary>
        <returns><see cref="T:System.Type" /> Można ustawić właściwości, w której stosowana jest rozszerzenie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można przekazać `null` dla `serviceProvider`, ale tylko wtedy, gdy ten <xref:System.Windows.Markup.TypeExtension> wystąpienie zostało ustanowione za pomocą początkowej wpisz wartość true w Konstruktorze zamiast `typeName`. W przeciwnym razie ta implementacja rozszerzenia znaczników zależy od usługi na podstawie przekazanej `serviceProvider`. Nie może być `null`. `serviceProvider` Oczekuje się, aby zapewnić obsługę dla <xref:System.Windows.Markup.IXamlTypeResolver>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="member" /> wartość dla rozszerzenia jest <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Część <paramref name="typeName" /> ciąg nie poprawnie przeanalizować.  
  
—lub— 
 <paramref name="serviceProvider" /> nie podano usługę <see cref="T:System.Windows.Markup.IXamlTypeResolver" />  
  
—lub— 
 <paramref name="typeName" /> wartość nie rozwiązało problemu do typu.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="serviceProvider" /> jest <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Windows.Markup.TypeExtension.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.ConstructorArgument("type")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia informacje o typie dla tego rozszerzenia.</summary>
        <value>Typ ustalonych. Do celów środowiska uruchomieniowego, może to być <see langword="null" /> do uzyskania dostępu, ale nie można ustawić <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chyba że to wystąpienie zostało celowo utworzone za pomocą <xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29> sygnatury konstruktora, ta wartość będzie `null`. Ta właściwość nie będzie miał podczas resetowania <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> jest wywoływana. Jeśli chcesz, aby na wartość true, typ reprezentowany zawsze powinna wywołać <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> zamiast sprawdzić tę właściwość.  
  
 Ta właściwość jest można ustawić na standardowym reguły dotyczące użycia rozszerzenia znaczników. Jednak po ustawieniu z <xref:System.Type>, celem tego rozszerzenia znacznika jest bez znaczenia, ponieważ taka sama <xref:System.Type> jest zwracana z <xref:System.Windows.Markup.TypeExtension.ProvideValue%2A> wywołania.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Próbowano ustawić <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.TypeExtension.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Windows.Markup.TypeExtension.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.8;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę typu, reprezentowane przez to rozszerzenie znaczników.</summary>
        <value>Ciąg, który identyfikuje typ. Ten ciąg w formacie *prefiks*<c>:</c>*className*. (*prefiks* jest mapowanie prefiks przestrzeni nazw XML i musi się odwoływać się do typów, które nie są zamapowane na domyślnej przestrzeni nazw XML dla WPF ([!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Próbowano ustawić <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>