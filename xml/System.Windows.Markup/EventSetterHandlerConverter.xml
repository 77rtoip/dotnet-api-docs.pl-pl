<Type Name="EventSetterHandlerConverter" FullName="System.Windows.Markup.EventSetterHandlerConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0491669270e5ef7148a49c1a7e018b5468349db4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30708488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventSetterHandlerConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventSetterHandlerConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.EventSetterHandlerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventSetterHandlerConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetterHandlerConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7d9d7-101">Konwertuje nazwę ciągu elementu setter program obsługi zdarzeń do reprezentacji obiektu delegowanego.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7d9d7-101">Converts the string name of an event setter handler to a delegate representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d9d7-102">Aby uzyskać więcej informacji dotyczących sposobu XAML dla WPF przetwarzania nazw programu obsługi zdarzeń, zobacz [omówienie XAML (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="7d9d7-102">For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetterHandlerConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetterHandlerConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7d9d7-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-103">Initializes a new instance of the <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (typeDescriptorContext As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">
          <span data-ttu-id="7d9d7-104">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="7d9d7-105">A <see cref="T:System.Type" /> reprezentujący chcesz konwertować z typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-105">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d9d7-106">Zwraca czy ten konwerter można przekonwertować obiektu typu do <see cref="T:System.Delegate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-106">Returns whether this converter can convert an object of one type to a <see cref="T:System.Delegate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d9d7-107">
            <see langword="true" /> Jeśli ten konwerter można dokonać konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-107">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d9d7-108">Ta metoda zwraca `true` tylko wtedy, gdy `sourceType` jest <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7d9d7-108">This method returns `true` only when `sourceType` is a <xref:System.String> type.</span></span> <span data-ttu-id="7d9d7-109">Wszystkie inne `sourceType` typy zwracane `false`.</span><span class="sxs-lookup"><span data-stu-id="7d9d7-109">All other `sourceType` types return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (typeDescriptorContext As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">
          <span data-ttu-id="7d9d7-110">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="7d9d7-111">A <see cref="T:System.Type" /> reprezentujący typ, który ma zostać przekonwertowany na.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-111">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d9d7-112">Zwraca czy ten konwerter można przekonwertować obiektu określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-112">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d9d7-113">Zawsze zwraca <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-113">Always returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">
          <span data-ttu-id="7d9d7-114">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="cultureInfo">
          <span data-ttu-id="7d9d7-115">
            <see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-115">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="7d9d7-116">Źródło ciąg do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-116">The source string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d9d7-117">Konwertuje określony ciąg na nowy <see cref="T:System.Delegate" /> obsługi zdarzeń.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-117">Converts the specified string to a new <see cref="T:System.Delegate" /> for the event handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d9d7-118">Nowy <see cref="T:System.Delegate" /> reprezentujący programu obsługi zdarzeń do którego istnieje odwołanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-118">A new <see cref="T:System.Delegate" /> that represents the referenced event handler.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d9d7-119">`typeDescriptorContext` Podać usług dla <xref:System.Xaml.IRootObjectProvider> i <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="7d9d7-119">The `typeDescriptorContext` must provide services for <xref:System.Xaml.IRootObjectProvider> and <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d9d7-120">Wymagane usługi nie są dostępne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-120">The necessary services are not available.</span>
          </span>
          <span data-ttu-id="7d9d7-121">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-121">-or-</span>
          </span>
          <span data-ttu-id="7d9d7-122">Nie można wykonać określonej konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-122">Could not perform the specific conversion.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d9d7-123">
            <paramref name="typeDescriptorContext" /> lub <paramref name="source" /> są <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-123">
              <paramref name="typeDescriptorContext" /> or <paramref name="source" /> are <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">
          <span data-ttu-id="7d9d7-124">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Zapewnia kontekstu formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-124">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="cultureInfo">
          <span data-ttu-id="7d9d7-125">
            <see cref="T:System.Globalization.CultureInfo" /> Do użycia jako bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-125">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="7d9d7-126">Wartość do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-126">The value to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="7d9d7-127">Typ docelowy konwersji <c>wartość</c> parametru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-127">The type to convert the <c>value</c> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7d9d7-128">Konwertuje określoną wartość obiektu określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-128">Converts the specified value object to the specified type.</span>
          </span>
          <span data-ttu-id="7d9d7-129">Zawsze zgłasza wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-129">Always throws an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7d9d7-130">Zawsze zgłasza wyjątek.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-130">Always throws an exception.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7d9d7-131">Element zgłaszany we wszystkich przypadkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7d9d7-131">Thrown in all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>