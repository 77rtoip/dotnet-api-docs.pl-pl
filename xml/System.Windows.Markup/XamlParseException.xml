<Type Name="XamlParseException" FullName="System.Windows.Markup.XamlParseException">
  <TypeSignature Language="C#" Value="public class XamlParseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlParseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlParseException" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlParseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlParseException : SystemException" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d91fd-101">Reprezentuje klasę wyjątku dla analizatora specyficzne wyjątki z analizatorem WPF XAML.</span><span class="sxs-lookup"><span data-stu-id="d91fd-101">Represents the exception class for parser-specific exceptions from a WPF XAML parser.</span></span> <span data-ttu-id="d91fd-102">Ten wyjątek jest używany w operacji analizatora XAML API lub WPF XAML z programu .NET Framework 3.0 i .NET Framework 3.5 lub do użytku określonego analizatora WPF XAML wywołując <see cref="T:System.Windows.Markup.XamlReader" /> interfejsu API.</span><span class="sxs-lookup"><span data-stu-id="d91fd-102">This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <see cref="T:System.Windows.Markup.XamlReader" /> API.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-103"><xref:System.Windows.Markup.XamlParseException> jest używany tylko dla analizatora zaimplementowana WPF XAML, który wykonuje XAML podczas analizowania i ładowanie aplikacji WPF.</span><span class="sxs-lookup"><span data-stu-id="d91fd-103"><xref:System.Windows.Markup.XamlParseException> is used only for the WPF-implemented XAML parser that performs the XAML parsing and loading for WPF applications.</span></span> <span data-ttu-id="d91fd-104">W szczególności wyjątek ma zastosowanie tylko podczas odpowiedniej aplikacji [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] i [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d91fd-104">Specifically, the exception is only relevant when an application targets [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="d91fd-105">Wyjątek może również pochodzić z kodu użytkownika w czasie wykonywania wywołania interfejsów API Podłączanie analizator zaimplementowana WPF XAML do załadowania w uruchomionej aplikacji WPF XAML z (na przykład wywołań <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="d91fd-105">The exception can also originate from user code in run-time calls to APIs that hook up the WPF-implemented XAML parser to load XAML from within a running WPF application (for example, calls to <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="d91fd-106">Aby uzyskać [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Xaml.XamlParseException> wyjątek, który zazwyczaj raporty wyjątki przetwarzania XAML jest zdefiniowany w innej przestrzeni nazw (<xref:System.Xaml>) i w innym zestawie (System.Xaml).</span><span class="sxs-lookup"><span data-stu-id="d91fd-106">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <xref:System.Xaml.XamlParseException> exception that typically reports XAML processing exceptions is defined in a different namespace (<xref:System.Xaml>) and a different assembly (System.Xaml).</span></span>  
  
 <span data-ttu-id="d91fd-107">Jeśli nie jest zapisywania równoważną analizator WPF XAML ani Praca z [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] i [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] docelowym, należy zwykle nie zgłosi wyjątku <xref:System.Windows.Markup.XamlParseException> z własnego kodu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-107">Unless you are writing an equivalent to the WPF XAML parser or working with [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] targeting, you generally will not throw <xref:System.Windows.Markup.XamlParseException> from your own code.</span></span> <span data-ttu-id="d91fd-108">Jednak czasami niezbędne jest obsługa wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-108">However, handling for the exception is sometimes necessary.</span></span> <span data-ttu-id="d91fd-109">Dla scenariuszy aplikacji, w którym można pominąć błędy analizy XAML, <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException> procedura obsługi zdarzeń na poziomie aplikacji jest jednym ze sposobów obsługi czasu wykonywania <xref:System.Windows.Markup.XamlParseException>.</span><span class="sxs-lookup"><span data-stu-id="d91fd-109">For application scenarios, where you may want to suppress XAML parse errors, a <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException> event handler at the application level is one way to handle a run-time <xref:System.Windows.Markup.XamlParseException>.</span></span> <span data-ttu-id="d91fd-110">Czy pominąć wyjątków lub daj powierzchni do kodu użytkownika zależy od sposobu projektowania aplikacji na potrzeby ładowania kodu XAML i ładuje poziom zaufania, przypisz do XAML aplikacji.</span><span class="sxs-lookup"><span data-stu-id="d91fd-110">Whether to suppress exceptions or let them surface to user code depends on how you design your application for purposes of loading XAML, and the trust level that you assign to the XAML your application loads.</span></span> <span data-ttu-id="d91fd-111">Aby uzyskać więcej informacji, zobacz [zagadnienia dotyczące zabezpieczeń XAML](~/docs/framework/xaml-services/xaml-security-considerations.md) lub sekcję "Zabezpieczenia XAML" [omówienie XAML (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="d91fd-111">For more information, see [XAML Security Considerations](~/docs/framework/xaml-services/xaml-security-considerations.md) or "XAML Security" section of [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 <span data-ttu-id="d91fd-112">Dla stron aplikacji gdy <xref:System.Windows.Markup.XamlParseException> jest zgłoszony, zazwyczaj jest to w kontekście `InitializeComponent` wywołania klasy strony, który jest punktem wejścia do użycia modelu aplikacji WPF analizatora WPF XAML na poziomie na stronie.</span><span class="sxs-lookup"><span data-stu-id="d91fd-112">For pages of an application, when the <xref:System.Windows.Markup.XamlParseException> is thrown, it is usually in the context of the `InitializeComponent` call made by your page class, which is the entry point for the WPF application model's usage of the WPF XAML parser at the per-page level.</span></span> <span data-ttu-id="d91fd-113">W związku z tym jest inną możliwą obsługi strategii można umieścić `try/catch` bloki w `InitializeComponent`.</span><span class="sxs-lookup"><span data-stu-id="d91fd-113">Therefore another possible handling strategy is to place `try/catch` blocks in `InitializeComponent`.</span></span> <span data-ttu-id="d91fd-114">Jednak ta metoda nie jest zintegrowana z szablony projektów visual i innych wygenerowany źródeł zapasowej tego punktu zaczepienia `InitializeComponent`.</span><span class="sxs-lookup"><span data-stu-id="d91fd-114">However, this technique does not integrate well with templates, visual design surfaces and other generated sources that hook up `InitializeComponent`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d91fd-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d91fd-115">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d91fd-116">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d91fd-116">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d91fd-117">Komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-117">The exception message.</span></span></param>
        <summary><span data-ttu-id="d91fd-118">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> przy użyciu określonego wyjątku ciąg komunikatu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlParseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlParseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d91fd-119">Zawiera wszystkie informacje wymagane do serializacji lub deserializacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-119">Contains all the information that is required to serialize or deserialize the object.</span></span></param>
        <param name="context"><span data-ttu-id="d91fd-120">Źródło i miejsce docelowe szeregowanego strumienia.</span><span class="sxs-lookup"><span data-stu-id="d91fd-120">The source and destination of a serialized stream.</span></span></param>
        <summary><span data-ttu-id="d91fd-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="d91fd-121">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-122">Ten konstruktor jest używany do serializacji podczas organizowania wyjątek tego typu granicy aplikacji domeny lub komputera.</span><span class="sxs-lookup"><span data-stu-id="d91fd-122">This constructor is used for serialization when marshaling an exception of this type across an application domain or machine boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d91fd-123">Komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-123">The exception message.</span></span></param>
        <param name="innerException"><span data-ttu-id="d91fd-124">Początkowa wyjątek, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="d91fd-124">The initial exception that occurred.</span></span></param>
        <summary><span data-ttu-id="d91fd-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> przy użyciu określonego wyjątku wiadomości ciąg i wewnętrzny wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-125">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-126">Wyjątek zgłaszany bezpośrednio z powodu poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-126">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="d91fd-127"><xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="d91fd-127">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d91fd-128">Komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-128">The exception message.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="d91fd-129">Numer wiersza, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-129">The line number where the exception occurred.</span></span></param>
        <param name="linePosition"><span data-ttu-id="d91fd-130">Pozycja w wierszu, w którym wyjątek wystąpił.</span><span class="sxs-lookup"><span data-stu-id="d91fd-130">The position in the line at which the exception occurred.</span></span></param>
        <summary><span data-ttu-id="d91fd-131">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> klasy, przy użyciu określonego wyjątku ciąg komunikatu i określony numer wiersza i umieść w wierszu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-131">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="d91fd-132">Komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-132">The exception message.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="d91fd-133">Numer wiersza, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-133">The line number where the exception occurred.</span></span></param>
        <param name="linePosition"><span data-ttu-id="d91fd-134">Pozycja w wierszu, w którym wyjątek wystąpił.</span><span class="sxs-lookup"><span data-stu-id="d91fd-134">The position in the line at which the exception occurred.</span></span></param>
        <param name="innerException"><span data-ttu-id="d91fd-135">Początkowa wyjątek, który wystąpił.</span><span class="sxs-lookup"><span data-stu-id="d91fd-135">The initial exception that occurred.</span></span></param>
        <summary><span data-ttu-id="d91fd-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.XamlParseException" /> przy użyciu wiadomości określony wyjątek, wyjątek wewnętrzny, numer wiersza i pozycji w wierszu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-136">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-137">Wyjątek zgłaszany bezpośrednio z powodu poprzedniego wyjątku powinien zawierać odwołanie do poprzedniego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-137">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="d91fd-138"><xref:System.Exception.InnerException%2A> Właściwość zwraca tę samą wartość, która została przekazana do konstruktora, lub `null` Jeśli <xref:System.Exception.InnerException%2A> właściwości nie dostarcza do konstruktora wartości wyjątku wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="d91fd-138">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-139">Pobiera bazowy identyfikator URI informacji po wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-139">Gets base URI information when the exception is thrown.</span></span></summary>
        <value><span data-ttu-id="d91fd-140">Kontekst analizator bazowy identyfikator URI.</span><span class="sxs-lookup"><span data-stu-id="d91fd-140">The parser context base URI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-141">Podstawowy identyfikator URI jest potencjalnie dostępne z powodu kontekstu analizator po wystąpieniu wyjątku.</span><span class="sxs-lookup"><span data-stu-id="d91fd-141">Base URI is potentially available because of parser context when the exception occurred.</span></span> <span data-ttu-id="d91fd-142">Wiedzy o podstawowym identyfikatora URI może być przydatne w przypadku debugowania czasami podstawową przyczyną jest błąd rozpoznawania zasobu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-142">Knowing the base URI can be useful for debugging cases where a resource resolution error is the underlying cause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d91fd-143">Informacje o serializacji obiekt do dodania danych serializacji.</span><span class="sxs-lookup"><span data-stu-id="d91fd-143">The serialization information object to add the serialization data to.</span></span></param>
        <param name="context"><span data-ttu-id="d91fd-144">Miejsce docelowe dla serializacji.</span><span class="sxs-lookup"><span data-stu-id="d91fd-144">The destination for this serialization.</span></span></param>
        <summary><span data-ttu-id="d91fd-145">Pobiera dane, które jest wymagana do serializacji określonego obiektu definiując określonego <see cref="T:System.Runtime.Serialization.SerializationInfo" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-145">Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d91fd-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> Ustawia <xref:System.Runtime.Serialization.SerializationInfo> obiektu ze wszystkimi danymi obiektu wyjątków przeznaczone do serializacji.</span><span class="sxs-lookup"><span data-stu-id="d91fd-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="d91fd-147">Podczas deserializacji, wyjątek jest odtworzonych z <xref:System.Runtime.Serialization.SerializationInfo> przesyłane przez strumień.</span><span class="sxs-lookup"><span data-stu-id="d91fd-147">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d91fd-148">w celu świadczenia usług serializacji.</span><span class="sxs-lookup"><span data-stu-id="d91fd-148">for providing serialization services.</span></span> <span data-ttu-id="d91fd-149">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> akcji zabezpieczeń: <see cref="M:System.Security.PermissionSet.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="d91fd-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="M:System.Security.PermissionSet.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="KeyContext">
      <MemberSignature Language="C#" Value="public object KeyContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object KeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ KeyContext { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-150">Pobiera lub ustawia wartość klucza elementu ze słownika, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-150">Gets or sets the key value of the item in a dictionary where the exception occurred.</span></span></summary>
        <value><span data-ttu-id="d91fd-151">Odpowiednie XAML <see langword="x:Key" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="d91fd-151">The relevant XAML <see langword="x:Key" /> value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.ResourceDictionary" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-152">Pobiera numer wiersza, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-152">Gets the line number where the exception occurred.</span></span></summary>
        <value><span data-ttu-id="d91fd-153">Numer wiersza.</span><span class="sxs-lookup"><span data-stu-id="d91fd-153">The line number.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-154">Pobiera pozycję w wierszu, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-154">Gets the position in the line where the exception occurred.</span></span></summary>
        <value><span data-ttu-id="d91fd-155">Położenie wiersza.</span><span class="sxs-lookup"><span data-stu-id="d91fd-155">The line position.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameContext">
      <MemberSignature Language="C#" Value="public string NameContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.NameContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameContext { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-156">Pobiera lub ustawia nazwę XAML obiektu, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-156">Gets or sets the XAML name of the object where the exception occurred.</span></span></summary>
        <value><span data-ttu-id="d91fd-157">Nazwa języka XAML obiektu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-157">The XAML name of the object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UidContext">
      <MemberSignature Language="C#" Value="public string UidContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UidContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.UidContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UidContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UidContext { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d91fd-158">Pobiera lub ustawia [x: Uid — dyrektywa](~/docs/framework/xaml-services/x-uid-directive.md) obiektu, w którym wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="d91fd-158">Gets or sets the [x:Uid Directive](~/docs/framework/xaml-services/x-uid-directive.md) of the object where the exception occurred.</span></span></summary>
        <value><span data-ttu-id="d91fd-159">Wartość <see langword="Uid" /> ciągu.</span><span class="sxs-lookup"><span data-stu-id="d91fd-159">The value of the <see langword="Uid" /> string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>