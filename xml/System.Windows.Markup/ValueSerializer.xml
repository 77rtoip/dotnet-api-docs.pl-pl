<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59030ed027457420aa960fc21555efb478355923" /><Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="10/27/2018" /><Meta Name="ms.locfileid" Value="50171857" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7216e-101">Klasa abstrakcyjna, która definiuje zachowanie konwersji do serializacji z reprezentacji obiektu.</span><span class="sxs-lookup"><span data-stu-id="7216e-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-102">Ciąg, który zwraca konwerter serializacji musi być bez utraty i konwerter zawsze musi zwracać ten sam ciąg dla określonej wartości.</span><span class="sxs-lookup"><span data-stu-id="7216e-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="7216e-103">Jeśli konwertera typów (pochodną <xref:System.ComponentModel.TypeConverter>) nie spełnia tych wymagań, w jego `ConvertTo` implementacje dla ciągów w danych wyjściowych, niestandardowe <xref:System.Windows.Markup.ValueSerializer> musi być zadeklarowana.</span><span class="sxs-lookup"><span data-stu-id="7216e-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="7216e-104">Albo <xref:System.Windows.Markup.ValueSerializer> powinny spełniać wymagania lub wartość null <xref:System.Windows.Markup.ValueSerializer> powinny być skojarzone z typem.</span><span class="sxs-lookup"><span data-stu-id="7216e-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="7216e-105">A <xref:System.Windows.Markup.ValueSerializer> jest skojarzony z typem, stosując <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="7216e-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="7216e-106">Wartość null <xref:System.Windows.Markup.ValueSerializer> wskazuje konwertera typów mają być ignorowane w przypadku konwersji na ciągi znaków konwersji z typu wykresu obiektu.</span><span class="sxs-lookup"><span data-stu-id="7216e-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7216e-107">Implementacja <xref:System.Windows.Markup.ValueSerializer> należy unikać zgłaszanie wyjątków.</span><span class="sxs-lookup"><span data-stu-id="7216e-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="7216e-108">Wyjątki zgłaszane można zakończyć serializacji.</span><span class="sxs-lookup"><span data-stu-id="7216e-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="7216e-109"><xref:System.Windows.Markup.IValueSerializerContext> Aby uzyskać <xref:System.Windows.Markup.ValueSerializer> i jej interfejsów API jest odpowiednikiem <xref:System.ComponentModel.ITypeDescriptorContext> dla <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="7216e-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="7216e-110">W rzeczywistości <xref:System.Windows.Markup.IValueSerializerContext> dziedziczy <xref:System.ComponentModel.ITypeDescriptorContext>.</span><span class="sxs-lookup"><span data-stu-id="7216e-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="7216e-111">Gdy <xref:System.Windows.Markup.ValueSerializer> interfejsu API w klasie pochodnej jest wywoływana, obiekt wywołujący (zwykle proces serializator) przekazuje kontekst, który może być świadczenia pewnych usług.</span><span class="sxs-lookup"><span data-stu-id="7216e-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="7216e-112">Ze względu na ogólne wskazówki, <xref:System.Windows.Markup.ValueSerializer> nie może zgłaszać wyjątki.</span><span class="sxs-lookup"><span data-stu-id="7216e-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="7216e-113">Błąd, aby powrócić do określonej usługi w kontekście musi również generuje żadnych wyjątków.</span><span class="sxs-lookup"><span data-stu-id="7216e-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="7216e-114">W poprzednich wersjach programu .NET Framework ta klasa istnieje w zestawie charakterystyczne dla WPF WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="7216e-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="7216e-115">W [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> znajduje się w zestawie System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="7216e-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="7216e-116">Aby uzyskać więcej informacji, zobacz [typy migrowane z WPF do System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="7216e-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7216e-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Markup.ValueSerializer" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7216e-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-118">Treść tego konstruktora jest pusta. <xref:System.Windows.Markup.ValueSerializer> klasa nie zawiera żadnych wartości, które wymagają inicjalizacji.</span><span class="sxs-lookup"><span data-stu-id="7216e-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-119">Ciąg, który można obliczyć wartości do konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-120">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-121">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony <see cref="T:System.String" /> mogą być konwertowane do wystąpienia typu, wykonania <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje.</span><span class="sxs-lookup"><span data-stu-id="7216e-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="7216e-122"><see langword="true" /> Jeśli można przekonwertować daną wartość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-123">Zwraca implementację podstawową zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="7216e-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-124">Obiekt, który można obliczyć wartości do konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-125">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-126">W przypadku przesłonięcia w klasie pochodnej, określa, czy określony obiekt można przekonwertować na <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="7216e-127"><see langword="true" /> Jeśli <paramref name="value" /> mogą być konwertowane na <see cref="T:System.String" />; w przeciwnym razie <see langword="false." /></span><span class="sxs-lookup"><span data-stu-id="7216e-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-128">Zwraca implementację podstawową zawsze `false`.</span><span class="sxs-lookup"><span data-stu-id="7216e-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-129">Ciąg do konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-130">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-131">W przypadku przesłonięcia w klasie pochodnej, konwertuje <see cref="T:System.String" /> do wystąpienia typu, implementacja <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje.</span><span class="sxs-lookup"><span data-stu-id="7216e-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="7216e-132">Nowe wystąpienie tego typu, implementacja <see cref="T:System.Windows.Markup.ValueSerializer" /> obsługuje oparciu o podane <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-133">Podstawowa implementacja zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7216e-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7216e-134"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7216e-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7216e-135">Należy unikać zgłaszanie wyjątków z implementacji.</span><span class="sxs-lookup"><span data-stu-id="7216e-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="7216e-136">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-137">Obiekt do przekonwertowania na ciąg.</span><span class="sxs-lookup"><span data-stu-id="7216e-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-138">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-139">W przypadku przesłonięcia w klasie pochodnej, konwertuje określony obiekt do <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="7216e-140">Ciąg reprezentujący określony obiekt.</span><span class="sxs-lookup"><span data-stu-id="7216e-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-141">Podstawowa implementacja zawsze zgłasza wyjątek.</span><span class="sxs-lookup"><span data-stu-id="7216e-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7216e-142"><paramref name="value" /> Nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7216e-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="7216e-143">Należy unikać zgłaszanie wyjątków z implementacji.</span><span class="sxs-lookup"><span data-stu-id="7216e-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="7216e-144">Zobacz <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-145">Obiekt, który nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7216e-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="7216e-146">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="7216e-147"><see cref="T:System.Exception" /> Obiektu, dla wyjątku, kiedy zgłoszenie <see langword="ConvertFrom" /> nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-148">Rzeczywiste `throw` — słowo kluczowe nie jest wywoływany przez tę metodę, dlatego jest typowy `throw GetConvertFromException` (przy użyciu parametrów podanych).</span><span class="sxs-lookup"><span data-stu-id="7216e-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="7216e-149">Określony wyjątek zwrócony <xref:System.InvalidOperationException>, za pomocą `value` przekazano komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7216e-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="7216e-150">Wzorzec użycia jest taka sama jak narzędzia wyjątek w <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="7216e-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-151">Obiekt, który nie można przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7216e-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="7216e-152">Typ, który reprezentuje typ konwersji próbował przekonwertować.</span><span class="sxs-lookup"><span data-stu-id="7216e-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="7216e-153">Zwraca wyjątek, aby zgłosić, gdy nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="7216e-154"><see cref="T:System.Exception" /> Obiektu, dla wyjątku, kiedy zgłoszenie <see langword="ConvertTo" /> nie można wykonać konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-155">Rzeczywiste `throw` — słowo kluczowe nie jest wywoływany przez tę metodę, dlatego jest typowy `throw GetConvertToException` (przy użyciu `value` podano parametr).</span><span class="sxs-lookup"><span data-stu-id="7216e-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="7216e-156">Określony wyjątek zwrócony <xref:System.InvalidOperationException>, za pomocą `value` przekazano komunikat o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="7216e-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="7216e-157">Wzorzec użycia jest taka sama jak narzędzia wyjątek w <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="7216e-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7216e-158">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> dla obiektu.</span><span class="sxs-lookup"><span data-stu-id="7216e-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="7216e-159">Deskryptor właściwości CLR dla właściwości do zserializowania.</span><span class="sxs-lookup"><span data-stu-id="7216e-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="7216e-160">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zadeklarowaną dla właściwości, przekazując deskryptor właściwości CLR dla właściwości.</span><span class="sxs-lookup"><span data-stu-id="7216e-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="7216e-161">Serializator skojarzony z określoną właściwością.</span><span class="sxs-lookup"><span data-stu-id="7216e-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="7216e-162">Może zwracać <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-163">A <xref:System.Windows.Markup.ValueSerializer> dla właściwości lub typ, który jest używany jako wartość właściwości jest wskazywany przez zastosowanie <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu w deklaracji właściwości lub typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="7216e-164"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Metoda jest metodą narzędzia, która odczytuje informacje o systemie typu CLR i zwraca nowy <xref:System.Windows.Markup.ValueSerializer> klasy oparty na atrybut, jeśli nie odnaleziono właściwości lub a w przypadku znalezione na typ właściwości.</span><span class="sxs-lookup"><span data-stu-id="7216e-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="7216e-165">`null` może zostać zwrócona, jeśli istnieje żadnego takiego elementu serializującego.</span><span class="sxs-lookup"><span data-stu-id="7216e-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="7216e-166">`null` mogą także zwracać w przypadku typu lub właściwości jest celowo związana z wartością null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7216e-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="7216e-167">Inny tryb, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> obsługuje Zwraca wewnętrzny `TypeConverterValueSerializer` klasy, która jest <xref:System.Windows.Markup.ValueSerializer> implementację, która otacza <xref:System.ComponentModel.TypeConverter> i wykonuje translację `Convert` metody `Convert*String` metod (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z wejściem <xref:System.String> wpisz i przekłada się na <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="7216e-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="7216e-168">Można to zrobić tylko w przypadkach, gdy są spełnione wszystkie z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="7216e-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="7216e-169">Element <xref:System.ComponentModel.TypeConverterAttribute> znajduje się w odpowiednich właściwości lub typ odpowiednich właściwości.</span><span class="sxs-lookup"><span data-stu-id="7216e-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="7216e-170">Wskazany <xref:System.ComponentModel.TypeConverter> można poprawnie zbudowane.</span><span class="sxs-lookup"><span data-stu-id="7216e-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="7216e-171"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="7216e-172"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="7216e-173"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7216e-174">Poniżej podano specjalne przypadki: <xref:System.DateTime> typów zwrotu <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> typy zwracają serializator wewnętrzny, ale funkcjonalności (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="7216e-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7216e-175"><paramref name="descriptor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7216e-176">Typ do pobrania <see cref="T:System.Windows.Markup.ValueSerializer" /> dla.</span><span class="sxs-lookup"><span data-stu-id="7216e-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="7216e-177">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zgłoszone dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="7216e-178">Serializator skojarzone z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="7216e-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="7216e-179">Może zwracać <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-180">A <xref:System.Windows.Markup.ValueSerializer> dla typu jest oznaczany przez zastosowanie <xref:System.Windows.Markup.ValueSerializerAttribute> atrybutu deklaracji typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="7216e-181"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> Metoda jest metodą narzędzia, która odczytuje informacje o systemie typu CLR i zwraca nowy <xref:System.Windows.Markup.ValueSerializer> klasy na podstawie atrybutu Jeśli znalezione na określonym `type`.</span><span class="sxs-lookup"><span data-stu-id="7216e-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="7216e-182">`null` może zostać zwrócona, jeśli istnieje żadnego takiego elementu serializującego.</span><span class="sxs-lookup"><span data-stu-id="7216e-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="7216e-183">`null` również może zostać zwrócona Jeśli typ jest celowo związana z wartością null <xref:System.Windows.Markup.ValueSerializerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7216e-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="7216e-184">Inny tryb, <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> obsługuje Zwraca wewnętrzny `TypeConverterValueSerializer` klasy, która jest <xref:System.Windows.Markup.ValueSerializer> implementację, która otacza <xref:System.ComponentModel.TypeConverter> i wykonuje translację `Convert` metody `Convert*String` metod (na przykład <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>jest wywoływana z wejściem <xref:System.String> wpisz i przekłada się na <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span><span class="sxs-lookup"><span data-stu-id="7216e-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="7216e-185">Można to zrobić tylko w przypadkach, gdy są spełnione wszystkie z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="7216e-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="7216e-186">A <xref:System.ComponentModel.TypeConverterAttribute> znajduje się na `type`.</span><span class="sxs-lookup"><span data-stu-id="7216e-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="7216e-187">Wskazany <xref:System.ComponentModel.TypeConverter> można poprawnie zbudowane.</span><span class="sxs-lookup"><span data-stu-id="7216e-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="7216e-188"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="7216e-189"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="7216e-190"><xref:System.ComponentModel.TypeConverter> Zwraca `true` dla <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, co jest nazywane odwołujące się do <xref:System.String> typu.</span><span class="sxs-lookup"><span data-stu-id="7216e-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7216e-191">Poniżej podano specjalne przypadki: <xref:System.DateTime> typów zwrotu <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> typy zwracają serializator wewnętrzny, ale funkcjonalności (`StringValueSerializer`).</span><span class="sxs-lookup"><span data-stu-id="7216e-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7216e-192"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="7216e-193">Deskryptor właściwości do zserializowania.</span><span class="sxs-lookup"><span data-stu-id="7216e-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-194">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-195">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zadeklarowany dla określonej właściwości przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7216e-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="7216e-196">Serializator skojarzony z określoną właściwością.</span><span class="sxs-lookup"><span data-stu-id="7216e-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-197">Zamiast polegać wyłącznie na atrybuty zgłoszone w systemie typów CLR, używa tego przeciążenia `context` jako usługa a wywołuje implementacji usługi <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7216e-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7216e-198"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Wdrożenia będzie najczęściej polegają również na `descriptor`, ale mogą implementować specjalnego zachowania w przypadku pewnych kontekstach.</span><span class="sxs-lookup"><span data-stu-id="7216e-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="7216e-199">Ta metoda powinna być wywoływana, gdy obiekt wywołujący ma dostępne <xref:System.Windows.Markup.IValueSerializerContext> z usługi.</span><span class="sxs-lookup"><span data-stu-id="7216e-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="7216e-200">Daje to pewność, że prawidłowy <xref:System.Windows.Markup.ValueSerializer> jest zwracana dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7216e-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="7216e-201">Jeśli kontekst zwraca `null` z jego <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> z określonym `descriptor`, czy kontekst, możesz określić `null`, zachowanie jest identyczne z wywoływaniem <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="7216e-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7216e-202"><paramref name="descriptor" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7216e-203">Typ do pobrania <see cref="T:System.Windows.Markup.ValueSerializer" /> dla.</span><span class="sxs-lookup"><span data-stu-id="7216e-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-204">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-205">Pobiera <see cref="T:System.Windows.Markup.ValueSerializer" /> zgłoszone dla określonego typu, przy użyciu określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7216e-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="7216e-206">Serializator skojarzone z określonym typem.</span><span class="sxs-lookup"><span data-stu-id="7216e-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-207">Zamiast polegać wyłącznie na atrybuty zgłoszone w systemie typów CLR, używa tego przeciążenia `context` jako usługa a wywołuje implementacji usługi <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7216e-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7216e-208"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> Wdrożenia będzie najczęściej polegają również na `type`, ale mogą implementować specjalnego zachowania w przypadku pewnych kontekstach.</span><span class="sxs-lookup"><span data-stu-id="7216e-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="7216e-209">Ta metoda powinna być wywoływana, gdy obiekt wywołujący ma dostępne <xref:System.Windows.Markup.IValueSerializerContext> z usługi.</span><span class="sxs-lookup"><span data-stu-id="7216e-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="7216e-210">Daje to pewność, że prawidłowy <xref:System.Windows.Markup.ValueSerializer> jest zwracana dla określonego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="7216e-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="7216e-211">Jeśli kontekst zwraca `null` z jego <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> z określonym `type`, czy kontekst, możesz określić `null`, zachowanie jest identyczne z wywoływaniem <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> przeciążenia.</span><span class="sxs-lookup"><span data-stu-id="7216e-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7216e-212"><paramref name="type" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7216e-213">Wartość atrybutu jest serializowana.</span><span class="sxs-lookup"><span data-stu-id="7216e-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="7216e-214">Informacje o kontekście, który jest używany na potrzeby konwersji.</span><span class="sxs-lookup"><span data-stu-id="7216e-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="7216e-215">Pobiera wyliczenie typów odwołuje się <see cref="T:System.Windows.Markup.ValueSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="7216e-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="7216e-216">Typy przekonwertowane przez ten serializator.</span><span class="sxs-lookup"><span data-stu-id="7216e-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7216e-217">Wszystkie typy <xref:System.Windows.Markup.ValueSerializer> konwertuje powinny być uwzględnione w zwrócone wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="7216e-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="7216e-218">Dzięki temu element serializujący upewnić się, że serializatora bezpośrednią ma za mało informacji o typach, że konwertuje przez ten serializator.</span><span class="sxs-lookup"><span data-stu-id="7216e-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="7216e-219">Zastąpienie tej metody jest zaawansowanym scenariuszu.</span><span class="sxs-lookup"><span data-stu-id="7216e-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="7216e-220">Zastępowanie tylko należy niezbędne w przypadku wdrażania systemu gdzie dostępne kontekst schematu XAML relacje właściwości ownertype system typów CLR nie będą zgłaszać wystarczającą ilość informacji.</span><span class="sxs-lookup"><span data-stu-id="7216e-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="7216e-221">Uwagi dotyczące użytkowania WPF</span><span class="sxs-lookup"><span data-stu-id="7216e-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="7216e-222">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] System właściwości implementuje serializator wartości wewnętrznej, który zastępuje <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> ponieważ właściwość zależności koncepcja, że można mieć dodano właścicieli.</span><span class="sxs-lookup"><span data-stu-id="7216e-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="7216e-223">wyrażenia również mieć specjalne obsługi wewnętrznych.</span><span class="sxs-lookup"><span data-stu-id="7216e-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>